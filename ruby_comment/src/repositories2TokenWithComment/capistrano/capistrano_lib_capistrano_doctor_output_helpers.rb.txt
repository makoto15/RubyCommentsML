UNK on_const on_nl UNK on_const on_nl UNK UNK color on_nl UNK UNK UNK on_nl on_ignored_nl def UNK on_nl UNK on_op # Helper methods for pretty-printing doctor output to stdout. All output # (other than `title`) is indented by four spaces to facilitate copying and # pasting this output into e.g. GitHub or Stack Overflow to achieve code # formatting.
def UNK on_lparen UNK on_comma on_op UNK on_rparen on_ignored_nl UNK UNK UNK on_period UNK on_nl rows on_op UNK on_lparen UNK # Prints a table for a given array of records. For each record, the block # is yielded two arguments: the record and a Row object. To print values # for that record, add values using `row << "some value"`. A row can # optionally be highlighted in yellow using `row.yellow`.
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK on_lparen color on_period UNK on_lparen UNK UNK UNK UNK UNK UNK # Prints a title in blue with surrounding newlines.
UNK on_period UNK on_lparen color on_period UNK on_lparen UNK UNK UNK UNK UNK UNK UNK on_comma UNK UNK on_rparen on_rparen # Use $stdout directly to bypass the indentation that our `puts` does.
def UNK on_lparen UNK on_rparen on_ignored_nl UNK color on_period UNK on_lparen UNK on_comma UNK UNK on_rparen on_nl end on_nl on_ignored_nl # Prints text in yellow.
def UNK on_lparen UNK on_op UNK on_rparen on_ignored_nl UNK on_period UNK on_lparen UNK on_period UNK on_period UNK on_lparen UNK UNK # Override `Kernel#puts` to prepend four spaces to each line.
