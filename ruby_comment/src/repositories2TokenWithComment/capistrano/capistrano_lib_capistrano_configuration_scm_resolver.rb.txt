UNK on_const on_nl on_const on_op on_symbeg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_op on_const on_nl on_ignored_nl def UNK on_nl UNK # In earlier versions of Capistrano, users would specify the desired SCM # implementation using `set :scm, :git`, for example. Capistrano would then # load the matching .rb file based on this variable. # # Now we expect users to explicitly `require` and call `new` on the desired # SCM implementation in their Capfile. The `set` technique is deprecated. # # This SCMResolver class takes care of managing the transition from the old # to new system. It maintains the legacy behavior, but prints deprecation # warnings when it is used. # # To maintain backwards compatibility, the resolver will load the Git SCM by # if default it determines that no SCM has been explicitly specified or # loaded. To force no SCM to be used at all, use `set :scm, nil`. This hack # won't be necessary once backwards compatibility is removed in a future # version. # # TODO: Remove this class entirely in Capistrano 4.0. #
if UNK on_nl UNK on_lparen on_symbeg UNK on_rparen on_nl UNK on_nl end on_nl on_ignored_nl if UNK on_nl UNK on_nl UNK # Note that `scm_plugin_installed?` comes from Capistrano::DSL
UNK on_nl UNK on_nl end on_nl end on_nl on_ignored_nl UNK on_nl on_ignored_nl def UNK on_nl UNK UNK if UNK UNK # Compatibility with existing 3.x third-party SCMs
UNK on_lparen UNK UNK UNK UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg scm_name # We use :load_immediately because we are initializing the SCM plugin # late in the load process and therefore can't use the standard # load:defaults technique.
def UNK on_nl if on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_tstring_beg on_tstring_content on_tstring_end UNK # rubocop:disable Style/GuardClause
on_ignored_nl def UNK on_nl if UNK on_nl UNK UNK UNK on_nl UNK UNK on_nl UNK on_nl UNK UNK on_nl UNK # rubocop:enable Style/GuardClause
