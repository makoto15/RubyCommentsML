on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_nl on_ivar on_op on_const on_period new on_nl on_ivar on_op # frozen_string_literal: true
on_ivar on_op on_const on_period new on_nl on_ivar on_op on_const on_period new on_nl on_ivar on_op UNK on_nl on_ignored_nl UNK on_op UNK # Similar to the pattern in Utils::ThreadEvent except we are maintaining the # state of @running instead of just signaling an event. We have to maintain this # state since Serve is just called via class methods instead of an instance # being created each time.
on_ivar on_op UNK on_nl on_ignored_nl config on_op UNK on_lparen opts on_rparen on_nl config on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op UNK # Set the reactor to nil so any old reactor will be GCed. # We can't unregister a hook so while running tests we don't want to # inadvertently keep using a reactor created by a previous test.
on_ignored_nl def UNK on_lparen opts on_rparen on_ignored_nl opts on_op UNK on_lparen opts on_rparen on_nl destination on_op opts on_lbracket on_tstring_beg on_tstring_content #
on_ignored_nl UNK on_nl on_ignored_nl def UNK on_lparen opts on_rparen on_ignored_nl if opts on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl if opts # Perform logical validation of CLI options
on_const on_period logger on_period UNK on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl unless opts on_lbracket on_tstring_beg on_tstring_content # This is not technically true. LiveReload works fine over SSL, but # EventMachine's SSL support in Windows requires building the gem's # native extensions against OpenSSL and that proved to be a process # so tedious that expecting users to do it is a non-starter.
opts on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op true on_nl end on_nl UNK UNK on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content # Using livereload logically implies you want to watch the files
def UNK on_lparen opts on_rparen on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ivar on_op on_const on_period new on_nl on_ignored_nl on_const on_op # rubocop:disable Metrics/AbcSize
on_const on_op on_const on_period UNK on_lparen on_symbeg UNK on_comma on_symbeg UNK on_rparen do on_ignored_nl if on_ivar on_op on_ivar on_op on_ivar # A note on ignoring files: LiveReload errs on the side of reloading when it # comes to the message it gets. If, for example, a page is ignored but a CSS # file linked in the page isn't, the page will still be reloaded if the CSS # file is contained in the message sent to LiveReload. Additionally, the # path matching is very loose so that a message to reload "/" will always # lead the page to reload since every page starts with "/".
on_ignored_nl on_ignored_nl def UNK on_lparen destination on_rparen on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl on_const on_period UNK on_lparen destination on_rparen # rubocop:enable Metrics/AbcSize
on_ignored_nl def UNK on_lparen destination on_rparen on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl on_const on_period UNK on_lparen destination on_rparen on_nl # Do a base pre-setup of WEBRick so that everything is in place # when we get ready to party, checking for an setting up an error page # and making sure our destination exists.
def UNK on_nl on_const on_op on_const on_op on_const on_period UNK on_lparen on_ignored_nl on_symbeg on_const on_op true on_comma on_ignored_nl on_symbeg on_const # Recreate NondisclosureName under utf-8 circumstance
def UNK on_lparen server on_comma opts on_rparen on_ignored_nl if opts on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl UNK on_op on_const on_period # Keep in our area with a thread or detach the server as requested # by the user. This method determines what we do based on what you # ask us to do.
def UNK on_lparen opts on_rparen on_ignored_nl opts on_lbracket on_symbeg on_const on_rbracket on_op on_lbracket on_rbracket on_nl UNK on_op on_const on_op on_const # Make the stack verbose if the user requests it.
def UNK on_lparen opts on_rparen on_ignored_nl UNK on_comma key on_comma UNK on_op on_ignored_nl opts on_lbracket on_symbeg on_const on_rbracket on_period UNK # Add SSL to the stack if the user triggers --enable-ssl and they # provide both types of certificates commonly needed. Raise if they # forget to add one of the certificates.
on_ivar on_op UNK on_op UNK on_nl on_ivar on_op true on_nl on_const on_period logger on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma # Block until EventMachine reactor starts
