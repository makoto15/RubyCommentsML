on_ignored_nl UNK on_const on_nl UNK on_const on_nl class on_const on_op on_const on_op on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op # frozen_string_literal: true
def self on_period UNK on_lparen UNK on_op UNK on_rparen on_ignored_nl UNK on_op UNK on_op UNK on_nl end on_nl on_ignored_nl def # Get or set whether the drop class is mutable. # Mutability determines whether or not pre-defined fields may be # overwritten. # # is_mutable - Boolean set mutability of the class (default: nil) # # Returns the mutability of the class
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op UNK on_nl end on_nl on_ignored_nl def on_op on_lparen key on_rparen on_ignored_nl if # Create a new Drop # # obj - the Jekyll Site, Collection, or Document required by the # drop. # # Returns nothing
def on_op on_lparen key on_rparen on_ignored_nl if self on_period class on_period UNK on_op mutations on_period UNK on_lparen key on_rparen on_nl # Access a method in the Drop or a field in the underlying hash data. # If mutable, checks the mutations first. Then checks the methods, # and finally check the underlying hash (e.g. document front matter) # if all the previous places didn't match. # # key - the string key whose value to fetch # # Returns the value for the given key, or nil if none exists
def on_op on_lparen key on_comma UNK on_rparen on_ignored_nl UNK on_op UNK UNK key UNK on_tstring_content UNK on_nl if UNK on_lparen # Set a field in the Drop. If mutable, sets in the mutations and # returns. If not mutable, checks first if it's trying to override a # Drop method and raises a DropMutationException if so. If not # mutable and the key is not a method on the Drop, then it sets the # key to the value in the underlying hash (e.g. document front # matter) # # key - the String key whose value to set # val - the Object to set the key's value to # # Returns the value the key was set to unless the Drop is not mutable # and the key matches a method in which case it raises a # DropMutationException.
def UNK on_nl UNK on_op on_lparen on_ignored_nl self on_period class on_period UNK on_op on_const on_op on_const on_op on_const on_period UNK # Generates a list of strings which correspond to content getter # methods. # # Returns an Array of strings which represent method-specific keys.
def UNK on_lparen key on_rparen on_ignored_nl UNK UNK if key on_period nil? on_nl UNK UNK if self on_period class on_period # Check if key exists in Drop # # key - the string key whose value to fetch # # Returns true if the given key is present
def UNK on_nl on_lparen UNK on_op on_ignored_nl mutations on_period UNK on_op on_ignored_nl UNK on_period UNK on_rparen on_period UNK on_nl end # Generates a list of keys with user content as their values. # This gathers up the Drop methods and keys of the mutations and # underlying data hashes and performs a set union to ensure a list # of unique keys for the Drop. # # Returns an Array of unique keys for content for the Drop.
def UNK on_nl UNK on_period UNK on_lparen UNK UNK on_rparen UNK on_op on_lparen key on_comma UNK on_rparen on_comma UNK on_op # Generate a Hash representation of the Drop by resolving each key's # value. It includes Drop methods, mutations, and the underlying object's # data. See the documentation for Drop#keys for more. # # Returns a Hash with all the keys and values resolved.
def UNK on_nl on_const on_period UNK UNK on_nl end on_nl on_ignored_nl def UNK on_lparen on_op on_rparen on_ignored_nl UNK on_nl end # Inspect the drop's keys and values through a JSON representation # of its keys and values. # # Returns a pretty generation of the hash representation of the Drop.
def UNK on_lparen on_op on_rparen on_ignored_nl UNK on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_op UNK on_rparen on_ignored_nl on_const # Generate a Hash for use in generating JSON. # This is useful if fields need to be cleared before the JSON can generate. # # Returns a Hash ready for JSON generation.
def UNK on_lparen UNK on_op UNK on_rparen on_ignored_nl on_const on_period UNK on_lparen UNK on_lparen UNK on_rparen on_comma UNK on_rparen on_nl # Generate a JSON representation of the Drop. # # state - the JSON::State object which determines the state of current processing. # # Returns a JSON representation of the Drop in a String.
def UNK on_lparen on_op block on_rparen on_ignored_nl UNK on_period UNK on_lparen on_op block on_rparen on_nl end on_nl on_ignored_nl def UNK # Collects all the keys and passes each to the block in turn. # # block - a block which accepts one argument, the key # # Returns nothing.
def UNK on_lparen key on_comma UNK on_op UNK on_comma on_op block on_rparen on_ignored_nl UNK self on_lbracket key on_rbracket if UNK # Imitate Hash.fetch method in Drop # # Returns value if key is present in Drop, otherwise returns default value # KeyError is raised if key is not present and no default value given
