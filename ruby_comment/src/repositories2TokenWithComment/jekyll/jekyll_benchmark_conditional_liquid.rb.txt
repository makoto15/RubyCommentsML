on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl on_ignored_nl on_const on_op UNK on_period UNK on_nl on_tstring_content #!/usr/bin/env ruby # frozen_string_literal: true
on_ignored_nl on_const on_op UNK on_period UNK on_nl on_tstring_content UNK on_ignored_nl on_const on_op UNK on_period UNK on_nl on_tstring_content UNK on_ignored_nl on_const # Test if processing content string without any Liquid constructs, via Liquid, # is slower than checking whether constructs exist ( using `String#include?` ) # and return-ing the "plaintext" content string as is.. # # Ref: https://github.com/jekyll/jekyll/pull/6735
on_const on_op UNK on_period UNK on_nl on_tstring_content UNK on_ignored_nl on_const on_op UNK on_period UNK on_nl on_tstring_content UNK on_ignored_nl on_const on_op # Sample contents
UNK UNK on_lparen content on_rparen on_ignored_nl on_const on_op on_const on_period UNK on_op UNK UNK on_nl on_const on_op on_const on_period UNK # Mimic how Jekyll's LiquidRenderer would process a non-static file, with # some dummy payload
UNK UNK on_lparen content on_rparen on_ignored_nl UNK content UNK content on_period UNK on_op content on_period UNK on_nl UNK content UNK # Mimic how the proposed change would first execute a couple of checks and # proceed to process with Liquid if necessary
UNK UNK on_lparen content on_rparen on_ignored_nl on_op content on_period UNK on_period UNK on_lparen UNK on_tstring_content UNK on_rparen on_nl end on_nl # Test https://github.com/jekyll/jekyll/pull/6735#discussion_r165499868 # ------------------------------------------------------------------------
on_ignored_nl on_const on_period UNK UNK on_op key on_comma text on_op on_ignored_nl on_const on_period UNK UNK on_op x on_op on_ignored_nl x # ------------------------------------------------------------------------
on_const on_period UNK UNK on_op key on_comma text on_op on_ignored_nl on_const on_period UNK UNK on_op x on_op on_ignored_nl x on_period # Let's roll!
