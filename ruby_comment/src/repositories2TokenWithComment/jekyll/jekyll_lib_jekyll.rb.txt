on_ignored_nl UNK on_period UNK UNK on_ignored_nl def require_all on_lparen UNK on_rparen on_ignored_nl UNK on_op on_const on_period UNK on_lparen UNK on_comma # frozen_string_literal: true
on_ignored_nl def require_all on_lparen UNK on_rparen on_ignored_nl UNK on_op on_const on_period UNK on_lparen UNK on_comma UNK on_comma on_tstring_beg on_tstring_content on_tstring_end # For use/testing when no gem is installed
def require_all on_lparen UNK on_rparen on_ignored_nl UNK on_op on_const on_period UNK on_lparen UNK on_comma UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen # Require all of the Ruby files in the given directory. # # path - The String relative path from here to the directory. # # Returns nothing.
require on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end # rubygems
require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl # stdlib
require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl # 3rd party
autoload on_symbeg on_const on_comma on_tstring_beg on_tstring_content on_tstring_end on_nl autoload on_symbeg on_const on_comma on_tstring_beg on_tstring_content on_tstring_end on_nl autoload on_symbeg on_const on_comma # internal requires
require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl # extensions
on_ignored_nl def UNK on_nl on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK # Public: Tells you which Jekyll environment you are building in so you can skip tasks # if you need to. This is useful when doing expensive compression tasks on css and # images and allows you to skip that when working in development.
def UNK on_lparen override on_op UNK UNK on_rparen on_ignored_nl UNK on_op on_const on_period UNK on_nl override on_op on_const on_lbracket override # Public: Generate a Jekyll configuration Hash by merging the default # options with anything in _config.yml, and adding the given options on top. # # override - A Hash of config directives that override any options in both # the defaults and the config file. # See Jekyll::Configuration::DEFAULTS for a # list of option names and their defaults. # # Returns the final configuration Hash.
on_const on_period UNK on_lparen on_const on_period UNK on_lparen UNK on_comma override on_rparen on_rparen on_period UNK UNK on_op UNK on_op on_ignored_nl # Merge DEFAULTS < _config.yml < override
def UNK on_lparen UNK on_rparen on_ignored_nl on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op if on_const on_op on_const on_period UNK on_nl # Public: Set the TZ environment variable to use the timezone specified # # timezone - the IANA Time Zone # # Returns nothing # rubocop:disable Naming/AccessorMethodName
on_ignored_nl def UNK on_nl UNK on_op on_const on_period UNK on_lparen on_const on_period UNK on_comma on_lparen on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end # rubocop:enable Naming/AccessorMethodName
def UNK on_nl UNK on_op on_const on_period UNK on_lparen on_const on_period UNK on_comma on_lparen on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket # Public: Fetch the logger instance for this Jekyll process. # # Returns the LogAdapter instance.
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_const on_period UNK on_lparen UNK on_comma on_lparen on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end # Public: Set the log writer. # New log writer must respond to the same methods # as Ruby's interal Logger. # # writer - the new Logger-compatible log transport # # Returns the new logger.
def UNK on_nl UNK on_op on_lbracket on_rbracket on_nl end on_nl on_ignored_nl def UNK on_lparen base_directory on_comma UNK on_rparen on_ignored_nl UNK # Public: An array of sites # # Returns the Jekyll sites created.
def UNK on_lparen base_directory on_comma UNK on_rparen on_ignored_nl UNK base_directory if base_directory on_period UNK on_lparen UNK on_rparen on_nl on_ignored_nl clean_path # Public: Ensures the questionable path is prefixed with the base directory # and prepends the questionable path with the base directory if false. # # base_directory - the directory with which to prefix the questionable path # questionable_path - the path we're unsure about, and want prefixed # # Returns the sanitized path.
clean_path on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl if clean_path on_period UNK on_lparen base_directory on_period UNK on_lparen UNK # remove any remaining extra leading slashes not stripped away by calling # `File.expand_path` above.
on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl end on_nl on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end # Conditional optimizations
