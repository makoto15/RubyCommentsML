def tmp_dir on_nl on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma UNK on_rparen on_nl end on_nl on_ignored_nl def app_file_path on_nl # Returns the temporary directory.
def app_file_path on_nl on_const on_period UNK on_lparen tmp_dir on_comma on_tstring_beg on_tstring_content UNK on_gvar UNK on_tstring_content on_tstring_end on_rparen on_nl end on_nl # Returns the path of the Sinatra application file created by # +setup_example_app+.
def UNK on_nl on_tstring_beg on_tstring_content UNK on_gvar UNK on_tstring_end on_nl end on_nl on_ignored_nl def app_const on_nl on_const on_period UNK on_lparen # Returns the name of the Sinatra application created by # +setup_example_app+: 'ExampleApp1' for the first application, # 'ExampleApp2' fo the second one, and so on...
def app_const on_nl on_const on_period UNK on_lparen UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen options on_op on_lbrace on_rbrace # Returns the (constant of the) Sinatra application created by # +setup_example_app+.
def UNK on_lparen options on_op on_lbrace on_rbrace on_rparen on_ignored_nl options on_lbracket on_symbeg routes on_rbracket on_op on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket # Writes a file with a Sinatra application using the template # located at <tt>specs/reloader/app.rb.erb</tt>. It expects an # +options+ hash, with an array of strings containing the # application's routes (+:routes+ key), a hash with the inline # template's names as keys and the bodys as values # (+:inline_templates+ key) and an optional application name # (+:name+) otherwise +app_name+ is used. # # It ensures to change the written file's mtime when it already # exists.
def update_file on_lparen UNK on_comma on_op UNK on_rparen on_ignored_nl UNK on_op on_const on_period UNK on_lparen UNK on_rparen on_op on_const on_period # It calls <tt>File.open(path, 'w', &block)</tt> all the times # needed to change the file's mtime.
def setup_example_app on_lparen options on_op on_lbrace on_rbrace on_rparen on_ignored_nl on_gvar on_op on_int on_nl on_gvar on_op on_int on_nl on_ignored_nl on_const on_period # Writes a Sinatra application to a file, requires the file, sets # the new application as the one being tested and enables the # reloader.
expect on_lparen app_const on_period UNK on_rparen on_period UNK UNK on_nl end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl setup_example_app # ...to perform the reload
expect on_lparen app_const on_period UNK on_rparen on_period to UNK on_nl end on_nl end on_nl on_ignored_nl describe on_tstring_beg on_tstring_content on_tstring_end do # ...to perform the reload
on_rbrace on_period to change on_lbrace app_const on_period filters on_lbracket on_symbeg before on_rbracket on_period size on_rbrace on_period UNK on_lparen on_int on_rparen # ...to perform the reload
on_rbrace on_period to change on_lbrace app_const on_period filters on_lbracket on_symbeg UNK on_rbracket on_period size on_rbrace on_period UNK on_lparen on_int on_rparen # ...to perform the reload
on_rbrace on_period to change on_lbrace app_const on_period filters on_lbracket on_symbeg before on_rbracket on_period size on_rbrace on_period UNK on_lparen on_op on_int # ...to perform the reload
on_rbrace on_period to change on_lbrace app_const on_period filters on_lbracket on_symbeg UNK on_rbracket on_period size on_rbrace on_period UNK on_lparen on_op on_int # ...to perform the reload
on_rbrace on_period UNK change on_lbrace app_const on_period routes on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period size on_rbrace on_nl end on_nl on_ignored_nl # ...to perform the reload
on_rbrace on_period UNK change on_lbrace app_const on_period UNK on_period size on_rbrace on_nl end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do # ...to perform the reload
on_rbrace on_period UNK change on_lbrace app_const on_period filters on_lbracket on_symbeg before on_rbracket on_period size on_rbrace on_nl end on_nl on_ignored_nl it # ...to perform the reload
on_rbrace on_period UNK change on_lbrace app_const on_period filters on_lbracket on_symbeg UNK on_rbracket on_period size on_rbrace on_nl end on_nl end on_nl # ...to perform the reload
