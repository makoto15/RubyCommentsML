require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end # Some of ActiveSupport's core extensions to Hash get loaded during internal # testing (e.g. by RABL and our RABL test) that we have no control over, but we # need them to load *before* Sinatra::IndifferentHash (which is itself loaded # by Sinatra::Base) whenever the full test suite is executed, so we'll do it # preemptively here. # # Newer Rubies have these methods built-in, so the extensions are no-ops.
def UNK on_nl on_ivar on_op UNK on_nl end on_nl on_ignored_nl UNK on_symbeg UNK on_nl end on_nl on_ignored_nl UNK on_const on_op # Allow assertions in request context
def UNK on_lparen UNK on_op on_const on_op on_const on_comma on_op block on_rparen on_ignored_nl on_ivar on_op on_const on_period UNK on_lparen UNK # Sets up a Sinatra::Base subclass defined with the block # given. Used in setup or individual spec methods to establish # the application.
def UNK on_lparen UNK on_comma on_op UNK on_comma on_op block on_rparen on_ignored_nl UNK UNK on_op UNK on_period UNK on_lparen UNK # Delegate other missing methods to response.
def UNK on_nl on_gvar on_comma UNK on_op UNK on_comma on_gvar on_nl UNK on_nl UNK on_ignored_nl on_gvar on_op UNK on_nl end # Do not output warnings for the duration of the block.
