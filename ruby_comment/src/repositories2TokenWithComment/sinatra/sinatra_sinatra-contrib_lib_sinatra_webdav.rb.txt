UNK on_const on_nl def UNK UNK UNK on_lparen UNK on_rparen on_ignored_nl on_const on_op on_const UNK UNK on_const on_op on_const on_nl # = Sinatra::WebDAV # # This extensions provides WebDAV verbs, as defined by RFC 4918 # (https://tools.ietf.org/html/rfc4918). To use this in your app, # just +register+ it: # # require 'sinatra/base' # require 'sinatra/webdav' # # class Application < Sinatra::Base # register Sinatra::WebDAV # # # Now you can use any WebDAV verb: # propfind '/2014/january/21' do # 'I have a lunch at 9 PM' # end # end # # You can use it in classic application just by requring the extension: # # require 'sinatra' # require 'sinatra/webdav' # # mkcol '/2015' do # 'You started 2015!' # end #
end on_nl end on_nl end on_nl on_ignored_nl def UNK on_nl request_method on_op on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def # or lock?
on_ignored_nl def UNK on_nl request_method on_op on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl end on_nl on_ignored_nl def UNK on_lparen path on_comma #def lock? # request_method == 'LOCK' #end
def UNK on_lparen path on_comma opts on_op on_lbrace on_rbrace on_comma on_op bk on_rparen route on_tstring_beg on_tstring_content on_tstring_end on_comma path on_comma #def lock(path, opts = {}, &bk) route 'LOCK', path, opts, &bk end
end on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # :lock
