on_const on_op UNK on_ignored_nl on_const on_comma on_ignored_nl on_const on_comma on_ignored_nl on_const on_comma on_ignored_nl on_const on_comma on_ignored_nl on_const on_comma on_ignored_nl on_const # Instances of these classes will never be considered a friendly id. # @see FriendlyId::ObjectUtils#friendly_id
UNK on_const on_nl on_ignored_nl UNK UNK on_nl UNK UNK UNK on_lparen UNK UNK on_rparen on_op UNK on_period UNK on_op UNK # Utility methods for determining whether any object is a friendly id. # # Monkey-patching Object is a somewhat extreme measure not to be taken lightly # by libraries, but in this case I decided to do it because to me, it feels # cleaner than adding a module method to {FriendlyId}. I've given the methods # names that unambigously refer to the library of their origin, which should # be sufficient to avoid conflicts with other libraries.
UNK UNK on_nl UNK UNK UNK on_lparen UNK UNK on_rparen on_op UNK on_period UNK on_op UNK on_nl end on_nl on_ignored_nl # True if the id is definitely friendly, false if definitely unfriendly, # else nil. # # An object is considired "definitely unfriendly" if its class is or # inherits from ActiveRecord::Base, Array, Hash, NilClass, Numeric, or # Symbol. # # An object is considered "definitely friendly" if it responds to +to_i+, # and its value when cast to an integer and then back to a string is # different from its value when merely cast to a string: # # 123.friendly_id? #=> false # :id.friendly_id? #=> false # {:name => 'joe'}.friendly_id? #=> false # ['name = ?', 'joe'].friendly_id? #=> false # nil.friendly_id? #=> false # "123".friendly_id? #=> nil # "abc123".friendly_id? #=> true
UNK UNK on_nl UNK on_op UNK UNK on_op UNK UNK UNK on_period UNK on_nl end on_nl end on_nl on_ignored_nl UNK # True if the id is definitely unfriendly, false if definitely friendly, # else nil.
on_ignored_nl on_const on_op on_const on_period UNK UNK on_op UNK on_op on_const on_period UNK on_lparen UNK on_rparen UNK on_nl on_ignored_nl on_const # Considered unfriendly if object is an instance of an unfriendly class or # one of its descendants.
