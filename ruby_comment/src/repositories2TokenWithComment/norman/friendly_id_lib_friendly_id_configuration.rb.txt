UNK on_const on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK # The configuration parameters passed to {Base#friendly_id} will be stored in # this object.
UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl # The default configuration options.
UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl # The modules in use
UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl # The model class that this configuration belongs to. # @return ActiveRecord::Base
UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen UNK UNK # The module to use for finders
UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen UNK UNK UNK on_op UNK on_rparen on_ignored_nl # The value used for the slugged association's dependent option
UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen UNK UNK UNK on_op UNK on_rparen on_ignored_nl on_ivar on_op UNK on_nl on_ivar # Route generation preferences
def UNK on_lparen on_op UNK on_rparen on_ignored_nl UNK on_period UNK on_period UNK on_period UNK on_period UNK UNK on_op object on_op # Lets you specify the addon modules to use with FriendlyId. # # This method is invoked by {FriendlyId::Base#friendly_id friendly_id} when # passing the `:use` option, or when using {FriendlyId::Base#friendly_id # friendly_id} with a block. # # @example # class Book < ActiveRecord::Base # extend FriendlyId # friendly_id :name, :use => :slugged # end # # @param [#to_s,Module] modules Arguments should be Modules, or symbols or # strings that correspond with the name of an addon to use with FriendlyId. # By default FriendlyId provides `:slugged`, `:finders`, `:history`, # `:reserved`, `:simple_i18n`, and `:scoped`.
def UNK on_lparen mod on_rparen on_ignored_nl on_ivar on_op UNK on_lparen mod on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl UNK # Returns whether the given module is in use.
def UNK on_nl UNK on_period UNK on_nl end on_nl on_ignored_nl def UNK on_lparen on_op UNK on_rparen on_ignored_nl UNK UNK on_period # The column that FriendlyId will use to find the record when querying by # friendly id. # # This method is generally only used internally by FriendlyId. # @return String
def UNK on_lparen on_op UNK on_rparen on_ignored_nl UNK UNK on_period UNK on_nl on_ivar on_nl UNK on_ignored_nl UNK on_period UNK on_op # The base column or method used by FriendlyId as the basis of a friendly id # or slug. # # For models that don't use {FriendlyId::Slugged}, this is the column that # is used to store the friendly id. For models using {FriendlyId::Slugged}, # the base is a column or method whose value is used as the basis of the # slug. # # For example, if you have a model representing blog posts and that uses # slugs, you likely will want to use the "title" attribute as the base, and # FriendlyId will take care of transforming the human-readable title into # something suitable for use in a URL. # # If you pass an argument, it will be used as the base. Otherwise the current # value is returned. # # @param value A symbol referencing a column or method in the model. This # value is usually set by passing it as the first argument to # {FriendlyId::Base#friendly_id friendly_id}.
