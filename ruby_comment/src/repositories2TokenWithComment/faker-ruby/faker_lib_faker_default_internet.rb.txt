on_ignored_nl UNK on_const on_nl UNK on_const on_op on_const on_nl UNK on_op UNK on_nl def UNK on_lparen legacy_name on_op on_const on_comma # frozen_string_literal: true
UNK on_const on_comma on_tstring_beg on_tstring_content on_tstring_end if specifier on_op on_int on_op on_int on_nl on_ignored_nl tries on_op on_int result on_op nil # If specifier is Integer and has large value, Argument error exception is raised to overcome memory full error
result on_op nil on_nl UNK do on_ignored_nl result on_op username on_lparen on_label nil on_comma on_label separators on_rparen on_nl tries on_op # Don't try forever in case we get something like 1_000_000.
on_ignored_nl def UNK on_lparen UNK on_op on_const on_comma UNK on_op on_const on_comma UNK on_op on_const on_comma UNK on_op on_const on_comma # rubocop:disable Metrics/ParameterLists
def UNK on_lparen UNK on_op on_const on_comma UNK on_op on_const on_comma UNK on_op on_const on_comma UNK on_op on_const on_comma on_label ## # Produces a randomized string of characters suitable for passwords # # @param min_length [Integer] The minimum length of the password # @param max_length [Integer] The maximum length of the password # @param mix_case [Boolean] Toggles if uppercased letters are allowed. If true, at least one will be added. # @param special_characters [Boolean] Toggles if special characters are allowed. If true, at least one will be added. # # @return [String] # # @example # Faker::Internet.password #=> "Vg5mSvY1UeRg7" # @example # Faker::Internet.password(min_length: 8) #=> "YfGjIk0hGzDqS0" # @example # Faker::Internet.password(min_length: 10, max_length: 20) #=> "EoC9ShWd1hWq4vBgFw" # @example # Faker::Internet.password(min_length: 10, max_length: 20, mix_case: true) #=> "3k5qS15aNmG" # @example # Faker::Internet.password(min_length: 10, max_length: 20, mix_case: true, special_characters: true) #=> "*%NkOnJsH4" # # @faker.version 2.1.3
warn_for_deprecated_arguments do on_op keywords on_op on_ignored_nl keywords on_op on_symbeg UNK if UNK on_op on_const on_nl keywords on_op on_symbeg UNK if # rubocop:enable Metrics/ParameterLists
on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma # 10.0.0.0 - 10.255.255.255
on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma # 100.64.0.0 - 100.127.255.255
on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_rbracket # 127.0.0.0 - 127.255.255.255
on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_rbracket on_nl end on_nl on_ignored_nl # 169.254.0.0 - 169.254.255.255
on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_rbracket on_nl end on_nl on_ignored_nl def UNK on_nl UNK # 172.16.0.0 - 172.31.255.255
on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_rbracket on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_lparen addr on_rparen UNK # 192.0.0.0 - 192.0.0.255
on_regexp_beg on_tstring_content on_regexp_end on_rbracket on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_lparen addr on_rparen UNK UNK on_period UNK on_lbrace # 192.168.0.0 - 192.168.255.255
on_rbracket on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_lparen addr on_rparen UNK UNK on_period UNK on_lbrace on_op UNK on_op # 198.18.0.0 - 198.19.255.255
on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma # 0.0.0.0 - 0.255.255.255
on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_rbracket # 192.0.2.0 - 192.0.2.255
on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_rbracket on_nl end on_nl on_ignored_nl # 192.88.99.0 - 192.88.99.255
on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_rbracket on_nl end on_nl on_ignored_nl def UNK on_nl UNK # 198.51.100.0 - 198.51.100.255
on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_rbracket on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_lparen addr on_rparen UNK # 203.0.113.0 - 203.0.113.255
on_regexp_beg on_tstring_content on_regexp_end on_rbracket on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_lparen addr on_rparen UNK on_lparen UNK on_op UNK # 224.0.0.0 - 239.255.255.255
on_rbracket on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_lparen addr on_rparen UNK on_lparen UNK on_op UNK on_rparen on_period UNK # 240.0.0.0 - 255.255.255.254 and 255.255.255.255
def UNK on_lparen UNK on_op on_const on_comma UNK on_op on_const on_comma UNK on_op on_const on_comma on_label UNK on_comma on_label on_tstring_beg # rubocop:disable Metrics/ParameterLists
warn_for_deprecated_arguments do on_op keywords on_op on_ignored_nl keywords on_op on_symbeg UNK if UNK on_op on_const on_nl keywords on_op on_symbeg UNK if # rubocop:enable Metrics/ParameterLists
ary on_op on_const on_op on_const on_period UNK on_period UNK on_lparen on_int on_rparen on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl # borrowed from: https://github.com/ruby/ruby/blob/d48783bb0236db505fe1205d1d9822309de53a36/lib/securerandom.rb#L250
end on_nl on_ignored_nl def UNK on_lparen on_label on_int on_comma on_label UNK on_comma on_label UNK on_rparen on_ignored_nl UNK on_op on_lbracket on_ignored_nl # rubocop:disable Style/FormatString
def UNK on_lparen on_label on_int on_comma on_label UNK on_comma on_label UNK on_rparen on_ignored_nl UNK on_op on_lbracket on_ignored_nl on_const on_lparen on_tstring_beg ## # Produces a random string of alphabetic characters, (no digits) # # @param length [Integer] The length of the string to generate # @param padding [Boolean] Toggles if a final equal '=' will be added. # @param urlsafe [Boolean] Toggles charset to '-' and '_' instead of '+' and '/'. # # @return [String] # # @example # Faker::Internet.base64 # #=> "r_hbZ2DSD-ZACzZT" # @example # Faker::Internet.base64(length: 4, padding: true, urlsafe: false) # #=> "x1/R=" # # @faker.version 2.11.0
