on_ignored_nl UNK UNK on_nl UNK UNK UNK UNK on_nl UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK on_nl def UNK # frozen_string_literal: true
UNK UNK UNK UNK on_nl UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK on_nl def UNK on_nl UNK on_lparen UNK # Port of http://shinytoylabs.com/jargon/ # Are you having trouble writing tech-savvy dialogue for your latest screenplay? # Worry not! Hollywood-grade technical talk is ready to fill out any form where you need to look smart.
def UNK on_nl UNK on_lparen UNK on_rparen on_nl end on_nl on_ignored_nl def abbreviation on_nl UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen ## # Produces something smart. # # @return [String] # # @example # Faker::Hacker.say_something_smart # #=> "Try to compress the SQL interface, maybe it will program the back-end hard drive!" # # @faker.version 1.4.0
def abbreviation on_nl UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_ignored_nl def adjective on_nl UNK on_lparen on_tstring_beg on_tstring_content ## # Short technical abbreviations. # # @return [String] # # @example # Faker::Hacker.abbreviation #=> "RAM" # # @faker.version 1.4.0
def adjective on_nl UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_ignored_nl def noun on_nl UNK on_lparen on_tstring_beg on_tstring_content ## # Hacker-centric adjectives. # # @return [String] # # @example # Faker::Hacker.adjective #=> "open-source" # # @faker.version 1.4.0
def noun on_nl UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_ignored_nl def verb on_nl UNK on_lparen on_tstring_beg on_tstring_content ## # Only the best hacker-related nouns. # # @return [String] # # @example # Faker::Hacker.noun #=> "bandwidth" # # @faker.version 1.4.0
def verb on_nl UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_lparen on_tstring_beg on_tstring_content ## # Actions that hackers take. # # @return [String] # # @example # Faker::Hacker.verb #=> "bypass" # # @faker.version 1.4.0
def UNK on_nl UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_tstring_beg on_tstring_content on_embexpr_beg ## # Produces a verb that ends with '-ing'. # # @return [String] # # @example # Faker::Hacker.ingverb #=> "synthesizing" # # @faker.version 1.4.0
def UNK on_nl UNK on_tstring_beg on_tstring_content on_embexpr_beg verb on_embexpr_end on_tstring_content on_embexpr_beg noun on_embexpr_end on_tstring_content on_embexpr_beg abbreviation on_embexpr_end on_tstring_content on_embexpr_beg noun # @private
