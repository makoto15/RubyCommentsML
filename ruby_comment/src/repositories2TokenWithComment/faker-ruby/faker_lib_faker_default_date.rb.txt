on_ignored_nl UNK on_const on_nl UNK on_const on_op on_const on_nl UNK on_op UNK on_nl def between on_lparen UNK on_op on_const on_comma # frozen_string_literal: true
def between on_lparen UNK on_op on_const on_comma UNK on_op on_const on_comma on_label on_comma on_label on_rparen on_ignored_nl warn_for_deprecated_arguments do on_op keywords ## # Produce a random date between two dates. # # @param from [Date] The start of the usable date range. # @param to [Date] The end of the usable date range. # @return [Date] # # @example # Faker::Date.between(from: 2.days.ago, to: Date.today) # #=> #<Date: 2014-09-24> # # @faker.version 1.0.0
on_ignored_nl def UNK on_lparen UNK on_op on_const on_comma UNK on_op on_const on_comma UNK on_op on_const on_comma on_label on_comma on_label on_comma # rubocop:disable Metrics/ParameterLists
def UNK on_lparen UNK on_op on_const on_comma UNK on_op on_const on_comma UNK on_op on_const on_comma on_label on_comma on_label on_comma on_label ## # Produce a random date between two dates. # # @param from [Date] The start of the usable date range. # @param to [Date] The end of the usable date range. # @param excepted [Date] A date to exclude. # @return [Date] # # @example # Faker::Date.between_except(from: 1.year.ago, to: 1.year.from_now, excepted: Date.today) # #=> #<Date: 2014-10-03> # # @faker.version 1.6.2
on_ignored_nl def UNK on_lparen UNK on_op on_const on_comma on_label on_int on_rparen on_ignored_nl warn_for_deprecated_arguments do on_op keywords on_op on_ignored_nl keywords on_op # rubocop:enable Metrics/ParameterLists
def UNK on_lparen UNK on_op on_const on_comma on_label on_int on_rparen on_ignored_nl warn_for_deprecated_arguments do on_op keywords on_op on_ignored_nl keywords on_op on_symbeg ## # Produce a random date in the future (up to N days). # # @param days [Integer] The maximum number of days to go into the future. # @return [Date] # # @example # Faker::Date.forward(days: 23) #=> #<Date: 2014-10-03> # # @faker.version 1.0.0
def UNK on_lparen UNK on_op on_const on_comma on_label on_int on_rparen on_ignored_nl warn_for_deprecated_arguments do on_op keywords on_op on_ignored_nl keywords on_op on_symbeg ## # Produce a random date in the past (up to N days). # # @param days [Integer] The maximum number of days to go into the past. # @return [Date] # # @example # Faker::Date.backward(days: 14) #=> #<Date: 2019-09-12> # # @faker.version 1.0.0
def UNK on_lparen UNK on_op on_const on_comma UNK on_op on_const on_comma on_label on_int on_comma on_label on_int on_rparen on_ignored_nl warn_for_deprecated_arguments do ## # Produce a random date in the past (up to N days). # # @param min_age [Integer] The minimum age that the birthday would imply. # @param max_age [Integer] The maximum age that the birthday would imply. # @return [Date] # # @example # Faker::Date.birthday(min_age: 18, max_age: 65) #=> #<Date: 1986-03-28> # # @faker.version 1.4.3
def UNK on_lparen on_label UNK on_comma on_label on_op on_const on_period today on_period year on_rparen on_ignored_nl from on_op on_op on_const on_period ## # Produces a date in the year and/or month specified. # # @param month [Integer] represents the month of the date # @param year [Integer] represents the year of the date # @return [Date] # # @example # Faker::Date.in_date_period #=> #<Date: 2019-09-01> # # @example # Faker::Date.in_date_period(year: 2018, month: 2) #=> #<Date: 2018-02-26> # # @example # Faker::Date.in_date_period(month: 2) #=> #<Date: 2019-02-26> # # @faker.version next
