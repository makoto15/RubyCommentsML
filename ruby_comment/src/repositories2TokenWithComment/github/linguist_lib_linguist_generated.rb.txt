def UNK on_period UNK on_lparen name on_comma data on_rparen on_ignored_nl UNK on_lparen name on_comma data on_rparen on_period UNK on_nl end # Public: Is the blob a generated file? # # name - String filename # data - String blob data. A block also may be passed in for lazy # loading. This behavior is deprecated and you should always # pass in a String. # # Return true or false
def UNK on_lparen name on_comma data on_rparen on_ignored_nl on_ivar on_op name on_nl on_ivar on_op on_const on_period extname on_lparen name on_rparen # Internal: Initialize Generated instance # # name - String filename # data - String blob data
def data on_nl on_ivar on_op on_ivar on_period UNK on_lparen UNK UNK on_rparen on_op on_ivar on_period UNK on_lparen on_rparen on_op on_ivar # Lazy load blob data if block was passed in. # # Awful, awful stuff happening here. # # Returns String data.
def lines on_nl on_ivar on_op data on_op data on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_op on_int on_rparen on_op on_lbracket # Public: Get each line of data # # Returns an Array of lines
on_ivar on_op data on_op data on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_op on_int on_rparen on_op on_lbracket on_rbracket on_nl end # TODO: data should be required to be a String, no nils
def UNK on_nl UNK on_op on_ignored_nl UNK on_op on_ignored_nl UNK on_op on_ignored_nl UNK on_op on_ignored_nl UNK on_op on_ignored_nl UNK on_op # Internal: Is the blob a generated file? # # Generated source code is suppressed in diffs and is ignored by # language statistics. # # Please add additional test coverage to # `test/test_blob.rb#test_generated` if you make any changes. # # Return true or false
def UNK on_nl on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period include? on_lparen extname # Internal: Is the blob an Xcode file? # # Generated if the file extension is an Xcode # file extension. # # Returns true or false.
def UNK on_nl on_op on_op name on_period match on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl # Internal: Is the blob part of Pods/, which contains dependencies not meant for humans in pull requests. # # Returns true or false.
def UNK on_nl on_op on_op name on_period match on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl # Internal: Is the blob part of Carthage/Build/, which contains dependencies not meant for humans in pull requests. # # Returns true or false.
def UNK on_nl on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period include? extname on_period downcase on_nl end on_nl # Internal: Does extname indicate a filetype which is commonly minified? # # Returns true or false.
def UNK on_nl if UNK UNK lines on_period any? on_nl on_lparen lines on_period UNK on_lparen on_int on_rparen on_lbrace on_op UNK # Internal: Is the blob a minified file? # # Consider a file minified if the average line length is # greater then 110c. # # Currently, only JS and CSS files are detected by this method. # # Returns true or false.
def UNK on_nl return false unless UNK on_nl lines on_period UNK on_lparen on_int on_rparen on_period any? on_lbrace on_op l on_op # Internal: Does the blob contain a source-map reference? # # We assume that if one of the last 2 lines starts with a source-map # reference, then the current file was generated from other files. # # We use the last 2 lines because the last line might be empty. # # Returns true or false.
def UNK on_nl return false unless extname on_period downcase on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl name on_op on_regexp_beg on_tstring_content on_regexp_end # Internal: Is the blob a generated source-map? # # Source-maps usually have .css.map or .js.map extensions. In case they # are not following the name convention, detect them based on the content. # # Returns true or false.
lines on_lbracket on_int on_rbracket on_op on_regexp_beg on_tstring_content on_regexp_end on_op lines on_lbracket on_int on_rbracket on_op on_regexp_beg on_tstring_content on_regexp_end end on_nl on_ignored_nl # Name convention
lines on_lbracket on_int on_rbracket on_op on_regexp_beg on_tstring_content on_regexp_end end on_nl on_ignored_nl def UNK on_nl return false unless extname on_op on_tstring_beg # Revision 2 and later begin with the version number
end on_nl on_ignored_nl def UNK on_nl return false unless extname on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl if lines on_lbracket on_int # Revision 1 begins with a magic comment
def UNK on_nl return false unless extname on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl if lines on_lbracket on_int on_rbracket on_op on_regexp_beg # Internal: Is the blob of JS generated by CoffeeScript? # # CoffeeScript is meant to output JS that would be difficult to # tell if it was generated or not. Look for a number of patterns # output by the CS compiler. # # Return true or false
if lines on_lbracket on_int on_rbracket on_op on_regexp_beg on_tstring_content on_regexp_end on_nl return true on_nl end on_nl on_ignored_nl if lines on_lbracket on_int # CoffeeScript generated by > 1.2 include a comment on the first line
lines on_lbracket on_op on_int on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end on_op lines on_lbracket on_op on_int on_rbracket on_op on_tstring_beg on_tstring_end on_ignored_nl UNK # First line is module closure opening
lines on_lbracket on_op on_int on_rbracket on_op on_tstring_beg on_tstring_end on_ignored_nl UNK on_op on_int on_nl on_ignored_nl lines on_period UNK do on_op line # Second to last line closes module closure
on_ignored_nl UNK on_op on_int on_nl on_ignored_nl lines on_period UNK do on_op line on_op on_ignored_nl if line on_op on_regexp_beg on_tstring_content on_regexp_end # Last line is blank
UNK on_op on_int on_op line on_period UNK on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_period count on_nl on_ignored_nl UNK on_op on_int on_op # Underscored temp vars are likely to be Coffee
UNK on_op on_int on_op line on_period UNK on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_period count on_nl end on_nl end on_nl on_ignored_nl # bind and extend functions are very Coffee specific
UNK on_op on_int on_nl UNK on_ignored_nl false on_nl end on_nl end on_nl on_ignored_nl def UNK on_nl return false unless extname # Require a score of 3. This is fairly arbitrary. Consider # tweaking later.
def UNK on_nl return false unless extname on_period downcase on_op on_tstring_beg on_tstring_content on_tstring_end on_nl return false unless lines on_period count # Internal: Is this a generated documentation file for a .NET assembly? # # .NET developers often check in the XML Intellisense file along with an # assembly - however, these don't have a special extension, so we have to # dig into the contents to determine if it's a docfile. Luckily, these files # are extremely structured, so recognizing them is easy. # # Returns true or false
return lines on_lbracket on_int on_rbracket on_period include? on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_ignored_nl lines on_lbracket on_int on_rbracket on_period include? # .NET Docfiles always open with <doc> and their first tag is an # <assembly> tag
def UNK on_nl name on_period downcase on_op on_regexp_beg on_tstring_content on_regexp_end on_nl end on_nl on_ignored_nl def UNK on_nl name on_period downcase # Internal: Is this a codegen file for a .NET project? # # Visual Studio often uses code generation to generate partial classes, and # these files can be quite unwieldy. Let's hide them. # # Returns true or false
def UNK on_nl name on_period downcase on_op on_regexp_beg on_tstring_content on_regexp_end on_nl end on_nl on_ignored_nl def UNK on_nl return false unless # Internal: Is this a codegen file for Specflow feature file? # # Visual Studio's SpecFlow extension generates *.feature.cs files # from *.feature files, they are not meant to be consumed by humans. # Let's hide them. # # Returns true or false
def UNK on_nl return false unless extname on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl if lines on_lbracket on_int on_op on_int on_rbracket # Internal: Is the blob of JS a parser generated by PEG.js? # # PEG.js-generated parsers are not meant to be consumed by humans. # # Return true or false
if lines on_lbracket on_int on_op on_int on_rbracket on_period UNK on_lparen on_tstring_beg on_tstring_end on_rparen on_op on_regexp_beg on_tstring_content on_regexp_end on_nl return true # PEG.js-generated parsers include a comment near the top of the file # that marks them as such.
def UNK on_nl return false unless on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period # Internal: Is the blob of PostScript generated? # # PostScript files are often generated by other programs. If they tell us so, # we can detect them. # # Returns true or false.
return true if data on_op on_regexp_beg on_tstring_content on_regexp_end on_nl on_ignored_nl UNK on_op lines on_lbracket on_int on_op on_int on_rbracket on_period UNK # Type 1 and Type 42 fonts converted to PostScript are stored as hex-encoded byte streams; these # streams are always preceded the `eexec` operator (if Type 1), or the `/sfnts` key (if Type 42).
UNK on_op lines on_lbracket on_int on_op on_int on_rbracket on_period UNK on_lbrace on_op line on_op line on_op on_regexp_beg on_tstring_content on_regexp_end on_rbrace # We analyze the "%%Creator:" comment, which contains the author/generator # of the file. If there is one, it should be in one of the first few lines.
return true if UNK on_op on_regexp_beg on_tstring_content on_regexp_end on_op on_ignored_nl UNK on_op on_regexp_beg on_tstring_content on_regexp_end on_nl on_ignored_nl on_op on_op UNK # Most generators write their version number, while human authors' or companies' # names don't contain numbers. So look if the line contains digits. Also # look for some special cases without version numbers.
on_op on_op UNK on_period include? on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen UNK lines on_lbracket on_int on_op on_int on_rbracket on_period UNK on_lbrace # EAGLE doesn't include a version number when it generates PostScript. # However, it does prepend its name to the document's "%%Title" field.
def UNK on_nl return false unless on_const on_period include? on_lparen extname on_rparen on_nl return false unless lines on_period count on_op # Internal: Is the blob a C++, Java or Python source file generated by the # Protocol Buffer compiler? # # Returns true or false.
def UNK on_nl return false unless extname on_op on_tstring_beg on_tstring_content on_tstring_end on_nl return false unless lines on_period count on_op on_int # Internal: Is the blob a Javascript source file generated by the # Protocol Buffer compiler? # # Returns true or false.
def UNK on_nl return false unless on_const on_period include? on_lparen extname on_rparen on_nl return lines on_period first on_lparen on_int on_rparen # Internal: Is the blob generated by Apache Thrift compiler? # # Returns true or false
def UNK on_nl return false unless extname on_op on_tstring_beg on_tstring_content on_tstring_end on_nl return false unless lines on_period count on_op on_int # Internal: Is the blob a C/C++ header generated by the Java JNI tool javah? # # Returns true or false.
def UNK on_nl on_op on_op name on_period match on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl # Internal: Is the blob part of node_modules/, which are not meant for humans in pull requests. # # Returns true or false.
def UNK on_nl on_op on_op name on_period match on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl # Internal: Is the blob part of the Go vendor/ tree, # not meant for humans in pull requests. # # Returns true or false.
def UNK on_nl on_op on_op name on_period match on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl # Internal: Is the blob a generated Go dep or glide lock file? # # Returns true or false.
def UNK on_nl on_op on_op name on_period match on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl # Internal: Is the blob a generated esy lock file? # # Returns true or false.
def UNK on_nl name on_period match on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_op name on_period match on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen # Internal: Is the blob a generated npm shrinkwrap or package lock file? # # Returns true or false.
def UNK on_nl on_op on_op name on_period match on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl # Internal: Is the blob part of Godeps/, # which are not meant for humans in pull requests. # # Returns true or false.
def UNK on_nl on_op on_op name on_period match on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl # Internal: Is the blob a generated php composer lock file? # # Returns true or false.
def UNK on_nl on_op on_op name on_period match on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl # Internal: Is the blob generated by Zephir? # # Returns true or false.
def UNK on_nl on_op on_op name on_period match on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl # Internal: Is the blob a generated Rust Cargo lock file? # # Returns true or false.
def UNK on_nl return false unless extname on_op on_tstring_beg on_tstring_content on_tstring_end on_nl return false unless lines on_period count on_op on_int # Is the blob a VCR Cassette file? # # Returns true or false
return lines on_lbracket on_op on_int on_rbracket on_period include? on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl # VCR Cassettes have "recorded_with: VCR" in the second last line.
def UNK on_nl return false unless on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period include? extname on_nl return # Internal: Is this a compiled C/C++ file from Cython? # # Cython-compiled C/C++ files typically contain: # /* Generated by Cython x.x.x on ... */ # on the first line. # # Return true or false
def UNK on_nl name on_period match on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl return false # Internal: Is this a Pipenv lock file? # # Returns true or false.
def UNK on_nl return false unless extname on_op on_tstring_beg on_tstring_content on_tstring_end on_nl return false unless lines on_period count on_op on_int # Internal: Is it a KiCAD or GFortran module file? # # KiCAD module files contain: # PCBNEW-LibModule-V1 yyyy-mm-dd h:mm:ss XM # on the first line. # # GFortran module files contain: # GFORTRAN module version 'x' created from # on the first line. # # Return true or false
def UNK on_nl return false unless extname on_op on_tstring_beg on_tstring_content on_tstring_end on_nl return false unless lines on_period count on_op on_int # Internal: Is this a metadata file from Unity3D? # # Unity3D Meta files start with: # fileFormatVersion: X # guid: XXXXXXXXXXXXXXX # # Return true or false
def UNK on_nl return false unless extname on_op on_tstring_beg on_tstring_content on_tstring_end on_nl return false unless lines on_period count on_op on_int # Internal: Is this a Racc-generated file? # # A Racc-generated file contains: # # This file is automatically generated by Racc x.y.z # on the third line. # # Return true or false
def UNK on_nl return false unless extname on_op on_tstring_beg on_tstring_content on_tstring_end on_nl return false unless lines on_period count on_op on_int # Internal: Is this a JFlex-generated file? # # A JFlex-generated file contains: # /* The following code was generated by JFlex x.y.z on d/at/e ti:me */ # on the first line. # # Return true or false
def UNK on_nl return false unless extname on_op on_tstring_beg on_tstring_content on_tstring_end on_nl return false unless lines on_period count on_op on_int # Internal: Is this a GrammarKit-generated file? # # A GrammarKit-generated file typically contain: # // This is a generated file. Not intended for manual editing. # on the first line. This is not always the case, as it's possible to # customize the class header. # # Return true or false
def UNK on_nl return false unless extname on_op on_tstring_beg on_tstring_content on_tstring_end on_nl return false unless lines on_period count on_op on_int # Internal: Is this a roxygen2-generated file? # # A roxygen2-generated file typically contain: # % Generated by roxygen2: do not edit by hand # on the first line. # # Return true or false
def UNK on_nl return false unless extname on_op on_tstring_beg on_tstring_content on_tstring_end on_nl return false unless lines on_period count on_op on_int # Internal: Is this a Jison-generated file? # # Jison-generated parsers typically contain: # /* parser generated by jison # on the first line. # # Jison-generated lexers typically contain: # /* generated by jison-lex # on the first line. # # Return true or false
def UNK on_nl return false unless UNK on_tstring_content UNK on_tstring_content UNK on_tstring_content UNK on_tstring_content on_tstring_end on_period include? extname on_nl return # Internal: Is this a protobuf/grpc-generated C++ file? # # A generated file contains: # // Generated by the gRPC C++ plugin. # on the first line. # # Return true or false
def UNK on_nl return false unless extname on_op on_tstring_beg on_tstring_content on_tstring_end on_nl return false unless lines on_period count on_op on_int # Internal: Is this a generated Dart file? # # A dart-lang/appengine generated file contains: # // Generated code. Do not modify. # on the first line. # # An owl generated file contains: # // GENERATED CODE - DO NOT MODIFY # on the first line. # # Return true or false
def UNK on_nl return false unless name on_period match on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl return false unless lines on_period # Internal: Is the file a generated Perl/Pollution/Portability header file? # # Returns true or false.
def UNK on_nl on_op on_op name on_period match on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl # Internal: Is this a relay-compiler generated graphql file? # # Return true or false
def UNK on_nl return false unless on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period include? extname on_nl return # Internal: Is this a generated Game Maker Studio (2) metadata file? # # All Game Maker Studio 2 generated files will be JSON, .yy or .yyp, and have # a part that looks like "modelName: GMname" on the 3rd line # # Return true or false
def UNK on_nl return false unless on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period include? extname on_nl return # Internal: Is this a generated GIMP C image file? # # GIMP saves C sources with one of two comment forms: # * `/* GIMP RGB C-Source image dump (<filename>.c) */` (C source export) # * `/* GIMP header image file format (RGB): <filename>.h */` (Header export) # # Return true or false
def UNK on_nl return false unless extname on_period downcase on_op on_tstring_beg on_tstring_content on_tstring_end on_nl lines on_period first on_lparen on_int on_rparen # Internal: Is this a generated Microsoft Visual Studio 6.0 build file? # # Return true or false
def UNK on_nl return false unless on_const on_period include? on_lparen extname on_rparen on_nl return lines on_period first on_lparen on_int on_rparen # Internal: Is this a generated Haxe-generated source file? # # Return true or false
def UNK on_nl return false unless on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period # Internal: Is this a generated HTML file? # # HTML documents generated by authoring tools often include a # a <meta> tag in the header of the form: # # <meta name="generator" content="DocGen v5.0.1" /> # # Return true or false
return true if lines on_lbracket on_int on_op on_int on_rbracket on_period any? do on_op line on_op on_ignored_nl line on_period match on_lparen # Pkgdown
return true if lines on_period count on_op on_int on_op lines on_lbracket on_int on_rbracket on_period start_with? on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # Mandoc
return true if lines on_lbracket on_int on_op on_int on_rbracket on_period any? do on_op line on_op on_ignored_nl line on_period match on_lparen # Doxygen
UNK on_op lines on_lbracket on_int on_op on_int on_rbracket on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_lparen on_regexp_beg on_tstring_content # HTML tag: <meta name="generator" content="…" />
def UNK on_nl return false unless extname on_period downcase on_op on_tstring_beg on_tstring_content on_tstring_end on_nl lines on_period first on_lparen on_int on_rparen # Internal: Is this a generated jOOQ file? # # Return true or false
def UNK on_lparen match on_rparen on_ignored_nl on_lparen match on_period UNK on_period UNK on_lparen on_regexp_beg on_tstring_content on_regexp_end on_comma on_tstring_beg on_tstring_end on_rparen # Internal: Extract a Hash of name/content pairs from an HTML <meta> tag
