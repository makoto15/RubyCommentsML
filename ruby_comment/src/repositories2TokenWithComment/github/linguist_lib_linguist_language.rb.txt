UNK on_const on_nl on_ivar on_op on_lbracket on_rbracket on_nl on_ivar on_op on_lbrace on_rbrace on_nl on_ivar on_op on_lbrace on_rbrace on_nl on_ivar on_op # Language names that are recognizable by GitHub. Defined languages # can be highlighted, searched and listed under the Top Languages page. # # Languages are defined in `lib/linguist/languages.yml`.
on_const on_op on_lbracket on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_rbracket on_nl on_ignored_nl def self on_period # Valid Languages types
def self on_period UNK on_lparen type on_rparen on_ignored_nl UNK on_period UNK on_lbrace on_op h on_op h on_period type on_op type # Detect languages by a specific type # # type - A symbol that exists within TYPES # # Returns an array
def self on_period UNK on_lparen attributes on_op on_lbrace on_rbrace on_rparen on_ignored_nl language on_op UNK on_lparen attributes on_rparen on_nl on_ignored_nl on_ivar # Internal: Create a new Language object # # attributes - A hash of attributes # # Returns a Language object
if on_ivar on_period UNK on_lparen language on_period name on_rparen on_nl UNK on_const on_comma on_tstring_beg on_tstring_content on_embexpr_beg language on_period name on_embexpr_end # All Language names should be unique. Raise if there is a duplicate.
on_ivar on_lbracket language on_period name on_period downcase on_rbracket on_op on_ivar on_lbracket language on_period name on_period downcase on_rbracket on_op language on_nl # Language name index
if on_ivar on_period UNK on_lparen name on_rparen on_nl UNK on_const on_comma on_tstring_beg on_tstring_content on_embexpr_beg name on_embexpr_end on_tstring_end on_nl end on_nl # All Language aliases should be unique. Raise if there is a duplicate.
def self on_period UNK on_nl on_ivar on_nl end on_nl on_ignored_nl def self on_period UNK on_lparen name on_rparen on_ignored_nl UNK UNK # Public: Get all Languages # # Returns an Array of Languages
def self on_period UNK on_lparen name on_rparen on_ignored_nl UNK UNK if on_op name on_period UNK on_lparen on_const on_rparen on_op name # Public: Look up Language by its proper name. # # name - The String name of the Language # # Examples # # Language.find_by_name('Ruby') # # => #<Language name="Ruby"> # # Returns the Language or nil if none was found.
def self on_period UNK on_lparen name on_rparen on_ignored_nl UNK UNK if on_op name on_period UNK on_lparen on_const on_rparen on_op name # Public: Look up Language by one of its aliases. # # name - A String alias of the Language # # Examples # # Language.find_by_alias('cpp') # # => #<Language name="C++"> # # Returns the Language or nil if none was found.
def self on_period UNK on_lparen filename on_rparen on_ignored_nl UNK on_op on_const on_period UNK on_lparen filename on_rparen on_nl on_ivar on_lbracket UNK # Public: Look up Languages by filename. # # The behaviour of this method recently changed. # See the second example below. # # filename - The path String. # # Examples # # Language.find_by_filename('Cakefile') # # => [#<Language name="CoffeeScript">] # Language.find_by_filename('foo.rb') # # => [] # # Returns all matching Languages or [] if none were found.
def self on_period UNK on_lparen filename on_rparen on_ignored_nl extname on_op on_const on_period UNK on_lparen filename on_period downcase on_rparen on_period extensions # Public: Look up Languages by file extension. # # The behaviour of this method recently changed. # See the second example below. # # filename - The path String. # # Examples # # Language.find_by_extension('dummy.rb') # # => [#<Language name="Ruby">] # Language.find_by_extension('rb') # # => [] # # Returns all matching Languages or [] if none were found.
extname on_op on_const on_period UNK on_lparen filename on_period downcase on_rparen on_period extensions on_period UNK do on_op UNK on_op on_ignored_nl on_op # find the first extension with language definitions
def self on_period UNK on_lparen interpreter on_rparen on_ignored_nl on_ivar on_lbracket interpreter on_rbracket on_nl end on_nl on_ignored_nl def self on_period UNK # Public: Look up Languages by interpreter. # # interpreter - String of interpreter name # # Examples # # Language.find_by_interpreter("bash") # # => [#<Language name="Bash">] # # Returns the matching Language
def self on_period UNK on_lparen language_id on_rparen on_ignored_nl on_ivar on_lbracket language_id on_period UNK on_rbracket on_nl end on_nl on_ignored_nl def self # Public: Look up Languages by its language_id. # # language_id - Integer of language_id # # Examples # # Language.find_by_id(100) # # => [#<Language name="Elixir">] # # Returns the matching Language
def self on_period on_op on_lparen name on_rparen on_ignored_nl UNK UNK if on_op name on_period UNK on_lparen on_const on_rparen on_op name # Public: Look up Language by its name. # # name - The String name of the Language # # Examples # # Language['Ruby'] # # => #<Language name="Ruby"> # # Language['ruby'] # # => #<Language name="Ruby"> # # Returns the Language or nil if none was found.
def self on_period popular on_nl on_ivar on_op UNK on_period UNK on_lparen on_op on_symbeg UNK on_rparen on_period UNK on_lbrace on_op lang # Public: A List of popular languages # # Popular languages are sorted to the top of language chooser # dropdowns. # # This list is configured in "popular.yml". # # Returns an Array of Languages.
def self on_period UNK on_nl on_ivar on_op UNK on_period UNK on_lparen on_op on_symbeg UNK on_rparen on_period UNK on_lbrace on_op lang # Public: A List of non-popular languages # # Unpopular languages appear below popular ones in language # chooser dropdowns. # # This list is created from all the languages not listed in "popular.yml". # # Returns an Array of Languages.
def self on_period UNK on_nl on_ivar on_op UNK on_period UNK on_lparen on_op on_symbeg UNK on_rparen on_period UNK on_lbrace on_op lang # Public: A List of languages with assigned colors. # # Returns an Array of Languages.
def UNK on_lparen attributes on_op on_lbrace on_rbrace on_rparen on_ignored_nl on_ivar on_op attributes on_lbracket on_symbeg name on_rbracket on_op UNK on_lparen on_const # Internal: Initialize a new Language # # attributes - A hash of attributes
on_ivar on_op attributes on_lbracket on_symbeg name on_rbracket on_op UNK on_lparen on_const on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl on_ivar on_op # @name is required
on_ivar on_op attributes on_lbracket on_symbeg type on_rbracket on_op attributes on_lbracket on_symbeg type on_rbracket on_period UNK on_op UNK on_nl if on_ivar # Set type
on_ivar on_op on_lbracket UNK on_rbracket on_op on_lparen attributes on_lbracket on_symbeg UNK on_rbracket on_op on_lbracket on_rbracket on_rparen on_nl on_ignored_nl on_ivar on_op # Set aliases
on_ivar on_op attributes on_lbracket on_symbeg language_id on_rbracket on_nl on_ignored_nl on_ivar on_op attributes on_lbracket on_symbeg extensions on_rbracket on_op on_lbracket on_rbracket on_nl # Set the language_id
on_ivar on_op attributes on_lbracket on_symbeg extensions on_rbracket on_op on_lbracket on_rbracket on_nl on_ivar on_op attributes on_lbracket on_symbeg interpreters on_rbracket on_op on_lbracket # Set extensions or default to [].
on_ivar on_op attributes on_period UNK on_lparen on_symbeg popular on_rparen on_op attributes on_lbracket on_symbeg popular on_rbracket on_op UNK on_nl on_ivar on_op # Set popular, and searchable flags
if attributes on_lbracket on_symbeg UNK on_rbracket on_nl on_ivar on_op UNK on_nl on_ivar on_op attributes on_lbracket on_symbeg UNK on_rbracket on_nl on_ignored_nl # If group name is set, save the name so we can lazy load it later
UNK on_ignored_nl on_ivar on_op self on_nl end on_nl end on_nl on_ignored_nl attr_reader on_symbeg name on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl # Otherwise we can set it to self now
attr_reader on_symbeg name on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg type on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl # Public: Get proper name # # Examples # # # => "Ruby" # # => "Python" # # => "Perl" # # Returns the name String
attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg type on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl # Public: #
attr_reader on_symbeg type on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg language_id on_nl on_ignored_nl # Public: Get type. # # Returns a type Symbol or nil.
attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg language_id on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl # Public: Get color. # # Returns a hex color String.
attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg language_id on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl # Public: Get aliases # # Examples # # Language['C++'].aliases # # => ["cpp"] # # Returns an Array of String names
attr_reader on_symbeg language_id on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl # Public: Get language_id (used in GitHub search) # # Examples # # # => "1" # # => "2" # # => "3" # # Returns the integer language_id
attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl # Public: Get the name of a TextMate-compatible scope # # Returns the scope
attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl # Public: Get Ace mode # # Examples # # # => "text" # # => "javascript" # # => "c_cpp" # # Returns a String name or nil
attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg extensions on_nl on_ignored_nl # Public: Get CodeMirror mode # # Maps to a directory in the `mode/` source code. # https://github.com/codemirror/CodeMirror/tree/master/mode # # Examples # # # => "nil" # # => "javascript" # # => "clike" # # Returns a String name or nil
attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg extensions on_nl on_ignored_nl attr_reader on_symbeg interpreters on_nl on_ignored_nl # Public: Get CodeMirror MIME type mode # # Examples # # # => "nil" # # => "text/x-javascript" # # => "text/x-csrc" # # Returns a String name or nil
attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg extensions on_nl on_ignored_nl attr_reader on_symbeg interpreters on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl # Public: Should language lines be wrapped # # Returns true or false
attr_reader on_symbeg extensions on_nl on_ignored_nl attr_reader on_symbeg interpreters on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl def UNK on_nl on_const on_period # Public: Get extensions # # Examples # # # => ['.rb', '.rake', ...] # # Returns the extensions Array
attr_reader on_symbeg interpreters on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl def UNK on_nl on_const on_period UNK on_lparen name on_rparen on_period # Public: Get interpreters # # Examples # # # => ['awk', 'gawk', 'mawk' ...] # # Returns the interpreters Array
attr_reader on_symbeg UNK on_nl on_ignored_nl def UNK on_nl on_const on_period UNK on_lparen name on_rparen on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end # Public: Get filenames # # Examples # # # => ['Rakefile', ...] # # Returns the extensions Array
def UNK on_nl on_const on_period UNK on_lparen name on_rparen on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen # Public: Get URL escaped name. # # Examples # # "C%23" # "C%2B%2B" # "Common%20Lisp" # # Returns the escaped String.
def UNK on_nl name on_period downcase on_period UNK on_lparen UNK on_tstring_content UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl # Public: Get default alias name # # Returns the alias name String
def UNK on_nl on_ivar on_op on_const on_period UNK on_lparen on_ivar on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_nl # Public: Get Language group # # Returns a Language
def UNK on_nl on_ivar on_nl end on_nl on_ignored_nl def UNK on_nl on_op UNK on_nl end on_nl on_ignored_nl def UNK on_nl # Public: Is it popular? # # Returns true or false
def UNK on_nl on_op UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_nl end on_nl on_ignored_nl def UNK on_nl # Public: Is it not popular? # # Returns true or false
def UNK on_nl on_ivar on_nl end on_nl on_ignored_nl def UNK on_nl name on_nl end on_nl on_ignored_nl def on_op on_lparen UNK # Public: Is it searchable? # # Unsearchable languages won't by indexed by solr and won't show # up in the code search dropdown. # # Returns true or false
def UNK on_nl name on_nl end on_nl on_ignored_nl def on_op on_lparen UNK on_rparen on_ignored_nl UNK on_lparen UNK on_rparen on_nl end # Public: Return name as String representation
