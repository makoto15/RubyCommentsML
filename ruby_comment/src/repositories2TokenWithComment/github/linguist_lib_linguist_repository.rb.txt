UNK on_const on_nl UNK on_symbeg repository on_nl on_ignored_nl def UNK on_period UNK on_lparen repo on_comma UNK on_comma old_commit_oid on_comma UNK # A Repository is an abstraction of a Grit::Repo or a basic file # system tree. It holds a list of paths pointing to Blobish objects. # # Its primary purpose is for gathering language statistics across # the entire project.
def UNK on_period UNK on_lparen repo on_comma UNK on_comma old_commit_oid on_comma UNK on_rparen on_ignored_nl repo on_op UNK on_period new on_lparen # Public: Create a new Repository based on the stats of # an existing one
def UNK on_lparen repo on_comma UNK on_rparen on_ignored_nl on_ivar on_op repo on_nl on_ivar on_op UNK on_nl on_ignored_nl on_ivar on_op UNK # Public: Initialize a new Repository to be analyzed for language # data # # repo - a Rugged::Repository object # commit_oid - the sha1 of the commit that will be analyzed; # this is usually the master branch # # Returns a Repository
def UNK on_lparen old_commit_oid on_comma UNK on_rparen on_ignored_nl on_ivar on_op old_commit_oid on_nl on_ivar on_op UNK on_nl UNK on_nl end on_nl # Public: Load the results of a previous analysis on this repository # to speed up the new scan. # # The new analysis will be performed incrementally as to only take # into account the file changes since the last time the repository # was scanned # # old_commit_oid - the sha1 of the commit that was previously analyzed # old_stats - the result of the previous analysis, obtained by calling # Repository#cache on the old repository # # Returns nothing
def UNK on_nl on_ivar on_op UNK on_ignored_nl UNK on_op on_const on_period new on_lbrace on_int on_rbrace on_nl cache on_period UNK UNK # Public: Returns a breakdown of language stats. # # Examples # # # => { 'Ruby' => 46319, # 'JavaScript' => 258 } # # Returns a Hash of language names and Integer size values.
def language on_nl on_ivar on_op UNK on_ignored_nl UNK on_op UNK on_period UNK on_lbrace on_op on_lparen UNK on_comma size on_rparen on_op # Public: Get primary Language of repository. # # Returns a language name
def size on_nl on_ivar on_op UNK on_period UNK on_lparen on_int on_rparen on_lbrace on_op UNK on_comma on_lparen UNK on_comma UNK on_rparen # Public: Get the total size of the repository. # # Returns a byte size Integer
def UNK on_nl on_ivar on_op UNK on_ignored_nl UNK on_op on_const on_period new on_lbrace on_op UNK on_comma UNK on_op UNK on_lbracket # Public: Return the language breakdown of this repository by file # # Returns a map of language names => [filenames...]
def cache on_nl on_ivar on_op UNK on_ignored_nl if on_ivar on_op on_ivar on_nl on_ivar on_nl UNK on_ignored_nl UNK on_lparen on_ivar on_comma # Public: Return the cached results of the analysis # # This is a per-file breakdown that can be passed to other instances # of Linguist::Repository to perform incremental scans # # Returns a map of filename => [language, size]
if cache on_op diff on_period UNK on_period UNK on_lbrace on_op delta on_op on_const on_period UNK on_lparen delta on_period UNK on_lbracket # Clear file map and fetch full diff if any .gitattributes files are changed
UNK on_op delta on_period UNK on_lbracket on_symbeg UNK on_rbracket on_nl UNK on_op on_lparen UNK on_op on_int on_rparen on_nl UNK if # Skip submodules and symlinks
