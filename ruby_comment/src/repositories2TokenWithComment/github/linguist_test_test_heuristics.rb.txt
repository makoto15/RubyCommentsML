def assert_heuristics on_lparen UNK on_comma alt_name on_op nil on_rparen on_ignored_nl UNK on_op UNK on_period UNK on_period UNK on_lbrace on_op UNK # alt_name is a file name that will be used instead of the file name of the # original sample. This is used to force a sample to go through a specific # heuristic even if its extension doesn't match.
nil on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_rbrace on_rparen on_nl end on_nl on_ignored_nl def # Assembly lacks a heuristic
nil on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_rbrace on_rparen on_nl end on_nl on_ignored_nl def # Missing heuristic for Charity
nil on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg # Missing heuristics
def UNK on_nl assert_heuristics on_lparen on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end # Candidate languages = ["Genie", "GLSL", "Gosu", "JavaScript"]
def UNK on_nl assert_heuristics on_lparen on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end # Candidate languages = ["C++", "Objective-C"]
assert_heuristics on_lparen on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_comma on_ignored_nl # Only calling out '.h' filenames as these are the ones causing issues
def UNK on_nl assert_heuristics on_lparen on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end # Candidate languages = ["C++", "Hack"]
nil on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_rbrace on_rparen on_nl end on_nl on_ignored_nl def # No heuristic defined for Assembly
def UNK on_nl assert_heuristics on_lparen on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end # Candidate languages = ["Assembly", "C++", "HTML", "Motorola 68K Assembly", "PAWN", # "PHP", "POV-Ray SDL", "Pascal", "SQL", "SourcePawn"]
nil on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op ambiguous on_nl on_rbrace on_rparen on_nl end on_nl # Missing heuristic for NCL
def UNK on_nl assert_heuristics on_lparen on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end # Candidate languages = ["Hack", "PHP"]
def UNK on_nl assert_heuristics on_lparen on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end # Candidate languages = ["Perl", "Raku", "Prolog"]
def UNK on_nl assert_heuristics on_lparen on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end # Candidate languages = ["Perl", "Raku", "XPM"]
def UNK on_nl assert_heuristics on_lparen on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end # Candidate languages = ["Pascal", "Puppet"]
def UNK on_nl assert_heuristics on_lparen on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end # Candidate languages = ["IDL", "Proguard", "Prolog", "QMake", "INI"]
def UNK on_nl assert_heuristics on_lparen on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end # Candidate languages = ["INI", "Java Properties"]
nil on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_rbrace on_rparen on_nl end on_nl on_ignored_nl def # Unix Assembly lacks a heuristic
def UNK on_nl assert_heuristics on_lparen on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end # Candidate languages = ["Scala", "SuperCollider"]
def UNK on_nl assert_heuristics on_lparen on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma # Candidate languages = ["SQL", "PLpgSQL", "SQLPL", "PLSQL"]
def UNK on_nl assert_heuristics on_lparen on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end # Candidate languages = ["Perl", "Raku", "Turing"]
assert_heuristics on_lparen on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_comma on_ignored_nl # Turing not fully covered.
assert_heuristics on_lparen on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op all_fixtures on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_comma on_ignored_nl # Logos not fully covered
