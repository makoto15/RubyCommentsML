on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_nl UNK on_const on_nl UNK on_const on_nl on_ignored_nl UNK # frozen_string_literal: true
def UNK on_lparen object on_comma associations on_rparen on_ignored_nl return unless on_const on_period UNK on_nl return unless on_const on_period UNK on_nl # executed when object.assocations is called. # first, it keeps this method call for object.association. # then, it checks if this associations call is unpreload. # if it is, keeps this unpreload associations and caller.
def UNK on_lparen object on_comma associations on_rparen on_ignored_nl UNK on_lparen object on_rparen on_op on_op UNK on_lparen object on_rparen on_op on_op # decide whether the object.associations is unpreloaded or not.
def UNK on_lparen object on_comma associations on_rparen on_ignored_nl UNK on_op UNK UNK object on_period bullet_key UNK on_nl UNK on_op UNK # check if object => associations already exists in object_associations.
UNK on_op on_ignored_nl UNK on_period UNK on_lparen on_const on_rparen on_op UNK on_period UNK on_lparen associations on_rparen on_op associations on_op UNK # associations == v comparison order is important here because # v variable might be a squeel node where :== method is redefined, # so it does not compare values at all and return unexpected results
