on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_nl UNK on_op UNK on_nl def UNK on_lparen object # frozen_string_literal: true
def UNK on_nl on_const on_period current on_lbracket on_symbeg UNK on_rbracket on_nl end on_nl on_ignored_nl def UNK on_nl on_const on_period current # possible_objects keep the class to object relationships # that the objects may cause N+1 query. # e.g. { Post => ["Post:1", "Post:2"] }
def UNK on_nl on_const on_period current on_lbracket on_symbeg UNK on_rbracket on_nl end on_nl on_ignored_nl UNK on_nl on_ignored_nl def UNK on_nl # impossible_objects keep the class to objects relationships # that the objects may not cause N+1 query. # e.g. { Post => ["Post:1", "Post:2"] } # if find collection returns only one object, then the object is impossible object, # impossible_objects are used to avoid treating 1+1 query to N+1 query.
def UNK on_nl on_const on_period current on_lbracket on_symbeg UNK on_rbracket on_nl end on_nl on_ignored_nl def UNK on_nl on_const on_period current # object_associations keep the object relationships # that the object has many associations. # e.g. { "Post:1" => [:comments] } # the object_associations keep all associations that may be or may no be # unpreload associations or unused preload associations.
def UNK on_nl on_const on_period current on_lbracket on_symbeg UNK on_rbracket on_nl end on_nl on_ignored_nl def UNK on_nl on_const on_period current # call_object_associations keep the object relationships # that object.associations is called. # e.g. { "Post:1" => [:comments] } # they are used to detect unused preload associations.
def UNK on_nl on_const on_period current on_lbracket on_symbeg UNK on_rbracket on_nl end on_nl on_ignored_nl def UNK on_nl on_const on_period current # inversed_objects keeps object relationships # that association is inversed. # e.g. { "Comment:1" => ["post"] }
def UNK on_nl on_const on_period current on_lbracket on_symbeg UNK on_rbracket on_nl end on_nl end on_nl end on_nl end on_nl end # eager_loadings keep the object relationships # that the associations are preloaded by find :include. # e.g. { ["Post:1", "Post:2"] => [:comments, :user] }
