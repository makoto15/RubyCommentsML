UNK on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl def UNK on_lparen redis on_rparen on_ignored_nl # An interface between Resque's persistence and the actual # implementation.
def UNK on_lparen UNK on_comma on_op UNK on_comma on_op block on_rparen on_ignored_nl on_ivar on_period UNK on_lparen UNK on_comma on_op UNK # Compatibility with any non-Resque classes that were using Resque.redis as a way to access Redis
on_ivar on_period UNK on_lparen UNK on_comma on_op UNK on_comma on_op block on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen UNK # TODO: deprecation warning?
def UNK on_lparen UNK on_comma UNK on_op UNK on_rparen on_ignored_nl on_ivar on_period UNK on_lparen UNK on_comma UNK on_rparen on_op UNK # make use respond like redis
def UNK on_nl on_ivar on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_period UNK on_period UNK on_nl end # Get a string identifying the underlying server. # Probably should be private, but was public so must stay public
def UNK on_nl on_ivar on_period UNK on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_period UNK on_lparen on_tstring_beg # Force a reconnect to Redis.
def UNK on_nl on_ivar on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK do on_op UNK on_op on_ignored_nl UNK on_period # Returns an array of all known Resque keys in Redis. Redis' KEYS operation # is O(N) for the keyspace, so be careful - this can be slow for big databases.
def UNK on_lparen queue on_rparen on_ignored_nl on_ivar on_period UNK on_lparen redis_key_for_queue on_lparen queue on_rparen on_rparen on_nl end on_nl on_ignored_nl def # Pop whatever is on queue
def UNK on_lparen queue on_rparen on_ignored_nl on_ivar on_period UNK on_lparen redis_key_for_queue on_lparen queue on_rparen on_rparen on_period UNK on_nl end on_nl # Get the number of items in the queue
def UNK on_lparen queue on_comma start on_op on_int on_comma UNK on_op on_int on_rparen on_ignored_nl UNK on_lparen redis_key_for_queue on_lparen queue on_rparen # Examine items in the queue. # # NOTE: if count is 1, you will get back an object, otherwise you will # get an Array. I'm not making this up.
def UNK on_lparen queue on_comma data on_rparen on_ignored_nl on_ivar on_period UNK on_lparen redis_key_for_queue on_lparen queue on_rparen on_comma on_int on_comma data # Remove data from the queue, if it's there, returning the number of removed elements
def UNK on_lparen queue on_rparen on_ignored_nl on_ivar on_period UNK on_lparen on_symbeg UNK on_comma queue on_period to_s on_rparen on_nl end on_nl # Private: do not call
def UNK on_lparen UNK on_comma start on_op on_int on_comma UNK on_op on_int on_rparen on_ignored_nl UNK UNK on_op on_int on_nl on_ivar # Private: do not call
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op UNK on_period UNK UNK on_op UNK on_op on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end # Given a list of worker ids, returns a map of those ids to the worker's value # in redis, even if that value maps to nil
def UNK on_lparen UNK on_rparen on_ignored_nl on_ivar on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_end on_rparen on_nl end on_nl # return the worker's payload i.e. job
