UNK UNK UNK on_comma UNK UNK on_nl on_ignored_nl on_ignored_nl def UNK on_lparen UNK on_comma on_op UNK on_comma on_op UNK on_rparen # Both of these methods exist on all objects # http://ruby-doc.org/core-2.2.3/Kernel.html#method-i-warn # http://ruby-doc.org/core-2.2.3/Kernel.html#method-i-fail # However, as we're using using them in the DSL, they won't # get method_missing called correctly.
on_ignored_nl def UNK on_lparen UNK on_comma on_op UNK on_comma on_op UNK on_rparen on_ignored_nl on_ivar on_period UNK on_lparen UNK on_comma on_op # Since we have a reference to the Dangerfile containing all the information # We need to redirect the self calls to the Dangerfile
def UNK on_lparen UNK on_comma on_op UNK on_comma on_op UNK on_rparen on_ignored_nl on_ivar on_period UNK on_lparen UNK on_comma on_op UNK # rubocop:disable Style/MethodMissing
def UNK on_nl UNK on_op UNK UNK on_ivar UNK on_nl end on_nl end on_nl end on_nl EMP EMP EMP EMP # When using `danger local --pry`, every plugin had an unreasonable # amount of text output due to the Dangerfile reference in every # plugin. So, it is filtered out. Users will start out in the context # of the Dangerfile, and can view it by just typing `self` into the REPL. #
