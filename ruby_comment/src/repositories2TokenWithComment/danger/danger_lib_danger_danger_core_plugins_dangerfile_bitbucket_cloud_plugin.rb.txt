on_ignored_nl UNK UNK UNK UNK on_nl on_ignored_nl UNK on_const on_nl UNK on_const UNK on_const on_nl def UNK on_period UNK UNK # coding: utf-8
UNK on_const UNK on_const on_nl def UNK on_period UNK UNK UNK UNK on_ignored_nl UNK UNK UNK UNK on_period UNK on_period # Handles interacting with Bitbucket Cloud inside a Dangerfile. Provides a few functions which wrap `pr_json` and also # through a few standard functions to simplify your code. # # @example Warn when a PR is classed as work in progress # # warn "PR is classed as Work in Progress" if bitbucket_cloud.pr_title.include? "[WIP]" # # @example Declare a PR to be simple to avoid specific Danger rules # # declared_trivial = (bitbucket_cloud.pr_title + bitbucket_cloud.pr_body).include?("#trivial") # # @example Ensure that labels have been used on the PR # # failure "Please add labels to this PR" if bitbucket_cloud.pr_labels.empty? # # @example Ensure there is a summary for a PR # # failure "Please provide a summary in the Pull Request description" if bitbucket_cloud.pr_body.length < 5 # # @example Only accept PRs to the develop branch # # failure "Please re-submit this PR to develop, we may have already fixed your issue." if bitbucket_cloud.branch_for_base != "develop" # # @example Highlight when a celebrity makes a pull request # # message "Welcome, Danger." if bitbucket_cloud.pr_author == "dangermcshane" # # @example Ensure that all PRs have an assignee # # warn "This PR does not have any assignees yet." if bitbucket_cloud.pr_json[:reviewers].length == 0 # # @example Send a message with links to a collection of specific files # # if git.modified_files.include? "config/*.js" # config_files = git.modified_files.select { |path| path.include? "config/" } # message "This PR changes #{ bitbucket_cloud.html_link(config_files) }" # end # # @example Highlight with a clickable link if a Package.json is changed # # warn "#{bitbucket_cloud.html_link("Package.json")} was edited." if git.modified_files.include? "Package.json" # # @see danger/danger # @tags core, bitbucket_cloud #
def UNK on_period UNK UNK UNK UNK on_ignored_nl UNK UNK UNK UNK on_period UNK on_period UNK on_period UNK UNK on_const # So that this init can fail.
def UNK on_period UNK on_nl UNK UNK UNK on_nl end on_nl on_ignored_nl def UNK UNK UNK UNK on_ignored_nl UNK UNK # The instance name used in the Dangerfile # @return [String] #
def pr_json on_nl on_ivar on_period pr_json on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_period pr_json on_lbracket on_symbeg UNK on_rbracket # @!group Bitbucket Cloud Misc # The hash that represents the PR's JSON. For an example of what this looks like # see the [Danger Fixture'd one](https://raw.githubusercontent.com/danger/danger/master/spec/fixtures/bitbucket_cloud_api/pr_response.json). # @return [Hash]
def UNK on_nl on_ivar on_period pr_json on_lbracket on_symbeg UNK on_rbracket on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar # @!group PR Metadata # The title of the Pull Request. # @return [String] #
def UNK on_nl on_ivar on_period pr_json on_lbracket on_symbeg UNK on_rbracket on_period UNK on_nl end on_nl UNK UNK UNK on_nl on_ignored_nl # @!group PR Metadata # The body text of the Pull Request. # @return [String] #
def UNK on_nl on_ivar on_period pr_json on_lbracket on_symbeg UNK on_rbracket on_lbracket on_symbeg UNK on_rbracket on_nl end on_nl on_ignored_nl def UNK # @!group PR Metadata # The username of the author of the Pull Request. # @return [String] #
def UNK on_nl on_ivar on_period pr_json on_lbracket on_symbeg UNK on_rbracket on_lbracket on_symbeg UNK on_rbracket on_lbracket on_symbeg UNK on_rbracket on_nl end # @!group PR Commit Metadata # The branch to which the PR is going to be merged into. # @return [String] #
def UNK on_nl on_ivar on_period pr_json on_lbracket on_symbeg UNK on_rbracket on_lbracket on_symbeg UNK on_rbracket on_lbracket on_symbeg UNK on_rbracket on_nl end # @!group PR Commit Metadata # A href that represents the current PR # @return [String] #
def UNK on_nl on_ivar on_period pr_json on_lbracket on_symbeg UNK on_rbracket on_lbracket on_symbeg UNK on_rbracket on_lbracket on_symbeg UNK on_rbracket on_nl end # @!group PR Commit Metadata # The branch to which the PR is going to be merged from. # @return [String] #
def UNK on_nl on_ivar on_period pr_json on_lbracket on_symbeg UNK on_rbracket on_lbracket on_symbeg UNK on_rbracket on_lbracket on_symbeg UNK on_rbracket on_nl end # @!group PR Commit Metadata # The base commit to which the PR is going to be merged as a parent. # @return [String] #
def UNK on_nl on_ivar on_period pr_json on_lbracket on_symbeg UNK on_rbracket on_lbracket on_symbeg UNK on_rbracket on_lbracket on_symbeg UNK on_rbracket on_nl end # @!group PR Commit Metadata # The head commit to which the PR is requesting to be merged from. # @return [String] #
