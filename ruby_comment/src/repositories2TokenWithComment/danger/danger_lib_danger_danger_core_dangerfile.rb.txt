on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl require on_tstring_beg on_tstring_content # So much was ripped direct from CocoaPods-Core - thanks!
UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_nl on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def self on_period UNK on_nl # @return [Pathname] the path where the Dangerfile was loaded from. It is nil # if the Dangerfile was generated programmatically. #
def UNK on_nl on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def self on_period UNK on_nl on_lbracket on_const on_rbracket on_nl end # @return [String] a string useful to represent the Dangerfile in a message # presented to the user. #
def self on_period UNK on_nl on_lbracket on_const on_rbracket on_nl end on_nl on_ignored_nl def self on_period UNK on_nl on_lbracket on_const on_comma # These are the classes that are allowed to also use method_missing # in order to provide broader plugin support
def self on_period UNK on_nl on_lbracket on_const on_comma on_const on_comma on_const on_comma on_const on_comma on_const on_comma on_const on_comma on_const on_comma # The ones that everything would break without
on_ignored_nl def UNK on_lparen on_op UNK on_comma on_op UNK on_rparen on_ignored_nl UNK on_lparen on_symbeg UNK on_comma on_op UNK on_comma on_op # Both of these methods exist on all objects # http://ruby-doc.org/core-2.2.3/Kernel.html#method-i-warn # http://ruby-doc.org/core-2.2.3/Kernel.html#method-i-fail # However, as we're using using them in the DSL, they won't # get method_missing called correctly without overriding them.
on_ignored_nl def UNK on_lparen UNK on_comma on_op UNK on_comma on_op UNK on_rparen on_ignored_nl on_ivar on_period each do on_op plugin on_op # When an undefined method is called, we check to see if it's something # that the core DSLs have, then starts looking at plugins support.
def UNK on_lparen UNK on_comma on_op UNK on_comma on_op UNK on_rparen on_ignored_nl on_ivar on_period each do on_op plugin on_op on_ignored_nl # rubocop:disable Style/MethodMissing
def UNK on_lparen UNK on_comma UNK on_op UNK on_rparen on_ignored_nl on_ivar on_op on_lbrace on_rbrace on_nl on_ivar on_op on_lbracket on_rbracket on_nl # cork_board not being set comes from plugins #585
on_ivar on_op UNK on_nl on_ignored_nl on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period each do on_op file on_op on_ignored_nl require on_const # Triggers the core plugins
on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period each do on_op file on_op on_ignored_nl require on_const on_period UNK on_lparen file on_rparen # Triggers local plugins from the root of a project
def UNK on_nl UNK on_op on_const on_period UNK on_nl UNK on_period each do on_op klass on_op on_ignored_nl UNK if klass # Iterate through available plugin classes and initialize them with # a reference to this Dangerfile
value on_op value on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen if value on_period UNK on_lparen on_const on_rparen on_op value on_period # So that we either have one value per row # or we have [] for an empty array
def UNK on_nl rows on_op on_lbracket on_rbracket on_nl rows on_op UNK on_lparen UNK on_rparen on_nl rows on_op on_lbracket on_tstring_beg on_tstring_content # Iterates through the DSL's attributes, and table's the output
def UNK on_lparen path on_comma contents on_op UNK on_rparen on_ignored_nl UNK if UNK on_nl on_ignored_nl contents on_op on_const on_period UNK # Parses the file at a path, optionally takes the content of the file for DI #
if contents on_period UNK on_lparen on_symbeg UNK on_rparen on_op contents on_period UNK on_period name on_op on_tstring_beg on_tstring_content on_tstring_end on_nl contents # Work around for Rubinius incomplete encoding in 1.9 mode
ui on_period puts on_tstring_beg on_tstring_content on_embexpr_beg path on_period UNK on_embexpr_end on_tstring_content on_tstring_end on_tstring_beg on_tstring_content on_tstring_end on_tstring_beg on_tstring_content on_tstring_end on_tstring_beg on_tstring_content # Changes have been made
UNK on_ignored_nl UNK on_lparen contents on_comma path on_rparen on_nl UNK on_const on_op UNK on_nl UNK on_op on_tstring_beg on_tstring_content on_embexpr_beg path # rubocop:disable Lint/RescueException
end on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_op UNK on_nl violations on_op UNK on_nl UNK if on_lparen violations # rubocop:enable Lint/RescueException
UNK on_nl env on_period UNK on_nl on_ignored_nl UNK on_ignored_nl UNK on_lparen UNK on_comma UNK on_rparen on_nl on_ignored_nl UNK on_lparen on_const # Setup internal state
UNK on_lparen UNK on_comma UNK on_rparen on_nl on_ignored_nl UNK on_lparen on_const on_period UNK on_lparen UNK on_rparen on_rparen on_nl on_ignored_nl UNK # Sets up the git environment
UNK on_lparen on_const on_period UNK on_lparen UNK on_rparen on_rparen on_nl on_ignored_nl UNK on_lparen danger_id on_comma new_comment on_comma UNK on_rparen UNK # Parse the local Dangerfile
UNK on_lparen danger_id on_comma new_comment on_comma UNK on_rparen UNK danger_id on_period UNK on_nl on_ignored_nl UNK on_nl UNK on_const on_op UNK # Push results to the API # Pass along the details of the run to the request source # to send back to the code review site.
UNK on_nl UNK on_const on_op UNK on_nl UNK on_lparen UNK on_comma danger_id on_comma new_comment on_rparen UNK danger_id on_period UNK on_nl # Print results in the terminal
UNK on_lparen UNK on_comma danger_id on_comma new_comment on_rparen UNK danger_id on_period UNK on_nl UNK on_nl UNK on_ignored_nl env on_period UNK # Push exception to the API and re-raise
env on_period UNK on_nl end on_nl on_ignored_nl UNK on_nl end on_nl on_ignored_nl UNK on_nl on_ignored_nl def UNK on_lparen contents on_comma # Makes sure that Danger specific git branches are cleaned
end on_nl on_ignored_nl def UNK on_lparen title on_comma rows on_rparen on_ignored_nl UNK rows on_period UNK on_nl ui on_period title on_lparen # rubocop:disable Eval
