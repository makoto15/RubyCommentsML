unless UNK on_nl on_const on_op on_const on_period UNK on_period UNK on_op on_const on_op on_const on_op on_const on_nl end on_nl on_ignored_nl # Unless specifically asked, don't output anything.
on_const on_op on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_symbeg tags on_rparen on_nl on_const on_op on_const on_op # Add some of our custom tags
on_ignored_nl UNK on_period UNK on_op on_const on_op on_const on_period UNK on_lparen UNK on_comma UNK on_rparen on_nl end on_nl on_ignored_nl def # This turns on YARD debugging # $DEBUG = true
on_ignored_nl def UNK on_lparen meth on_rparen on_ignored_nl return on_tstring_beg on_tstring_end unless meth on_lbracket on_symbeg tags on_rbracket on_nl on_ignored_nl return_value on_op # rubocop:disable Metrics/AbcSize
method on_lbracket on_symbeg UNK on_rbracket on_op UNK on_nl method on_lbracket on_symbeg return on_rbracket on_op UNK on_nl on_ignored_nl UNK on_op UNK # Pull out some derived data
UNK on_op UNK on_period map UNK on_op param on_op on_ignored_nl name on_op param on_period UNK on_period first on_nl param on_lbracket # Create the center params, `thing: OK, other: Thing`
UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_op UNK on_op on_tstring_beg on_tstring_content on_tstring_end unless UNK on_period empty? on_nl UNK on_op UNK on_period # Wrap it in () if there _are_ params
UNK on_op UNK on_period empty? on_op on_tstring_beg on_tstring_end on_op on_tstring_beg on_tstring_content UNK UNK UNK on_tstring_end on_nl on_ignored_nl method on_lbracket on_symbeg # Append the return type if we have one
UNK klass on_period file on_nl UNK on_op on_const on_period UNK klass on_period name on_nl UNK on_op klass on_period UNK on_lbracket # Adds the class being parsed into the ruby runtime, so that we can access it's instance_name
UNK on_op UNK on_op klass on_period file on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_lbrace on_op UNK on_op # Pull out the gem's path ( to make relative file paths ) # if no gem is found, index = 0, making gem_path = ""
end on_nl end on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # rubocop:enable Metrics/AbcSize
