cork on_op on_const on_op on_const on_period UNK on_lparen on_label UNK on_comma on_label UNK on_rparen on_nl on_ignored_nl UNK on_lparen cork on_comma # Create a silent Cork instance if cork is nil, as it's likely a test
UNK on_lparen cork on_comma on_label UNK on_rparen on_nl on_ignored_nl UNK on_op on_const on_period UNK on_lparen system_env on_comma cork on_comma UNK # Run some validations
UNK on_op on_const on_period UNK on_lparen system_env on_comma cork on_comma UNK on_rparen on_nl UNK on_op on_const on_period UNK on_lparen UNK # OK, we now know that Danger can run in this environment
UNK on_lparen UNK on_rparen UNK UNK on_op UNK on_nl end on_nl on_ignored_nl def UNK on_lparen cork on_comma on_label UNK on_rparen # By default Danger will use the status API to fail a build, # allowing execution to continue, this behavior isn't always # optimal for everyone.
def UNK on_nl UNK on_const on_period UNK on_lparen system_env on_rparen on_nl UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_period UNK on_rparen on_nl # Could we find a CI source at all?
def UNK on_lparen cork on_comma UNK on_rparen on_ignored_nl UNK on_const on_period UNK on_lparen system_env on_rparen on_nl ci_name on_op on_const on_period # Could we determine that the CI source is inside a PR?
UNK ci_name on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl cork on_period UNK UNK on_period # circle won't run danger properly if the commit is pushed and build runs before the PR exists # https://danger.systems/guides/troubleshooting.html#circle-ci-doesnt-run-my-build-consistently # the best solution is to enable `fail_if_no_pr`, and then re-run the job once the PR is up
