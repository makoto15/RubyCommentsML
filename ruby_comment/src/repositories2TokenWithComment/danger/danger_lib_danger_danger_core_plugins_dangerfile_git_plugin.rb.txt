UNK on_const on_nl on_ignored_nl UNK on_const on_op on_const on_nl def UNK on_period UNK on_nl on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl # Danger
on_ignored_nl UNK on_const on_op on_const on_nl def UNK on_period UNK on_nl on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK # Handles interacting with git inside a Dangerfile. Providing access to files that have changed, and useful statistics. Also provides # access to the commits in the form of [Git::Log](https://github.com/schacon/ruby-git/blob/master/lib/git/log.rb) objects. # # @example Do something to all new and edited markdown files # # markdowns = (git.added_files + git.modified_files) # do_something markdowns.select{ |file| file.end_with? "md" } # # @example Don't allow a file to be deleted # # deleted = git.deleted_files.include? "my/favourite.file" # failure "Don't delete my precious" if deleted # # @example Fail really big diffs # # failure "We cannot handle the scale of this PR" if git.lines_of_code > 50_000 # # @example Warn when there are merge commits in the diff # # if git.commits.any? { |c| c.message =~ /^Merge branch 'master'/ } # warn 'Please rebase to get rid of the merge commits in this PR' # end # # @example Warn when somebody tries to add nokogiri to the project # # diff = git.diff_for_file("Gemfile.lock") # if diff && diff.patch =~ "nokogiri" # warn 'Please do not add nokogiri to the project. Thank you.' # end # # @see danger/danger # @tags core, git
def UNK on_period UNK on_nl on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_lparen # The instance name used in the Dangerfile # @return [String] #
def UNK on_nl on_const on_op on_const on_period UNK on_lparen on_ivar on_period diff on_period UNK UNK on_op diff on_op diff on_period # @!group Git Files # Paths for files that were added during the diff # @return [FileList<String>] an [Array] subclass #
def UNK on_nl on_const on_op on_const on_period UNK on_lparen on_ivar on_period diff on_period UNK UNK on_op diff on_op diff on_period # @!group Git Files # Paths for files that were removed during the diff # @return [FileList<String>] an [Array] subclass #
def UNK on_nl on_const on_op on_const on_period UNK on_lparen on_ivar on_period diff on_period UNK UNK on_op diff on_op diff on_period # @!group Git Files # Paths for files that changed during the diff # @return [FileList<String>] an [Array] subclass #
def UNK on_nl on_ivar on_period UNK on_nl end on_nl on_ignored_nl def diff on_nl on_ivar on_period diff on_nl end on_nl on_ignored_nl # @!group Git Metadata # List of renamed files # @return [Array<Hash>] with keys `:before` and `:after` #
def diff on_nl on_ivar on_period diff on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_period diff on_period UNK on_nl end # @!group Git Metadata # Whole diff # @return [Git::Diff] from the gem `git` #
def UNK on_nl on_ivar on_period diff on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_period diff on_period UNK # @!group Git Metadata # The overall lines of code added/removed in the diff # @return [Fixnum] #
def UNK on_nl on_ivar on_period diff on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_period diff on_period UNK # @!group Git Metadata # The overall lines of code removed in the diff # @return [Fixnum] #
def UNK on_nl on_ivar on_period diff on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_period UNK on_period UNK # @!group Git Metadata # The overall lines of code added in the diff # @return [Fixnum] #
def UNK on_nl on_ivar on_period UNK on_period UNK on_nl end on_nl on_ignored_nl def UNK on_lparen file on_rparen on_ignored_nl on_lparen UNK # @!group Git Metadata # The log of commits inside the diff # @return [Git::Log] from the gem `git` #
def UNK on_lparen file on_rparen on_ignored_nl on_lparen UNK on_op UNK on_rparen on_period include? on_lparen file on_rparen on_op on_ivar on_period diff # @!group Git Metadata # Details for a specific file in this diff # @return [Git::Diff::DiffFile] from the gem `git` #
def UNK on_lparen file on_rparen on_ignored_nl UNK UNK UNK UNK on_period include? on_lparen file on_rparen on_op UNK on_period include? on_lparen # @!group Git Metadata # Statistics for a specific file in this diff # @return [Hash] with keys `:insertions`, `:deletions` giving line counts, and `:before`, `:after` giving file contents, or nil if the file has no changes or does not exist #
def UNK on_nl on_ivar on_period UNK on_period UNK on_nl end on_nl end on_nl end on_nl EMP EMP EMP EMP EMP # @!group Git Metadata # List of remote tags # @return [String] #
