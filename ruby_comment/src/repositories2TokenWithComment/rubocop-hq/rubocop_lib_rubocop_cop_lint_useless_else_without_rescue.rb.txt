on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const UNK on_const on_nl UNK on_const on_nl on_ignored_nl on_const # frozen_string_literal: true
UNK on_const UNK on_const on_nl UNK on_const on_nl on_ignored_nl on_const UNK UNK UNK UNK on_nl on_ignored_nl UNK on_nl on_ignored_nl UNK # This cop checks for useless `else` in `begin..end` without `rescue`. # # Note: This syntax is no longer valid on Ruby 2.6 or higher and # this cop is going to be removed at some point the future. # # @example # # # bad # # begin # do_something # else # do_something_else # This will never be run. # end # # @example # # # good # # begin # do_something # rescue # handle_errors # else # do_something_else # end
end on_nl on_ignored_nl UNK UNK UNK UNK UNK on_ignored_nl on_const on_nl end on_nl end on_nl end on_nl end on_nl end # TODO: When implementing auto-correction, this method should return # an offense node passed as first argument of `add_offense` method.
