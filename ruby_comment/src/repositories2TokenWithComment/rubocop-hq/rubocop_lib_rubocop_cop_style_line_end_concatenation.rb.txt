on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_nl UNK on_const on_nl on_ignored_nl on_const # frozen_string_literal: true
UNK on_const on_op on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op UNK on_tstring_content on_tstring_end UNK on_tstring_content on_tstring_end on_nl on_const on_op # This cop checks for string literal concatenation at # the end of a line. # # @example # # # bad # some_str = 'ala' + # 'bala' # # some_str = 'ala' << # 'bala' # # # good # some_str = 'ala' \ # 'bala' #
operator_range on_op UNK on_lparen UNK operator_range on_comma on_ignored_nl UNK UNK UNK on_comma on_ignored_nl UNK UNK on_rparen on_nl UNK on_op operator_range # Include any trailing whitespace so we don't create a syntax error.
operator_range on_op UNK UNK UNK on_period UNK on_period UNK on_lparen UNK on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl UNK on_lparen UNK on_rparen # Don't create a double backslash at the end of the line, in case # there already was a backslash after the concatenation operator.
