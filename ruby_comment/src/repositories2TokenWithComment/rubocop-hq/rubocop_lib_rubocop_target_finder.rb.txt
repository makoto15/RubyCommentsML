on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl def UNK on_lparen UNK on_comma UNK on_op # frozen_string_literal: true
UNK on_const on_nl def UNK on_lparen UNK on_comma UNK on_op on_lbrace on_rbrace on_rparen on_ignored_nl on_ivar on_op UNK on_nl on_ivar on_op # This class finds target files to inspect by scanning the directory tree # and picking ruby files.
def UNK on_lparen UNK on_comma UNK on_rparen on_ignored_nl UNK UNK if UNK on_period UNK on_nl on_ignored_nl files on_op on_lbracket on_rbracket # Generate a list of target files by expanding globbing patterns # (if any). If args is empty, recursively find all Ruby source # files under the current directory # @return [Array] array of file paths
def UNK on_lparen base_dir on_op on_const on_period UNK on_rparen on_ignored_nl base_dir on_op base_dir on_period UNK on_lparen on_const on_op on_const on_comma # Finds all Ruby source files under the current or other supplied # directory. A Ruby source file is defined as a file with the `.rb` # extension or a file with no extension that has a ruby shebang line # as its first line. # It is possible to specify includes and excludes using the config file, # so you can include other Ruby files like Rakefiles and gemspecs. # @param base_dir Root directory under which to search for # ruby source files # @return [Array] Array of filenames
base_dir on_op base_dir on_period UNK on_lparen on_const on_op on_const on_comma on_const on_op on_const on_rparen if on_const on_op on_const on_nl UNK # Support Windows: Backslashes from command-line -> forward slashes
def UNK on_lparen base_dir on_comma UNK on_rparen on_ignored_nl UNK on_op UNK on_lparen base_dir on_comma UNK on_rparen on_op on_ignored_nl UNK on_lparen # Search for files recursively starting at the given base directory using # the given flags that determine how the match is made. Excluded files will # be removed later by the caller, but as an optimization find_files removes # the top level directories that are excluded in configuration in the # normal way (dir/**/*).
on_lbracket on_tstring_beg on_embexpr_beg base_dir on_embexpr_end on_tstring_content on_tstring_end on_rbracket on_nl UNK on_ignored_nl UNK on_period UNK on_lparen on_tstring_beg on_embexpr_beg base_dir on_embexpr_end on_tstring_content # We need this special case to avoid creating the pattern # /**/* which searches the entire file system.
UNK on_period UNK on_lparen on_tstring_beg on_embexpr_beg base_dir on_embexpr_end on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_const on_period UNK on_lparen pattern on_comma # Search the non-excluded top directories, but also add files # on the top level, which would otherwise not be found.
UNK on_lparen path on_rparen UNK on_op on_const on_lparen on_const on_period UNK on_lparen path on_rparen on_rparen on_rbrace on_nl UNK on_ignored_nl on_symbeg # Most recently modified file first.
