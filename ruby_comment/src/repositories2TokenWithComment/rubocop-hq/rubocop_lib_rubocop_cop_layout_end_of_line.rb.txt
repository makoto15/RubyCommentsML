on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_nl UNK on_const on_nl UNK on_const # frozen_string_literal: true
UNK on_const on_op on_const on_nl UNK on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op UNK UNK UNK on_nl on_const on_op # This cop checks for Windows-style line endings in the source code. # # @example EnforcedStyle: native (default) # # The `native` style means that CR+LF (Carriage Return + Line Feed) is # # enforced on Windows, and LF is enforced on other platforms. # # # bad # puts 'Hello' # Return character is LF on Windows. # puts 'Hello' # Return character is CR+LF on other than Windows. # # # good # puts 'Hello' # Return character is CR+LF on Windows. # puts 'Hello' # Return character is LF on other than Windows. # # @example EnforcedStyle: lf # # The `lf` style means that LF (Line Feed) is enforced on # # all platforms. # # # bad # puts 'Hello' # Return character is CR+LF on all platfoms. # # # good # puts 'Hello' # Return character is LF on all platfoms. # # @example EnforcedStyle: crlf # # The `crlf` style means that CR+LF (Carriage Return + Line Feed) is # # enforced on all platforms. # # # bad # puts 'Hello' # Return character is LF on all platfoms. # # # good # puts 'Hello' # Return character is CR+LF on all platfoms. #
UNK on_nl end on_nl end on_nl on_ignored_nl UNK UNK on_lparen index on_comma last_line on_comma line on_rparen on_ignored_nl UNK on_op UNK # Usually there will be carriage return characters on all or none # of the lines in a file, so we report only one offense.
UNK UNK on_lparen index on_comma last_line on_comma line on_rparen on_ignored_nl UNK on_op UNK UNK on_op index on_op last_line on_op UNK # If there is no LF on the last line, we don't care if there's no CR.
