on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_nl on_const on_op UNK UNK UNK # frozen_string_literal: true
UNK on_const on_op on_const on_nl on_const on_op UNK UNK UNK UNK UNK UNK on_nl on_ignored_nl UNK UNK on_lparen UNK on_rparen # This cop checks for optional arguments to methods # that do not come at the end of the argument list. # # @example # # bad # def foo(a = 1, b, c) # end # # # good # def baz(a, b, c = 1) # end # # def foobar(a = 1, b = 2, c = 3) # end
UNK UNK UNK on_op arg_positions on_period UNK on_nl on_ignored_nl UNK arguments UNK UNK UNK on_nl end on_nl end on_nl on_ignored_nl # there can only be one group of optional arguments
