on_ignored_nl UNK on_const on_nl class on_const on_nl on_const on_op UNK on_float on_comma on_float on_comma on_float on_comma on_float UNK on_period UNK # frozen_string_literal: true
class on_const on_nl on_const on_op UNK on_float on_comma on_float on_comma on_float on_comma on_float UNK on_period UNK on_nl on_const on_op on_const # The kind of Ruby that code inspected by RuboCop is written in.
class on_const on_nl UNK on_symbeg version on_comma on_symbeg name on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl on_ivar on_op UNK # A place where information about a target ruby version is found.
class on_const on_op on_const on_nl def name on_nl on_tstring_beg on_tstring_content UNK on_ivar on_period UNK UNK on_tstring_content on_tstring_end on_nl end on_nl # The target ruby version may be configured in RuboCop's config.
class on_const on_op on_const on_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl def name on_nl on_tstring_beg on_tstring_content UNK on_const UNK # The target ruby version may be found in a .ruby-version file.
class on_const on_op on_const on_nl def name on_nl on_tstring_beg on_tstring_content UNK UNK UNK on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl UNK # The lock file of Bundler may identify the target ruby version.
UNK on_op UNK on_period UNK on_lparen UNK on_tstring_content UNK on_rparen on_nl UNK UNK UNK on_nl on_ignored_nl UNK on_op UNK on_period # If ruby is in Gemfile.lock or gems.lock, there should be two lines # towards the bottom of the file that look like: # RUBY VERSION # ruby W.X.YpZ # We ultimately want to match the "ruby W.X.Y.pZ" line, but there's # extra logic to make sure we only start looking once we've seen the # "RUBY VERSION" line.
UNK on_op UNK on_period UNK on_lparen UNK on_tstring_content UNK on_rparen on_nl UNK UNK on_period UNK on_period UNK on_period UNK UNK # We currently only allow this feature to work with MRI ruby. If # jruby (or something else) is used by the project, it's lock file # will have a line that looks like: # RUBY VERSION # ruby W.X.YpZ (jruby x.x.x.x) # The regex won't match in this situation.
class on_const on_op on_const on_nl def name on_nl on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl UNK on_nl on_ignored_nl def UNK # If all else fails, a default version will be picked.
