on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl def UNK on_lparen node on_rparen on_ignored_nl return if node on_period # frozen_string_literal: true
UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl def UNK on_lparen node on_rparen on_ignored_nl return if node on_period UNK # rubocop:disable Metrics/ModuleLength
UNK on_const on_nl def UNK on_lparen node on_rparen on_ignored_nl return if node on_period UNK on_nl on_ignored_nl send on_lparen on_symbeg on_tstring_content # Provides methods for traversing an AST. # Does not transform an AST; for that, use Parser::AST::Processor. # Override methods to perform custom processing. Remember to call `super` # if you want to recursively process descendant nodes.
UNK on_lparen UNK on_comma UNK on_comma UNK on_op on_int on_rparen on_nl on_ignored_sp on_tstring_content on_embexpr_beg type on_embexpr_end on_tstring_content on_ignored_sp on_tstring_content on_ignored_sp # Guard clause is for nodes nested within mlhs
send on_lparen on_symbeg on_tstring_content on_embexpr_beg child on_period type on_embexpr_end on_tstring_end on_comma child on_rparen on_nl end on_nl return unless on_lparen child # always const???
send on_lparen on_symbeg on_tstring_content on_embexpr_beg child on_period type on_embexpr_end on_tstring_end on_comma child on_rparen on_nl if on_lparen child on_op children on_lbracket # always const???
UNK on_lparen children on_lbracket on_int on_rbracket on_rparen on_nl return unless on_lparen child on_op children on_lbracket on_int on_rbracket on_rparen on_nl on_ignored_nl # can be send, zsuper...
