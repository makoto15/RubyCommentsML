on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_op on_const on_nl # frozen_string_literal: true
UNK on_const on_op on_const on_nl end on_nl on_ignored_nl UNK on_const on_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_op on_tstring_beg # Raised when a RuboCop configuration file is not found.
UNK on_const on_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_op on_const on_period UNK # This class represents the configuration of the RuboCop application # and all its cops. A Config is associated with a YAML configuration # file from which it was read. Several different Configs can be used # during a run of the rubocop program, if files in several # directories are inspected.
path on_op on_const on_period absolute_path on_lparen file on_period UNK on_lparen on_const on_rparen on_op file on_period file on_op file on_rparen on_nl # rubocop:disable Metrics/AbcSize
resolver on_period UNK on_lparen path on_comma hash on_rparen on_nl on_ignored_nl UNK on_lparen path on_comma hash on_rparen on_nl on_ignored_nl resolver on_period # Resolve requires first in case they define additional cops
UNK on_op hash on_period UNK on_nl UNK on_period UNK do on_op UNK on_op on_ignored_nl UNK on_op on_const on_op on_const on_period # Using `hash.each_key` will cause the # `can't add a new key into hash during iteration` error
def UNK on_lparen UNK on_comma UNK on_rparen on_ignored_nl resolver on_period UNK on_lparen UNK on_comma UNK on_rparen on_nl end on_nl on_ignored_nl # Return a recursive merge of two hashes. That is, a normal hash merge, # with the addition that any value that is a hash, and occurs in both # arguments, will also be merged. And so on.
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_lparen UNK on_rparen on_op UNK on_op on_ignored_nl UNK on_op on_const on_nl end on_nl # Returns the path of .rubocop.yml searching upwards in the # directory structure starting at the given directory where the # inspected file is. If no .rubocop.yml is found there, the # user's home directory is checked. If there's no .rubocop.yml # there either, the path to the default file is returned.
def UNK on_lparen config on_comma config_file on_comma on_label UNK on_rparen on_ignored_nl resolver on_period UNK on_lparen config on_comma config_file on_comma on_label # Merges the given configuration with the default one. If # AllCops:DisabledByDefault is true, it changes the Enabled params so # that only cops from user configuration are enabled. # If AllCops::EnabledByDefault is true, it changes the Enabled params # so that only cops explicitly disabled in user configuration are # disabled.
path on_nl end on_nl on_ignored_nl def UNK on_lparen config_file on_rparen on_ignored_nl on_const on_period UNK on_lparen config_file on_comma on_label on_const on_op # Could happen because HOME or ID could not be determined. Fall back on # using the path literally in that case.
UNK on_op if UNK on_period UNK on_symbeg UNK on_nl UNK on_op UNK on_period UNK on_op UNK on_nl UNK on_op UNK # .start_line is only available since ruby 2.5 / psych 3.0
def UNK on_lparen absolute_path on_rparen on_ignored_nl on_const on_period UNK on_lparen absolute_path on_comma on_label on_const on_op on_const on_rparen on_nl UNK on_const # Read the specified file, or exit with a friendly, concise message on # stderr. Care is taken to use the standard OS exit code for a "file not # found" error.
UNK on_const on_op on_const on_period UNK on_lparen on_const on_op on_const on_rparen on_op on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content # Ruby 2.6+
UNK on_nl end on_nl end on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # Initializing class ivars
