on_ignored_nl on_const on_period UNK on_const on_op on_const on_comma on_symbeg UNK do on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_lparen # frozen_string_literal: true
expect on_lparen on_const on_period read on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_rparen on_period to eq on_lparen on_heredoc_beg on_rparen on_nl on_ignored_sp on_tstring_content # 1=>2 is changed to 1 => 2. The rest is unchanged. # SpaceAroundOperators leaves it to HashAlignment when the style is table.
source on_op on_heredoc_beg on_nl on_ignored_sp on_tstring_content on_ignored_sp on_tstring_content on_ignored_sp on_tstring_content on_ignored_sp on_tstring_content on_ignored_sp on_tstring_content on_heredoc_end create_file on_lparen on_tstring_beg on_tstring_content on_tstring_end # If we change string concatenation from plus to backslash, the string # literal that follows must remain a string literal.
on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_end on_rbracket on_period join # Expressions that need correction from only one of these cops # are corrected as expected.
end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl source on_op on_heredoc_beg on_nl on_ignored_sp on_tstring_content on_ignored_sp on_tstring_content on_ignored_sp on_tstring_content on_ignored_sp # Hence exit code 0.
create_file on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_heredoc_beg on_rparen on_nl on_ignored_sp on_tstring_content on_ignored_sp on_tstring_content on_ignored_sp on_tstring_content on_heredoc_end expect on_lparen cli on_period # {} should be do..end and space is missing.
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl create_file on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_heredoc_beg on_rparen on_nl on_ignored_sp on_tstring_content on_ignored_sp on_tstring_content on_ignored_sp # A case where two cops, EmptyLinesAroundBody and EmptyLines, try to # remove the same line in autocorrect.
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl create_file on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_heredoc_beg on_rparen on_nl on_ignored_sp on_tstring_content on_ignored_sp on_tstring_content on_ignored_sp # A case where WordArray's correction can be clobbered by # AccessModifierIndentation's correction.
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl create_file on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_heredoc_beg on_rparen on_nl on_ignored_sp on_tstring_content on_tstring_content on_ignored_sp on_tstring_content # A case where the same cop could try to correct an offense twice in one # place.
end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl create_file on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_heredoc_beg on_rparen on_nl on_ignored_sp on_tstring_content # Hence exit code 1.
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl create_file on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_heredoc_beg on_rparen on_nl on_ignored_sp on_tstring_content on_ignored_sp on_tstring_content on_heredoc_end # In this example, the auto-correction (changing "fail" to "raise") # creates a new problem (alignment of parameters), which is also # corrected automatically.
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl create_file on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg # Thanks to repeated auto-correction, we can get rid of the trailing # spaces, and then the extra empty line.
