on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK # frozen_string_literal: true
UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op on_const on_period # FIXME: Moving Rails department code to RuboCop Rails will remove # the following rubocop:disable comment. # rubocop:disable Metrics/ClassLength
UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op on_const on_period UNK on_lparen on_symbeg # This class represents the configuration of the RuboCop application # and all its cops. A Config is associated with a YAML configuration # file from which it was read. Several different Configs can be used # during a run of the rubocop program, if files in several # directories are inspected.
def UNK on_nl UNK on_op on_const on_period expand_path on_lparen on_const on_period UNK on_lparen on_const on_op on_const on_comma on_ignored_nl on_tstring_beg on_tstring_content # True if this is a config file that is shipped with RuboCop
for_all_cops on_period UNK on_lparen UNK on_rparen on_nl UNK on_tstring_beg on_tstring_content UNK UNK UNK on_tstring_content UNK key UNK on_tstring_end on_nl end # Stay backwards compatible.
UNK on_op UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_ignored_nl on_op UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end # Optimization to quickly decide if the given file is hidden (on the top # level) and cannot be matched by any pattern.
return UNK if on_const on_period UNK on_lparen file on_rparen on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_lparen file on_rparen do # Gemspecs are allowed to have dashes because that fits with bundler best # practices in the case when the gem is nested under a namespace (e.g., # `bundler-console` conveys `Bundler::Console`).
def UNK on_nl return on_ivar if UNK on_lparen on_ivar on_rparen on_nl on_ignored_nl on_ivar on_op UNK on_period UNK do on_op UNK # Returns true if there's a chance that an Include pattern matches hidden # files, false if that's definitely not possible.
def UNK on_nl on_ivar on_op on_ignored_nl if on_const on_period UNK on_lparen loaded_path on_rparen on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # Paths specified in configuration files starting with .rubocop are # relative to the directory where that file is. Paths in other config files # are relative to the current directory. This is so that paths in # config/default.yml, for example, are not relative to RuboCop's config # directory since that wouldn't work.
UNK on_op UNK on_period UNK on_lparen UNK on_tstring_content UNK on_rparen on_nl return UNK on_period UNK on_period UNK on_period UNK if # If rails is in Gemfile.lock or gems.lock, there should be a line like: # rails (X.X.X)
