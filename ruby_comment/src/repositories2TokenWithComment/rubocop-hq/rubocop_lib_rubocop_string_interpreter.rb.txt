on_ignored_nl UNK on_const on_nl UNK on_const on_nl on_const on_op UNK on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg # frozen_string_literal: true
UNK on_const on_nl on_const on_op UNK on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg # Take a string with embedded escapes, and convert the escapes as the Ruby # interpreter would when reading a double-quoted string literal. # For example, "\\n" will be converted to "\n".
UNK on_period UNK on_lparen on_const on_rparen UNK on_op escape on_op on_ignored_nl on_const on_lbracket escape on_rbracket on_op UNK on_lparen escape on_rparen # We currently don't handle \cx, \C-x, and \M-x
end on_nl end on_nl on_ignored_nl UNK UNK on_lparen escape on_rparen on_ignored_nl UNK escape on_lbracket on_int on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end # literal escaped char, like \\
