on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_nl UNK on_const on_nl UNK on_const # frozen_string_literal: true
UNK on_const on_op on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op UNK UNK UNK # This cop checks the indentation of the first parameter in a method # definition. Parameters after the first one are checked by # Layout/ParameterAlignment, not by this cop. # # For indenting the first argument of method *calls*, check out # Layout/FirstArgumentIndentation, which supports options related to # nesting that are irrelevant for method *definitions*. # # @example # # # bad # def some_method( # first_param, # second_param) # 123 # end # # @example EnforcedStyle: consistent (default) # # The first parameter should always be indented one step more than the # # preceding line. # # # good # def some_method( # first_param, # second_param) # 123 # end # # @example EnforcedStyle: align_parentheses # # The first parameter should always be indented one step more than the # # opening parenthesis. # # # good # def some_method( # first_param, # second_param) # 123 # end
def UNK on_lparen UNK on_rparen on_ignored_nl UNK UNK on_op UNK on_nl UNK UNK UNK on_nl UNK on_ignored_nl UNK UNK UNK # Returns the description of what the correct indentation is based on.
