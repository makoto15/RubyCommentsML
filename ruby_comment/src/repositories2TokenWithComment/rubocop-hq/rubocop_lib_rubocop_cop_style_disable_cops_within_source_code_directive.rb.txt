on_ignored_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_nl on_const on_op UNK UNK # frozen_string_literal: true
on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_nl on_const on_op UNK UNK UNK # rubocop:disable Lint/RedundantCopDisableDirective
UNK on_const on_op on_const on_nl on_const on_op UNK UNK UNK on_nl on_ignored_nl UNK UNK on_lparen UNK on_rparen on_ignored_nl UNK UNK # Detects comments to enable/disable RuboCop. # This is useful if want to make sure that every RuboCop error gets fixed # and not quickly disabled with a comment. # # @example # # bad # # rubocop:disable Metrics/AbcSize # def f # end # # rubocop:enable Metrics/AbcSize # # # good # def fixed_method_name_and_no_rubocop_comments # end #
on_const on_op UNK UNK UNK on_nl on_ignored_nl UNK UNK on_lparen UNK on_rparen on_ignored_nl UNK UNK UNK UNK UNK UNK on_op # rubocop:enable Lint/RedundantCopDisableDirective
