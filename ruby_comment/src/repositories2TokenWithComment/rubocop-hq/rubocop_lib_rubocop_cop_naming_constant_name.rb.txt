on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_nl on_const on_op UNK on_tstring_content UNK # frozen_string_literal: true
UNK on_const on_op on_const on_nl on_const on_op UNK on_tstring_content UNK on_nl on_const on_op UNK on_tstring_content UNK on_period UNK on_nl on_ignored_nl # This cop checks whether constant names are written using # SCREAMING_SNAKE_CASE. # # To avoid false positives, it ignores cases in which we cannot know # for certain the type of value that would be assigned to a constant. # # @example # # bad # InchInCm = 2.54 # INCHinCM = 2.54 # Inch_In_Cm = 2.54 # # # good # INCH_IN_CM = 2.54
on_const on_op UNK on_tstring_content UNK on_period UNK on_nl on_ignored_nl UNK UNK UNK on_comma UNK on_nl UNK on_tstring_content UNK on_tstring_content UNK # Use POSIX character classes, so we allow accented characters rather # than just standard ASCII characters
UNK UNK UNK on_lparen value on_rparen on_nl UNK UNK on_const on_period UNK on_lparen UNK on_rparen on_nl on_ignored_nl UNK on_lparen node # We cannot know the result of method calls like # NewClass = something_that_returns_a_class # It's also ok to assign a class constant another class constant, # `Class.new(...)` or `Struct.new(...)` # SomeClass = SomeOtherClass # SomeClass = Class.new(...) # SomeClass = Struct.new(...)
