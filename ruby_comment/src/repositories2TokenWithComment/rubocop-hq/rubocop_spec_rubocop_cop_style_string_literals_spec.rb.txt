on_ignored_nl on_const on_period UNK on_const on_op on_const on_op on_const on_op on_const UNK on_symbeg UNK do on_ignored_nl UNK on_lparen on_symbeg UNK # frozen_string_literal: true
expect_no_offenses on_lparen on_heredoc_beg on_rparen on_nl on_ignored_sp on_tstring_content on_ignored_sp on_tstring_content on_heredoc_end end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl expect_no_offenses # "Substitutions in double-quoted strings" # http://www.ruby-doc.org/docs/ProgrammingRuby/html/language.html
expect_no_offenses on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl expect_no_offenses on_lparen on_tstring_beg on_tstring_content # this would be: "\\\n"
expect_no_offenses on_lparen on_heredoc_beg on_rparen on_nl on_ignored_sp on_tstring_content on_ignored_sp on_tstring_content on_heredoc_end end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl expect_no_offenses # Parser will produce str nodes for constants such as __FILE__.
expect_no_offenses on_lparen on_heredoc_beg on_rparen on_nl on_ignored_sp on_tstring_content on_ignored_sp on_tstring_content on_heredoc_end end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl new_source # Parser will produce str nodes for constants such as __FILE__.
