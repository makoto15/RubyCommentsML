on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_nl UNK on_const on_nl on_ignored_nl on_const # frozen_string_literal: true
UNK on_const on_op on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl def # This cop checks for the placement of the closing parenthesis # in a method call that passes a HEREDOC string as an argument. # It should be placed at the end of the line containing the # opening HEREDOC tag. # # @example # # bad # # foo(<<-SQL # bar # SQL # ) # # foo(<<-SQL, 123, <<-NOSQL, # bar # SQL # baz # NOSQL # ) # # foo( # bar(<<-SQL # baz # SQL # ), # 123, # ) # # # good # # foo(<<-SQL) # bar # SQL # # foo(<<-SQL, 123, <<-NOSQL) # bar # SQL # baz # NOSQL # # foo( # bar(<<-SQL), # baz # SQL # 123, # ) #
def UNK on_lparen node on_rparen on_ignored_nl UNK UNK on_op corrector on_op on_ignored_nl UNK on_lparen node on_comma corrector on_rparen on_nl on_ignored_nl # Autocorrection note: # # Commas are a bit tricky to handle when the method call is # embedded in another expression. Here's an example: # # [ # first_array_value, # foo(<<-SQL, 123, 456, # SELECT * FROM db # SQL # ), # third_array_value, # ] # # The "internal" trailing comma is after `456`. # The "external" trailing comma is after `)`. # # To autocorrect, we remove the latter, and move the former up: # # [ # first_array_value, # foo(<<-SQL, 123, 456), # SELECT * FROM db # SQL # third_array_value, # ]
on_ignored_nl def UNK on_lparen node on_comma corrector on_rparen on_ignored_nl UNK on_lparen node on_comma corrector on_rparen on_nl UNK on_lparen node on_comma # Closing parenthesis helpers.
UNK on_ignored_nl end_pos on_op on_int end on_nl end on_nl on_ignored_nl def UNK on_lparen node on_rparen on_ignored_nl UNK on_op UNK on_lbracket # Add one for the line break itself.
end on_nl end on_nl on_ignored_nl def UNK on_lparen node on_rparen on_ignored_nl UNK on_op UNK on_lbracket node on_period loc on_period end # Just the `)` at the end of the string
UNK on_period UNK on_lparen UNK on_tstring_content UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen node on_rparen on_ignored_nl end_pos on_op # Safe to remove if last line only contains `)`, `,`, and whitespace.
on_ignored_nl def UNK on_lparen node on_comma corrector on_rparen on_ignored_nl offset on_op UNK on_lparen node on_rparen on_nl UNK on_op node on_period # Internal trailing comma helpers.
def UNK on_lparen node on_rparen on_ignored_nl UNK on_op UNK on_lparen on_ignored_nl node on_period UNK on_period UNK on_period source_range on_period end_pos # Returns nil if no trailing internal comma.
on_ignored_nl def UNK on_lparen node on_comma corrector on_rparen on_ignored_nl UNK on_lparen node on_comma corrector on_rparen on_nl UNK on_lparen node on_comma # External trailing comma helpers.
def UNK on_lparen node on_rparen on_ignored_nl end_pos on_op node on_period source_range on_period end_pos on_nl offset on_op on_int on_nl UNK on_op # Returns nil if no trailing external comma.
end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK on_period UNK on_lbracket UNK on_rbracket on_op on_tstring_beg on_tstring_content # Add one to include the comma.
