on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_nl UNK on_const on_nl on_ignored_nl on_const # frozen_string_literal: true
UNK on_const on_op on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op UNK UNK UNK on_nl on_ignored_nl UNK UNK on_lparen node # This cop checks for methods called on a do...end block. The point of # this check is that it's easy to miss the call tacked on to the block # when reading code. # # @example # # a do # b # end.c
UNK on_lparen node on_period UNK on_rparen on_nl end on_nl on_ignored_nl UNK UNK on_lparen node on_rparen on_ignored_nl UNK UNK UNK on_lparen # If the method that is chained on the do...end block is itself a # method with a block, we allow it. It's pretty safe to assume that # these calls are not missed by anyone reading code. We also want to # avoid double reporting of offenses checked by the # MultilineBlockChain cop.
