on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op on_tstring_beg # frozen_string_literal: true
UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_nl on_ignored_nl # Common methods shared by Style/TrailingCommaInArguments and # Style/TrailingCommaInLiteral
UNK on_op UNK on_lparen items on_rparen on_op UNK on_tstring_content UNK on_op UNK on_tstring_content UNK on_nl range on_period UNK on_op UNK # If there is any heredoc in items, then match the comma succeeding # any whitespace (except newlines), otherwise allow for newlines
return UNK UNK on_lparen node on_rparen on_nl on_ignored_nl UNK on_lparen node on_comma node on_period children on_comma kind on_comma on_ignored_nl node # A braceless hash is the last parameter of a method call and will be # checked as such.
def UNK on_lparen node on_rparen on_ignored_nl node on_period loc on_period end on_nl end on_nl on_ignored_nl def UNK on_lparen node on_rparen # Returns true if the node has round/square/curly brackets.
def UNK on_lparen node on_rparen on_ignored_nl node on_period UNK on_op on_op UNK on_lparen node on_rparen on_nl end on_nl on_ignored_nl def # Returns true if the round/square/curly brackets of the given node are # on different lines, each item within is on its own line, and the # closing bracket is on its own line.
def UNK on_lparen node on_rparen on_ignored_nl UNK on_lparen node on_rparen on_period UNK on_op on_op on_const on_period UNK on_lparen node on_period # A single argument with the closing bracket on the same line as the end # of the argument is not considered multiline, even if the argument # itself might span multiple lines.
if argument on_period UNK on_op argument on_period UNK on_op on_op argument on_period UNK on_nl argument on_period children on_nl UNK on_ignored_nl # For each argument, if it is a multi-line hash without braces, # then promote the hash elements to method arguments # for the purpose of determining multi-line-ness.
return UNK on_lparen node on_period children on_period UNK on_rparen if node on_period UNK on_op node on_period UNK on_nl on_ignored_nl UNK # handle hash values # # some_method({ # 'auth' => <<-SOURCE # ... # SOURCE # })
return UNK on_lparen node on_period children on_period UNK on_rparen if node on_period children on_period UNK on_op on_int on_nl return UNK # handle heredocs with methods # # some_method(<<-CODE.strip.chomp) # ... # CODE
return UNK on_lparen node on_period children on_period UNK on_rparen if node on_period children on_period UNK on_op on_int on_nl on_ignored_nl UNK # handle nested methods # # some_method( # another_method(<<-CODE.strip.chomp) # ... # CODE # )
