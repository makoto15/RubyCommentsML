on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_nl UNK on_const on_nl on_ignored_nl on_const # frozen_string_literal: true
UNK on_const on_op on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op UNK UNK UNK UNK UNK UNK on_nl on_ignored_nl def # This cop checks for the ordering of a method call where # the receiver of the call is a HEREDOC. # # @example # # bad # # <<-SQL # bar # SQL # .strip_indent # # <<-SQL # bar # SQL # .strip_indent # .trim # # # good # # <<~SQL # bar # SQL # # <<~SQL.trim # bar # SQL #
def UNK on_lparen node on_comma heredoc on_rparen on_ignored_nl return UNK if UNK on_lparen node on_comma heredoc on_rparen on_nl on_ignored_nl heredoc_end_pos # Returns nil if no range can be safely repositioned.
return UNK on_lparen heredoc_end_pos on_comma call_end_pos on_op UNK on_rparen on_nl end on_nl on_ignored_nl UNK on_nl end on_nl on_ignored_nl def UNK # If there's some on the last line other than the call, e.g. # a trailing comma, then we leave the "\n" following the # heredoc_end in place.
