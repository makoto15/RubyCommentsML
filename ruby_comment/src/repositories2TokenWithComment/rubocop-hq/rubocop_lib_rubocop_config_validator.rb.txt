on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op UNK # frozen_string_literal: true
UNK on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op UNK on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep # Handles validation of configuration, for example cop names, parameter # names, and Ruby versions.
def UNK on_nl UNK on_lparen on_ivar on_rparen on_nl UNK on_nl on_ignored_nl return if on_ivar on_period UNK on_nl on_ignored_nl valid_cop_names on_comma # rubocop:disable Metrics/AbcSize
return if on_ivar on_period UNK on_nl on_ignored_nl valid_cop_names on_comma UNK on_op on_ivar on_period UNK on_period UNK do on_op key on_op # Don't validate RuboCop's own files further. Avoids infinite recursion.
on_ignored_nl def UNK on_nl UNK on_period UNK on_nl end on_nl on_ignored_nl def UNK on_lparen name on_rparen on_ignored_nl return unless on_ivar # rubocop:enable Metrics/AbcSize
next if on_const on_op on_const on_period UNK on_period UNK on_lparen on_lbracket name on_rbracket on_rparen on_nl on_ignored_nl next if name on_op # There could be a custom cop with this name. If so, don't warn
next if name on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_op on_tstring_beg on_tstring_content on_embexpr_beg name on_embexpr_end on_tstring_content on_tstring_end on_tstring_beg on_embexpr_beg # Special case for inherit_mode, which is a directive that we keep in # the configuration (even though it's not a cop), because it's easier # to do so than to pass the value around to various methods.
def UNK on_lparen UNK on_comma key on_comma value on_rparen on_ignored_nl on_tstring_beg on_embexpr_beg on_const on_lparen on_tstring_beg on_tstring_end on_rparen on_period UNK on_embexpr_end # FIXME: Handling colors in exception messages like this is ugly.
