on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl on_const on_period UNK on_const on_op on_const on_comma on_symbeg UNK do on_ignored_nl UNK on_tstring_beg # frozen_string_literal: true
it on_tstring_beg on_tstring_content on_tstring_end on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl if UNK on_nl UNK on_op on_const on_period UNK on_lparen UNK on_period # Since there is a line with length 99 in the inspected code, # Style/IfUnlessModifier will register an offense when # Layout/LineLength:Max has been set to 99. With a lower # LineLength:Max there would be no IfUnlessModifier offense.
expect on_lparen on_const on_period readlines on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_ignored_nl on_period UNK on_lbrace on_op line on_op line on_period UNK # We generate a Layout/LineLength:Max even though it's overridden in # .rubocop.yml. We want to show somewhere what the actual maximum is. # # Note that there is no Style/IfUnlessModifier offense registered due # to the Max:90 setting.
expect on_lparen on_const on_period readlines on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_ignored_nl on_period UNK on_lbrace on_op line on_op line on_period UNK # The code base max line length is 99, but the setting Enabled: false # overrides that so no Layout/LineLength:Max setting is generated in # .rubocop_todo.yml.
expect on_lparen on_const on_period readlines on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_ignored_nl on_period UNK on_lbrace on_op line on_op line on_period UNK # The code base max line length is 99, but the setting Max:150 # overrides that so no Layout/LineLength:Max setting is generated in # .rubocop_todo.yml.
UNK on_op described_class on_period new on_nl on_ignored_nl expect on_lparen UNK on_period run on_lparen on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_rparen on_rparen # Create new CLI instance to avoid using cached configuration.
expect on_lparen on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_rparen on_period to include on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_op # expect($stdout.string).to include('Created .rubocop_todo.yml.')
on_const on_op on_const on_period UNK on_op UNK on_nl on_ignored_nl expect on_lparen cli on_period run on_lparen on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket # Make ConfigLoader reload the default configuration so that its # absolute Exclude paths will point into this example's work directory.
on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content # Copied from default configuration
on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg # Copied from default configuration
on_tstring_beg on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg # Offenses in 2 files, limit is 1, so no Exclude
on_const on_op on_const on_period UNK on_op UNK on_nl on_ignored_nl expect on_lparen cli on_period run on_lparen on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma # Make ConfigLoader reload the default configuration so that its # absolute Exclude paths will point into this example's work directory.
on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content # Copied from default configuration
on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg # Copied from default configuration
on_const on_op on_const on_period UNK on_op UNK on_nl on_ignored_nl expect on_lparen cli on_period run on_lparen on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma # Make ConfigLoader reload the default configuration so that its # absolute Exclude paths will point into this example's work directory.
expect on_lparen actual on_period UNK on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_period join on_lparen on_gvar on_rparen on_rparen on_period to eq on_lparen # With --exclude-limit 1 we get MinDigits generated for NumericLiterals # because there's one offense in each file. The other cops have offenses # in just one file, even though there may be more than one offense for # the same cop in a single file. Exclude properties are generated for # them.
