UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_op on_const on_period UNK # @return the collection being decorated.
UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_op on_const on_period UNK on_op on_const on_period UNK on_nl # @return [Class] the decorator class used to decorate each item, as set by # {#initialize}.
UNK on_symbeg UNK on_nl on_ignored_nl UNK on_op on_const on_period UNK on_op on_const on_period UNK on_nl UNK on_symbeg on_op on_comma on_symbeg # @return [Hash] extra data to be used in user-defined methods, and passed # to each item's decorator.
def UNK on_lparen UNK on_comma options on_op UNK UNK on_rparen on_ignored_nl options on_period UNK on_lparen on_symbeg UNK on_comma on_symbeg UNK # @param [Enumerable] object # collection to decorate. # @option options [Class, nil] :with (nil) # the decorator class used to decorate each item. When `nil`, each item's # {Decoratable#decorate decorate} method will be used. # @option options [Hash] :context ({}) # extra data to be stored in the collection decorator and used in # user-defined methods, and passed to each item's decorator.
def UNK on_nl on_ivar on_op UNK on_period UNK UNK on_op item on_op UNK on_lparen item on_rparen UNK on_nl end on_nl # @return [Array] the decorated items.
def UNK on_nl UNK on_nl end on_nl on_ignored_nl UNK on_symbeg UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen UNK on_rparen # @return [true]
def UNK on_lparen item on_rparen on_ignored_nl UNK on_period UNK on_lparen item on_comma UNK UNK on_rparen on_nl end on_nl on_ignored_nl UNK # Decorates the given item.
