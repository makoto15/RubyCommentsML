def UNK on_lparen method on_comma on_op UNK on_comma on_op UNK on_rparen on_ignored_nl UNK UNK UNK delegatable? on_lparen method on_rparen on_nl # Delegates missing instance methods to the source object. Note: This will delegate `super` # method calls to `object` as well. Calling `super` will first try to call the method on # the parent decorator class. If no method exists on the parent class, it will then try # to call the method on the `object`.
def UNK on_lparen method on_comma UNK on_op UNK on_rparen on_ignored_nl UNK on_op delegatable? on_lparen method on_rparen on_nl end on_nl on_ignored_nl # Checks if the decorator responds to an instance method, or is able to # proxy it to the source object.
def delegatable? on_lparen method on_rparen on_ignored_nl UNK UNK UNK on_lparen UNK on_rparen UNK UNK on_lparen method on_rparen on_nl on_ignored_nl UNK # @private
def UNK on_lparen method on_comma on_op UNK on_comma on_op UNK on_rparen on_ignored_nl UNK UNK UNK delegatable? on_lparen method on_rparen on_nl # Proxies missing class methods to the source class.
def UNK on_lparen method on_comma UNK on_op UNK on_rparen on_ignored_nl UNK on_op delegatable? on_lparen method on_rparen on_nl end on_nl on_ignored_nl # Checks if the decorator responds to a class method, or is able to proxy # it to the source class.
def delegatable? on_lparen method on_rparen on_ignored_nl UNK on_op UNK UNK UNK on_lparen method on_rparen on_nl end on_nl on_ignored_nl def UNK # @private
def UNK on_nl end on_nl end on_nl on_ignored_nl UNK UNK on_ignored_nl UNK UNK delegatable? on_nl UNK UNK delegatable? on_nl end # @private # Avoids reloading the model class when ActiveSupport clears autoloaded # dependencies in development mode.
