on_ignored_nl on_ignored_nl UNK on_const on_nl def UNK on_period UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_const on_period UNK on_nl UNK # encoding: utf-8
on_ignored_nl UNK on_const on_nl def UNK on_period UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_const on_period UNK on_nl UNK on_op # = plist # # Copyright 2006-2010 Ben Bleything and Patrick May # Distributed under the MIT License #
UNK on_const on_nl def UNK on_period UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_const on_period UNK on_nl UNK on_op on_const # Plist parses Mac OS X xml property list files into ruby data structures. # # === Load a plist file # This is the main point of the library: # # r = Plist.parse_xml(filename_or_xml)
def UNK on_period UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_const on_period UNK on_nl UNK on_op on_const on_period UNK on_lparen # Note that I don't use these two elements much: # # + Date elements are returned as DateTime objects. # + Data elements are implemented as Tempfiles # # Plist.parse_xml will blow up if it encounters a Date element. # If you encounter such an error, or if you have a Date element which # can't be parsed into a Time object, please create an issue # attaching your plist file at https://github.com/patsplat/plist/issues # so folks can implement the proper support.
UNK on_op on_const on_period UNK on_lparen UNK on_comma UNK on_rparen on_nl UNK on_period UNK on_nl UNK on_period UNK on_nl end # parser = REXML::Parsers::StreamParser.new(File.new(filename), listener)
on_ignored_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl def UNK on_nl on_ivar on_op UNK on_nl on_ivar on_op on_lbracket on_rbracket # include REXML::StreamListener
UNK UNK on_const on_period UNK on_lparen on_symbeg UNK on_rparen on_nl on_ivar on_period UNK on_op on_ivar on_period UNK on_period UNK on_lparen # use the specified encoding for the rest of the file
