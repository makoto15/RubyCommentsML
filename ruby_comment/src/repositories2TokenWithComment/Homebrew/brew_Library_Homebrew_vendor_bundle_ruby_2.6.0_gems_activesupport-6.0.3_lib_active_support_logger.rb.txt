on_ignored_nl UNK UNK UNK UNK on_nl UNK UNK UNK UNK on_nl UNK UNK UNK UNK on_nl on_ignored_nl UNK on_const on_nl # frozen_string_literal: true
UNK UNK on_period UNK on_lparen logger on_comma on_op UNK on_rparen on_ignored_nl UNK on_op logger on_period UNK on_lparen UNK UNK UNK # Returns true if the logger destination matches one of the sources # # logger = Logger.new(STDOUT) # ActiveSupport::Logger.logger_outputs_to?(logger, STDOUT) # # => true
UNK UNK on_period UNK on_lparen logger on_rparen on_const on_period UNK do on_ignored_nl define_method on_lparen on_symbeg UNK on_rparen do on_op on_op # Broadcasts logs to multiple loggers.
on_const on_period UNK do on_ignored_nl define_method on_lparen on_symbeg UNK on_rparen do on_op on_op UNK on_comma on_op block on_op on_ignored_nl logger # :nodoc:
UNK on_const on_op on_op on_const on_op on_const on_nl UNK UNK on_lparen UNK on_comma UNK on_comma UNK on_comma UNK on_rparen on_ignored_nl # Simple formatter which only displays the message.
UNK UNK on_lparen UNK on_comma UNK on_comma UNK on_comma UNK on_rparen on_ignored_nl UNK UNK on_const on_op UNK on_op UNK on_op # This method is invoked when a log event occurs
