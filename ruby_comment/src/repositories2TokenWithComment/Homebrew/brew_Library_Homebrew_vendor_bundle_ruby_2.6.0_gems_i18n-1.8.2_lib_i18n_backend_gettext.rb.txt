on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl on_ignored_nl UNK # frozen_string_literal: true
on_ignored_nl UNK on_const on_nl UNK on_const on_op on_const on_nl on_ignored_nl UNK on_const on_op on_const on_nl UNK UNK on_lparen UNK on_comma # Experimental support for using Gettext po files to store translations. # # To use this you can simply include the module to the Simple backend - or # whatever other backend you are using. # # I18n::Backend::Simple.include(I18n::Backend::Gettext) # # Now you should be able to include your Gettext translation (*.po) files to # the +I18n.load_path+ so they're loaded to the backend and you can use them as # usual: # # I18n.load_path += Dir["path/to/locales/*.po"] # # Following the Gettext convention this implementation expects that your # translation files are named by their locales. E.g. the file en.po would # contain the translations for the English locale. # # To translate text <b>you must use</b> one of the translate methods provided by # I18n::Gettext::Helpers. # # include I18n::Gettext::Helpers # puts _("some string") # # Without it strings containing periods (".") will not be translated.
end on_nl end on_nl on_ignored_nl UNK on_nl UNK UNK on_lparen UNK on_rparen on_ignored_nl locale on_op on_op on_const on_period UNK on_lparen # ignore
key on_op key on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_const on_op on_const on_op on_const on_rparen on_period UNK on_lparen on_const # FIXME po_parser includes \000 chars that can not be turned into Symbols
