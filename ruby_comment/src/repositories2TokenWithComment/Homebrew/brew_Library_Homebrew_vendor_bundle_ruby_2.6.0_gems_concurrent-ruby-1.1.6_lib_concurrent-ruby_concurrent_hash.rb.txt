on_ignored_nl on_const on_op UNK on_ignored_nl UNK on_const on_period UNK on_nl on_op on_const on_nl on_ignored_nl UNK on_const on_period UNK on_nl require # @!macro concurrent_hash # # A thread-safe subclass of Hash. This version locks against the object # itself for every method call, ensuring only one thread can be reading # or writing at a time. This includes iteration methods like `#each`, # which takes the lock repeatedly when reading an item. # # @see http://ruby-doc.org/core-2.2.0/Hash.html Ruby standard library `Hash`
on_const on_op UNK on_ignored_nl UNK on_const on_period UNK on_nl on_op on_const on_nl on_ignored_nl UNK on_const on_period UNK on_nl require on_tstring_beg # @!macro internal_implementation_note
on_op on_const on_nl on_ignored_nl UNK on_const on_period UNK on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_op on_op on_const # Hash is thread-safe in practice because CRuby runs # threads one at a time and does not do context # switching during the execution of C functions.
UNK on_const on_op on_const on_nl end on_nl on_ignored_nl end on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # @!macro concurrent_hash
