UNK on_const on_ignored_nl def UNK on_lparen UNK on_comma on_op block on_rparen on_ignored_nl UNK on_op on_const on_period new on_lparen UNK on_rparen # @!visibility private
on_ignored_nl def UNK on_lparen UNK on_comma on_op block on_rparen on_ignored_nl UNK on_op on_const on_period new on_lparen UNK on_rparen on_nl UNK # :nodoc:
def UNK on_lparen on_op inputs on_comma on_op block on_rparen on_ignored_nl UNK on_lparen on_const on_period UNK on_comma on_op inputs on_comma on_op # Dataflow allows you to create a task that will be scheduled when all of its data dependencies are available. # {include:file:docs-source/dataflow.md} # # @param [Future] inputs zero or more `Future` operations that this dataflow depends upon # # @yield The operation to perform once all the dependencies are met # @yieldparam [Future] inputs each of the `Future` inputs to the dataflow # @yieldreturn [Object] the result of the block operation # # @return [Object] the result of all the operations # # @raise [ArgumentError] if no block is given # @raise [ArgumentError] if any of the inputs are not `IVar`s
