on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end # frozen_string_literal: true
UNK on_comma on_ignored_nl on_label on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_label UNK UNK on_op UNK on_op UNK on_period UNK UNK on_nl # => "April 25th, 2007"
UNK UNK on_lparen UNK on_op on_symbeg UNK on_rparen on_ignored_nl UNK UNK on_op on_const UNK UNK UNK on_nl UNK UNK on_period # Convert to a formatted string. See DATE_FORMATS for predefined formats. # # This method is aliased to <tt>to_s</tt>. # # date = Date.new(2007, 11, 10) # => Sat, 10 Nov 2007 # # date.to_formatted_s(:db) # => "2007-11-10" # date.to_s(:db) # => "2007-11-10" # # date.to_formatted_s(:short) # => "10 Nov" # date.to_formatted_s(:number) # => "20071110" # date.to_formatted_s(:long) # => "November 10, 2007" # date.to_formatted_s(:long_ordinal) # => "November 10th, 2007" # date.to_formatted_s(:rfc822) # => "10 Nov 2007" # date.to_formatted_s(:iso8601) # => "2007-11-10" # # == Adding your own date formats to to_formatted_s # You can add your own formats to the Date::DATE_FORMATS hash. # Use the format name as the hash key and either a strftime string # or Proc instance that takes a date argument as the value. # # # config/initializers/date_formats.rb # Date::DATE_FORMATS[:month_and_year] = '%B %Y' # Date::DATE_FORMATS[:short_ordinal] = ->(date) { date.strftime("%B #{date.day.ordinalize}") }
UNK UNK on_nl UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_nl UNK # Overrides the default inspect method with a human readable one, e.g., "Mon, 21 Feb 2005"
UNK UNK on_lparen UNK on_op on_symbeg UNK on_rparen on_ignored_nl UNK on_const on_comma on_tstring_beg on_tstring_content UNK UNK on_period UNK UNK on_tstring_content # Converts a Date instance to a Time, where the time is set to the beginning of the day. # The timezone can be either :local or :utc (default :local). # # date = Date.new(2007, 11, 10) # => Sat, 10 Nov 2007 # # date.to_time # => 2007-11-10 00:00:00 0800 # date.to_time(:local) # => 2007-11-10 00:00:00 0800 # # date.to_time(:utc) # => 2007-11-10 00:00:00 UTC # # NOTE: The :local timezone is Ruby's *process* timezone, i.e. ENV['TZ']. # If the *application's* timezone is needed, then use +in_time_zone+ instead.
UNK UNK on_nl UNK on_period UNK on_nl end on_nl end on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP # Returns a string which represents the time in used time zone as DateTime # defined by XML Schema: # # date = Date.new(2015, 05, 23) # => Sat, 23 May 2015 # date.xmlschema # => "2015-05-23T00:00:00+04:00"
