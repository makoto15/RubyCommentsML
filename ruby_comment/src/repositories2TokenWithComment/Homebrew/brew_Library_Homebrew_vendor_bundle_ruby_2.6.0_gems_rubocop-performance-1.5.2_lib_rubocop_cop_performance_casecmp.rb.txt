on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_nl on_const on_op UNK on_tstring_content UNK # frozen_string_literal: true
UNK on_const on_op on_const on_nl on_const on_op UNK on_tstring_content UNK on_nl on_const on_op UNK on_tstring_content UNK on_tstring_content UNK on_period UNK # This cop identifies places where a case-insensitive string comparison # can better be implemented using `casecmp`. # # @example # # bad # str.downcase == 'abc' # str.upcase.eql? 'ABC' # 'abc' == str.downcase # 'ABC'.eql? str.upcase # str.downcase == str.downcase # # # good # str.casecmp('ABC').zero? # 'abc'.casecmp(str).zero?
UNK arg on_period UNK on_op on_op UNK on_lparen arg on_rparen on_nl UNK UNK variable on_period UNK UNK on_tstring_content UNK arg # We want resulting call to be parenthesized # if arg already includes one or more sets of parens, don't add more # or if method call already used parens, again, don't add more
