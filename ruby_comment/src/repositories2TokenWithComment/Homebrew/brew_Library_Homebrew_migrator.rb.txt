on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl # frozen_string_literal: true
attr_reader on_symbeg formula on_nl on_ignored_nl attr_reader on_symbeg oldname on_nl on_ignored_nl attr_reader on_symbeg old_cellar on_nl on_ignored_nl attr_reader on_symbeg old_pin_record on_nl on_ignored_nl # instance of new name formula
attr_reader on_symbeg oldname on_nl on_ignored_nl attr_reader on_symbeg old_cellar on_nl on_ignored_nl attr_reader on_symbeg old_pin_record on_nl on_ignored_nl attr_reader on_symbeg old_opt_record on_nl on_ignored_nl # old name of the formula
attr_reader on_symbeg old_cellar on_nl on_ignored_nl attr_reader on_symbeg old_pin_record on_nl on_ignored_nl attr_reader on_symbeg old_opt_record on_nl on_ignored_nl attr_reader on_symbeg old_linked_keg on_nl on_ignored_nl # path to oldname's cellar
attr_reader on_symbeg old_pin_record on_nl on_ignored_nl attr_reader on_symbeg old_opt_record on_nl on_ignored_nl attr_reader on_symbeg old_linked_keg on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl # path to oldname pin
attr_reader on_symbeg old_opt_record on_nl on_ignored_nl attr_reader on_symbeg old_linked_keg on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl # path to oldname opt
attr_reader on_symbeg old_linked_keg on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg old_tap on_nl on_ignored_nl # oldname linked keg
attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg old_tap on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl # path to oldname's linked keg
attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg old_tap on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg newname on_nl on_ignored_nl # tabs from oldname kegs
attr_reader on_symbeg old_tap on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg newname on_nl on_ignored_nl attr_reader on_symbeg new_cellar on_nl on_ignored_nl # tap of the old name
attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg newname on_nl on_ignored_nl attr_reader on_symbeg new_cellar on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl # resolved path to oldname pin
attr_reader on_symbeg newname on_nl on_ignored_nl attr_reader on_symbeg new_cellar on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl # new name of the formula
attr_reader on_symbeg new_cellar on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl # path to newname cellar according to new name
attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl def UNK on_period UNK on_lparen # true if new cellar existed at initialization time
attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl def UNK on_period UNK on_lparen formula on_rparen on_ignored_nl oldname on_op # path to newname pin
attr_reader on_symbeg UNK on_nl on_ignored_nl def UNK on_period UNK on_lparen formula on_rparen on_ignored_nl oldname on_op formula on_period oldname on_nl return # path to newname keg that will be linked if old_linked_keg isn't nil
def UNK on_nl UNK on_period each do on_op tab on_op on_ignored_nl tab on_period tap on_op formula on_period tap on_nl tab # Fix INSTALL_RECEIPTs for tap-migrated formula.
UNK formula on_period tap on_op old_tap on_op formula on_period tap on_op UNK on_nl UNK on_nl true on_nl UNK on_ignored_nl UNK # Homebrew didn't use to update tabs while performing tap-migrations, # so there can be INSTALL_RECEIPTs containing wrong information about tap, # so we check if there is an entry about oldname migrated to tap and if # newname's tap is the same as tap to which oldname migrated, then we # can perform migrations and the taps for oldname and newname are the same.
onoe on_tstring_beg on_tstring_content on_tstring_end on_nl puts e on_nl puts e on_period UNK if on_const on_period UNK on_nl puts on_tstring_beg on_tstring_content # rubocop:disable Lint/RescueException
def UNK on_nl return unless old_cellar on_period exist? on_nl on_ignored_nl if new_cellar on_period exist? on_nl UNK on_op UNK on_nl old_cellar # move everything from Cellar/oldname to Cellar/newname
UNK on_op on_lparen old_pin_record on_period UNK on_op UNK on_rparen on_period UNK on_nl UNK on_period UNK on_lparen UNK on_period UNK on_lparen # old_pin_record is a relative symlink and when we try to to read it # from <dir> we actually try to find file # <dir>/../<...>/../Cellar/name/version. # To repin formula we need to update the link thus that it points to # the right directory. # NOTE: old_pin_record.realpath.sub(oldname, newname) is unacceptable # here, because it resolves every symlink for old_pin_record and then # substitutes oldname with newname. It breaks things like # Pathname#make_relative_symlink, where Pathname#relative_path_from # is used to find relative path from source to destination parent and # it assumes no symlinks.
if formula on_period UNK on_op on_op UNK on_nl UNK on_ignored_nl new_keg on_period UNK on_nl rescue on_const on_op on_const on_op e # If old_keg wasn't linked then we just optlink a keg. # If old keg wasn't optlinked and linked, we don't call this method at all. # If formula is keg-only we also optlink it.
onoe on_tstring_beg on_tstring_content on_tstring_end on_nl puts e on_nl puts e on_period UNK if on_const on_period UNK on_nl UNK on_lbrace new_keg # rubocop:disable Lint/RescueException
def UNK on_nl return unless old_opt_record on_nl on_ignored_nl old_opt_record on_period UNK if old_opt_record on_period symlink? on_nl old_opt_record on_period UNK on_lparen # Link keg to opt if it was linked before migrating.
def UNK on_nl UNK on_op new_cellar on_period subdirs on_period UNK on_lbrace on_op d on_op on_const on_period UNK on_lparen on_const on_period # After migtaion every INSTALL_RECEIPT.json has wrong path to the formula # so we must update INSTALL_RECEIPTs
def UNK on_nl return unless old_opt_record on_nl on_ignored_nl if old_opt_record on_period symlink? on_op old_opt_record on_period exist? on_op UNK on_period exist? # Remove opt/oldname link if it belongs to newname.
def UNK on_nl old_cellar on_period UNK if old_cellar on_period symlink? on_op old_cellar on_period exist? on_nl old_cellar on_period UNK on_lparen formula # Remove old_cellar if it exists
def UNK on_nl if on_lparen old_cellar on_period symlink? on_op on_op old_cellar on_period exist? on_rparen on_op on_lparen old_cellar on_period symlink? on_op # Remove Cellar/oldname link if it belongs to newname.
def UNK on_nl UNK on_nl UNK on_nl UNK on_nl UNK on_nl on_ignored_nl if UNK on_op on_op old_pin_record on_period symlink? on_nl # Backup everything if errors occurred while migrating.
if UNK on_nl UNK on_ignored_nl old_linked_keg on_period UNK on_nl rescue on_const on_op on_const on_nl old_linked_keg on_period unlink on_nl raise on_nl # The keg used to be linked and when we backup everything we restore # Cellar/oldname, the target also gets restored, so we are able to # create a keg using its old path
