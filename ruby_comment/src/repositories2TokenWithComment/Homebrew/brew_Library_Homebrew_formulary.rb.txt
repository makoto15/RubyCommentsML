on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl on_ignored_nl # frozen_string_literal: true
on_ignored_nl UNK on_const on_nl UNK on_const on_nl on_ignored_nl def self on_period UNK on_nl on_ivar on_op UNK on_nl end on_nl on_ignored_nl # The Formulary is responsible for creating instances of {Formula}. # It is not meant to be used directly from formulae.
f on_period UNK on_op UNK on_nl on_ignored_nl f on_nl end on_nl on_ignored_nl def self on_period UNK on_lparen UNK on_rparen on_ignored_nl # If this formula was installed with an alias that has since changed, # then it was specified explicitly in ARGV. (Using the alias would # instead have found the new formula.) # # Because of this, the user is referring to this specific formula, # not any formula targeted by the same alias, so in this context # the formula shouldn't be considered outdated if the alias used to # install it has changed.
class on_const on_nl attr_reader on_symbeg name on_nl attr_reader on_symbeg path on_nl attr_reader on_symbeg alias_path on_nl on_ignored_nl def initialize on_lparen name # A FormulaLoader returns instances of formulae. # Subclasses implement loaders for particular sources of formulae.
attr_reader on_symbeg name on_nl attr_reader on_symbeg path on_nl attr_reader on_symbeg alias_path on_nl on_ignored_nl def initialize on_lparen name on_comma path on_rparen # The formula's name
attr_reader on_symbeg path on_nl attr_reader on_symbeg alias_path on_nl on_ignored_nl def initialize on_lparen name on_comma path on_rparen on_ignored_nl on_ivar on_op name # The formula's ruby file's path or filename
attr_reader on_symbeg alias_path on_nl on_ignored_nl def initialize on_lparen name on_comma path on_rparen on_ignored_nl on_ivar on_op name on_nl on_ivar on_op path # The name used to install the formula
def get_formula on_lparen spec on_comma on_label nil on_rparen on_ignored_nl UNK on_period new on_lparen name on_comma path on_comma spec on_comma on_label # Gets the formula instance. # # `alias_path` can be overridden here in case an alias was used to refer to # a formula that was loaded in another way.
class on_const on_op on_const on_nl def initialize on_lparen UNK on_rparen on_ignored_nl UNK UNK on_nl UNK on_regexp_beg on_tstring_content on_regexp_end on_nl UNK # Loads formulae from bottles.
UNK on_op on_const on_period basename on_lparen UNK on_rparen on_lbracket on_regexp_beg on_tstring_content on_regexp_end on_comma on_int on_rbracket on_nl UNK on_op on_const on_period # The name of the formula is found between the last slash and the last hyphen.
class on_const on_op on_const on_nl def initialize on_lparen path on_rparen on_ignored_nl path on_op on_const on_period new on_lparen path on_rparen on_period # Loads formulae from disk using a path.
class on_const on_op on_const on_nl attr_reader on_symbeg url on_nl on_ignored_nl def initialize on_lparen url on_rparen on_ignored_nl on_ivar on_op url on_nl # Loads formulae from URLs.
class on_const on_op on_const on_nl attr_reader on_symbeg tap on_nl on_ignored_nl def initialize on_lparen UNK on_comma on_label nil on_rparen on_ignored_nl UNK # Loads tapped formulae.
class on_const on_op on_const on_nl attr_reader on_symbeg contents on_nl on_ignored_nl def initialize on_lparen name on_comma path on_comma contents on_rparen on_ignored_nl # Load formulae directly from their contents.
attr_reader on_symbeg contents on_nl on_ignored_nl def initialize on_lparen name on_comma path on_comma contents on_rparen on_ignored_nl on_ivar on_op contents on_nl super # The formula's contents
def self on_period factory on_lparen ref on_comma spec on_op on_symbeg UNK on_comma on_label nil on_comma on_label nil on_rparen on_ignored_nl raise # Return a Formula instance for the given reference. # `ref` is a string containing: # # * a formula name # * a formula pathname # * a formula URL # * a local bottle reference
def self on_period UNK on_lparen rack on_comma spec on_op nil on_comma on_label nil on_rparen on_ignored_nl UNK on_op rack on_period UNK # Return a Formula instance for the given rack. # It will auto resolve formula's spec when requested spec is nil # # The :alias_path option will be used if the formula is found not to be # installed, and discarded if it is installed because the alias_path used # to install the formula will be set instead.
def self on_period UNK on_lparen rack on_rparen on_ignored_nl on_const on_period UNK on_lparen rack on_rparen on_period UNK on_nl rescue on_const on_comma # Return whether given rack is keg-only
def self on_period UNK on_lparen keg on_comma spec on_op nil on_comma on_label nil on_rparen on_ignored_nl tab on_op on_const on_period UNK # Return a Formula instance for the given keg. # It will auto resolve formula's spec when requested spec is nil
factory on_lparen keg on_period rack on_period basename on_period to_s on_comma spec on_comma on_label alias_path on_comma on_label on_symbeg keg on_rparen on_nl # formula may be migrated to different tap. Try to search in core and all taps.
def self on_period UNK on_lparen name on_comma path on_comma contents on_comma spec on_op on_symbeg UNK on_rparen on_ignored_nl on_const on_period new # Return a Formula instance directly from contents
factory on_lparen ref on_rparen if ref on_period UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl if on_lparen rack on_op on_const on_op on_const # If using a fully-scoped reference, check if the formula can be resolved.
if on_lparen rack on_op on_const on_op on_const on_period basename on_lparen ref on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_rparen on_period UNK on_nl # Check whether the rack with the given name exists.
on_lparen on_const on_op UNK on_lparen ref on_rparen on_rparen on_period resolved_path on_nl end on_nl on_ignored_nl def self on_period UNK on_lparen ref # Use canonical name to locate rack.
ref on_period UNK on_nl end on_nl on_ignored_nl def self on_period path on_lparen ref on_rparen on_ignored_nl UNK on_lparen ref on_rparen on_period # If there are multiple tap formulae with the name of ref, # then ref is the canonical name
