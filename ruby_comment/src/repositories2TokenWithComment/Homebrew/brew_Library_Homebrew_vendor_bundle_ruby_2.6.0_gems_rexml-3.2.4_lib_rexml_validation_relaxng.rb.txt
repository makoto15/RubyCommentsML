UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl class on_const on_nl # frozen_string_literal: false
class on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op UNK on_op UNK on_nl on_const on_op on_const on_period new on_lparen nil # Implemented: # * empty # * element # * attribute # * text # * optional # * choice # * oneOrMore # * zeroOrMore # * group # * value # * interleave # * mixed # * ref # * grammar # * start # * define # # Not implemented: # * data # * param # * include # * externalRef # * notAllowed # * anyName # * nsName # * except # * name
def initialize UNK on_nl UNK on_op on_const on_op on_const on_op on_const on_period new on_lparen UNK on_rparen on_nl on_ignored_nl on_ivar on_op # FIXME: Namespaces
end on_nl when on_symbeg UNK on_nl states on_lbracket on_op on_int on_rbracket on_op event on_nl when on_symbeg text on_nl states on_lbracket #when "empty"
return on_ivar on_period pop on_period next on_lparen event on_rparen if on_ivar on_lbracket on_ivar on_rbracket on_period nil? on_nl expand_ref_in on_lparen on_ivar #print "In next with #{event.inspect}. " #p @previous
self on_period class on_period UNK on_op UNK on_tstring_content UNK on_nl on_tstring_beg UNK UNK on_tstring_content UNK on_ivar on_tstring_end on_nl end on_nl # Abbreviated:
on_tstring_beg UNK UNK on_tstring_content UNK on_ivar on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_nl on_tstring_beg on_tstring_content on_embexpr_beg to_s on_embexpr_end on_tstring_content # Full: #self.class.name =~ /(?:::)(\w+)$/
case event on_lbracket on_int on_rbracket on_nl when on_tstring_beg on_tstring_content on_tstring_end on_nl evt on_op on_symbeg UNK on_nl when on_tstring_beg on_tstring_content on_tstring_end # then :end_element
if on_ivar on_period UNK on_op on_int on_nl c on_op on_int UNK max on_op on_ivar on_period UNK on_nl UNK c on_op # Make the choice if we haven't
end on_nl unless on_ivar on_nl on_ivar on_op on_lbracket on_rbracket on_nl return nil on_nl end on_nl super on_nl end on_nl on_ignored_nl # Remove the references # Find the events
c on_op on_int UNK max on_op on_ivar on_period UNK on_nl UNK c on_op max on_nl if on_ivar on_lbracket c on_rbracket # Expand references
UNK on_op on_ivar on_lbracket on_ivar on_rbracket on_nl UNK on_op on_ivar on_period UNK on_lparen on_ivar on_rparen on_nl on_ivar on_lbracket on_ivar on_rbracket # reorder the choices
UNK on_lparen event on_rparen unless on_ivar on_lbracket on_ivar on_rbracket on_nl return nil unless on_ivar on_lbracket on_ivar on_rbracket on_nl on_ignored_nl expand_ref_in # Find the next series
