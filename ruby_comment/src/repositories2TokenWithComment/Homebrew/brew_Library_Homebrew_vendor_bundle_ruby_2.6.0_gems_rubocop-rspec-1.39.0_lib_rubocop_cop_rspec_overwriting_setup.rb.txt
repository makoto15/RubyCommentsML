on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_nl on_const on_op UNK UNK UNK # frozen_string_literal: true
UNK on_const on_op on_const on_nl on_const on_op UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK on_comma on_lparen on_const on_op on_const # Checks if there is a let/subject that overwrites an existing one. # # @example # # bad # let(:foo) { bar } # let(:foo) { baz } # # subject(:foo) { bar } # let(:foo) { baz } # # let(:foo) { bar } # let!(:foo) { baz } # # # good # subject(:test) { something } # let(:foo) { bar } # let(:baz) { baz } # let!(:other) { other }
node on_period UNK on_period UNK on_period UNK on_lparen on_op UNK UNK on_rparen on_nl end on_nl end on_nl end on_nl end # Search only for setup with basic_literal arguments (e.g. :sym, :str) # or no arguments at all.
