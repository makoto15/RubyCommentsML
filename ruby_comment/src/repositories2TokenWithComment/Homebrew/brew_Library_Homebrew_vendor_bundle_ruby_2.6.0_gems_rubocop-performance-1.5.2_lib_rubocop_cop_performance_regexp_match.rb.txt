on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_nl UNK on_const on_nl on_ignored_nl UNK # frozen_string_literal: true
UNK on_const on_op on_const on_nl UNK on_const on_nl on_ignored_nl UNK UNK on_nl on_ignored_nl on_const on_op UNK on_tstring_content on_words_sep on_tstring_content on_words_sep # In Ruby 2.4, `String#match?`, `Regexp#match?`, and `Symbol#match?` # have been added. The methods are faster than `match`. # Because the methods avoid creating a `MatchData` object or saving # backref. # So, when `MatchData` is not used, use `match?` instead of `match`. # # @example # # bad # def foo # if x =~ /re/ # do_something # end # end # # # bad # def foo # if x !~ /re/ # do_something # end # end # # # bad # def foo # if x.match(/re/) # do_something # end # end # # # bad # def foo # if /re/ === x # do_something # end # end # # # good # def foo # if x.match?(/re/) # do_something # end # end # # # good # def foo # if !x.match?(/re/) # do_something # end # end # # # good # def foo # if x =~ /re/ # do_something(Regexp.last_match) # end # end # # # good # def foo # if x.match(/re/) # do_something($~) # end # end # # # good # def foo # if /re/ === x # do_something($~) # end # end
on_const on_op UNK on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_tstring_end on_period UNK on_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_tstring_beg # Constants are included in this list because it is unlikely that # someone will store `nil` as a constant and then use it for comparison
