on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_nl on_ignored_nl def UNK on_lparen path on_rparen on_ignored_nl UNK on_op on_const on_period # frozen_string_literal: true
def UNK on_lparen path on_rparen on_ignored_nl UNK on_op on_const on_period UNK on_lparen path on_rparen on_nl UNK on_period UNK on_lparen UNK # take a path and heuristically convert it # to a shell name, return nil if there's no match
UNK on_op on_const on_period UNK on_lparen path on_rparen on_nl UNK on_period UNK on_lparen UNK on_tstring_content UNK on_comma on_tstring_beg on_tstring_end on_rparen # we only care about the basename
UNK on_period UNK on_lparen UNK on_tstring_content UNK on_comma on_tstring_beg on_tstring_end on_rparen on_nl UNK on_period UNK UNK UNK on_tstring_content on_words_sep on_tstring_content # handle possible version suffix like `zsh-5.2`
def UNK on_lparen UNK on_comma value on_comma UNK on_op preferred on_rparen on_ignored_nl UNK UNK on_nl when on_symbeg UNK on_comma on_symbeg # quote values. quoting keys is overkill
on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg sh_quote on_lparen value on_rparen on_embexpr_end on_tstring_content on_tstring_end on_nl when on_symbeg UNK on_comma on_symbeg # fish quoting is mostly Bourne compatible except that # a single quote can be included in a single-quoted string via \' # and a literal \ can be included via \\
def profile on_nl UNK on_tstring_beg on_embexpr_beg on_const UNK on_tstring_beg on_tstring_content on_tstring_end UNK on_embexpr_end on_tstring_content on_tstring_end UNK preferred on_op on_symbeg UNK # return the shell profile file based on user's preferred shell
str on_op str on_period UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end UNK str on_period UNK on_nl on_ignored_nl str on_op str on_period # ruby's implementation of shell_escape
str on_period UNK on_lparen on_const on_comma on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl str on_period UNK on_lparen UNK # anything that isn't a known safe character is padded
str on_period UNK on_lparen UNK on_tstring_content UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl str on_nl end on_nl on_ignored_nl def sh_quote # newlines have to be specially quoted in csh
str on_op str on_period UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end UNK str on_period UNK on_nl on_ignored_nl str on_op str on_period # ruby's implementation of shell_escape
str on_period UNK on_lparen on_const on_comma on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl str on_period UNK on_lparen UNK # anything that isn't a known safe character is padded
