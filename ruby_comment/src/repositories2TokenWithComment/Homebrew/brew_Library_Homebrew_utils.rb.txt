on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end # frozen_string_literal: true
end on_nl on_const on_period UNK on_lparen UNK on_rparen on_nl on_gvar on_period UNK on_nl end on_nl on_ignored_nl def UNK on_lparen cmd # never gets here unless exec failed
def UNK on_lparen UNK on_comma UNK on_rparen on_ignored_nl UNK on_op on_lbrace on_rbrace on_nl UNK on_lbracket UNK on_rbracket on_op on_lbracket on_rbracket # rubocop:disable Style/GlobalVars
end on_nl on_ignored_nl UNK on_const on_nl def UNK on_lparen path on_rparen on_ignored_nl return UNK if path on_period UNK on_nl on_ignored_nl # rubocop:enable Style/GlobalVars
raise unless UNK on_period message on_period include? on_lparen path on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen title on_rparen on_ignored_nl # we should raise on syntax errors but not if the file doesn't exist.
def UNK on_lparen message on_rparen on_ignored_nl on_gvar on_period puts on_const on_period UNK on_lparen message on_comma on_label on_tstring_beg on_tstring_content on_tstring_end on_rparen # Print a warning (do this rarely)
UNK on_op UNK on_nl on_ignored_nl return if UNK on_period UNK do on_op line on_op on_ignored_nl line on_period include? on_lparen on_const # Try to show the most relevant location in message, i.e. (if applicable): # - Location in a formula. # - Location outside of 'compat/'. # - Location of caller of deprecated method (if all else fails).
return if UNK on_period UNK do on_op line on_op on_ignored_nl line on_period include? on_lparen on_const on_rparen on_op on_ignored_nl line on_period # Don't throw deprecations at all for cached, .brew or .metadata files.
def UNK on_lparen cmd on_comma on_op args on_comma on_op options on_rparen on_ignored_nl return if on_const on_period UNK on_lparen cmd on_comma # Kernel.system but with exceptions
def UNK on_lparen cmd on_comma on_op args on_rparen on_ignored_nl on_const on_period UNK on_lparen cmd on_comma on_op args on_rparen do on_ignored_nl # Prints no output
on_gvar on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_gvar on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl # Redirect output streams to `/dev/null` instead of closing as some programs # will fail to execute if they can't write to an open stream.
UNK on_nl end on_nl return on_const on_period new on_lparen pcmd on_rparen if on_const on_period UNK on_lparen pcmd on_rparen on_op on_const # File.expand_path will raise an ArgumentError if the path is malformed. # See https://github.com/Homebrew/legacy-homebrew/issues/32789
UNK on_nl end on_nl on_const on_period new on_lparen pcmd on_rparen if on_const on_period UNK on_lparen pcmd on_rparen on_op on_const on_period # File.expand_path will raise an ArgumentError if the path is malformed. # See https://github.com/Homebrew/legacy-homebrew/issues/32789
editor on_op UNK on_tstring_content UNK on_tstring_content UNK on_tstring_content UNK on_tstring_content UNK on_tstring_content on_tstring_end on_period UNK do on_op UNK on_op on_ignored_nl # Find Atom, Sublime Text, Textmate, BBEdit / TextWrangler, or vim
def UNK on_lparen on_op UNK on_rparen on_ignored_nl UNK on_period UNK do on_op path on_op on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_comma # GZips the given paths, and returns the gzipped paths
def UNK on_lparen cmd on_rparen on_ignored_nl cmd on_op UNK on_lparen cmd on_rparen unless on_const on_period new on_lparen cmd on_rparen on_period # Returns array of architectures that the given command or library is built for.
if on_lparen on_lparen size on_op on_int on_rparen on_period UNK on_op on_int on_rparen on_period UNK on_nl on_tstring_beg on_embexpr_beg size on_period UNK # avoid trailing zero after decimal point
def UNK on_lparen s on_comma UNK on_comma options on_op on_lbrace on_rbrace on_rparen on_ignored_nl UNK on_op options on_period UNK on_lparen on_symbeg # Truncates a text string to fit within a byte size constraint, # preserving character encoding validity. The returned string will # be not much longer than the specified max_bytes, though the exact # shortfall or overrun may vary.
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_lbrace on_rbrace on_nl UNK on_ignored_nl UNK on_period UNK do on_op key on_comma # Calls the given block with the passed environment variables # added to ENV, then restores ENV afterwards. # Example: # <pre>with_env(PATH: "/bin") do # system "echo $PATH" # end</pre> # # Note that this method is *not* thread-safe - other threads # which happen to be scheduled during the block will also # see these environment variables.
