on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_nl UNK on_const on_nl on_ignored_nl on_const # frozen_string_literal: true
UNK on_const on_op on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_tstring_beg on_tstring_content on_tstring_end on_tstring_beg on_tstring_content on_tstring_end # This cop identifies places where `sort { |a, b| a.foo <=> b.foo }` # can be replaced by `sort_by(&:foo)`. # This cop also checks `max` and `min` methods. # # @example # # bad # array.sort { |a, b| a.foo <=> b.foo } # array.max { |a, b| a.foo <=> b.foo } # array.min { |a, b| a.foo <=> b.foo } # array.sort { |a, b| a[:foo] <=> b[:foo] } # # # good # array.sort_by(&:foo) # array.sort_by { |v| v.foo } # array.sort_by do |var| # var.foo # end # array.max_by(&:foo) # array.min_by(&:foo) # array.sort_by { |a| a[:foo] }
UNK UNK on_lparen send on_comma method on_comma var_a on_comma var_b on_comma UNK on_rparen on_ignored_nl UNK on_op send on_period UNK on_nl # rubocop:disable Metrics/MethodLength
on_ignored_nl UNK UNK on_lparen send on_comma node on_rparen on_ignored_nl UNK on_lparen send on_period UNK on_period UNK on_period UNK on_comma node # rubocop:enable Metrics/MethodLength
