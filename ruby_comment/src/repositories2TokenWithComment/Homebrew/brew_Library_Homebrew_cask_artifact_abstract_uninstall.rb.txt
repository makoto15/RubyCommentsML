on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content # frozen_string_literal: true
def UNK on_lparen directives on_comma on_op options on_rparen on_ignored_nl UNK on_lparen directives on_comma on_label on_symbeg UNK on_comma on_op options on_rparen # Preserve prior functionality of script which runs first. Should rarely be needed. # :early_script should not delete files, better defer that to :script. # If Cask writers never need :early_script it may be removed in the future.
def UNK on_lparen on_op UNK on_comma on_label nil on_comma on_op _ on_rparen on_ignored_nl UNK on_period each do on_op service on_op # :launchctl must come before :quit/:signal for cases where app would instantly re-launch
next unless on_const on_lparen service on_rparen on_period UNK on_nl on_ignored_nl command on_period run! on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_label on_lbracket # undocumented and untested: pass a path to uninstall :launchctl
def UNK on_lparen on_op UNK on_comma on_label nil on_comma on_op _ on_rparen on_ignored_nl UNK on_period each do on_op bundle_id on_op # :quit/:signal must come before :kext so the kext will not be in use by a running process
def UNK on_lparen on_op UNK on_comma on_label nil on_comma on_op _ on_rparen on_ignored_nl UNK on_period each do on_op UNK on_op # :signal should come after :quit so it can be used as a backup when :quit fails
UNK on_tstring_beg on_tstring_content on_embexpr_beg UNK on_period UNK on_embexpr_end on_tstring_content on_embexpr_beg bundle_id on_embexpr_end on_tstring_end on_nl on_const on_period UNK on_lparen signal on_comma # Note that unlike :quit, signals are sent from the current user (not # upgraded to the superuser). This is a todo item for the future, but # there should be some additional thought/safety checks about that, as a # misapplied "kill" by root could bring down the system. The fact that we # learned the pid from AppleScript is already some degree of protection, # though indirect.
def UNK on_lparen on_op UNK on_comma on_label nil on_comma on_op _ on_rparen on_ignored_nl UNK on_period each do on_op kext on_op # :kext should be unloaded before attempting to delete the relevant file
def UNK on_lparen directives on_comma on_label on_symbeg script on_comma on_label false on_comma on_label nil on_comma on_op _ on_rparen on_ignored_nl UNK # :script must come before :pkgutil, :delete, or :trash so that the script file is not already deleted
UNK on_comma UNK on_op UNK on_period UNK on_period UNK on_lparen directives on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_lbrace on_label # TODO: Create a common `Script` class to run this and Artifact::Installer.
