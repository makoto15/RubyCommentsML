on_const on_op on_const on_period new on_lparen on_const on_rparen on_nl on_ignored_nl on_const on_op on_const on_period new on_lparen on_const on_rparen on_nl on_ignored_nl # Raised when errors occur during configuration.
on_const on_op on_const on_period new on_lparen on_const on_rparen on_nl on_ignored_nl on_const on_op on_const on_period new on_lparen on_const on_rparen on_nl on_ignored_nl # Raised when an asynchronous operation is cancelled before execution.
on_const on_op on_const on_period new on_lparen on_const on_rparen on_nl on_ignored_nl on_const on_op on_const on_period new on_lparen on_const on_rparen on_nl on_ignored_nl # Raised when a lifecycle method (such as `stop`) is called in an improper # sequence or when the object is in an inappropriate state.
on_const on_op on_const on_period new on_lparen on_const on_rparen on_nl on_ignored_nl on_const on_op on_const on_period new on_lparen on_const on_rparen on_nl on_ignored_nl # Raised when an attempt is made to violate an immutability guarantee.
on_const on_op on_const on_period new on_lparen on_const on_rparen on_nl on_ignored_nl on_const on_op on_const on_period new on_lparen on_const on_rparen on_nl on_ignored_nl # Raised when an operation is attempted which is not legal given the # receiver's current state
on_const on_op on_const on_period new on_lparen on_const on_rparen on_nl on_ignored_nl on_const on_op on_const on_period new on_lparen on_const on_rparen on_nl on_ignored_nl # Raised when an object's methods are called when it has not been # properly initialized.
on_const on_op on_const on_period new on_lparen on_const on_rparen on_nl on_ignored_nl UNK on_const on_op on_const on_nl UNK UNK UNK on_nl on_ignored_nl # Raised when an object with a start/stop lifecycle has been started an # excessive number of times. Often used in conjunction with a restart # policy or strategy.
UNK on_const on_op on_const on_nl UNK UNK UNK on_nl on_ignored_nl UNK UNK on_lparen UNK on_op UNK on_comma UNK on_op UNK # Raised when an attempt is made to modify an immutable object # (such as an `IVar`) after its final state has been set.
on_const on_op on_const on_period new on_lparen on_const on_rparen on_nl on_ignored_nl on_const on_op on_const on_period new on_lparen on_const on_rparen on_nl on_ignored_nl # Raised by an `Executor` when it is unable to process a given task, # possibly because of a reject policy or other internal error.
on_const on_op on_const on_period new on_lparen on_const on_rparen on_nl on_ignored_nl on_const on_op on_const on_period new on_lparen on_const on_rparen on_nl on_ignored_nl # Raised when any finite resource, such as a lock counter, exceeds its # maximum limit/threshold.
on_const on_op on_const on_period new on_lparen on_const on_rparen on_nl on_ignored_nl UNK on_const on_op on_const on_nl UNK UNK UNK on_nl on_ignored_nl # Raised when an operation times out.
UNK on_const on_op on_const on_nl UNK UNK UNK on_nl on_ignored_nl UNK UNK on_lparen UNK on_comma UNK on_op UNK UNK UNK # Aggregates multiple exceptions.
