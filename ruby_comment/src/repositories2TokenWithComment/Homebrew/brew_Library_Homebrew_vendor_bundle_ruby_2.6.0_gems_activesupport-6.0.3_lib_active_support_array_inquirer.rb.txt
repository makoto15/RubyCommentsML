on_ignored_nl UNK UNK on_nl UNK UNK on_op UNK on_nl UNK UNK on_lparen on_op UNK on_rparen on_ignored_nl UNK UNK UNK UNK # frozen_string_literal: true
UNK UNK on_op UNK on_nl UNK UNK on_lparen on_op UNK on_rparen on_ignored_nl UNK UNK UNK UNK on_nl UNK on_nl UNK # Wrapping an array in an +ArrayInquirer+ gives a friendlier way to check # its string-like contents: # # variants = ActiveSupport::ArrayInquirer.new([:phone, :tablet]) # # variants.phone? # => true # variants.tablet? # => true # variants.desktop? # => false
UNK UNK on_lparen on_op UNK on_rparen on_ignored_nl UNK UNK UNK UNK on_nl UNK on_nl UNK on_ignored_nl UNK UNK UNK UNK # Passes each element of +candidates+ collection to ArrayInquirer collection. # The method returns true if any element from the ArrayInquirer collection # is equal to the stringified or symbolized form of any element in the +candidates+ collection. # # If +candidates+ collection is not given, method returns true. # # variants = ActiveSupport::ArrayInquirer.new([:phone, :tablet]) # # variants.any? # => true # variants.any?(:phone, :tablet) # => true # variants.any?('phone', 'desktop') # => true # variants.any?(:desktop, :watch) # => false
