UNK on_const on_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op # Classes and constants for parsing the headers of Mach-O binaries.
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # big-endian fat magic # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # little-endian fat magic # @note This is defined for completeness, but should never appear in ruby-macho code, # since fat headers are always big-endian. # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # 64-bit big-endian fat magic
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # 64-bit little-endian fat magic # @note This is defined for completeness, but should never appear in ruby-macho code, # since fat headers are always big-endian.
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # 32-bit big-endian magic # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_lbrace on_ignored_nl on_const # 32-bit little-endian magic # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_lbrace on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_comma # 64-bit big-endian magic # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_lbrace on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_const on_op on_tstring_beg on_tstring_content # 64-bit little-endian magic # @api private
on_const on_op on_lbrace on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_const on_op # association of magic numbers to string representations # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl # mask for CPUs with 64-bit architectures (when running a 64-bit ABI?) # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl # mask for CPUs with 64-bit architectures (when running a 32-bit ABI?) # @see https://github.com/Homebrew/ruby-macho/issues/113 # @api private
on_const on_op on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_lparen on_const # any CPU (unused?) # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_lparen on_const on_op on_const on_rparen on_nl on_ignored_nl on_const # m68k compatible CPUs # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_lparen on_const on_op on_const on_rparen on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const # i386 and later compatible CPUs # @api private
on_const on_op on_lparen on_const on_op on_const on_rparen on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const # x86_64 (AMD64) compatible CPUs # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_lparen on_const on_op on_const on_rparen on_nl on_ignored_nl on_const # 32-bit ARM compatible CPUs # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_lparen on_const on_op on_const on_rparen on_nl on_ignored_nl on_const on_op on_lparen on_const on_op on_const # m88k compatible CPUs # @api private
on_const on_op on_lparen on_const on_op on_const on_rparen on_nl on_ignored_nl on_const on_op on_lparen on_const on_op on_const on_rparen on_nl on_ignored_nl on_const on_op # 64-bit ARM compatible CPUs # @api private
on_const on_op on_lparen on_const on_op on_const on_rparen on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_lparen on_const on_op on_const # 64-bit ARM compatible CPUs (running in 32-bit mode?) # @see https://github.com/Homebrew/ruby-macho/issues/113
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_lparen on_const on_op on_const on_rparen on_nl on_ignored_nl on_const on_op on_lbrace on_ignored_nl on_const on_op # PowerPC compatible CPUs # @api private
on_const on_op on_lparen on_const on_op on_const on_rparen on_nl on_ignored_nl on_const on_op on_lbrace on_ignored_nl on_const on_op on_symbeg UNK on_comma on_ignored_nl on_const # PowerPC64 compatible CPUs # @api private
on_const on_op on_lbrace on_ignored_nl on_const on_op on_symbeg UNK on_comma on_ignored_nl on_const on_op on_symbeg UNK on_comma on_ignored_nl on_const on_op on_symbeg UNK # association of cpu types to symbol representations # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # mask for CPU subtype capabilities # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # 64-bit libraries (undocumented!) # @see http://llvm.org/docs/doxygen/html/Support_2MachO_8h_source.html # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the lowest common sub-type for `CPU_TYPE_I386` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_const on_nl on_ignored_nl # the i486 sub-type for `CPU_TYPE_I386` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_const on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the i486SX sub-type for `CPU_TYPE_I386` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_const on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the i586 (P5, Pentium) sub-type for `CPU_TYPE_I386` # @api private
on_const on_op on_const on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # @see CPU_SUBTYPE_586 # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the Pentium Pro (P6) sub-type for `CPU_TYPE_I386` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the Pentium II (P6, M3?) sub-type for `CPU_TYPE_I386` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_const on_nl on_ignored_nl # the Pentium II (P6, M5?) sub-type for `CPU_TYPE_I386` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_const on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the Pentium 4 (Netburst) sub-type for `CPU_TYPE_I386` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_const on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the lowest common sub-type for `CPU_TYPE_MC680X0` # @api private
on_const on_op on_const on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_const on_nl on_ignored_nl # @see CPU_SUBTYPE_MC680X0_ALL # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_const on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the 040 subtype for `CPU_TYPE_MC680X0` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_const on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the 030 subtype for `CPU_TYPE_MC680X0` # @api private
on_const on_op on_const on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the lowest common sub-type for `CPU_TYPE_X86_64` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the Haskell sub-type for `CPU_TYPE_X86_64` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the lowest common sub-type for `CPU_TYPE_ARM` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the v4t sub-type for `CPU_TYPE_ARM` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the v6 sub-type for `CPU_TYPE_ARM` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the v5 sub-type for `CPU_TYPE_ARM` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the xscale (v5 family) sub-type for `CPU_TYPE_ARM` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the v7 sub-type for `CPU_TYPE_ARM` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the v7f (Cortex A9) sub-type for `CPU_TYPE_ARM` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the v7s ("Swift") sub-type for `CPU_TYPE_ARM` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the v7k ("Kirkwood40") sub-type for `CPU_TYPE_ARM` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the v6m sub-type for `CPU_TYPE_ARM` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the v7m sub-type for `CPU_TYPE_ARM` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the v7em sub-type for `CPU_TYPE_ARM` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the v8 sub-type for `CPU_TYPE_ARM` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the lowest common sub-type for `CPU_TYPE_ARM64` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the v8 sub-type for `CPU_TYPE_ARM64` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_const on_nl on_ignored_nl # the v8 sub-type for `CPU_TYPE_ARM64_32` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_const on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the e (A12) sub-type for `CPU_TYPE_ARM64` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_const on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the lowest common sub-type for `CPU_TYPE_MC88000` # @api private
on_const on_op on_const on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # @see CPU_SUBTYPE_MC88000_ALL # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the 100 sub-type for `CPU_TYPE_MC88000` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the 110 sub-type for `CPU_TYPE_MC88000` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the lowest common sub-type for `CPU_TYPE_POWERPC` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the 601 sub-type for `CPU_TYPE_POWERPC` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the 602 sub-type for `CPU_TYPE_POWERPC` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the 603 sub-type for `CPU_TYPE_POWERPC` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the 603e (G2) sub-type for `CPU_TYPE_POWERPC` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the 603ev sub-type for `CPU_TYPE_POWERPC` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the 604 sub-type for `CPU_TYPE_POWERPC` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the 604e sub-type for `CPU_TYPE_POWERPC` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the 620 sub-type for `CPU_TYPE_POWERPC` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # the 750 (G3) sub-type for `CPU_TYPE_POWERPC` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_const on_nl on_ignored_nl # the 7400 (G4) sub-type for `CPU_TYPE_POWERPC` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_const on_nl on_ignored_nl on_const on_op on_lbrace on_ignored_nl on_const # the 7450 (G4 "Voyager") sub-type for `CPU_TYPE_POWERPC` # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_const on_nl on_ignored_nl on_const on_op on_lbrace on_ignored_nl on_const on_op on_lbrace on_ignored_nl on_const on_op # the 970 (G5) sub-type for `CPU_TYPE_POWERPC` # @api private
on_const on_op on_const on_nl on_ignored_nl on_const on_op on_lbrace on_ignored_nl on_const on_op on_lbrace on_ignored_nl on_const on_op on_symbeg UNK on_comma on_ignored_nl on_const # any CPU sub-type for CPU type `CPU_TYPE_POWERPC64` # @api private
on_const on_op on_lbrace on_ignored_nl on_const on_op on_lbrace on_ignored_nl on_const on_op on_symbeg UNK on_comma on_ignored_nl on_const on_op on_symbeg UNK on_comma on_ignored_nl # association of CPU types/subtype pairs to symbol representations in # (very) roughly descending order of commonness # @see https://opensource.apple.com/source/cctools/cctools-877.8/libstuff/arch.c # @api private
on_const on_op on_symbeg UNK on_comma on_const on_op on_symbeg UNK on_comma on_ignored_nl on_const on_op on_symbeg UNK on_comma on_ignored_nl on_const on_op on_symbeg # also "pentium" in arch(3)
on_const on_op on_symbeg UNK on_comma on_ignored_nl on_const on_op on_symbeg UNK on_comma on_ignored_nl on_const on_op on_symbeg UNK on_comma on_ignored_nl on_rbrace on_period # also "pentpro" in arch(3)
on_const on_op on_symbeg UNK on_comma on_ignored_nl on_rbrace on_period freeze on_comma on_ignored_nl on_const on_op on_lbrace on_ignored_nl on_const on_op on_symbeg UNK on_comma # apparently the only exception to the naming scheme
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # relocatable object file # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # demand paged executable file # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # fixed VM shared library file # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # core dump file # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # preloaded executable file # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # dynamically bound shared library # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # dynamic link editor # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl # dynamically bound bundle file # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_lbrace on_ignored_nl on_const # shared library stub for static linking only, no section contents # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_lbrace on_ignored_nl on_const on_op on_symbeg UNK on_comma on_ignored_nl # companion file with only debug sections # @api private
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_lbrace on_ignored_nl on_const on_op on_symbeg UNK on_comma on_ignored_nl on_const on_op on_symbeg UNK on_comma # x86_64 kexts # @api private
on_const on_op on_lbrace on_ignored_nl on_const on_op on_symbeg UNK on_comma on_ignored_nl on_const on_op on_symbeg UNK on_comma on_ignored_nl on_const on_op on_symbeg UNK # association of filetypes to Symbol representations # @api private
on_const on_op on_lbrace on_ignored_nl on_symbeg on_const on_op on_int on_comma on_ignored_nl on_symbeg on_const on_op on_int on_comma on_ignored_nl on_symbeg on_const on_op on_int # association of mach header flag symbols to values # @api private
UNK on_const on_op on_const on_nl attr_reader on_symbeg magic on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end # Fat binary header structure # @see MachO::FatArch
attr_reader on_symbeg magic on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_nl on_ignored_nl on_const # @return [Integer] the magic number of the header (and file)
attr_reader on_symbeg UNK on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl def # @return [Integer] the number of fat architecture structures following the header
on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl def UNK on_lparen magic on_comma UNK # always big-endian # @see MachOStructure::FORMAT # @api private
on_const on_op on_int on_nl on_ignored_nl def UNK on_lparen magic on_comma UNK on_rparen on_ignored_nl on_ivar on_op magic on_nl on_ivar on_op UNK # @see MachOStructure::SIZEOF # @api private
def UNK on_lparen magic on_comma UNK on_rparen on_ignored_nl on_ivar on_op magic on_nl on_ivar on_op UNK on_nl end on_nl on_ignored_nl def # @api private
def UNK on_nl on_lbracket magic on_comma UNK on_rbracket on_period UNK on_lparen on_const on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl # @return [String] the serialized fields of the fat header
def UNK on_nl on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op magic on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_const on_lbracket magic on_rbracket # @return [Hash] a hash representation of this {FatHeader}
UNK on_const on_op on_const on_nl attr_reader on_symbeg cputype on_nl on_ignored_nl attr_reader on_symbeg cpusubtype on_nl on_ignored_nl attr_reader on_symbeg offset on_nl on_ignored_nl # 32-bit fat binary header architecture structure. A 32-bit fat Mach-O has one or more of # these, indicating one or more internal Mach-O blobs. # @note "32-bit" indicates the fact that this structure stores 32-bit offsets, not that the # Mach-Os that it points to necessarily *are* 32-bit. # @see MachO::Headers::FatHeader
attr_reader on_symbeg cputype on_nl on_ignored_nl attr_reader on_symbeg cpusubtype on_nl on_ignored_nl attr_reader on_symbeg offset on_nl on_ignored_nl attr_reader on_symbeg size on_nl on_ignored_nl # @return [Integer] the CPU type of the Mach-O
attr_reader on_symbeg cpusubtype on_nl on_ignored_nl attr_reader on_symbeg offset on_nl on_ignored_nl attr_reader on_symbeg size on_nl on_ignored_nl attr_reader on_symbeg align on_nl on_ignored_nl # @return [Integer] the CPU subtype of the Mach-O
attr_reader on_symbeg offset on_nl on_ignored_nl attr_reader on_symbeg size on_nl on_ignored_nl attr_reader on_symbeg align on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end # @return [Integer] the file offset to the beginning of the Mach-O data
attr_reader on_symbeg size on_nl on_ignored_nl attr_reader on_symbeg align on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_nl on_ignored_nl on_const # @return [Integer] the size, in bytes, of the Mach-O data
attr_reader on_symbeg align on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl def # @return [Integer] the alignment, as a power of 2
on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl def UNK on_lparen cputype on_comma cpusubtype # @note Always big endian. # @see MachOStructure::FORMAT # @api private
on_const on_op on_int on_nl on_ignored_nl def UNK on_lparen cputype on_comma cpusubtype on_comma offset on_comma size on_comma align on_rparen on_ignored_nl on_ivar # @see MachOStructure::SIZEOF # @api private
def UNK on_lparen cputype on_comma cpusubtype on_comma offset on_comma size on_comma align on_rparen on_ignored_nl on_ivar on_op cputype on_nl on_ivar on_op # @api private
def UNK on_nl on_lbracket cputype on_comma cpusubtype on_comma offset on_comma size on_comma align on_rbracket on_period UNK on_lparen on_const on_rparen on_nl # @return [String] the serialized fields of the fat arch
def UNK on_nl on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op cputype on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_const on_lbracket cputype on_rbracket # @return [Hash] a hash representation of this {FatArch}
UNK on_const on_op on_const on_nl attr_reader on_symbeg reserved on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_nl on_ignored_nl on_const # 64-bit fat binary header architecture structure. A 64-bit fat Mach-O has one or more of # these, indicating one or more internal Mach-O blobs. # @note "64-bit" indicates the fact that this structure stores 64-bit offsets, not that the # Mach-Os that it points to necessarily *are* 64-bit. # @see MachO::Headers::FatHeader
attr_reader on_symbeg reserved on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl def # @return [void]
on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl def UNK on_lparen cputype on_comma cpusubtype # @note Always big endian. # @see MachOStructure::FORMAT # @api private
on_const on_op on_int on_nl on_ignored_nl def UNK on_lparen cputype on_comma cpusubtype on_comma offset on_comma size on_comma align on_comma reserved on_op # @see MachOStructure::SIZEOF # @api private
def UNK on_lparen cputype on_comma cpusubtype on_comma offset on_comma size on_comma align on_comma reserved on_op on_int on_rparen on_ignored_nl super on_lparen # @api private
def UNK on_nl on_lbracket cputype on_comma cpusubtype on_comma offset on_comma size on_comma align on_comma reserved on_rbracket on_period UNK on_lparen on_const # @return [String] the serialized fields of the fat arch
def UNK on_nl on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op reserved on_comma on_ignored_nl on_rbrace on_period UNK super on_nl end on_nl end # @return [Hash] a hash representation of this {FatArch64}
UNK on_const on_op on_const on_nl attr_reader on_symbeg magic on_nl on_ignored_nl attr_reader on_symbeg cputype on_nl on_ignored_nl attr_reader on_symbeg cpusubtype on_nl on_ignored_nl # 32-bit Mach-O file header structure
attr_reader on_symbeg magic on_nl on_ignored_nl attr_reader on_symbeg cputype on_nl on_ignored_nl attr_reader on_symbeg cpusubtype on_nl on_ignored_nl attr_reader on_symbeg filetype on_nl on_ignored_nl # @return [Integer] the magic number
attr_reader on_symbeg cputype on_nl on_ignored_nl attr_reader on_symbeg cpusubtype on_nl on_ignored_nl attr_reader on_symbeg filetype on_nl on_ignored_nl attr_reader on_symbeg ncmds on_nl on_ignored_nl # @return [Integer] the CPU type of the Mach-O
attr_reader on_symbeg cpusubtype on_nl on_ignored_nl attr_reader on_symbeg filetype on_nl on_ignored_nl attr_reader on_symbeg ncmds on_nl on_ignored_nl attr_reader on_symbeg sizeofcmds on_nl on_ignored_nl # @return [Integer] the CPU subtype of the Mach-O
attr_reader on_symbeg filetype on_nl on_ignored_nl attr_reader on_symbeg ncmds on_nl on_ignored_nl attr_reader on_symbeg sizeofcmds on_nl on_ignored_nl attr_reader on_symbeg flags on_nl on_ignored_nl # @return [Integer] the file type of the Mach-O
attr_reader on_symbeg ncmds on_nl on_ignored_nl attr_reader on_symbeg sizeofcmds on_nl on_ignored_nl attr_reader on_symbeg flags on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end # @return [Integer] the number of load commands in the Mach-O
attr_reader on_symbeg sizeofcmds on_nl on_ignored_nl attr_reader on_symbeg flags on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_nl on_ignored_nl on_const # @return [Integer] the size of all load commands, in bytes, in the Mach-O
attr_reader on_symbeg flags on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl def # @return [Integer] the header flags associated with the Mach-O
on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl def UNK on_lparen magic on_comma cputype # @see MachOStructure::FORMAT # @api private
on_const on_op on_int on_nl on_ignored_nl def UNK on_lparen magic on_comma cputype on_comma cpusubtype on_comma filetype on_comma ncmds on_comma sizeofcmds on_comma # @see MachOStructure::SIZEOF # @api private
def UNK on_lparen magic on_comma cputype on_comma cpusubtype on_comma filetype on_comma ncmds on_comma sizeofcmds on_comma on_ignored_nl flags on_rparen on_ignored_nl on_ivar # @api private
on_ivar on_op cpusubtype on_op on_op on_const on_nl on_ivar on_op filetype on_nl on_ivar on_op ncmds on_nl on_ivar on_op sizeofcmds on_nl on_ivar # For now we're not interested in additional capability bits also to be # found in the `cpusubtype` field. We only care about the CPU sub-type.
def UNK on_lparen flag on_rparen on_ignored_nl flag on_op on_const on_lbracket flag on_rbracket on_nl on_ignored_nl UNK UNK UNK flag on_period UNK # @example # puts "this mach-o has position-independent execution" if header.flag?(:MH_PIE) # @param flag [Symbol] a mach header flag symbol # @return [Boolean] true if `flag` is present in the header's flag section
def UNK on_nl filetype on_op on_const on_op on_const on_nl end on_nl on_ignored_nl def UNK on_nl filetype on_op on_const on_op on_const # @return [Boolean] whether or not the file is of type `MH_OBJECT`
def UNK on_nl filetype on_op on_const on_op on_const on_nl end on_nl on_ignored_nl def UNK on_nl filetype on_op on_const on_op on_const # @return [Boolean] whether or not the file is of type `MH_EXECUTE`
def UNK on_nl filetype on_op on_const on_op on_const on_nl end on_nl on_ignored_nl def UNK on_nl filetype on_op on_const on_op on_const # @return [Boolean] whether or not the file is of type `MH_FVMLIB`
def UNK on_nl filetype on_op on_const on_op on_const on_nl end on_nl on_ignored_nl def UNK on_nl filetype on_op on_const on_op on_const # @return [Boolean] whether or not the file is of type `MH_CORE`
def UNK on_nl filetype on_op on_const on_op on_const on_nl end on_nl on_ignored_nl def UNK on_nl filetype on_op on_const on_op on_const # @return [Boolean] whether or not the file is of type `MH_PRELOAD`
def UNK on_nl filetype on_op on_const on_op on_const on_nl end on_nl on_ignored_nl def UNK on_nl filetype on_op on_const on_op on_const # @return [Boolean] whether or not the file is of type `MH_DYLIB`
def UNK on_nl filetype on_op on_const on_op on_const on_nl end on_nl on_ignored_nl def UNK on_nl filetype on_op on_const on_op on_const # @return [Boolean] whether or not the file is of type `MH_DYLINKER`
def UNK on_nl filetype on_op on_const on_op on_const on_nl end on_nl on_ignored_nl def UNK on_nl filetype on_op on_const on_op on_const # @return [Boolean] whether or not the file is of type `MH_BUNDLE`
def UNK on_nl filetype on_op on_const on_op on_const on_nl end on_nl on_ignored_nl def UNK on_nl filetype on_op on_const on_op on_const # @return [Boolean] whether or not the file is of type `MH_DSYM`
def UNK on_nl filetype on_op on_const on_op on_const on_nl end on_nl on_ignored_nl def UNK on_nl on_const on_period UNK on_lparen magic # @return [Boolean] whether or not the file is of type `MH_KEXT_BUNDLE`
def UNK on_nl on_const on_period UNK on_lparen magic on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl on_const on_period UNK on_lparen # @return [Boolean] true if the Mach-O has 32-bit magic, false otherwise
def UNK on_nl on_const on_period UNK on_lparen magic on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_op on_int on_op # @return [Boolean] true if the Mach-O has 64-bit magic, false otherwise
def UNK on_nl UNK on_op on_int on_op on_int on_nl end on_nl on_ignored_nl def UNK on_nl on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end # @return [Integer] the file's internal alignment
def UNK on_nl on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op magic on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_const on_lbracket magic on_rbracket # @return [Hash] a hash representation of this {MachHeader}
UNK on_const on_op on_const on_nl attr_reader on_symbeg reserved on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_nl on_ignored_nl on_const # 64-bit Mach-O file header structure
attr_reader on_symbeg reserved on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl def # @return [void]
on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl def UNK on_lparen magic on_comma cputype # @see MachOStructure::FORMAT # @api private
on_const on_op on_int on_nl on_ignored_nl def UNK on_lparen magic on_comma cputype on_comma cpusubtype on_comma filetype on_comma ncmds on_comma sizeofcmds on_comma # @see MachOStructure::SIZEOF # @api private
def UNK on_lparen magic on_comma cputype on_comma cpusubtype on_comma filetype on_comma ncmds on_comma sizeofcmds on_comma on_ignored_nl flags on_comma reserved on_rparen # @api private
def UNK on_nl on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op reserved on_comma on_ignored_nl on_rbrace on_period UNK super on_nl end on_nl end # @return [Hash] a hash representation of this {MachHeader64}
