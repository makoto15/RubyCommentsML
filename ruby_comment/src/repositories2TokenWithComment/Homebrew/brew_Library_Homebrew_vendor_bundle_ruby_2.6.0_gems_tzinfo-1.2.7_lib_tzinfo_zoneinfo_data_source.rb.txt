UNK on_lparen on_symbeg UNK on_comma on_const on_op on_const on_op on_const on_rparen if on_const on_op on_const on_period UNK on_lparen on_symbeg on_const # Use send as a workaround for an issue on JRuby 9.2.9.0 where using the # refinement causes calls to RubyCoreSupport.file_open to fail to pass the # block parameter. # # https://travis-ci.org/tzinfo/tzinfo/jobs/628812051#L1931 # https://github.com/jruby/jruby/issues/6009
class on_const on_op on_const on_nl end on_nl on_ignored_nl class on_const on_op on_const on_nl end on_nl on_ignored_nl class on_const on_op on_const # An InvalidZoneinfoDirectory exception is raised if the DataSource is # set to a specific zoneinfo path, which is not a valid zoneinfo directory # (i.e. a directory containing index files named iso3166.tab and zone.tab # as well as other timezone files).
class on_const on_op on_const on_nl end on_nl on_ignored_nl class on_const on_op on_const on_nl on_const on_op on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma # A ZoneinfoDirectoryNotFound exception is raised if no valid zoneinfo # directory could be found when checking the paths listed in # ZoneinfoDataSource.search_path. A valid zoneinfo directory is one that # contains timezone files, a country code index file named iso3166.tab and a # timezone index file named zone1970.tab or zone.tab.
class on_const on_op on_const on_nl on_const on_op on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket # A DataSource that loads data from a 'zoneinfo' directory containing # compiled "TZif" version 3 (or earlier) files in addition to iso3166.tab and # zone1970.tab or zone.tab index files. # # To have TZInfo load the system zoneinfo files, call TZInfo::DataSource.set # as follows: # # TZInfo::DataSource.set(:zoneinfo) # # To load zoneinfo files from a particular directory, pass the directory to # TZInfo::DataSource.set: # # TZInfo::DataSource.set(:zoneinfo, directory) # # Note that the platform used at runtime may limit the range of available # transition data that can be loaded from zoneinfo files. There are two # factors to consider: # # First of all, the zoneinfo support in TZInfo makes use of Ruby's Time class. # On 32-bit builds of Ruby 1.8, the Time class only supports 32-bit # timestamps. This means that only Times between 1901-12-13 20:45:52 and # 2038-01-19 03:14:07 can be represented. Furthermore, certain platforms only # allow for positive 32-bit timestamps (notably Windows), making the earliest # representable time 1970-01-01 00:00:00. # # 64-bit builds of Ruby 1.8 and all builds of Ruby 1.9 support 64-bit # timestamps. This means that there is no practical restriction on the range # of the Time class on these platforms. # # TZInfo will only load transitions that fall within the supported range of # the Time class. Any queries performed on times outside of this range may # give inaccurate results. # # The second factor concerns the zoneinfo files. Versions of the 'zic' tool # (used to build zoneinfo files) that were released prior to February 2006 # created zoneinfo files that used 32-bit integers for transition timestamps. # Later versions of zic produce zoneinfo files that use 64-bit integers. If # you have 32-bit zoneinfo files on your system, then any queries falling # outside of the range 1901-12-13 20:45:52 to 2038-01-19 03:14:07 may be # inaccurate. # # Most modern platforms include 64-bit zoneinfo files. However, Mac OS X (up # to at least 10.8.4) still uses 32-bit zoneinfo files. # # To check whether your zoneinfo files contain 32-bit or 64-bit transition # data, you can run the following code (substituting the identifier of the # zone you want to test for zone_identifier): # # TZInfo::DataSource.set(:zoneinfo) # dir = TZInfo::DataSource.get.zoneinfo_dir # File.open(File.join(dir, zone_identifier), 'r') {|f| f.read(5) } # # If the last line returns "TZif\\x00", then you have a 32-bit zoneinfo file. # If it returns "TZif2" or "TZif3" then you have a 64-bit zoneinfo file. # # If you require support for 64-bit transitions, but are restricted to 32-bit # zoneinfo support, then you may want to consider using TZInfo::RubyDataSource # instead.
on_const on_op on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period freeze on_nl on_ignored_nl on_const # The default value of ZoneinfoDataSource.search_path.
on_const on_op on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period freeze on_nl on_ignored_nl on_cvar on_op on_const on_period UNK # The default value of ZoneinfoDataSource.alternate_iso3166_tab_search_path.
on_cvar on_op on_const on_period UNK on_nl on_ignored_nl on_cvar on_op on_const on_period UNK on_nl on_ignored_nl def self on_period UNK on_nl on_cvar # Paths to be checked to find the system zoneinfo directory.
on_cvar on_op on_const on_period UNK on_nl on_ignored_nl def self on_period UNK on_nl on_cvar on_nl end on_nl on_ignored_nl def self on_period # Paths to possible alternate iso3166.tab files (used to locate the # system-wide iso3166.tab files on FreeBSD and OpenBSD).
def self on_period UNK on_nl on_cvar on_nl end on_nl on_ignored_nl def self on_period UNK on_lparen UNK on_rparen on_ignored_nl on_cvar on_op # An Array of directories that will be checked to find the system zoneinfo # directory. # # Directories are checked in the order they appear in the Array. # # The default value is ['/usr/share/zoneinfo', '/usr/share/lib/zoneinfo', '/etc/zoneinfo'].
def self on_period UNK on_lparen UNK on_rparen on_ignored_nl on_cvar on_op UNK on_lparen UNK on_comma on_const on_rparen on_nl end on_nl on_ignored_nl # Sets the directories to be checked when locating the system zoneinfo # directory. # # Can be set to an Array of directories or a String containing directories # separated with File::PATH_SEPARATOR. # # Directories are checked in the order they appear in the Array or String. # # Set to nil to revert to the default paths.
def self on_period UNK on_nl on_cvar on_nl end on_nl on_ignored_nl def self on_period UNK on_lparen UNK on_rparen on_ignored_nl on_cvar on_op # An Array of paths that will be checked to find an alternate iso3166.tab # file if one was not included in the zoneinfo directory (for example, on # FreeBSD and OpenBSD systems). # # Paths are checked in the order they appear in the array. # # The default value is ['/usr/share/misc/iso3166.tab', '/usr/share/misc/iso3166'].
def self on_period UNK on_lparen UNK on_rparen on_ignored_nl on_cvar on_op UNK on_lparen UNK on_comma on_const on_rparen on_nl end on_nl on_ignored_nl # Sets the paths to check to locate an alternate iso3166.tab file if one was # not included in the zoneinfo directory. # # Can be set to an Array of directories or a String containing directories # separated with File::PATH_SEPARATOR. # # Paths are checked in the order they appear in the array. # # Set to nil to revert to the default paths.
UNK on_symbeg zoneinfo_dir on_nl on_ignored_nl def UNK on_lparen zoneinfo_dir on_op nil on_comma UNK on_op nil on_rparen on_ignored_nl if zoneinfo_dir on_nl # The zoneinfo directory being used.
def UNK on_lparen zoneinfo_dir on_op nil on_comma UNK on_op nil on_rparen on_ignored_nl if zoneinfo_dir on_nl iso3166_tab_path on_comma zone_tab_path on_op UNK # Creates a new ZoneinfoDataSource. # # If zoneinfo_dir is specified, it will be checked and used as the source # of zoneinfo files. # # The directory must contain a file named iso3166.tab and a file named # either zone1970.tab or zone.tab. These may either be included in the root # of the directory or in a 'tab' sub-directory and named 'country.tab' and # 'zone_sun.tab' respectively (as is the case on Solaris. # # Additionally, the path to iso3166.tab can be overridden using the # alternate_iso3166_tab_path parameter. # # InvalidZoneinfoDirectory will be raised if the iso3166.tab and # zone1970.tab or zone.tab files cannot be found using the zoneinfo_dir and # alternate_iso3166_tab_path parameters. # # If zoneinfo_dir is not specified or nil, the paths referenced in # search_path are searched in order to find a valid zoneinfo directory # (one that contains zone1970.tab or zone.tab and iso3166.tab files as # above). # # The paths referenced in alternate_iso3166_tab_search_path are also # searched to find an iso3166.tab file if one of the searched zoneinfo # directories doesn't contain an iso3166.tab file. # # If no valid directory can be found by searching, ZoneinfoDirectoryNotFound # will be raised.
def UNK on_lparen identifier on_rparen on_ignored_nl UNK on_ignored_nl if on_ivar on_period UNK on_lparen identifier on_rparen on_nl path on_op on_const on_period # Returns a TimezoneInfo instance for a given identifier. # Raises InvalidTimezoneIdentifier if the timezone is not found or the # identifier is invalid.
path on_period UNK on_nl on_ignored_nl UNK on_ignored_nl on_const on_period UNK on_lparen identifier on_comma path on_rparen on_nl UNK on_const on_op UNK # Untaint path rather than identifier. We don't want to modify # identifier. identifier may also be frozen and therefore cannot be # untainted.
def UNK on_nl on_ivar on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_nl end on_nl on_ignored_nl def UNK on_nl on_lbracket # Returns an array of all the available timezone identifiers.
def UNK on_nl on_ivar on_nl end on_nl on_ignored_nl def UNK on_nl on_lbracket on_rbracket on_period freeze on_nl end on_nl on_ignored_nl def # Returns an array of all the available timezone identifiers for # data timezones (i.e. those that actually contain definitions). # # For ZoneinfoDataSource, this will always be identical to # timezone_identifers.
def UNK on_nl on_lbracket on_rbracket on_period freeze on_nl end on_nl on_ignored_nl def UNK on_lparen code on_rparen on_ignored_nl UNK on_op on_ivar # Returns an array of all the available timezone identifiers that # are links to other timezones. # # For ZoneinfoDataSource, this will always be an empty array.
def UNK on_lparen code on_rparen on_ignored_nl UNK on_op on_ivar on_lbracket code on_rbracket on_nl raise on_const on_comma on_tstring_beg on_tstring_content on_tstring_end unless # Returns a CountryInfo instance for the given ISO 3166-1 alpha-2 # country code. Raises InvalidCountryCode if the country could not be found # or the code is invalid.
def UNK on_nl on_ivar on_period UNK on_period freeze on_nl end on_nl on_ignored_nl def UNK on_nl on_tstring_beg on_tstring_content UNK on_ivar UNK # Returns an array of all the available ISO 3166-1 alpha-2 # country codes.
def UNK on_nl on_tstring_beg on_tstring_content UNK on_ivar UNK on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_nl on_tstring_beg on_tstring_content UNK self # Returns the name and information about this DataSource.
def UNK on_nl on_tstring_beg on_tstring_content UNK self on_period class UNK on_tstring_content UNK on_ivar UNK on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl # Returns internal object state as a programmer-readable string.
def self on_period UNK on_lparen path on_comma UNK on_rparen on_ignored_nl if path on_nl if path on_period UNK on_lparen on_const on_rparen # Processes a path for use as the search_path or # alternate_iso3166_tab_search_path.
def UNK on_lparen path on_comma iso3166_tab_path on_op nil on_rparen on_ignored_nl if on_const on_period UNK on_lparen path on_rparen on_nl if iso3166_tab_path # Validates a zoneinfo directory and returns the paths to the iso3166.tab # and zone1970.tab or zone.tab files if valid. If the directory is not # valid, returns nil. # # The path to the iso3166.tab file may be overriden by passing in a path. # This is treated as either absolute or relative to the current working # directory.
def UNK on_lparen UNK on_comma UNK on_comma UNK on_rparen on_ignored_nl UNK on_period UNK do on_op UNK on_op on_ignored_nl path on_op # Attempts to resolve the path to a tab file given its standard names and # tab sub-directory name (as used on Solaris).
def UNK on_nl UNK on_op self on_period class on_period UNK on_period UNK do on_op path on_op on_ignored_nl on_const on_period UNK # Finds a zoneinfo directory using search_path and # alternate_iso3166_tab_search_path. Returns the paths to the directory, # the iso3166.tab file and the zone.tab file or nil if not found.
iso3166_tab_path on_comma zone_tab_path on_op UNK on_lparen path on_rparen on_nl return path on_comma iso3166_tab_path on_comma zone_tab_path if iso3166_tab_path on_op zone_tab_path on_nl # Try without the alternate_iso3166_tab_path first.
nil on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_op on_lbracket on_rbracket on_nl on_ignored_nl on_ignored_nl UNK on_lparen nil on_comma on_lbracket # Not found.
def UNK on_nl UNK on_op on_lbracket on_rbracket on_nl on_ignored_nl on_ignored_nl UNK on_lparen nil on_comma on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg # Scans @zoneinfo_dir and returns an Array of available timezone # identifiers.
on_ignored_nl UNK on_lparen nil on_comma on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content # Ignoring particular files: # +VERSION is included on Mac OS X. # leapseconds is a list of leap seconds. # localtime is the current local timezone (may be a link). # posix, posixrules and right are directories containing other versions of the zoneinfo files. # src is a directory containing the tzdata source included on Solaris. # timeconfig is a symlink included on Slackware.
def UNK on_lparen UNK on_comma UNK on_op on_lbracket on_rbracket on_comma on_op UNK on_rparen on_ignored_nl on_const on_period UNK on_lparen UNK on_op # Recursively scans a directory of timezones, calling the passed in block # for each identifier found.
def UNK on_lparen iso3166_tab_path on_comma zone_tab_path on_rparen on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_op UNK on_nl UNK on_op on_lbracket on_rbracket # Uses the iso3166.tab and zone1970.tab or zone.tab files to build an index # of the available countries and their timezones.
on_ignored_nl on_ignored_nl on_ignored_nl UNK on_op UNK on_nl UNK on_op on_lbracket on_rbracket on_nl on_ignored_nl on_const on_period UNK on_lparen zone_tab_path on_comma on_tstring_beg # Handle standard 3 to 4 column zone.tab files as well as the 4 to 5 # column format used by Solaris. # # On Solaris, an extra column before the comment gives an optional # linked/alternate timezone identifier (or '-' if not set). # # Additionally, there is a section at the end of the file for timezones # covering regions. These are given lower-case "country" codes. The timezone # identifier column refers to a continent instead of an identifier. These # lines will be ignored by TZInfo. # # Since the last column is optional in both formats, testing for the # Solaris format is done in two passes. The first pass identifies if there # are any lines using 5 columns.
on_ignored_nl UNK on_op UNK on_nl UNK on_op on_lbracket on_rbracket on_nl on_ignored_nl on_const on_period UNK on_lparen zone_tab_path on_comma on_tstring_beg on_tstring_content on_tstring_end # The first column is allowed to be a comma separated list of country # codes, as used in zone1970.tab (introduced in tzdata 2014f). # # The first country code in the comma-separated list is the country that # contains the city the zone identifer is based on. The first country # code on each line is considered to be primary with the others # secondary. # # The zones for each country are ordered primary first, then secondary. # Within the primary and secondary groups, the zones are ordered by their # order in the file.
on_ignored_nl on_lparen UNK on_lbracket UNK on_period UNK on_rbracket on_op on_lbracket on_rbracket on_rparen on_op UNK on_nl on_ignored_nl UNK on_lbracket UNK on_op # codes will always have at least one element
on_ignored_nl if line on_op UNK on_tstring_content UNK on_nl code on_op on_backref on_nl UNK on_op on_backref on_nl UNK on_op on_lparen UNK # Handle both the two column alpha-2 and name format used in the tz # database as well as the 4 column alpha-2, alpha-3, numeric-3 and # name format used by FreeBSD and OpenBSD.
def UNK on_lparen UNK on_comma UNK on_comma UNK on_comma UNK on_op nil on_rparen on_ignored_nl UNK on_op UNK on_period UNK on_op # Converts degrees, minutes and seconds to a Rational.
