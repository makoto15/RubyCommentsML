UNK on_const on_op on_const on_nl UNK on_const on_nl on_ignored_nl def UNK on_nl UNK on_op on_const on_op on_const on_period UNK on_nl # An executor service which runs all operations on the current thread, # blocking as necessary. Operations are performed in the order they are # received and no two operations can be performed simultaneously. # # This executor service exists mainly for testing an debugging. When used # it immediately runs every `#post` operation on the current thread, blocking # that thread until the operation is complete. This can be very beneficial # during testing because it makes all operations deterministic. # # @note Intended for use primarily in testing and debugging.
def UNK on_nl UNK on_op on_const on_op on_const on_period UNK on_nl end on_nl on_ignored_nl def UNK on_lparen on_op UNK UNK # Creates a new executor
def UNK on_lparen on_op UNK UNK on_op UNK on_rparen on_ignored_nl UNK on_const on_period UNK on_lparen UNK UNK UNK on_rparen UNK # @!macro executor_service_method_post
def on_op on_lparen UNK on_rparen on_ignored_nl UNK on_lparen on_op UNK on_rparen on_nl UNK on_nl end on_nl on_ignored_nl def UNK on_nl # @!macro executor_service_method_left_shift
def UNK on_nl on_op UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_nl end on_nl on_ignored_nl def UNK on_nl # @!macro executor_service_method_running_question
def UNK on_nl UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_period UNK on_nl end on_nl on_ignored_nl def UNK # @!macro executor_service_method_shuttingdown_question
def UNK on_nl UNK on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_period UNK on_nl UNK on_nl end # @!macro executor_service_method_shutdown_question
def UNK on_nl UNK on_period UNK on_nl UNK on_nl end on_nl UNK UNK UNK UNK UNK UNK on_nl on_ignored_nl def # @!macro executor_service_method_shutdown
def UNK on_lparen UNK on_op UNK on_rparen on_ignored_nl UNK on_period UNK on_lparen UNK on_rparen on_nl end on_nl end on_nl end # @!macro executor_service_method_wait_for_termination
