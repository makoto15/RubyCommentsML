on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end # frozen_string_literal: true
formulae_to_install on_period UNK do on_op a on_comma b on_op on_ignored_nl if on_op a on_period UNK on_op b on_period UNK on_nl # Sort keg-only before non-keg-only formulae to avoid any needless conflicts # with outdated, non-keg-only versions of formulae being upgraded.
UNK on_period UNK on_lparen on_op on_symbeg UNK on_rparen on_nl on_ignored_nl fi on_period UNK on_nl fi on_period UNK on_nl rescue on_const # first we unlink the currently active keg for this formula otherwise it is # possible for the existing build to interfere with the build we are about to # do! Seriously, it happens!
UNK on_nl rescue on_const on_op e on_nl ofail e on_nl rescue on_const on_op e on_nl e on_period UNK on_nl puts # We already attempted to upgrade f as part of the dependency tree of # another formula. In that case, don't generate an error, just move on.
UNK on_ignored_nl UNK on_period UNK on_lparen on_op on_symbeg UNK on_rparen unless f on_period UNK on_nl rescue on_nl UNK on_nl end # restore previous installation state if build failed
def UNK on_lparen a on_comma b on_rparen on_ignored_nl if a on_period UNK on_ignored_nl on_op UNK on_ignored_nl on_op UNK on_lbrace on_op # @private
if upgradeable_dependents on_period UNK on_nl ohai on_tstring_beg on_tstring_content on_tstring_end unless args on_period dry_run? on_nl else on_ignored_nl plural on_op on_tstring_beg on_tstring_content # Print the upgradable dependents.
UNK on_tstring_beg on_tstring_content on_tstring_end unless args on_period dry_run? on_nl UNK on_op on_const on_period UNK on_lparen on_symbeg UNK on_rparen do on_op # Assess the dependents tree again now we've upgraded.
if UNK on_period UNK on_nl count on_op UNK on_period count on_nl plural on_op on_tstring_beg on_tstring_content on_tstring_end on_period pluralize on_lparen UNK # Print the pinned dependents.
if reinstallable_broken_dependents on_period UNK on_nl ohai on_tstring_beg on_tstring_content on_tstring_end on_nl else on_ignored_nl count on_op reinstallable_broken_dependents on_period count on_nl plural on_op # Print the broken dependents.
UNK on_nl rescue on_const on_op e on_nl ofail e on_nl rescue on_const on_op e on_nl e on_period UNK on_nl puts # We already attempted to reinstall f as part of the dependency tree of # another formula. In that case, don't generate an error, just move on.
