on_ignored_nl UNK UNK on_nl UNK UNK on_lparen UNK on_comma on_op UNK on_rparen on_ignored_nl UNK UNK UNK on_lparen UNK on_comma on_op # frozen_string_literal: true
UNK UNK on_lparen UNK on_comma on_op UNK on_rparen on_ignored_nl UNK UNK UNK on_lparen UNK on_comma on_op UNK on_rparen on_nl UNK # Returns a new hash with +self+ and +other_hash+ merged recursively. # # h1 = { a: true, b: { c: [1, 2, 3] } } # h2 = { a: false, b: { x: [3, 4, 5] } } # # h1.deep_merge(h2) # => { a: false, b: { c: [1, 2, 3], x: [3, 4, 5] } } # # Like with Hash#merge in the standard library, a block can be provided # to merge values: # # h1 = { a: 100, b: 200, c: { c1: 100 } } # h2 = { b: 250, c: { c1: 200 } } # h1.deep_merge(h2) { |key, this_val, other_val| this_val + other_val } # # => { a: 100, b: 450, c: { c1: 300 } }
UNK UNK on_lparen UNK on_comma on_op UNK on_rparen on_ignored_nl UNK on_lparen UNK on_rparen UNK on_op UNK on_comma UNK on_comma UNK # Same as +deep_merge+, but modifies +self+.
