UNK on_const on_nl UNK UNK identifier on_nl on_ignored_nl UNK UNK description on_nl on_ignored_nl UNK on_op UNK on_nl UNK UNK UNK # A Timezone within a Country. This contains extra information about the # Timezone that is specific to the Country (a Timezone could be used by # multiple countries).
UNK UNK identifier on_nl on_ignored_nl UNK UNK description on_nl on_ignored_nl UNK on_op UNK on_nl UNK UNK UNK UNK UNK on_nl # The zone identifier.
UNK UNK description on_nl on_ignored_nl UNK on_op UNK on_nl UNK UNK UNK UNK UNK on_nl on_ignored_nl def UNK on_lparen identifier # A description of this timezone in relation to the country, e.g. # "Eastern Time". This is usually nil for countries having only a single # Timezone.
UNK UNK UNK UNK UNK on_nl on_ignored_nl def UNK on_lparen identifier on_comma UNK on_comma UNK on_comma description on_op nil on_rparen # Creates a new CountryTimezone with a timezone identifier, latitude, # longitude and description. The latitude and longitude are specified as # rationals - a numerator and denominator. For performance reasons, the # numerators and denominators must be specified in their lowest form. # # For use internally within TZInfo. # # @!visibility private
def UNK on_lparen identifier on_comma UNK on_comma UNK on_comma description on_op nil on_rparen on_ignored_nl UNK on_lparen identifier on_comma UNK on_comma # Creates a new CountryTimezone with a timezone identifier, latitude, # longitude and description. The latitude and longitude must be specified # as instances of Rational. # # CountryTimezone instances should normally only be constructed when # creating new DataSource implementations.
def UNK on_lparen identifier on_comma UNK on_comma UNK on_comma on_ignored_nl UNK on_comma UNK on_comma description on_op nil on_rparen on_ivar on_op # Creates a new CountryTimezone with a timezone identifier, latitude, # longitude and description. The latitude and longitude are specified as # rationals - a numerator and denominator. For performance reasons, the # numerators and denominators must be specified in their lowest form. # # @!visibility private
on_ivar on_op identifier on_nl on_ignored_nl UNK UNK on_period UNK on_lparen on_const on_rparen on_nl on_ivar on_op UNK on_nl UNK on_ignored_nl on_ivar #:nodoc:
def UNK on_nl on_const on_period UNK on_lparen on_ivar on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl description on_op UNK on_period # The Timezone (actually a TimezoneProxy for performance reasons).
def UNK on_nl description on_op UNK on_period UNK on_lparen UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_ivar # if description is not nil, this method returns description; otherwise it # returns timezone.friendly_identifier(true).
def UNK on_nl UNK on_ivar on_nl result on_op on_const on_period UNK on_lparen on_ivar on_comma on_ivar on_rparen on_nl UNK result UNK # The latitude of this timezone in degrees as a Rational.
UNK on_ivar on_nl result on_op on_const on_period UNK on_lparen on_ivar on_comma on_ivar on_rparen on_nl UNK result UNK UNK on_nl on_ivar # Thread-safety: It is possible that the value of @latitude may be # calculated multiple times in concurrently executing threads. It is not # worth the overhead of locking to ensure that @latitude is only # calculated once.
def UNK on_nl UNK on_ivar on_nl result on_op on_const on_period UNK on_lparen on_ivar on_comma on_ivar on_rparen on_nl UNK result UNK # The longitude of this timezone in degrees as a Rational.
UNK on_ivar on_nl result on_op on_const on_period UNK on_lparen on_ivar on_comma on_ivar on_rparen on_nl UNK result UNK UNK on_nl on_ivar # Thread-safety: It is possible that the value of @longitude may be # calculated multiple times in concurrently executing threads. It is not # worth the overhead of locking to ensure that @longitude is only # calculated once.
def on_op on_lparen ct on_rparen on_ignored_nl ct on_period UNK on_lparen on_const on_rparen on_op on_ignored_nl identifier on_op ct on_period identifier on_op # Returns true if and only if the given CountryTimezone is equal to the # current CountryTimezone (has the same identifer, latitude, longitude # and description).
def UNK on_lparen ct on_rparen on_ignored_nl UNK on_op ct on_nl end on_nl on_ignored_nl def hash on_nl on_ivar on_period hash on_op # Returns true if and only if the given CountryTimezone is equal to the # current CountryTimezone (has the same identifer, latitude, longitude # and description).
def hash on_nl on_ivar on_period hash on_op on_ignored_nl on_lparen on_ivar on_op on_ivar on_period UNK on_period hash on_op on_ivar on_period UNK # Returns a hash of this CountryTimezone.
def UNK on_nl UNK UNK UNK UNK on_period UNK UNK UNK UNK on_ivar UNK UNK on_nl end on_nl end on_nl # Returns internal object state as a programmer-readable string.
