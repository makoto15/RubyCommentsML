on_ignored_nl UNK on_const on_nl def UNK on_nl UNK on_lparen on_op on_symbeg UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl # frozen_string_literal: true
def UNK on_nl UNK on_lparen on_op on_symbeg UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_lparen on_op on_symbeg # Returns a new hash with all keys converted to strings. # # hash = { name: 'Rob', age: '28' } # # hash.stringify_keys # # => {"name"=>"Rob", "age"=>"28"}
def UNK on_nl UNK on_lparen on_op on_symbeg UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_lbrace on_op key # Destructively converts all keys to strings. Same as # +stringify_keys+, but modifies +self+.
def UNK on_nl UNK on_lbrace on_op key on_op key on_period UNK UNK key on_rbrace on_nl end on_nl UNK on_symbeg UNK # Returns a new hash with all keys converted to symbols, as long as # they respond to +to_sym+. # # hash = { 'name' => 'Rob', 'age' => '28' } # # hash.symbolize_keys # # => {:name=>"Rob", :age=>"28"}
def UNK on_nl UNK on_lbrace on_op key on_op key on_period UNK UNK key on_rbrace on_nl end on_nl UNK on_symbeg UNK # Destructively converts all keys to symbols, as long as they respond # to +to_sym+. Same as +symbolize_keys+, but modifies +self+.
def UNK on_lparen on_op UNK on_rparen on_ignored_nl UNK on_period UNK on_nl UNK UNK on_op UNK on_op on_ignored_nl UNK UNK on_period # Validates all keys in a hash match <tt>*valid_keys</tt>, raising # +ArgumentError+ on a mismatch. # # Note that keys are treated differently than HashWithIndifferentAccess, # meaning that string and symbol keys will not match. # # { name: 'Rob', years: '28' }.assert_valid_keys(:name, :age) # => raises "ArgumentError: Unknown key: :years. Valid keys are: :name, :age" # { name: 'Rob', age: '28' }.assert_valid_keys('name', 'age') # => raises "ArgumentError: Unknown key: :name. Valid keys are: 'name', 'age'" # { name: 'Rob', age: '28' }.assert_valid_keys(:name, :age) # => passes, raises nothing
def UNK on_lparen on_op block on_rparen on_ignored_nl UNK on_lparen UNK on_comma on_op block on_rparen on_nl end on_nl on_ignored_nl def UNK # Returns a new hash with all keys converted by the block operation. # This includes the keys from the root hash and from all # nested hashes and arrays. # # hash = { person: { name: 'Rob', age: '28' } } # # hash.deep_transform_keys{ |key| key.to_s.upcase } # # => {"PERSON"=>{"NAME"=>"Rob", "AGE"=>"28"}}
def UNK on_lparen on_op block on_rparen on_ignored_nl UNK on_lparen UNK on_comma on_op block on_rparen on_nl end on_nl on_ignored_nl def UNK # Destructively converts all keys by using the block operation. # This includes the keys from the root hash and from all # nested hashes and arrays.
def UNK on_nl UNK on_lparen on_op on_symbeg UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_lparen on_op on_symbeg # Returns a new hash with all keys converted to strings. # This includes the keys from the root hash and from all # nested hashes and arrays. # # hash = { person: { name: 'Rob', age: '28' } } # # hash.deep_stringify_keys # # => {"person"=>{"name"=>"Rob", "age"=>"28"}}
def UNK on_nl UNK on_lparen on_op on_symbeg UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_lbrace on_op key # Destructively converts all keys to strings. # This includes the keys from the root hash and from all # nested hashes and arrays.
def UNK on_nl UNK on_lbrace on_op key on_op key on_period UNK UNK key on_rbrace on_nl end on_nl on_ignored_nl def UNK # Returns a new hash with all keys converted to symbols, as long as # they respond to +to_sym+. This includes the keys from the root hash # and from all nested hashes and arrays. # # hash = { 'person' => { 'name' => 'Rob', 'age' => '28' } } # # hash.deep_symbolize_keys # # => {:person=>{:name=>"Rob", :age=>"28"}}
def UNK on_nl UNK on_lbrace on_op key on_op key on_period UNK UNK key on_rbrace on_nl end on_nl on_ignored_nl UNK on_nl # Destructively converts all keys to symbols, as long as they respond # to +to_sym+. This includes the keys from the root hash and from all # nested hashes and arrays.
def UNK on_lparen object on_comma on_op block on_rparen on_ignored_nl UNK object on_nl UNK on_const on_nl object on_period UNK on_lparen on_lbrace # support methods for deep transforming nested hashes and arrays
