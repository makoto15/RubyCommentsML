UNK on_const on_op on_const on_nl UNK UNK on_nl UNK on_nl UNK on_op on_const on_period UNK on_nl end on_nl on_ignored_nl UNK # An executor service which runs all operations on a new thread, blocking # until it completes. Operations are performed in the order they are received # and no two operations can be performed simultaneously. # # This executor service exists mainly for testing an debugging. When used it # immediately runs every `#post` operation on a new thread, blocking the # current thread until the operation is complete. This is similar to how the # ImmediateExecutor works, but the operation has the full stack of the new # thread at its disposal. This can be helpful when the operations will spawn # more operations on the same executor and so on - such a situation might # overflow the single stack in case of an ImmediateExecutor, which is # inconsistent with how it would behave for a threaded executor. # # @note Intended for use primarily in testing and debugging.
UNK UNK on_nl UNK on_nl UNK on_op on_const on_period UNK on_nl end on_nl on_ignored_nl UNK UNK UNK on_op UNK UNK # Creates a new executor
UNK UNK UNK on_op UNK UNK on_op UNK UNK on_ignored_nl UNK on_const on_period UNK UNK UNK UNK UNK UNK UNK # @!macro executor_service_method_post
