on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end unless on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end # frozen_string_literal: true
UNK UNK on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl on_const on_op UNK on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep #:nodoc:
def UNK on_lparen data on_rparen on_ignored_nl if data on_period UNK on_lparen UNK UNK on_rparen on_nl data on_op data on_period UNK # Parse an XML Document string or IO into a simple hash using Java's jdom. # data:: # XML Document string or IO to parse
on_ivar on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma UNK on_rparen on_nl on_ivar on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma UNK # secure processing of java xml # https://archive.is/9xcQQ
def UNK on_lparen hash on_comma element on_comma depth on_rparen on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end if depth on_op on_int on_nl UNK # Convert an XML element and merge into the hash # # hash:: # Hash to merge the converted element into. # element:: # XML element to merge into hash
def UNK on_lparen element on_comma depth on_rparen on_ignored_nl hash on_op UNK on_lparen element on_rparen on_nl on_ignored_nl child_nodes on_op element on_period # Actually converts an XML document element into a data structure. # # element:: # The document element to be collapsed.
def UNK on_lparen hash on_comma element on_rparen on_ignored_nl UNK on_lparen hash on_rparen on_nl UNK on_op UNK on_lparen element on_rparen on_nl # Merge all the texts of an element into the hash # # hash:: # Hash to add the converted element to. # element:: # XML element whose texts are to me merged into the hash
UNK on_lparen hash on_comma on_const on_comma UNK on_period UNK on_rparen on_nl end on_nl end on_nl on_ignored_nl def UNK on_lparen hash # must use value to prevent double-escaping
def UNK on_lparen hash on_comma key on_comma value on_rparen on_ignored_nl if hash on_period UNK on_lparen key on_rparen on_nl if hash # Adds a new key/value pair to an existing Hash. If the key to be added # already exists and the existing value associated with key is not # an Array, it will be wrapped in an Array. Then the new value is # appended to that Array. # # hash:: # Hash to add key/value pair to. # key:: # Key to be added. # value:: # Value to be associated with key.
def UNK on_lparen element on_rparen on_ignored_nl UNK on_op UNK UNK on_nl UNK on_op element on_period UNK on_nl on_lparen on_int on_op # Converts the attributes array of an XML element into a hash. # Returns an empty Hash if node has no attributes. # # element:: # XML element to extract attributes from.
def UNK on_lparen element on_rparen on_ignored_nl UNK on_op on_lbracket on_rbracket on_nl child_nodes on_op element on_period child_nodes on_nl on_lparen on_int on_op # Determines if a document element has text content # # element:: # XML element to be checked.
def UNK on_lparen element on_rparen on_ignored_nl UNK on_op on_op on_tstring_beg on_tstring_end on_nl child_nodes on_op element on_period child_nodes on_nl on_lparen on_int # Determines if a document element has text content # # element:: # XML element to be checked.
