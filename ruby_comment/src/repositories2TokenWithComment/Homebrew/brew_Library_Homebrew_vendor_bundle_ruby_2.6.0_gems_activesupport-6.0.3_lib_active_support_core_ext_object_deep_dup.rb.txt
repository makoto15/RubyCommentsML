on_ignored_nl UNK UNK UNK UNK on_nl on_ignored_nl UNK UNK on_nl UNK deep_dup on_nl UNK on_op UNK on_op UNK on_nl end # frozen_string_literal: true
UNK deep_dup on_nl UNK on_op UNK on_op UNK on_nl end on_nl end on_nl on_ignored_nl UNK UNK on_nl UNK deep_dup on_nl # Returns a deep copy of object if it's duplicable. If it's # not duplicable, returns +self+. # # object = Object.new # dup = object.deep_dup # dup.instance_variable_set(:@a, 1) # # object.instance_variable_defined?(:@a) # => false # dup.instance_variable_defined?(:@a) # => true
UNK deep_dup on_nl UNK UNK on_op UNK deep_dup UNK on_nl end on_nl end on_nl on_ignored_nl UNK UNK on_nl UNK deep_dup # Returns a deep copy of array. # # array = [1, [2, 3]] # dup = array.deep_dup # dup[1][2] = 4 # # array[1][2] # => nil # dup[1][2] # => 4
UNK deep_dup on_nl UNK on_op UNK on_nl UNK UNK on_op key UNK UNK on_op on_ignored_nl UNK key UNK UNK on_op # Returns a deep copy of hash. # # hash = { a: { b: 'b' } } # dup = hash.deep_dup # dup[:a][:c] = 'c' # # hash[:a][:c] # => nil # dup[:a][:c] # => "c"
