on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end UNK on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl on_ignored_nl UNK on_op UNK on_lparen on_tstring_beg on_tstring_content # frozen_string_literal: true
on_ignored_nl on_const on_comma on_const on_comma on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_lparen on_op UNK UNK # no backtrace thanks
on_const on_comma on_const on_comma on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_lparen on_op UNK UNK on_rparen # check ruby version before requiring any modules.
if on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_period UNK on_nl end on_nl on_ignored_nl # Load Bundler first of all if it's needed to avoid Gem version conflicts.
UNK on_const on_op on_const UNK end on_nl on_ignored_nl UNK on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl rescue on_const on_op e on_nl # Also define here so we can rescue regardless of location.
on_ignored_nl UNK on_op on_const on_period UNK on_nl UNK on_op UNK on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_tstring_end on_nl help_flag # restore default CTRL-C handler
help_flag on_op UNK on_nl UNK on_op cmd on_op on_op UNK on_period UNK on_lparen UNK on_rparen on_nl cmd on_op on_const on_period # Command-style help: `help <cmd>` is fine, but `<cmd> help` is not.
UNK on_period UNK on_lparen on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_period UNK on_lparen on_const on_op on_tstring_beg on_tstring_content on_tstring_end # Add SCM wrappers.
UNK on_period UNK on_lparen on_const on_period UNK on_rparen on_nl on_ignored_nl on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op UNK on_nl end # Add contributed commands to PATH before checking.
on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op UNK on_nl end on_nl on_ignored_nl if on_lparen UNK on_op help_flag on_rparen on_op cmd # External commands expect a normal PATH
if on_lparen UNK on_op help_flag on_rparen on_op cmd on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_op # Usage instructions should be displayed if and only if one of: # - a help flag is passed AND a command is matched # - a help flag is passed AND there is no command specified # - no arguments are passed # - if cmd is Cask, let Cask handle the help command instead
end on_nl on_ignored_nl if UNK on_op on_const on_period UNK on_lparen cmd on_rparen on_nl on_const on_period UNK on_const on_period UNK on_lparen # `Homebrew.help` never returns, except for unknown commands.
on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen if help_flag on_nl UNK on_op on_lbracket on_rbracket on_nl UNK on_op on_const on_period # Unset HOMEBREW_HELP to avoid confusing the tap
exit on_int on_nl rescue on_const on_op e on_nl on_const on_op on_const on_period UNK on_lparen e on_rparen on_nl e on_period UNK # seemingly a newline is typical
UNK e on_nl if UNK on_op UNK on_lparen on_const on_op on_const on_rparen on_op on_ignored_nl on_op on_const on_op on_const on_period UNK # rubocop:disable Lint/RescueException
