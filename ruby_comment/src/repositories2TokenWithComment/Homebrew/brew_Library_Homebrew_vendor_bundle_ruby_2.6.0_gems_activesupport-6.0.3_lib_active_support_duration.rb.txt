on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end # frozen_string_literal: true
class on_const on_nl class on_const on_op on_const UNK on_symbeg value on_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK # Provides accurate date and time measurements using Date#advance and # Time#advance, respectively. It mainly supports the methods on Numeric. # # 1.month.ago # equivalent to Time.now.advance(months: -1)
UNK on_symbeg value on_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_label on_symbeg value on_nl on_ignored_nl def #:nodoc:
on_const on_op on_int on_ignored_nl on_const on_op on_lbrace on_ignored_nl on_label on_int on_comma on_ignored_nl on_label on_const on_comma on_ignored_nl on_label on_const on_comma on_ignored_nl # 1/12 of a gregorian year
on_ignored_nl on_const on_op on_lbrace on_ignored_nl on_label on_int on_comma on_ignored_nl on_label on_const on_comma on_ignored_nl on_label on_const on_comma on_ignored_nl on_label on_const on_comma # length of a gregorian year (365.2425 days)
def UNK on_lparen UNK on_rparen on_ignored_nl parts on_op on_const on_period new on_lparen UNK on_rparen on_period UNK on_nl new on_lparen UNK # Creates a new Duration from string formatted according to ISO 8601 Duration. # # See {ISO 8601}[https://en.wikipedia.org/wiki/ISO_8601#Durations] for more information. # This method allows negative parts to be present in pattern. # If invalid string is provided, it will raise +ActiveSupport::Duration::ISO8601Parser::ParsingError+.
other on_period UNK on_lparen on_const on_rparen on_nl UNK on_op on_const on_nl UNK on_nl end on_nl on_ignored_nl def seconds on_lparen value #:nodoc:
new on_lparen value on_comma on_lbracket on_lbracket on_symbeg seconds on_comma value on_rbracket on_rbracket on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen #:nodoc:
new on_lparen value on_op on_const on_comma on_lbracket on_lbracket on_symbeg UNK on_comma value on_rbracket on_rbracket on_rparen on_nl end on_nl on_ignored_nl def #:nodoc:
new on_lparen value on_op on_const on_comma on_lbracket on_lbracket on_symbeg UNK on_comma value on_rbracket on_rbracket on_rparen on_nl end on_nl on_ignored_nl def #:nodoc:
new on_lparen value on_op on_const on_comma on_lbracket on_lbracket on_symbeg UNK on_comma value on_rbracket on_rbracket on_rparen on_nl end on_nl on_ignored_nl def #:nodoc:
new on_lparen value on_op on_const on_comma on_lbracket on_lbracket on_symbeg UNK on_comma value on_rbracket on_rbracket on_rparen on_nl end on_nl on_ignored_nl def #:nodoc:
new on_lparen value on_op on_const on_comma on_lbracket on_lbracket on_symbeg UNK on_comma value on_rbracket on_rbracket on_rparen on_nl end on_nl on_ignored_nl def #:nodoc:
new on_lparen value on_op on_const on_comma on_lbracket on_lbracket on_symbeg UNK on_comma value on_rbracket on_rbracket on_rparen on_nl end on_nl on_ignored_nl def #:nodoc:
def UNK on_lparen value on_rparen on_ignored_nl parts on_op on_lbrace on_rbrace on_nl UNK on_op value on_period UNK on_lparen on_int on_rparen on_nl # Creates a new Duration from a seconds value that is converted # to the individual parts: # # ActiveSupport::Duration.build(31556952).parts # => {:years=>1} # ActiveSupport::Duration.build(2716146).parts # => {:months=>1, :days=>1} #
on_ivar on_comma on_ivar on_op value on_comma parts on_period UNK on_nl on_ivar on_period UNK on_op on_int on_nl on_ivar on_period UNK on_lbrace #:nodoc:
UNK other on_nl UNK on_const on_nl on_lbracket other on_comma self on_rbracket on_nl UNK on_const on_nl on_lbracket on_const on_period new on_lparen #:nodoc:
def on_op on_lparen other on_rparen on_ignored_nl if on_const on_op other on_nl value on_op other on_period value on_nl elsif on_const on_op # Compares one Duration with another or a Numeric to this Duration. # Numeric values are treated as seconds.
def on_op on_lparen other on_rparen on_ignored_nl if on_const on_op other on_nl parts on_op on_ivar on_period UNK on_nl other on_period parts # Adds another Duration or a Numeric to this Duration. Numeric values # are treated as seconds.
def on_op on_lparen other on_rparen on_ignored_nl self on_op on_lparen on_op other on_rparen on_nl end on_nl on_ignored_nl def on_op on_lparen other # Subtracts another Duration or a Numeric from this Duration. Numeric # values are treated as seconds.
def on_op on_lparen other on_rparen on_ignored_nl if on_const on_op other on_op on_const on_op other on_nl on_const on_period new on_lparen value # Multiplies this Duration by a Numeric and returns a new Duration.
def on_op on_lparen other on_rparen on_ignored_nl if on_const on_op other on_nl on_const on_period new on_lparen value on_op other on_period value # Divides this Duration by a Numeric and returns a new Duration.
def on_op on_lparen other on_rparen on_ignored_nl if on_const on_op other on_op on_const on_op other on_nl on_const on_period UNK on_lparen value # Returns the modulo of this Duration by another Duration or Numeric. # Numeric values are treated as seconds.
on_const on_period new on_lparen on_op value on_comma parts on_period map on_lbrace on_op type on_comma number on_op on_lbracket type on_comma on_op #:nodoc:
on_const on_op klass on_op value on_period UNK on_lparen klass on_rparen on_nl end on_nl UNK on_symbeg UNK on_symbeg UNK on_nl on_ignored_nl #:nodoc:
on_const on_op klass on_op value on_period UNK on_lparen klass on_rparen on_nl end on_nl on_ignored_nl def on_op on_lparen other on_rparen on_ignored_nl # :nodoc:
def on_op on_lparen other on_rparen on_ignored_nl if on_const on_op other on_nl other on_period value on_op value on_nl else on_ignored_nl other # Returns +true+ if +other+ is also a Duration instance with the # same +value+, or if <tt>other == value</tt>.
def UNK on_nl on_ivar on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_period UNK on_nl end on_nl on_ignored_nl # Returns the amount of seconds a duration covers as a string. # For more information check to_i method. # # 1.day.to_s # => "86400"
def UNK on_nl on_ivar on_period UNK on_nl end on_nl on_ignored_nl def UNK on_lparen other on_rparen on_ignored_nl on_const on_op other on_op # Returns the number of seconds that this Duration represents. # # 1.minute.to_i # => 60 # 1.hour.to_i # => 3600 # 1.day.to_i # => 86400 # # Note that this conversion makes some assumptions about the # duration of some periods, e.g. months are always 1/12 of year # and years are 365.2425 days: # # # equivalent to (1.year / 12).to_i # 1.month.to_i # => 2629746 # # # equivalent to 365.2425.days.to_i # 1.year.to_i # => 31556952 # # In such cases, Ruby's core # Date[https://ruby-doc.org/stdlib/libdoc/date/rdoc/Date.html] and # Time[https://ruby-doc.org/stdlib/libdoc/time/rdoc/Time.html] should be used for precision # date and time arithmetic.
def UNK on_lparen other on_rparen on_ignored_nl on_const on_op other on_op other on_period value on_period UNK on_lparen value on_rparen on_nl end # Returns +true+ if +other+ is also a Duration instance, which has the # same parts as this one.
def since on_lparen time on_op on_op on_const on_period UNK on_rparen on_ignored_nl UNK on_lparen on_int on_comma time on_rparen on_nl end on_nl # Calculates a new Time or Date that is as far in the future # as this Duration represents.
def UNK on_lparen time on_op on_op on_const on_period UNK on_rparen on_ignored_nl UNK on_lparen on_op on_int on_comma time on_rparen on_nl end # Calculates a new Time or Date that is as far in the past # as this Duration represents.
UNK on_tstring_beg on_embexpr_beg value on_embexpr_end on_tstring_content on_tstring_end if parts on_period UNK on_nl on_ignored_nl parts on_period on_ignored_nl UNK on_lbrace on_op UNK #:nodoc:
UNK on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen UNK on_lparen UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_comma UNK #:nodoc:
UNK on_lparen UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_comma UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_rparen on_nl end on_nl on_ignored_nl #:nodoc:
UNK on_period map on_op on_lbrace on_tstring_beg on_tstring_content on_tstring_end on_op on_ivar on_comma on_tstring_beg on_tstring_content on_tstring_end on_op on_ivar on_rbrace on_nl end on_nl #:nodoc:
def UNK on_lparen on_label UNK on_rparen on_ignored_nl on_const on_period new on_lparen self on_comma on_label UNK on_rparen on_period UNK on_nl end # Build ISO 8601 Duration string for this duration. # The +precision+ parameter can be used to limit seconds' precision of duration.
