on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl class on_const on_op on_const # frozen_string_literal: true
class on_const on_op on_const on_nl def audit_formula on_lparen _node on_comma _class_node on_comma _parent_class_node on_comma UNK on_rparen on_ignored_nl on_lbracket on_symbeg UNK # This cop checks for various miscellaneous Homebrew coding styles.
next unless comment on_op on_regexp_beg on_tstring_content on_regexp_end on_nl on_ignored_nl problem on_tstring_beg on_tstring_content on_embexpr_beg on_const on_period UNK on_lparen on_int on_rparen on_embexpr_end # Commented-out depends_on
UNK do on_op comment on_op on_ignored_nl next if comment on_op on_regexp_beg on_tstring_content on_regexp_end on_nl on_ignored_nl problem on_tstring_beg on_tstring_content on_embexpr_beg on_const # Citation and tag comments from third-party taps
find_instance_method_call on_lparen body_node on_comma on_symbeg build on_comma on_symbeg UNK on_rparen do on_ignored_nl problem on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl find_instance_method_call # Use of build.with? implies options, which are forbidden in homebrew/core
return unless UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl find_method_with_args on_lparen body_node on_comma on_symbeg UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen # Enforce use of OpenMPI for MPI dependency in core
UNK do on_op UNK on_op on_ignored_nl UNK on_period UNK on_lparen node on_period UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end # The dependency nodes may need to be re-sorted because of this
find_instance_method_call on_lparen body_node on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma UNK on_rparen do on_op method_node on_op on_ignored_nl problem on_tstring_beg on_tstring_content on_embexpr_beg method_node # FileUtils is included in Formula # encfs modifies a file with this name, so check for some leading characters
UNK on_lparen body_node on_comma on_symbeg UNK on_rparen do on_op node on_op on_ignored_nl UNK on_op node on_period UNK on_period UNK on_period # Check for long inreplace block vars
find_every_method_call_by_name on_lparen body_node on_comma on_symbeg system on_rparen on_period each do on_op method on_op on_ignored_nl param on_op parameters on_lparen method on_rparen # Avoid hard-coding compilers
UNK on_lparen body_node on_comma on_symbeg UNK on_rparen do on_op p on_op on_ignored_nl next unless match on_op regex_match_group on_lparen p on_comma # Prefer formula path shortcuts in strings
next if on_ivar on_period UNK on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl on_ignored_nl UNK on_comma UNK on_op parameters on_lparen method_node on_rparen # Skip Kibana: npm cache edge (see formula for more details)
UNK on_symbeg UNK on_comma UNK on_nl on_ignored_sp on_tstring_content UNK end on_nl end on_nl on_ignored_nl UNK on_const on_nl class on_const on_op # Node Pattern search for Language::Node
find_every_method_call_by_name on_lparen body_node on_comma on_symbeg system on_rparen on_period each do on_op method on_op on_ignored_nl next if on_ivar on_period UNK on_lparen # Avoid build-time checks in homebrew/core
