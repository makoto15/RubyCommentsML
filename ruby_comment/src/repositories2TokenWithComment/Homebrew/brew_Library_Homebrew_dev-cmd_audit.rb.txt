on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end # frozen_string_literal: true
UNK on_op on_const on_period UNK on_lparen UNK on_comma options on_rparen unless args on_period UNK on_nl on_ignored_nl new_formula_problem_lines on_op on_lbracket on_rbracket # Check style in a single batch run up front for performance
on_ivar on_op options on_lbracket on_symbeg UNK on_rbracket on_nl on_ivar on_op formula on_period tap on_op UNK on_op options on_lbracket on_symbeg UNK # Accept precomputed style offense results, for efficiency
on_ivar on_op formula on_period tap on_op UNK on_op options on_lbracket on_symbeg UNK on_rbracket on_nl on_ivar on_op on_lbracket on_rbracket on_nl on_ivar # Allow the formula tap to be set as homebrew/core, for testing purposes
problem on_tstring_beg on_tstring_content on_tstring_end if text on_period UNK on_op on_op text on_period UNK on_nl on_ignored_nl problem on_tstring_beg on_tstring_content on_tstring_end if # TODO: check could be in RuboCop
problem on_tstring_beg on_tstring_content on_tstring_end if text on_period UNK on_op on_op text on_period UNK on_nl on_ignored_nl if text on_period to_s on_period # TODO: check could be in RuboCop
if text on_period to_s on_period match? on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl problem on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl # TODO: check could be in RuboCop
UNK on_op if formula on_period tap on_nl on_tstring_beg on_embexpr_beg formula on_period tap on_embexpr_end on_tstring_content on_embexpr_beg formula on_period name on_embexpr_end on_tstring_end # build this ourselves as we want e.g. homebrew/core to be present
on_ivar on_op on_const on_period aliases on_op on_const on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl return unless on_ivar on_nl # core aliases + tap alias names + tap alias full name
spec on_period UNK on_period each do on_op dep on_op on_ignored_nl begin on_ignored_nl dep_f on_op dep on_period UNK on_nl rescue on_const # Check for things we don't like to depend on. # We allow non-Homebrew installs whenever possible.
next on_nl rescue on_const on_nl problem on_tstring_beg on_tstring_content on_embexpr_beg dep on_period name on_period inspect on_embexpr_end on_tstring_content on_tstring_end on_nl next on_nl # Don't complain about missing cross-tap dependencies
next on_nl rescue on_const on_nl problem on_tstring_beg on_tstring_content on_embexpr_beg c on_period name on_period inspect on_embexpr_end on_tstring_content on_tstring_end on_nl rescue on_const # Don't complain about missing cross-tap conflicts.
return unless on_ivar on_nl return unless on_ivar on_nl on_ignored_nl return if formula on_period UNK on_nl on_ignored_nl return unless formula on_period # special case: new versioned formulae should be audited
on_ignored_nl def UNK on_nl problem on_tstring_beg on_tstring_content on_tstring_end if UNK on_lparen formula on_rparen on_nl problem on_tstring_beg on_tstring_content on_tstring_end if UNK # version_prefix = stable_version_string.sub(/\d+$/, "") # version_prefix = stable_version_string.split(".")[0..1].join(".")
UNK on_nl end on_nl end on_nl end on_nl on_ignored_nl def UNK on_nl return unless formula on_period tap return unless formula # No-op if we can't find the release.
return unless formula on_period tap on_period UNK return if on_ivar on_nl on_ignored_nl UNK on_op on_const on_period new on_lparen formula on_rparen # skip formula not from core or any taps
return if on_ivar on_nl on_ignored_nl UNK on_op on_const on_period new on_lparen formula on_rparen on_nl on_ignored_nl UNK on_op UNK on_period UNK # git log is required
problem on_tstring_beg on_tstring_content on_embexpr_beg current_revision on_embexpr_end on_tstring_content on_tstring_end on_nl end on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_op on_const # head/devel-only formula
if line on_op on_regexp_beg on_tstring_content on_regexp_end on_nl problem on_tstring_beg on_tstring_content on_embexpr_beg on_const on_period last_match on_lparen on_int on_rparen on_embexpr_end on_tstring_content on_embexpr_beg # Check for string interpolation of single values.
problem on_tstring_beg on_tstring_content on_embexpr_beg on_const on_period last_match on_lparen on_int on_rparen on_embexpr_end on_tstring_content on_embexpr_beg on_const on_period last_match on_lparen on_int on_rparen on_embexpr_end # TODO: check could be in RuboCop
if line on_op on_regexp_beg on_tstring_content on_regexp_end on_nl problem on_tstring_beg on_tstring_content on_embexpr_beg on_const on_period last_match on_lparen on_int on_rparen on_embexpr_end on_tstring_end on_nl # Check for string concatenation; prefer interpolation
problem on_tstring_beg on_tstring_content on_embexpr_beg on_const on_period last_match on_lparen on_int on_rparen on_embexpr_end on_tstring_end on_nl end on_nl on_ignored_nl if line on_op on_regexp_beg # TODO: check could be in RuboCop
if line on_op on_regexp_beg on_tstring_content on_regexp_end on_nl problem on_lparen on_ignored_nl on_tstring_beg on_tstring_content on_embexpr_beg on_const on_period last_match on_lparen on_int on_rparen on_embexpr_end # Prefer formula path shortcuts in Pathname+
problem on_lparen on_ignored_nl on_tstring_beg on_tstring_content on_embexpr_beg on_const on_period last_match on_lparen on_int on_rparen on_embexpr_end on_tstring_content on_embexpr_beg on_const on_period last_match on_lparen on_int # TODO: check could be in RuboCop
problem on_tstring_beg on_tstring_content on_tstring_end if line on_period include? on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl if line on_op on_regexp_beg on_tstring_content # TODO: check could be in RuboCop
problem on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl return unless on_ivar on_nl on_ignored_nl problem on_tstring_beg on_tstring_content on_tstring_end if line on_period # TODO: check could be in RuboCop
problem on_tstring_beg on_tstring_content on_tstring_end if line on_period include? on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl if line on_op on_regexp_beg on_tstring_content # TODO: check could be in RuboCop
problem on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_tstring_end on_nl end on_nl end on_nl on_ignored_nl problem on_tstring_beg # TODO: check could be in RuboCop
problem on_tstring_beg on_tstring_content on_embexpr_beg on_const on_period last_match on_lparen on_int on_rparen on_embexpr_end on_tstring_content on_tstring_end if line on_op on_regexp_beg on_tstring_content on_regexp_end on_nl # TODO: check could be in RuboCop
problem on_tstring_beg on_tstring_content on_embexpr_beg formula on_period name on_embexpr_end on_tstring_end on_nl end on_nl on_ignored_nl if on_op on_ivar on_op line on_op on_regexp_beg # TODO: check could be in RuboCop
problem on_tstring_beg on_tstring_content on_embexpr_beg on_const on_period last_match on_lparen on_int on_rparen on_embexpr_end on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl if line on_op # TODO: check could be in RuboCop
problem on_tstring_beg on_tstring_content on_embexpr_beg on_const on_period last_match on_lparen on_int on_rparen on_embexpr_end on_tstring_content on_embexpr_beg formula on_period name on_embexpr_end on_tstring_content on_tstring_end on_nl # TODO: check could be in RuboCop
problem on_tstring_beg on_tstring_content on_tstring_end if line on_period include? on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl # TODO: check could be in RuboCop
return unless on_ivar on_nl return unless on_ivar on_nl return unless formula on_period tap on_period UNK on_period UNK on_lparen formula on_period # Only enforce for new formula being re-added to core
problem on_tstring_beg on_tstring_content on_tstring_end on_nl elsif on_op version on_period UNK on_nl UNK on_op version on_nl UNK on_op on_const on_period UNK # TODO: check could be in RuboCop
problem on_tstring_beg on_tstring_content on_embexpr_beg version on_embexpr_end on_tstring_content on_tstring_end if version on_period to_s on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl # TODO: check could be in RuboCop
problem on_tstring_beg on_tstring_content on_embexpr_beg version on_embexpr_end on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_nl if url on_op on_regexp_beg on_tstring_content # TODO: check could be in RuboCop
problem on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg on_const on_period last_match on_lparen on_int on_rparen on_embexpr_end on_tstring_content on_tstring_end on_nl end on_nl # TODO: check could be in RuboCop
problem on_tstring_beg on_tstring_content on_tstring_end if specs on_lbracket on_symbeg tag on_rbracket on_op on_op specs on_lbracket on_symbeg revision on_rbracket on_nl end on_nl # TODO: check could be in RuboCop
next if url on_period match? on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl on_ignored_nl if UNK on_op UNK on_lparen url on_rparen on_nl # A `brew mirror`'ed URL is usually not yet reachable at the time of # pull request.
