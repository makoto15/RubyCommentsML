on_ignored_nl UNK on_const on_nl def UNK on_lparen UNK on_rparen on_ignored_nl UNK if UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK # frozen_string_literal: true
UNK if UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK if UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl elf_files on_period # Patching the dynamic linker of glibc breaks it.
UNK if UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl elf_files on_period UNK UNK on_op file on_op on_ignored_nl file on_period UNK # Patching patchelf using itself fails with "Text file busy" or SIGBUS.
UNK if on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period UNK on_lparen UNK on_rparen on_nl UNK UNK on_period # patchelf requires that the ELF file have a .dynstr section. # Skip ELF files that do not have a .dynstr section.
UNK UNK UNK on_period UNK on_lbracket pn on_period UNK on_period UNK on_comma pn on_period UNK on_period UNK on_rbracket on_nl on_ignored_nl # If we've already processed a file, ignore its hardlinks (which have the # same dev ID and inode). This prevents relocations from being performed # on a binary more than once.
