on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_op on_const on_nl end on_nl on_ignored_nl UNK on_const # frozen_string_literal: true
UNK on_const on_op on_const on_nl end on_nl on_ignored_nl UNK on_const on_nl on_const on_op UNK on_ignored_nl on_label on_tlambda on_lparen message on_comma # Raised when <tt>ActiveSupport::Deprecation::Behavior#behavior</tt> is set with <tt>:raise</tt>. # You would set <tt>:raise</tt>, as a behavior to raise errors and proactively report exceptions from deprecations.
on_const on_op UNK on_ignored_nl on_label on_tlambda on_lparen message on_comma callstack on_comma deprecation_horizon on_comma gem_name on_rparen on_tlambeg on_ignored_nl UNK on_op on_const # Default warning behaviors per Rails.env.
UNK on_const on_nl UNK UNK UNK on_nl on_ignored_nl UNK behavior on_nl UNK on_op UNK on_const UNK UNK UNK UNK UNK # Behavior module allows to determine how to display deprecation messages. # You can create a custom behavior or set any from the +DEFAULT_BEHAVIORS+ # constant. Available behaviors are: # # [+raise+] Raise <tt>ActiveSupport::DeprecationException</tt>. # [+stderr+] Log all deprecation warnings to +$stderr+. # [+log+] Log all deprecation warnings to +Rails.logger+. # [+notify+] Use +ActiveSupport::Notifications+ to notify +deprecation.rails+. # [+silence+] Do nothing. # # Setting behaviors only affects deprecations that happen after boot time. # For more information you can read the documentation of the +behavior=+ method.
UNK UNK UNK on_nl on_ignored_nl UNK behavior on_nl UNK on_op UNK on_const UNK UNK UNK UNK UNK on_nl end on_nl # Whether to print a backtrace along with the warning.
UNK behavior on_nl UNK on_op UNK on_const UNK UNK UNK UNK UNK on_nl end on_nl on_ignored_nl UNK UNK on_lparen behavior # Returns the current behavior or if one isn't set, defaults to +:stderr+.
UNK UNK on_lparen behavior on_rparen on_ignored_nl UNK on_op on_const on_lparen behavior on_rparen on_period UNK UNK on_op UNK on_op on_const UNK # Sets the behavior to the specified value. Can be a single value, array, # or an object that responds to +call+. # # Available behaviors: # # [+raise+] Raise <tt>ActiveSupport::DeprecationException</tt>. # [+stderr+] Log all deprecation warnings to +$stderr+. # [+log+] Log all deprecation warnings to +Rails.logger+. # [+notify+] Use +ActiveSupport::Notifications+ to notify +deprecation.rails+. # [+silence+] Do nothing. # # Setting behaviors only affects deprecations that happen after boot time. # Deprecation warnings raised by gems are not affected by this setting # because they happen before Rails boots up. # # ActiveSupport::Deprecation.behavior = :stderr # ActiveSupport::Deprecation.behavior = [:stderr, :log] # ActiveSupport::Deprecation.behavior = MyCustomHandler # ActiveSupport::Deprecation.behavior = ->(message, callstack, deprecation_horizon, gem_name) { # # custom stuff # }
