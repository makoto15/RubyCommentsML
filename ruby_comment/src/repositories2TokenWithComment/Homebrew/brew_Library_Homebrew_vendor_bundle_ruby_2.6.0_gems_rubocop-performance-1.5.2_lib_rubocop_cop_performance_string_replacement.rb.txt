on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_nl UNK on_const on_nl on_ignored_nl on_const # frozen_string_literal: true
UNK on_const on_op on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_op UNK on_tstring_content UNK # This cop identifies places where `gsub` can be replaced by # `tr` or `delete`. # # @example # # bad # 'abc'.gsub('b', 'd') # 'abc'.gsub('a', '') # 'abc'.gsub(/a/, 'd') # 'abc'.gsub!('a', 'd') # # # good # 'abc'.gsub(/.*/, 'a') # 'abc'.gsub(/a+/, 'd') # 'abc'.tr('b', 'd') # 'a b c'.delete(' ')
first_source on_op UNK on_lparen first_source on_rparen on_nl end on_nl on_ignored_nl first_source on_period UNK on_op UNK on_nl end on_nl on_ignored_nl def # This must be done after checking DETERMINISTIC_REGEX # Otherwise things like \s will trip us up
