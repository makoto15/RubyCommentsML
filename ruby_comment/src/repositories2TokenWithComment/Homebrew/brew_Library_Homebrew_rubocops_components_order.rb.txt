on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const # frozen_string_literal: true
UNK on_const on_op on_const on_nl UNK UNK on_lparen UNK on_comma UNK on_comma UNK on_comma UNK on_rparen on_ignored_nl UNK on_op on_lbracket # This cop checks for correct order of components in Formulae. # # - `component_precedence_list` has component hierarchy in a nested list # where each sub array contains components' details which are at same precedence level
on_ivar on_period UNK on_lparen on_ivar on_period UNK on_op on_int on_rparen on_period UNK do on_op UNK on_comma UNK on_op on_ignored_nl UNK # Check if each present_components is above rest of the present_components
on_const on_op UNK UNK on_tstring_content UNK on_tstring_end on_period UNK on_nl on_ignored_nl UNK UNK on_lparen UNK on_comma UNK on_rparen on_ignored_nl UNK # `aspell`: options and resources should be grouped by language
UNK UNK on_lparen UNK on_comma UNK on_rparen on_ignored_nl UNK if on_const on_period UNK on_lparen on_ivar on_rparen on_nl on_ignored_nl UNK on_tstring_beg # Method to format message for reporting component precedence violations
UNK UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_ivar on_lbracket on_int on_rbracket on_nl UNK on_op on_ivar on_lbracket on_int on_rbracket on_nl # autocorrect method gets called just after component_problem method call
UNK UNK on_lparen corrector on_comma node1 on_comma node2 on_rparen on_ignored_nl UNK on_comma UNK on_comma UNK on_op UNK on_lparen node1 on_rparen # Reorder two nodes in the source, using the corrector instance in autocorrect method. # Components of same type are grouped together when rewriting the source. # Linebreaks are introduced if components are of two different methods/blocks/multilines.
UNK on_comma UNK on_comma UNK on_op UNK on_lparen node1 on_rparen on_nl on_ignored_nl if UNK on_period UNK on_nl node2 on_op UNK # order_idx : node1's index in component_precedence_list # curr_p_idx: node1's index in preceding_comp_arr # preceding_comp_arr: array containing components of same type
if UNK on_period UNK on_nl node2 on_op UNK on_lbracket UNK on_op on_int on_rbracket on_nl UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_op # curr_p_idx.positive? means node1 needs to be grouped with its own kind
UNK on_op on_lparen UNK on_op on_int on_rparen on_op on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_content on_tstring_end on_nl corrector on_period UNK on_lparen # No line breaks up to version_scheme, order_idx == 8
UNK UNK on_lparen node1 on_rparen on_ignored_nl on_ivar on_period UNK do on_op UNK on_comma UNK on_op on_ignored_nl UNK on_lbracket UNK on_comma # Returns precedence index and component's index to properly reorder and group during autocorrect
