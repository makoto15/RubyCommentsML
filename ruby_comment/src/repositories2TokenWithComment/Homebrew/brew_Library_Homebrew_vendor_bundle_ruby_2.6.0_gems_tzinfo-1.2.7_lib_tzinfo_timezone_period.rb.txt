UNK on_const on_nl UNK UNK start_transition on_nl on_ignored_nl UNK UNK end_transition on_nl on_ignored_nl UNK UNK offset on_nl on_ignored_nl def UNK # A period of time in a timezone where the same offset from UTC applies. # # All the methods that take times accept instances of Time or DateTime as well # as Integer timestamps.
UNK UNK start_transition on_nl on_ignored_nl UNK UNK end_transition on_nl on_ignored_nl UNK UNK offset on_nl on_ignored_nl def UNK on_lparen start_transition UNK # The TimezoneTransition that defines the start of this TimezonePeriod # (may be nil if unbounded).
UNK UNK end_transition on_nl on_ignored_nl UNK UNK offset on_nl on_ignored_nl def UNK on_lparen start_transition UNK end_transition UNK offset on_op nil # The TimezoneTransition that defines the end of this TimezonePeriod # (may be nil if unbounded).
UNK UNK offset on_nl on_ignored_nl def UNK on_lparen start_transition UNK end_transition UNK offset on_op nil on_rparen on_ignored_nl on_ivar on_op start_transition # The TimezoneOffset for this period.
def UNK on_lparen start_transition UNK end_transition UNK offset on_op nil on_rparen on_ignored_nl on_ivar on_op start_transition on_nl on_ivar on_op end_transition on_nl # Initializes a new TimezonePeriod. # # TimezonePeriod instances should not normally be constructed manually.
def UNK on_nl on_ivar on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_period UNK on_nl end on_nl on_ignored_nl # The base offset of the timezone from UTC in seconds. This does not include # any adjustment made for daylight savings time and will typically remain # constant throughout the year. # # To obtain the currently observed offset from UTC, including the effect of # daylight savings time, use utc_total_offset instead. # # Note that zoneinfo files only include the value of utc_total_offset and a # DST flag. When using ZoneinfoDataSource, the utc_offset will be derived # from changes to the UTC total offset and the DST flag. As a consequence, # utc_total_offset will always be correct, but utc_offset may be inaccurate. # # If you require utc_offset to be accurate, install the tzinfo-data gem and # set RubyDataSource as the DataSource.
def UNK on_nl on_ivar on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_period UNK on_nl end on_nl UNK # The offset from the time zone's standard time in seconds. Zero # when daylight savings time is not in effect. Non-zero (usually 3600 = 1 # hour) if daylight savings is being observed. # # Note that zoneinfo files only include the value of utc_total_offset and # a DST flag. When using DataSources::ZoneinfoDataSource, the std_offset # will be derived from changes to the UTC total offset and the DST flag. As # a consequence, utc_total_offset will always be correct, but std_offset # may be inaccurate. # # If you require std_offset to be accurate, install the tzinfo-data gem # and set RubyDataSource as the DataSource.
def UNK on_nl on_ivar on_period UNK on_nl end on_nl UNK UNK UNK UNK UNK on_nl on_ignored_nl def UNK on_nl on_ivar # The identifier of this period, e.g. "GMT" (Greenwich Mean Time) or "BST" # (British Summer Time) for "Europe/London". The returned identifier is a # symbol.
def UNK on_nl on_ivar on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ignored_nl UNK on_ivar on_nl result on_op on_const # Total offset from UTC (seconds). Equal to utc_offset + std_offset.
def UNK on_nl on_ignored_nl UNK on_ivar on_nl result on_op on_const on_period UNK on_lparen UNK on_rparen on_nl UNK result UNK UNK # Total offset from UTC (days). Result is a Rational.
on_ignored_nl UNK on_ivar on_nl result on_op on_const on_period UNK on_lparen UNK on_rparen on_nl UNK result UNK UNK on_nl on_ivar on_op # Thread-safety: It is possible that the value of # @utc_total_offset_rational may be calculated multiple times in # concurrently executing threads. It is not worth the overhead of locking # to ensure that @zone_identifiers is only calculated once.
def UNK on_nl on_ivar on_op on_ivar on_period at on_period UNK on_op nil on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar # The start time of the period in UTC as a DateTime. May be nil if unbounded.
def UNK on_nl on_ivar on_op on_ivar on_period at on_period UNK on_op nil on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar # The start time of the period in UTC as a Time. May be nil if unbounded.
def UNK on_nl on_ivar on_op on_ivar on_period at on_period UNK on_op nil on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar # The end time of the period in UTC as a DateTime. May be nil if unbounded.
def UNK on_nl on_ivar on_op on_ivar on_period at on_period UNK on_op nil on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar # The end time of the period in UTC as a Time. May be nil if unbounded.
def UNK on_nl on_ivar on_op on_ivar on_period UNK on_period UNK on_op nil on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar # The start time of the period in local time as a DateTime. May be nil if # unbounded.
def UNK on_nl on_ivar on_op on_ivar on_period UNK on_period UNK on_op nil on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar # The start time of the period in local time as a Time. May be nil if # unbounded.
def UNK on_nl on_ivar on_op on_ivar on_period UNK on_period UNK on_op nil on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar # The end time of the period in local time as a DateTime. May be nil if # unbounded.
def UNK on_nl on_ivar on_op on_ivar on_period UNK on_period UNK on_op nil on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar # The end time of the period in local time as a Time. May be nil if # unbounded.
def UNK on_nl on_ivar on_period UNK on_nl end on_nl on_ignored_nl def UNK on_lparen utc on_rparen on_ignored_nl UNK on_lparen utc on_rparen # true if daylight savings is in effect for this period; otherwise false.
def UNK on_lparen utc on_rparen on_ignored_nl UNK on_lparen utc on_rparen on_op UNK on_lparen utc on_rparen on_nl end on_nl on_ignored_nl def # true if this period is valid for the given UTC DateTime; otherwise false. # # Deprecation warning: this method will be removed in TZInfo version 2.0.0.
def UNK on_lparen utc on_rparen on_ignored_nl on_op on_ivar on_op on_ivar on_period at on_op utc on_nl end on_nl on_ignored_nl def UNK # true if the given UTC DateTime is after the start of the period # (inclusive); otherwise false. # # Deprecation warning: this method will be removed in TZInfo version 2.0.0.
def UNK on_lparen utc on_rparen on_ignored_nl on_op on_ivar on_op on_ivar on_period at on_op utc on_nl end on_nl on_ignored_nl def UNK # true if the given UTC DateTime is before the end of the period # (exclusive); otherwise false. # # Deprecation warning: this method will be removed in TZInfo version 2.0.0.
def UNK on_lparen local on_rparen on_ignored_nl UNK on_lparen local on_rparen on_op UNK on_lparen local on_rparen on_nl end on_nl on_ignored_nl def # true if this period is valid for the given local DateTime; otherwise # false. # # Deprecation warning: this method will be removed in TZInfo version 2.0.0.
def UNK on_lparen local on_rparen on_ignored_nl on_op on_ivar on_op on_ivar on_period UNK on_op local on_nl end on_nl on_ignored_nl def UNK # true if the given local DateTime is after the start of the period # (inclusive); otherwise false. # # Deprecation warning: this method will be removed in TZInfo version 2.0.0.
def UNK on_lparen local on_rparen on_ignored_nl on_op on_ivar on_op on_ivar on_period UNK on_op local on_nl end on_nl on_ignored_nl def UNK # true if the given local DateTime is before the end of the period # (exclusive); otherwise false. # # Deprecation warning: this method will be removed in TZInfo version 2.0.0.
def UNK on_lparen utc on_rparen on_ignored_nl on_ivar on_period UNK on_lparen utc on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen local # Converts a UTC DateTime to local time based on the offset of this period. # # Deprecation warning: this method will be removed in TZInfo version 2.0.0.
def UNK on_lparen local on_rparen on_ignored_nl on_ivar on_period UNK on_lparen local on_rparen on_nl end on_nl on_ignored_nl def on_op on_lparen p # Converts a local DateTime to UTC based on the offset of this period. # # Deprecation warning: this method will be removed in TZInfo version 2.0.0.
def on_op on_lparen p on_rparen on_ignored_nl p on_period UNK on_lparen on_const on_rparen on_op on_ignored_nl start_transition on_op p on_period start_transition on_op # Returns true if this TimezonePeriod is equal to p. This compares the # start_transition, end_transition and offset using ==.
def UNK on_lparen p on_rparen on_ignored_nl p on_period UNK on_lparen on_const on_rparen on_op on_ignored_nl start_transition on_period UNK on_lparen p on_period # Returns true if this TimezonePeriods is equal to p. This compares the # start_transition, end_transition and offset using eql?
def UNK on_nl result on_op on_ivar on_period UNK on_op on_ivar on_period UNK on_nl result on_op on_ivar on_period UNK UNK on_ivar # Returns a hash of this TimezonePeriod.
def UNK on_nl result on_op UNK on_tstring_content UNK UNK on_period UNK UNK on_tstring_content UNK on_ivar on_period UNK UNK on_tstring_content UNK # Returns internal object state as a programmer-readable string.
