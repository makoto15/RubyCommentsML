on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_op on_lparen value on_rparen on_ignored_nl UNK value on_period UNK on_lparen on_op on_const # frozen_string_literal: true
UNK on_op on_lparen value on_rparen on_ignored_nl UNK value on_period UNK on_lparen on_op on_const on_rparen on_nl operator on_op exclude_end? on_op on_op # Extends the default Range#=== to support range comparisons. # (1..5) === (1..5) # => true # (1..5) === (2..3) # => true # (1..5) === (1...6) # => true # (1..5) === (2..6) # => false # # The native Range#=== behavior is untouched. # ('a'..'f') === ('c') # => true # (5..9) === (11) # => false # # The given range must be fully bounded, with both start and end.
operator on_op exclude_end? on_op on_op value on_period exclude_end? on_op on_symbeg on_op on_op on_symbeg on_op on_nl value_max on_op on_op exclude_end? on_op # 1...10 includes 1..9 but it does not include 1..10. # 1..10 includes 1...11 but it does not include 1...12.
UNK UNK on_lparen value on_rparen on_ignored_nl UNK value on_period UNK on_lparen on_op on_const on_rparen on_nl operator on_op exclude_end? on_op on_op # Extends the default Range#include? to support range comparisons. # (1..5).include?(1..5) # => true # (1..5).include?(2..3) # => true # (1..5).include?(1...6) # => true # (1..5).include?(2..6) # => false # # The native Range#include? behavior is untouched. # ('a'..'f').include?('c') # => true # (5..9).include?(11) # => false # # The given range must be fully bounded, with both start and end.
operator on_op exclude_end? on_op on_op value on_period exclude_end? on_op on_symbeg on_op on_op on_symbeg on_op on_nl value_max on_op on_op exclude_end? on_op # 1...10 includes 1..9 but it does not include 1..10. # 1..10 includes 1...11 but it does not include 1...12.
UNK UNK on_lparen value on_rparen on_ignored_nl UNK value on_period UNK on_lparen on_op on_const on_rparen on_nl operator on_op exclude_end? on_op on_op # Extends the default Range#cover? to support range comparisons. # (1..5).cover?(1..5) # => true # (1..5).cover?(2..3) # => true # (1..5).cover?(1...6) # => true # (1..5).cover?(2..6) # => false # # The native Range#cover? behavior is untouched. # ('a'..'f').cover?('c') # => true # (5..9).cover?(11) # => false # # The given range must be fully bounded, with both start and end.
operator on_op exclude_end? on_op on_op value on_period exclude_end? on_op on_symbeg on_op on_op on_symbeg on_op on_nl value_max on_op on_op exclude_end? on_op # 1...10 covers 1..9 but it does not cover 1..10. # 1..10 covers 1...11 but it does not cover 1...12.
