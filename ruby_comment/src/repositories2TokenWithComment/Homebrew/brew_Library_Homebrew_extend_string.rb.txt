on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl def UNK on_nl UNK on_op UNK on_nl UNK UNK UNK # frozen_string_literal: true
def UNK on_nl UNK on_op UNK on_nl UNK UNK UNK on_period UNK on_nl end on_nl end on_nl on_ignored_nl UNK on_const # String.chomp, but if result is empty: returns nil instead. # Allows `chuzzle || foo` short-circuits. # TODO: Deprecate.
def UNK UNK end on_nl end on_nl on_ignored_nl UNK on_const on_nl UNK UNK errors on_nl on_ignored_nl def UNK on_period UNK # TODO: Deprecate.
UNK on_const on_nl UNK UNK errors on_nl on_ignored_nl def UNK on_period UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period errors on_op # Used by the inreplace function (in `utils.rb`).
def UNK on_lparen UNK on_comma UNK on_comma UNK on_op UNK on_rparen on_ignored_nl result on_op UNK on_lparen UNK on_comma UNK on_rparen # Warn if nothing was replaced
def UNK on_lparen flag on_comma UNK on_rparen on_ignored_nl UNK UNK UNK on_lparen UNK on_tstring_content on_embexpr_beg on_const on_period UNK on_lparen flag # Looks for Makefile style variable definitions and replaces the # value with "new_value", or removes the definition entirely.
def UNK on_lparen UNK on_rparen on_ignored_nl on_const on_lparen UNK on_rparen on_period UNK UNK on_op flag on_op on_ignored_nl UNK UNK on_lparen # Removes variable assignments completely.
UNK UNK on_lparen UNK on_tstring_content on_embexpr_beg on_const on_period UNK on_lparen flag on_rparen on_embexpr_end on_tstring_content UNK on_comma on_tstring_beg on_tstring_end on_comma UNK # Also remove trailing \n, if present.
def UNK on_lparen flag on_rparen on_ignored_nl UNK UNK UNK on_tstring_content on_embexpr_beg on_const on_period UNK on_lparen flag on_rparen on_embexpr_end on_tstring_content UNK # Finds the specified variable
