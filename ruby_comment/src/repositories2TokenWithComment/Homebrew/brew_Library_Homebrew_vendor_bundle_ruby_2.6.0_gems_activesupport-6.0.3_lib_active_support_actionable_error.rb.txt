on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl on_ignored_nl UNK on_const on_op on_const UNK end on_nl on_ignored_nl UNK # frozen_string_literal: true
UNK on_const on_nl UNK on_const on_nl on_ignored_nl UNK on_const on_op on_const UNK end on_nl on_ignored_nl UNK UNK on_ignored_nl UNK UNK # Actionable errors let's you define actions to resolve an error. # # To make an error actionable, include the <tt>ActiveSupport::ActionableError</tt> # module and invoke the +action+ class macro to define the action. An action # needs a name and a block to execute.
UNK UNK on_nl UNK on_const UNK UNK UNK UNK on_const on_op UNK on_op UNK on_op on_const UNK on_nl UNK UNK # :nodoc:
UNK UNK UNK UNK UNK UNK UNK UNK UNK UNK UNK on_nl UNK on_const on_nl UNK on_const UNK UNK UNK # :nodoc:
UNK UNK UNK UNK UNK on_op UNK UNK on_ignored_nl UNK UNK UNK UNK on_op UNK on_nl end on_nl end on_nl # Defines an action that can resolve the error. # # class PendingMigrationError < MigrationError # include ActiveSupport::ActionableError # # action "Run pending migrations" do # ActiveRecord::Tasks::DatabaseTasks.migrate # end # end
