UNK UNK on_nl on_ignored_nl UNK value on_nl UNK UNK UNK on_lparen on_ivar on_rparen UNK on_nl end on_nl UNK on_symbeg UNK # Object references in Ruby are mutable. This can lead to serious problems when # the `#value` of a concurrent object is a mutable reference. Which is always the # case unless the value is a `Fixnum`, `Symbol`, or similar "primitive" data type. # Most classes in this library that expose a `#value` getter method do so using the # `Dereferenceable` mixin module. # # @!macro copy_options
on_ignored_nl UNK value on_nl UNK UNK UNK on_lparen on_ivar on_rparen UNK on_nl end on_nl UNK on_symbeg UNK UNK on_symbeg value # NOTE: This module is going away in 2.0. In the mean time we need it to # play nicely with the synchronization layer. This means that the # including class SHOULD be synchronized and it MUST implement a # `#synchronize` method. Not doing so will lead to runtime errors.
UNK value on_nl UNK UNK UNK on_lparen on_ivar on_rparen UNK on_nl end on_nl UNK on_symbeg UNK UNK on_symbeg value on_nl # Return the value this object represents after applying the options specified # by the `#set_deref_options` method. # # @return [Object] the current value of the object
UNK UNK on_lparen value on_rparen on_ignored_nl UNK UNK on_ivar on_op value UNK on_nl end on_nl on_ignored_nl UNK UNK on_lparen opts # Set the internal value of this object # # @param [Object] value the new value
UNK UNK on_lparen opts on_op UNK UNK on_rparen on_ignored_nl UNK UNK UNK on_lparen opts on_rparen UNK on_nl end on_nl on_ignored_nl # @!macro dereferenceable_set_deref_options # Set the options which define the operations #value performs before # returning data to the caller (dereferencing). # # @note Most classes that include this module will call `#set_deref_options` # from within the constructor, thus allowing these options to be set at # object creation. # # @param [Hash] opts the options defining dereference behavior. # @option opts [String] :dup_on_deref (false) call `#dup` before returning the data # @option opts [String] :freeze_on_deref (false) call `#freeze` before returning the data # @option opts [String] :copy_on_deref (nil) call the given `Proc` passing # the internal value and returning the value returned from the proc
UNK UNK on_lparen opts on_rparen on_ignored_nl on_ivar on_op opts on_lbracket on_symbeg UNK on_rbracket on_op opts on_lbracket on_symbeg UNK on_rbracket on_nl # @!macro dereferenceable_set_deref_options # @!visibility private
UNK UNK on_lparen value on_rparen on_ignored_nl UNK UNK UNK value UNK UNK on_nl UNK value UNK on_ivar on_nl value on_op # @!visibility private
