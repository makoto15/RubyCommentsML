on_ignored_nl UNK on_const on_nl class on_const on_nl class on_const def UNK on_period UNK on_lparen on_op args on_comma on_op block on_rparen # frozen_string_literal: true
def UNK on_period UNK on_lparen on_op args on_comma on_op block on_rparen on_ignored_nl object on_op args on_period UNK on_nl on_ignored_nl UNK #:nodoc:
def UNK on_nl target on_period UNK on_nl end on_nl on_ignored_nl UNK on_nl def UNK on_lparen called on_comma on_op args on_comma # Don't give a deprecation warning on inspect since test/unit and error # logs rely on it for diagnostics.
class on_const on_op on_const on_nl def UNK on_lparen object on_comma UNK on_comma deprecator on_op on_const on_op on_const on_period UNK on_rparen # DeprecatedObjectProxy transforms an object into a deprecated one. It # takes an object, a deprecation message and optionally a deprecator. The # deprecator defaults to +ActiveSupport::Deprecator+ if none is specified. # # deprecated_object = ActiveSupport::Deprecation::DeprecatedObjectProxy.new(Object.new, "This object is now deprecated") # # => #<Object:0x007fb9b34c34b0> # # deprecated_object.to_s # DEPRECATION WARNING: This object is now deprecated. # (Backtrace) # # => "#<Object:0x007fb9b34c34b0>"
class on_const on_op on_const on_nl def UNK on_lparen UNK on_comma UNK on_comma UNK on_op UNK on_tstring_content on_embexpr_beg UNK on_embexpr_end UNK # DeprecatedInstanceVariableProxy transforms an instance variable into a # deprecated one. It takes an instance of a class, a method on that class # and an instance variable. It optionally takes a deprecator as the last # argument. The deprecator defaults to +ActiveSupport::Deprecator+ if none # is specified. # # class Example # def initialize # @request = ActiveSupport::Deprecation::DeprecatedInstanceVariableProxy.new(self, :request, :@request) # @_request = :special_request # end # # def request # @_request # end # # def old_request # @request # end # end # # example = Example.new # # => #<Example:0x007fb9b31090b8 @_request=:special_request, @request=:special_request> # # example.old_request.to_s # # => DEPRECATION WARNING: @request is deprecated! Call request.to_s instead of # @request.to_s # (Backtrace informationâ€¦) # "special_request" # # example.request.to_s # # => "special_request"
class on_const on_op on_const on_nl def UNK on_period UNK on_lparen on_op args on_comma on_op UNK on_comma on_op block on_rparen on_ignored_nl # DeprecatedConstantProxy transforms a constant into a deprecated one. It # takes the names of an old (deprecated) constant and of a new constant # (both in string form) and optionally a deprecator. The deprecator defaults # to +ActiveSupport::Deprecator+ if none is specified. The deprecated constant # now returns the value of the new one. # # PLANETS = %w(mercury venus earth mars jupiter saturn uranus neptune pluto) # # # (In a later update, the original implementation of `PLANETS` has been removed.) # # PLANETS_POST_2006 = %w(mercury venus earth mars jupiter saturn uranus neptune) # PLANETS = ActiveSupport::Deprecation::DeprecatedConstantProxy.new('PLANETS', 'PLANETS_POST_2006') # # PLANETS.map { |planet| planet.capitalize } # # => DEPRECATION WARNING: PLANETS is deprecated! Use PLANETS_POST_2006 instead. # (Backtrace informationâ€¦) # ["Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune"]
def UNK on_nl target on_period UNK on_nl end on_nl on_ignored_nl UNK UNK UNK on_comma UNK UNK on_comma UNK UNK on_comma # Don't give a deprecation warning on inspect since test/unit and error # logs rely on it for diagnostics.
UNK UNK UNK on_comma UNK UNK on_comma UNK UNK on_comma UNK UNK target on_nl on_ignored_nl def class on_nl target on_period # Don't give a deprecation warning on methods that IRB may invoke # during tab-completion.
def class on_nl target on_period class on_nl end on_nl on_ignored_nl UNK on_nl def target on_nl on_const on_op on_const on_period UNK # Returns the class of the new constant. # # PLANETS_POST_2006 = %w(mercury venus earth mars jupiter saturn uranus neptune) # PLANETS = ActiveSupport::Deprecation::DeprecatedConstantProxy.new('PLANETS', 'PLANETS_POST_2006') # PLANETS.class # => Array
