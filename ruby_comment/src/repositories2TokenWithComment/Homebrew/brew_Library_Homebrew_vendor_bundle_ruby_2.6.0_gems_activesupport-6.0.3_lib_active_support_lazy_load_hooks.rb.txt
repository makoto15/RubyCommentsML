on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK UNK on_period UNK on_lparen base on_rparen base on_period UNK UNK on_ignored_nl on_ivar # frozen_string_literal: true
UNK on_const on_nl UNK UNK on_period UNK on_lparen base on_rparen base on_period UNK UNK on_ignored_nl on_ivar on_op on_const on_period UNK # lazy_load_hooks allows Rails to lazily load a lot of components and thus # making the app boot faster. Because of this feature now there is no need to # require <tt>ActiveRecord::Base</tt> at boot time purely to apply # configuration. Instead a hook is registered that applies configuration once # <tt>ActiveRecord::Base</tt> is loaded. Here <tt>ActiveRecord::Base</tt> is # used as example but this feature can be applied elsewhere too. # # Here is an example where +on_load+ method is called to register a hook. # # initializer 'active_record.initialize_timezone' do # ActiveSupport.on_load(:active_record) do # self.time_zone_aware_attributes = true # self.default_timezone = :utc # end # end # # When the entirety of +ActiveRecord::Base+ has been # evaluated then +run_load_hooks+ is invoked. The very last line of # +ActiveRecord::Base+ is: # # ActiveSupport.run_load_hooks(:active_record, ActiveRecord::Base)
base on_period UNK UNK on_ignored_nl on_ivar on_op on_const on_period UNK UNK on_op h on_comma k on_op h on_lbracket k on_rbracket # :nodoc:
UNK UNK on_lparen name on_comma options on_op UNK UNK on_comma on_op block on_rparen on_ignored_nl on_ivar on_lbracket name on_rbracket on_period UNK # Declares a block that will be executed when a Rails component is fully # loaded. # # Options: # # * <tt>:yield</tt> - Yields the object that run_load_hooks to +block+. # * <tt>:run_once</tt> - Given +block+ will run only once.
