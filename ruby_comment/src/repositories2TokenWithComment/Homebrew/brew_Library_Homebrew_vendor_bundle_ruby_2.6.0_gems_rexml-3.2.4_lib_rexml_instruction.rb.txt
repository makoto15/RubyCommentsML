on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_op on_const on_nl # frozen_string_literal: false
UNK on_const on_op on_const on_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK UNK # Represents an XML Instruction; IE, <? ... ?> # TODO: Add parent arg (3rd arg) to constructor
UNK UNK target on_comma UNK content on_nl on_ignored_nl def UNK on_lparen target on_comma content on_op UNK on_rparen on_ignored_nl UNK target # target is the "name" of the Instruction; IE, the "tag" in <?tag ...?> # content is everything else.
def UNK on_lparen target on_comma content on_op UNK on_rparen on_ignored_nl UNK target on_nl UNK on_const on_nl UNK on_lparen on_rparen on_nl # Constructs a new Instruction # @param target can be one of a number of things. If String, then # the target of this instruction is set to this. If an Instruction, # then the Instruction is shallowly cloned (target and content are # copied). # @param content Must be either a String, or a Parent. Can only # be a Parent if the target argument is a Source. Otherwise, this # String is set as the content of this instruction.
def UNK writer on_comma UNK on_op on_op UNK on_comma UNK on_op UNK on_comma UNK on_op UNK on_nl on_const on_period UNK # == DEPRECATED # See the rexml/formatters package #
def on_op on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK on_const UNK on_ignored_nl UNK on_period target on_op on_ivar UNK on_ignored_nl UNK # @return true if other is an Instruction, and the content and target # of the other matches the target and content of this object.
