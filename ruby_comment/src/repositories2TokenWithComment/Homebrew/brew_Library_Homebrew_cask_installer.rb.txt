on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content # frozen_string_literal: true
UNK on_const on_nl on_ignored_nl def UNK on_lparen cask on_comma on_label on_const on_comma on_label false on_comma on_ignored_nl on_label false on_comma on_label # TODO: it is unwise for Cask::Staged to be a module, when we are # dealing with both staged and unstaged Casks here. This should # either be a class which is only sometimes instantiated, or there # should be explicit checks on whether staged state is valid in # every method.
end on_nl end on_nl on_ignored_nl def UNK on_nl odebug on_tstring_beg on_tstring_content on_tstring_end on_nl on_ivar on_op true on_nl UNK on_nl end # Ignore conflicting Casks that do not exist.
UNK on_op on_ivar on_period UNK on_nl UNK on_op UNK on_period exist? on_op on_const on_period UNK on_lparen UNK on_rparen on_op on_ivar # use the same cask file that was used for installation, if possible
on_const on_period new on_lparen UNK on_comma on_label UNK on_comma on_label verbose? on_comma on_label true on_comma on_label upgrade? on_rparen on_period UNK # Always force uninstallation, ignore method parameter
def UNK on_nl return unless on_ivar on_period depends_on on_nl on_ignored_nl UNK on_nl UNK on_nl UNK on_nl UNK on_nl end on_nl # TODO: move dependencies to a separate class, # dependencies should also apply for `brew cask stage`, # override dependencies with `--force` or perhaps `--force-deps`
gain_permissions_remove on_lparen backup_path on_rparen if backup_path on_op exist? on_nl on_ignored_nl return unless backup_metadata_path on_period UNK on_nl on_ignored_nl backup_metadata_path on_period UNK # versioned staged distribution
return unless backup_metadata_path on_period UNK on_nl on_ignored_nl backup_metadata_path on_period UNK on_period each do on_op UNK on_op on_ignored_nl gain_permissions_remove on_lparen UNK # Homebrew Cask metadata
gain_permissions_remove on_lparen on_ivar on_period staged_path on_rparen if on_ivar on_period staged_path on_op exist? on_nl on_ignored_nl if on_ivar on_period metadata_versioned_path on_period UNK # versioned staged distribution
if on_ivar on_period metadata_versioned_path on_period UNK on_nl on_ivar on_period metadata_versioned_path on_period UNK on_period each do on_op UNK on_op on_ignored_nl gain_permissions_remove # Homebrew Cask metadata
on_ivar on_period UNK on_period UNK unless upgrade? on_nl end on_nl on_ignored_nl def UNK on_nl odebug on_tstring_beg on_tstring_content on_embexpr_beg on_ivar on_embexpr_end # toplevel staged distribution
