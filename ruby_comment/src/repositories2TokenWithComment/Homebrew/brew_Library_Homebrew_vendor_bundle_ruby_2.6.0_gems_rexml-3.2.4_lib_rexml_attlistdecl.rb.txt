UNK UNK UNK UNK on_nl UNK UNK UNK UNK on_nl on_ignored_nl UNK UNK on_nl UNK UNK on_op UNK on_nl UNK # frozen_string_literal: false #vim:ts=2 sw=2 noexpandtab:
UNK UNK on_op UNK on_nl UNK UNK on_nl on_ignored_nl UNK UNK UNK on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl # This class needs: # * Documentation # * Work! Not all types of attlists are intelligently parsed, so we just # spew back out what we get in. This works, but it would be better if # we formatted the output ourselves. # # AttlistDecls provide *just* enough support to allow namespace # declarations. If you need some sort of generalized support, or have an # interesting idea about how to map the hideous, terrible design of DTD # AttlistDecls onto an intuitive Ruby interface, let me know. I'm desperate # for anything to make DTDs more palateable.
UNK UNK UNK on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_lparen on_rparen on_nl UNK on_lparen UNK UNK UNK # What is this? Got me.
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_lparen on_rparen on_nl UNK on_lparen UNK UNK UNK UNK on_rparen on_nl on_ivar UNK # Create an AttlistDecl, pulling the information from a Source. Notice # that this isn't very convenient; to create an AttlistDecl, you basically # have to format it yourself, and then have the initializer parse it. # Sorry, but for the foreseeable future, DTD support in REXML is pretty # weak on convenience. Have I mentioned how much I hate DTDs?
def on_op on_lparen UNK on_rparen on_ignored_nl on_ivar UNK UNK UNK on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl # Access the attlist attribute/value pairs. # value = attlist_decl[ attribute_name ]
def UNK on_lparen UNK on_rparen on_ignored_nl on_ivar UNK UNK UNK UNK UNK on_nl end on_nl on_ignored_nl def UNK on_lparen on_op # Whether an attlist declaration includes the given attribute definition # if attlist_decl.include? "xmlns:foobar"
def UNK on_lparen on_op UNK on_rparen on_ignored_nl on_ivar UNK UNK on_lparen on_op UNK on_rparen on_nl end on_nl on_ignored_nl def UNK # Iterate over the key/value pairs: # attlist_decl.each { |attribute_name, attribute_value| ... }
def UNK UNK UNK UNK on_op on_op UNK on_nl UNK on_op on_ivar on_nl end on_nl on_ignored_nl def UNK on_nl UNK # Write out exactly what we got in.
