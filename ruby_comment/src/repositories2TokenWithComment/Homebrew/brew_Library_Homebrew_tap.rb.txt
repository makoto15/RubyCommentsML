on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end # frozen_string_literal: true
class on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op on_lparen on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_nl on_ignored_nl # A {Tap} is used to extend the formulae provided by Homebrew core. # Usually, it's synced with a remote git repository. And it's likely # a GitHub repository with the name of `user/homebrew-repo`. In such # case, `user/repo` will be used as the {#name} of this {Tap}, where # {#user} represents GitHub username and {#repo} represents repository # name without leading `homebrew-`.
user on_op user on_period UNK if on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period UNK user on_nl repo # We special case homebrew and linuxbrew so that users don't have to shift in a terminal.
nil on_nl end on_nl on_ignored_nl def self on_period UNK on_nl on_ivar on_op fetch on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content # No need to error as a nil tap is sufficient to show failure.
attr_reader on_symbeg user on_nl on_ignored_nl attr_reader on_symbeg repo on_nl on_ignored_nl attr_reader on_symbeg name on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl # The user name of this {Tap}. Usually, it's the GitHub username of # this {Tap}'s remote repository.
attr_reader on_symbeg repo on_nl on_ignored_nl attr_reader on_symbeg name on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg path on_nl on_ignored_nl # The repository name of this {Tap} without leading `homebrew-`.
attr_reader on_symbeg name on_nl on_ignored_nl attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg path on_nl on_ignored_nl def UNK on_lparen user on_comma # The name of this {Tap}. It combines {#user} and {#repo} with a slash. # {#name} is always in lowercase. # e.g. `user/repo`
attr_reader on_symbeg UNK on_nl on_ignored_nl attr_reader on_symbeg path on_nl on_ignored_nl def UNK on_lparen user on_comma repo on_rparen on_ignored_nl on_ivar on_op # The full name of this {Tap}, including the `homebrew-` prefix. # It combines {#user} and 'homebrew-'-prefixed {#repo} with a slash. # e.g. `user/homebrew-repo`
attr_reader on_symbeg path on_nl on_ignored_nl def UNK on_lparen user on_comma repo on_rparen on_ignored_nl on_ivar on_op user on_nl on_ivar on_op repo # The local path to this {Tap}. # e.g. `/usr/local/Library/Taps/user/homebrew-repo`
def UNK on_lparen user on_comma repo on_rparen on_ignored_nl on_ivar on_op user on_nl on_ivar on_op repo on_nl on_ivar on_op on_tstring_beg on_embexpr_beg # @private
def UNK on_nl on_ivar on_op nil on_nl on_ivar on_op nil on_nl on_ivar on_op nil on_nl on_ivar on_op nil on_nl on_ivar # Clear internal cache
def remote on_nl raise on_const on_comma name unless installed? on_nl on_ignored_nl on_ivar on_op path on_period UNK on_nl end on_nl on_ignored_nl # The remote path to this {Tap}. # e.g. `https://github.com/user/homebrew-repo`
def UNK on_nl on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_op path on_period # The default remote path to this {Tap}.
def UNK on_nl path on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl raise on_const on_comma name unless installed? on_nl # True if this {Tap} is a git repository.
def UNK on_nl raise on_const on_comma name unless installed? on_nl on_ignored_nl path on_period UNK on_nl end on_nl on_ignored_nl def UNK # git branch for this {Tap}.
def UNK on_nl raise on_const on_comma name unless installed? on_nl on_ignored_nl path on_period UNK on_nl end on_nl on_ignored_nl def UNK # git HEAD for this {Tap}.
def UNK on_nl raise on_const on_comma name unless installed? on_nl on_ignored_nl path on_period UNK on_nl end on_nl on_ignored_nl def UNK # git HEAD in short format for this {Tap}.
def UNK on_nl raise on_const on_comma name unless installed? on_nl on_ignored_nl path on_period UNK on_nl end on_nl on_ignored_nl def UNK # Time since git last commit for this {Tap}.
def UNK on_nl raise on_const on_comma name unless installed? on_nl on_ignored_nl path on_period UNK on_nl end on_nl on_ignored_nl def UNK # git last commit date for this {Tap}.
def UNK on_nl return unless UNK on_op on_op UNK on_nl on_ignored_nl on_tstring_beg on_embexpr_beg UNK on_embexpr_end on_tstring_content on_tstring_end on_nl end on_nl # The issues URL of this {Tap}. # e.g. `https://github.com/user/homebrew-repo/issues`
def UNK on_nl user on_op on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_nl return on_ivar if UNK on_lparen # True if this {Tap} is an official Homebrew tap.
def UNK on_nl return on_ivar if UNK on_lparen on_symbeg on_ivar on_rparen on_nl on_ignored_nl on_ivar on_op UNK on_nl end on_nl on_ignored_nl # True if the remote of this {Tap} is a private repository.
def UNK on_nl on_ivar on_op begin on_ignored_nl raise on_const on_comma name unless installed? on_nl on_ignored_nl on_const on_period new on_lparen self # {TapConfig} of this {Tap}
def installed? on_nl path on_period directory? on_nl end on_nl on_ignored_nl def UNK on_nl on_lparen path on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen # True if this {Tap} has been installed.
def UNK on_nl on_lparen path on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl false # True if this {Tap} is not a full clone.
def UNK on_nl false on_nl end on_nl on_ignored_nl def UNK on_lparen on_label true on_comma on_label false on_comma on_label nil on_comma # @private
def UNK on_lparen on_label true on_comma on_label false on_comma on_label nil on_comma on_label nil on_rparen on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end # Install this {Tap}. # # @param clone_target [String] If passed, it will be used as the clone remote. # @param force_auto_update [Boolean, nil] If present, whether to override the # logic that skips non-GitHub repositories during auto-updates. # @param full_clone [Boolean] If set as true, full clone will be used. If unset/nil, means "no change". # @param quiet [Boolean] If set, suppress all output.
on_const on_period UNK on_nl on_ignored_nl if installed? on_nl unless force_auto_update on_period UNK on_nl UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op # ensure git is installed
UNK UNK on_nl on_const on_period UNK path on_nl path on_period parent on_period UNK on_nl end on_nl raise on_nl end on_nl # wait for git to possibly cleanup the top directory when interrupt happens.
def UNK on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl raise on_const on_comma name unless installed? on_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_embexpr_beg # Uninstall this {Tap}.
def UNK on_nl return true unless remote on_nl on_ignored_nl remote on_period UNK on_lparen UNK on_rparen on_period UNK on_nl end on_nl # True if the {#remote} of {Tap} is customized.
def UNK on_nl on_ivar on_op UNK on_period UNK on_lparen on_op on_symbeg directory? on_rparen on_op path on_op on_tstring_beg on_tstring_content on_tstring_end on_nl # Path to the directory of all {Formula} files for this {Tap}.
def UNK on_nl on_ivar on_op path on_op on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def contents on_nl contents on_op on_lbracket # Path to the directory of all {Cask} files for this {Tap}.
def UNK on_nl on_ivar on_op if UNK on_period directory? on_nl UNK on_period UNK on_period UNK on_lparen on_op UNK on_lparen on_symbeg # An array of all {Formula} files of this {Tap}.
def UNK on_nl on_ivar on_op if UNK on_period directory? on_nl UNK on_period UNK on_period UNK on_lparen on_op UNK on_lparen on_symbeg # An array of all {Cask} files of this {Tap}.
def UNK on_lparen file on_rparen on_ignored_nl file on_period UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_lparen # returns true if the file has a Ruby extension # @private
def UNK on_lparen file on_rparen on_ignored_nl file on_op on_const on_period new on_lparen file on_rparen unless file on_period UNK on_const on_nl # return true if given path would present a {Formula} file in this {Tap}. # accepts both absolute path and relative path (relative to this {Tap}'s path) # @private
def UNK on_lparen file on_rparen on_ignored_nl file on_op on_const on_period new on_lparen file on_rparen unless file on_period UNK on_const on_nl # return true if given path would present a {Cask} file in this {Tap}. # accepts both absolute path and relative path (relative to this {Tap}'s path) # @private
def UNK on_nl on_ivar on_op UNK on_period map on_lparen on_op UNK on_lparen on_symbeg UNK on_rparen on_rparen on_nl end on_nl on_ignored_nl # An array of all {Formula} names of this {Tap}.
def UNK on_nl on_ivar on_op UNK on_period map on_lparen on_op UNK on_lparen on_symbeg UNK on_rparen on_rparen on_nl end on_nl on_ignored_nl # An array of all {Cask} tokens of this {Tap}.
def UNK on_nl on_ivar on_op path on_op on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_op on_const # path to the directory of all alias files for this {Tap}. # @private
def UNK on_nl on_ivar on_op on_const on_period UNK on_lparen on_tstring_beg on_embexpr_beg UNK on_embexpr_end on_tstring_content on_tstring_end on_rparen on_period UNK on_lparen on_op # an array of all alias files of this {Tap}. # @private
def UNK on_nl on_ivar on_op UNK on_period map on_lbrace on_op UNK on_op UNK on_lparen UNK on_rparen on_rbrace on_nl end on_nl # an array of all aliases of this {Tap}. # @private
def UNK on_nl return on_ivar if on_ivar on_nl on_ignored_nl on_ivar on_op on_lbrace on_rbrace on_nl UNK on_period UNK do on_op UNK # a table mapping alias to formula name # @private
def UNK on_nl return on_ivar if on_ivar on_nl on_ignored_nl on_ivar on_op on_lbrace on_rbrace on_nl UNK on_period UNK do on_op UNK # a table mapping formula name to aliases # @private
def UNK on_nl on_ivar on_op if UNK on_period directory? on_nl on_const on_period UNK on_lparen UNK on_rparen on_nl else on_ignored_nl on_lbracket # An array of all commands files of this {Tap}.
def pinned_symlink_path on_nl on_const on_op on_tstring_beg on_tstring_content on_embexpr_beg name on_embexpr_end on_tstring_end on_nl end on_nl on_ignored_nl def pinned? on_nl return on_ivar # path to the pin record for this {Tap}. # @private
def pinned? on_nl return on_ivar if UNK on_lparen on_symbeg on_ivar on_rparen on_nl on_ignored_nl on_ivar on_op pinned_symlink_path on_period directory? on_nl end # True if this {Tap} has been pinned.
def UNK on_nl raise on_const on_comma name unless installed? on_nl raise on_const on_period new on_lparen name on_comma true on_rparen if # Pin this {Tap}.
def UNK on_nl raise on_const on_comma name unless installed? on_nl raise on_const on_period new on_lparen name on_comma false on_rparen unless # Unpin this {Tap}.
def UNK on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl on_ivar on_op if on_lparen UNK on_op path on_op on_tstring_beg on_tstring_content on_tstring_end # Hash with tap formula renames
def UNK on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl on_ivar on_op if on_lparen UNK on_op path on_op on_tstring_beg on_tstring_content on_tstring_end # Hash with tap migrations
def self on_period UNK on_nl map on_lparen on_op on_symbeg name on_rparen on_period UNK on_nl end on_nl on_ignored_nl def self on_period # An array of all installed {Tap} names.
def self on_period UNK on_nl on_const on_period UNK on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_lparen # An array of all tap cmd directory {Pathname}s
def UNK on_lparen file on_rparen on_ignored_nl on_tstring_beg on_embexpr_beg name on_embexpr_end on_tstring_content on_embexpr_beg file on_period basename on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # @private
def UNK on_lparen file on_rparen on_ignored_nl on_tstring_beg on_embexpr_beg name on_embexpr_end on_tstring_content on_embexpr_beg file on_period basename on_embexpr_end on_tstring_end on_nl end on_nl # @private
class on_const on_op on_const on_nl def UNK on_nl super on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl # A specialized {Tap} class for the core formulae.
def UNK on_nl super on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def self on_period UNK on_nl # @private
def UNK on_nl raise on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_nl raise on_tstring_beg on_tstring_content on_tstring_end on_nl end # @private
def UNK on_nl raise on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_nl raise on_tstring_beg on_tstring_content on_tstring_end on_nl end # @private
def UNK on_nl raise on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def pinned? on_nl false on_nl end on_nl on_ignored_nl def # @private
def pinned? on_nl false on_nl end on_nl on_ignored_nl def UNK on_nl true on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar # @private
def UNK on_nl true on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_op begin on_ignored_nl self on_period class on_period UNK # @private
def UNK on_nl on_ivar on_op begin on_ignored_nl self on_period class on_period UNK on_nl super on_nl end on_nl end on_nl on_ignored_nl # @private
def UNK on_nl on_ivar on_op begin on_ignored_nl self on_period class on_period UNK on_nl super on_nl end on_nl end on_nl on_ignored_nl # @private
def UNK on_nl on_ivar on_op begin on_ignored_nl self on_period class on_period UNK on_nl super on_nl end on_nl end on_nl on_ignored_nl # @private
def UNK on_nl on_ivar on_op begin on_ignored_nl self on_period class on_period UNK on_nl super on_nl end on_nl end on_nl on_ignored_nl # @private
def UNK on_lparen file on_rparen on_ignored_nl file on_period basename on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period to_s on_nl end on_nl on_ignored_nl # @private
def UNK on_lparen file on_rparen on_ignored_nl file on_period basename on_period to_s on_nl end on_nl end on_nl on_ignored_nl class on_const on_nl # @private
class on_const on_nl attr_reader on_symbeg tap on_nl on_ignored_nl def UNK on_lparen tap on_rparen on_ignored_nl on_ivar on_op tap on_nl end on_nl # Permanent configuration per {Tap} using `git-config(1)`.
