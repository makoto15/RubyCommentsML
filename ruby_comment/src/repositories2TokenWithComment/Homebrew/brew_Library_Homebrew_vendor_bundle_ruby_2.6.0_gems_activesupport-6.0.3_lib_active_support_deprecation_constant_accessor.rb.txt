on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK UNK on_period UNK on_lparen UNK on_rparen on_ignored_nl UNK UNK # frozen_string_literal: true
UNK on_const on_nl UNK UNK on_period UNK on_lparen UNK on_rparen on_ignored_nl UNK UNK UNK UNK on_nl on_ignored_nl UNK on_op on_const # DeprecatedConstantAccessor transforms a constant into a deprecated one by # hooking +const_missing+. # # It takes the names of an old (deprecated) constant and of a new constant # (both in string form) and optionally a deprecator. The deprecator defaults # to +ActiveSupport::Deprecator+ if none is specified. # # The deprecated constant now returns the same object as the new one rather # than a proxy object, so it can be used transparently in +rescue+ blocks # etc. # # PLANETS = %w(mercury venus earth mars jupiter saturn uranus neptune pluto) # # # (In a later update, the original implementation of `PLANETS` has been removed.) # # PLANETS_POST_2006 = %w(mercury venus earth mars jupiter saturn uranus neptune) # include ActiveSupport::Deprecation::DeprecatedConstantAccessor # deprecate_constant 'PLANETS', 'PLANETS_POST_2006' # # PLANETS.map { |planet| planet.capitalize } # # => DEPRECATION WARNING: PLANETS is deprecated! Use PLANETS_POST_2006 instead. # (Backtrace informationâ€¦) # ["Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune"]
