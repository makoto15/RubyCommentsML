on_const on_op UNK on_ignored_nl UNK on_const on_period UNK on_op on_const on_period UNK UNK UNK on_op on_comma on_int on_comma on_int on_comma # @!visibility private # @!macro internal_implementation_note
UNK on_const on_op on_const on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_nl UNK on_nl UNK on_nl EMP # Safe synchronization under any Ruby implementation. # It provides methods like {#synchronize}, {#wait}, {#signal} and {#broadcast}. # Provides a single layer which can improve its implementation over time without changes needed to # the classes using it. Use {Synchronization::Object} not this abstract class. # # @note this object does not support usage together with # [`Thread#wakeup`](http://ruby-doc.org/core-2.2.0/Thread.html#method-i-wakeup) # and [`Thread#raise`](http://ruby-doc.org/core-2.2.0/Thread.html#method-i-raise). # `Thread#sleep` and `Thread#wakeup` will work as expected but mixing `Synchronization::Object#wait` and # `Thread#wakeup` will not work on all platforms. # # @see Event implementation as an example of this class use # # @example simple # class AnClass < Synchronization::Object # def initialize # super # synchronize { @value = 'asd' } # end # # def value # synchronize { @value } # end # end # # @!visibility private
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_nl UNK on_nl UNK on_nl EMP EMP EMP EMP EMP EMP EMP # TODO (pitr 12-Sep-2015): make private for c-r, prohibit subclassing # TODO (pitr 12-Sep-2015): we inherit too much ourselves :/
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_nl UNK on_nl UNK on_nl EMP EMP EMP EMP EMP EMP EMP EMP # @!method initialize(*args, &block) # @!macro synchronization_object_method_initialize
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_nl UNK on_nl UNK on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP # @!method synchronize # @!macro synchronization_object_method_synchronize
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_nl UNK on_nl UNK on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # @!method wait_until(timeout = nil, &condition) # @!macro synchronization_object_method_ns_wait_until
on_ignored_nl on_ignored_nl on_ignored_nl UNK on_nl UNK on_nl UNK on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # @!method wait(timeout = nil) # @!macro synchronization_object_method_ns_wait
on_ignored_nl on_ignored_nl UNK on_nl UNK on_nl UNK on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # @!method signal # @!macro synchronization_object_method_ns_signal
on_ignored_nl UNK on_nl UNK on_nl UNK on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # @!method broadcast # @!macro synchronization_object_method_ns_broadcast
