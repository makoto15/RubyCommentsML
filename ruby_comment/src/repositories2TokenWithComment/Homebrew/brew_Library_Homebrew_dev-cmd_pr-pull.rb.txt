on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end # frozen_string_literal: true
on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket if on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket # Passthrough Git environment variables
UNK unless on_const on_period popen_read on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_ignored_nl # Depending on user configuration, git may try to invoke gpg.
UNK on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg on_tstring_beg on_tstring_content on_tstring_end unless UNK on_op UNK on_embexpr_end on_tstring_content on_embexpr_beg pr on_embexpr_end # git cherry-pick unfortunately has no quiet option
UNK on_nl end on_nl UNK UNK if on_op UNK on_period UNK on_op on_op UNK on_period UNK on_nl end on_nl UNK # rubocop:disable Lint/RescueException # Make sure we catch syntax errors.
on_const on_period UNK UNK do on_ignored_nl UNK on_op on_const on_period UNK on_lparen url on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma pr on_comma # Download the artifact as a zip file and unpack it into `dir`. This is # preferred over system `curl` and `tar` as this leverages the Homebrew # cache to avoid repeated downloads of (possibly large) bottles.
