on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl on_const on_op on_lparen on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_content on_tstring_end # frozen_string_literal: true
UNK UNK on_period UNK on_lparen UNK on_op on_int on_rparen on_ignored_nl on_const on_period UNK on_lparen UNK on_rparen on_period UNK on_lparen on_tstring_beg # SecureRandom.base58 generates a random base58 string. # # The argument _n_ specifies the length of the random string to be generated. # # If _n_ is not specified or is +nil+, 16 is assumed. It may be larger in the future. # # The result may contain alphanumeric characters except 0, O, I and l. # # p SecureRandom.base58 # => "4kUgL2pdQMSCQtjE" # p SecureRandom.base58(24) # => "77TMHrHJFvFDwodq8w7Ev2m7"
UNK UNK on_period UNK on_lparen UNK on_op on_int on_rparen on_ignored_nl on_const on_period UNK on_lparen UNK on_rparen on_period UNK on_lparen on_tstring_beg # SecureRandom.base36 generates a random base36 string in lowercase. # # The argument _n_ specifies the length of the random string to be generated. # # If _n_ is not specified or is +nil+, 16 is assumed. It may be larger in the future. # This method can be used over +base58+ if a deterministic case key is necessary. # # The result will contain alphanumeric characters in lowercase. # # p SecureRandom.base36 # => "4kugl2pdqmscqtje" # p SecureRandom.base36(24) # => "77tmhrhjfvfdwodq8w7ev2m7"
