require_relative on_tstring_beg on_tstring_content on_tstring_end on_nl require_relative on_tstring_beg on_tstring_content on_tstring_end on_nl require_relative on_tstring_beg on_tstring_content on_tstring_end on_nl require_relative on_tstring_beg on_tstring_content on_tstring_end on_nl # frozen_string_literal: false
UNK on_const on_op on_const on_nl UNK on_const on_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl # Represents an XML DOCTYPE declaration; that is, the contents of <!DOCTYPE # ... >. DOCTYPES can be used to declare the DTD of a document, as well as # being used to declare entities used in the document.
UNK on_symbeg name on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen first on_comma parent # name is the name of the doctype # external_id is the referenced DTD, if given
def UNK on_lparen first on_comma parent on_op nil on_rparen on_ignored_nl on_ivar on_op on_const on_nl on_ivar on_op on_ivar on_op nil on_nl # Constructor # # dt = DocType.new( 'foo', '-//I/Hate/External/IDs' ) # # <!DOCTYPE foo '-//I/Hate/External/IDs'> # dt = DocType.new( doctype_to_clone ) # # Incomplete. Shallow clone of doctype # # +Note+ that the constructor: # # Doctype.new( Source.new( "<!DOCTYPE foo 'bar'>" ) ) # # is _deprecated_. Do not use it. It will probably disappear.
def UNK on_lparen output on_comma indent on_op on_int on_comma UNK on_op UNK on_comma UNK on_op UNK on_rparen on_ignored_nl UNK on_op # output:: # Where to write the string # indent:: # An integer. If -1, no indentation will be used; otherwise, the # indentation will be this number of spaces, and children will be # indented an additional amount. # transitive:: # Ignored # ie_hack:: # Ignored
def UNK on_nl UNK on_ivar on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl nil on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_lparen # This method retrieves the public identifier identifying the document's # DTD. # # Method contributed by Henrik Martensson
def UNK on_nl UNK on_ivar on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_lparen on_ivar on_rparen on_nl UNK on_tstring_beg on_tstring_content on_tstring_end # This method retrieves the system identifier identifying the document's DTD # # Method contributed by Henrik Martensson
def UNK on_nl UNK on_lparen on_rparen on_period UNK UNK on_op UNK on_op UNK on_period kind_of? on_lparen on_const on_op on_const on_rparen # This method returns a list of notations that have been declared in the # _internal_ DTD subset. Notations in the external DTD subset are not # listed. # # Method contributed by Henrik Martensson
def notation on_lparen name on_rparen on_ignored_nl UNK on_period UNK UNK on_op UNK on_op on_ignored_nl UNK on_period name on_op name on_nl # Retrieves a named notation. Only notations declared in the internal # DTD subset can be retrieved. # # Method contributed by Henrik Martensson
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op UNK on_tstring_content UNK on_op on_ignored_nl UNK on_lbracket on_int on_comma UNK on_period UNK # Method contributed by Henrik Martensson
on_ignored_nl UNK on_const on_op on_const on_nl def UNK UNK on_nl super on_lparen on_rparen on_nl on_ivar on_op UNK on_nl end on_nl # We don't really handle any of these since we're not a validating # parser, so we can be pretty dumb about them. All we need to be able # to do is spew them back out on a write()
UNK on_const on_op on_const on_nl def UNK UNK on_nl super on_lparen on_rparen on_nl on_ivar on_op UNK on_nl end on_nl on_ignored_nl # This is an abstract class. You never use this directly; it serves as a # parent class for the specific declarations.
def UNK on_lparen output on_comma indent on_rparen on_ignored_nl output on_op UNK on_nl end on_nl end on_nl on_ignored_nl UNK on_nl UNK # == DEPRECATED # See REXML::Formatters #
def name on_nl on_ivar on_nl end on_nl end on_nl end on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP # This method retrieves the name of the notation. # # Method contributed by Henrik Martensson
