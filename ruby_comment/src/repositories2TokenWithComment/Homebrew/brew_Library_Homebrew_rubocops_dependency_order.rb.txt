on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK UNK on_nl UNK UNK on_nl UNK UNK on_nl UNK UNK on_op UNK # frozen_string_literal: true
UNK UNK on_op UNK on_nl def UNK on_lparen UNK on_comma UNK on_comma UNK on_comma UNK on_rparen on_ignored_nl UNK on_lparen UNK # This cop checks for correct order of `depends_on` in Formulae. # # precedence order: # build-time > run-time > normal > recommended > optional
def UNK on_lparen dependency_nodes on_rparen on_ignored_nl unsorted_deps on_op dependency_nodes on_period UNK on_nl ordered on_op UNK UNK on_nl ordered on_period UNK # Separate dependencies according to precedence order: # build-time > test > normal > recommended > optional
def UNK on_lparen ordered on_rparen on_ignored_nl UNK on_op ordered on_period UNK on_nl UNK on_op on_int on_nl UNK UNK on_op UNK # `depends_on :apple if build.with? "foo"` should always be defined # after `depends_on :foo` # This method reorders dependencies array according to above rule
def UNK on_lparen ordered on_rparen on_ignored_nl ordered on_period UNK do on_op UNK on_comma UNK on_op on_ignored_nl UNK on_op UNK on_lparen # Verify actual order of sorted `depends_on` nodes in source code # Else raise RuboCop problem
UNK on_symbeg UNK on_comma UNK on_nl on_ignored_sp on_tstring_content on_ignored_sp on_tstring_content UNK on_ignored_nl UNK on_symbeg UNK on_comma UNK on_nl on_ignored_sp on_tstring_content # Node pattern method to match # `depends_on` variants
def_node_search on_symbeg UNK on_comma UNK on_nl on_ignored_sp on_tstring_content on_ignored_sp on_tstring_content UNK on_ignored_nl def_node_search on_symbeg UNK on_comma UNK on_nl on_ignored_sp on_tstring_content # Node pattern method to extract `name` in `depends_on :name` or `uses_from_macos :name`
def_node_search on_symbeg UNK on_comma UNK on_nl on_ignored_sp on_tstring_content UNK on_ignored_nl def UNK on_lparen UNK on_comma idx1 on_comma idx2 on_rparen on_ignored_nl # Node pattern method to extract `name` in `build.with? :name`
def UNK on_lparen UNK on_comma UNK on_comma node2 on_rparen on_ignored_nl UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_op on_lparen UNK on_lparen node2 # Reorder two nodes in the source, using the corrector instance in autocorrect method
