on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK UNK on_period UNK on_lparen # frozen_string_literal: true
on_const on_period UNK on_lparen UNK on_comma child_error on_period inner on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_comma on_ignored_nl child_error on_period inner on_lbracket # We fill `BuildError#formula` and `BuildError#options` in later, # when we rescue this in `FormulaInstaller#build`.
on_const on_period UNK on_lparen child_error on_period UNK on_rparen on_nl end on_nl on_ignored_nl UNK on_period UNK child_error on_period UNK on_nl on_ignored_nl # Everything other error in the child just becomes a RuntimeError.
error_hash on_op on_const on_period UNK e on_period UNK on_nl on_ignored_nl UNK e on_period UNK on_lparen on_const on_rparen on_nl error_hash on_lbracket # rubocop:disable Lint/RescueException
UNK e on_period UNK on_lparen on_const on_rparen on_nl error_hash on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op e on_period UNK on_nl error_hash # Special case: We need to recreate ErrorDuringExecutions # for proper error messages and because other code expects # to rescue them further down.
UNK on_lparen UNK on_rparen on_nl end on_nl on_ignored_nl UNK on_lparen UNK UNK on_rparen UNK UNK on_ignored_nl UNK on_op UNK on_period # rubocop:disable Layout/ElseAlignment
UNK on_ignored_nl UNK on_op UNK on_period UNK on_nl UNK on_const on_op on_const on_comma on_const on_op on_const on_comma on_const on_op on_const # the child will receive the interrupt and marshal it back
UNK on_const UNK UNK on_period UNK on_op UNK on_nl on_ignored_nl UNK UNK on_op on_op UNK on_period UNK on_nl error_hash on_op # 130 is the exit status for a process interrupted via Ctrl-C. # We handle it here because of the possibility of an interrupted process terminating # without writing its Interrupt exception to the error pipe.
