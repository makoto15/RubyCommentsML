on_const on_op on_const UNK UNK on_lparen on_symbeg UNK on_comma on_const on_op on_const on_op on_const on_rparen UNK on_ignored_nl UNK on_symbeg UNK # Digs into a variable with dot notation to get a value from a structure. # # **To get the value from a variable** (that may or may not exist), call the function with # one or two arguments: # # * The **first** argument must be a string, and must start with a variable name without leading `$`, # for example `get('facts')`. The variable name can be followed # by a _dot notation navigation string_ to dig out a value in the array or hash value # of the variable. # * The **optional second** argument can be any type of value and it is used as the # _default value_ if the function would otherwise return `undef`. # * An **optional lambda** for error handling taking one `Error` argument. # # **Dot notation navigation string** - # The dot string consists of period `.` separated segments where each # segment is either the index into an array or the value of a hash key. # If a wanted key contains a period it must be quoted to avoid it being # taken as a segment separator. Quoting can be done with either # single quotes `'` or double quotes `"`. If a segment is # a decimal number it is converted to an Integer index. This conversion # can be prevented by quoting the value. # # @example Getting the value of a variable # ```puppet # getvar('facts') # results in the value of $facts # ``` # # @example Navigating into a variable # ```puppet # getvar('facts.os.family') # results in the value of $facts['os']['family'] # ``` # # @example Using a default value # ```puppet # $x = [1,2,[{'name' =>'waldo'}]] # getvar('x.2.1.name', 'not waldo') # # results in 'not waldo' # ``` # # For further examples and how to perform error handling, see the `get()` function # which this function delegates to after having resolved the variable value. # # @since 6.0.0 - the ability to dig into the variable's value with dot notation. #
UNK UNK on_lparen UNK on_comma navigation on_comma default_value on_op UNK on_comma on_op block on_rparen on_ignored_nl UNK on_op navigation UNK UNK # Gets a result from a navigation string starting with $var #
UNK on_op navigation UNK UNK on_lparen UNK on_tstring_content UNK on_rparen on_nl navigation on_op UNK UNK on_int UNK on_nl UNK navigation # asserted to start with a valid variable name - dig out the variable
UNK UNK on_lparen UNK on_comma UNK on_comma navigation on_comma default_value on_op UNK on_comma on_op block on_rparen on_ignored_nl UNK on_lparen on_symbeg # Gets a result from a $var name and a navigation string #
