UNK on_const on_op on_const on_nl UNK on_const on_op on_const on_op on_const on_nl UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl # This class is an implementation of a simple mechanism for loading and returning reports. # The intent is that a user registers a report by calling {register_report} and providing a code # block that performs setup, and defines a method called `process`. The setup, and the `process` method # are called in the context where `self` is an instance of {Puppet::Transaction::Report} which provides the actual # data for the report via its methods. # # @example Minimal scaffolding for a report... # Puppet::Reports::.register_report(:myreport) do # # do setup here # def process # if self.status == 'failed' # msg = "failed puppet run for #{self.host} #{self.status}" # . . . # else # . . . # end # end # end # # Required configuration: # -- # * A .rb file that defines a new report should be placed in the master's directory `lib/puppet/reports` # * The `puppet.conf` file must have `report = true` in the `[agent]` section # # @see Puppet::Transaction::Report # @api public #
UNK on_symbeg report on_comma on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_op UNK on_nl UNK on_symbeg UNK on_nl end on_nl on_ignored_nl # Set up autoloading and retrieving of reports.
UNK on_symbeg UNK on_nl end on_nl on_ignored_nl UNK UNK on_period UNK on_lparen name on_comma UNK on_op UNK UNK on_comma on_op # @api private
UNK UNK on_period UNK on_lparen name on_comma UNK on_op UNK UNK on_comma on_op UNK on_rparen on_ignored_nl name on_op name on_period # Adds a new report type. # The block should contain setup, and define a method with the name `process`. The `process` method is # called when the report is executed; the `process` method has access to report data via methods available # in its context where `self` is an instance of {Puppet::Transaction::Report}. # # For an example, see the overview of this class. # # @param name [Symbol] the name of the report (do not use whitespace in the name). # @param options [Hash] a hash of options # @option options [Boolean] :useyaml whether yaml should be used or not # @todo Uncertain what the options :useyaml really does; "whether yaml should be used or not", used where/how? #
UNK UNK on_period UNK on_nl UNK on_op on_tstring_beg on_tstring_end on_nl on_ignored_nl UNK on_lparen on_symbeg report on_rparen on_period UNK on_lparen on_const # Collects the docs for all reports. # @api private
UNK on_lparen on_symbeg report on_rparen on_period UNK on_lparen on_const on_period UNK on_lparen on_symbeg UNK on_rparen on_rparen on_nl UNK on_lparen on_symbeg # Use this method so they all get loaded
UNK UNK on_period UNK on_nl UNK on_lparen on_symbeg report on_rparen on_period UNK on_lparen on_const on_period UNK on_lparen on_symbeg UNK on_rparen # Lists each of the reports. # @api private
