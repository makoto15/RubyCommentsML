it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl expect on_lparen on_const on_op on_const on_period UNK on_rparen on_period to UNK do on_op name # Check a precondition for the next block; if this fails you have # something odd in your set of face, and we skip testing things that # matter. --daniel 2011-04-10
on_const on_op on_const on_period UNK on_period each do on_op name on_op on_ignored_nl UNK UNK UNK on_period UNK on_lparen name on_rparen # The main purpose of the help face is to provide documentation for # command line users. It shouldn't show documentation for faces # that can't be run from the command line, so, rather than iterating # over all available faces, we need to iterate over the subcommands # that are available from the command line.
expect on_lparen on_const on_op on_const on_lbracket on_symbeg module on_comma on_symbeg current on_rbracket on_rparen on_period to receive on_lparen on_symbeg UNK on_rparen # Stub the module face as deprecated
it on_lbrace expect on_lparen subject on_period UNK on_rparen on_period to UNK on_op UNK on_rbrace on_nl on_ignored_nl UNK on_tstring_content UNK on_tstring_content # If we don't, these tests are ... less than useful, because they assume # it. When this breaks you should consider ditching the entire feature # and tests, but if not work out how to fake one. --daniel 2011-04-11
UNK on_tstring_content UNK on_tstring_content on_tstring_end on_period each do on_op name on_op on_ignored_nl it on_lbrace UNK on_period UNK UNK name on_rbrace # Meh. This is nasty, but we can't control the other list; the specific # bug that caused these to be listed is annoyingly subtle and has a nasty # fix, so better to have a "fail if you do something daft" trigger in # place here, I think. --daniel 2011-04-11
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl help on_op subject on_period help on_lparen appname on_rparen on_nl expect on_lparen help on_rparen on_period # This test is purposely generic, so that as we eliminate legacy commands # we don't get into a loop where we either test a face-based replacement # and fail to notice breakage, or where we have to constantly rewrite this # test and all. --daniel 2011-04-11
