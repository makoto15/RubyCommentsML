let on_lparen on_symbeg model on_rparen on_lbrace UNK on_period model on_rbrace on_nl let on_lparen on_symbeg UNK on_rparen on_lbrace on_const on_op on_const # The model is Puppet:FileServing::Metadata
let on_lparen on_symbeg UNK on_rparen on_lbrace on_const on_op on_const on_op on_const on_period UNK on_lparen key on_rparen on_rbrace on_nl let on_lparen # The http terminus creates instances of HttpMetadata which subclass Metadata
let on_lparen on_symbeg UNK on_rparen on_lbrace on_lbrace on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_content on_tstring_end on_rbrace on_rbrace on_nl let on_lparen on_symbeg # Digest::MD5.base64digest("") => "1B2M2Y8AsgTpgAmY7PhCfg=="
stub_request on_lparen on_symbeg head on_comma key on_rparen on_ignored_nl on_period to_return on_lparen on_label on_int on_comma on_label on_const on_period merge on_lparen on_tstring_beg # Content-MD5 header is missing '==' padding
expect on_lparen model on_period indirection on_period find on_lparen key on_rparen on_rparen on_period to be_nil on_nl end on_nl on_ignored_nl it on_tstring_beg # this is kind of strange, but it does allow puppet to try # multiple `source => ["URL1", "URL2"]` and use the first # one based on sourceselect
stub_request on_lparen on_symbeg head on_comma key on_rparen on_period UNK do on_op UNK on_op on_ignored_nl expect on_lparen UNK on_period UNK on_rparen # HTTP/1.1 defaults to persistent connections, so check for # the header's absence
