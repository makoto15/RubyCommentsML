on_ignored_nl UNK UNK on_lparen test_resources on_rparen on_ignored_nl manifest on_op on_tstring_beg on_tstring_end on_nl test_resources on_op on_lbracket test_resources on_rbracket on_period UNK test_resources # for now, just for #random_string
UNK UNK on_lparen test_resources on_rparen on_ignored_nl manifest on_op on_tstring_beg on_tstring_end on_nl test_resources on_op on_lbracket test_resources on_rbracket on_period UNK test_resources on_period # FIXME: yardocs # TODO: create resource class which contains its manifest chunk, and assertions # can be an array or singular, holds the manifest and the assertion_code # has getter for the manifest # has #run_assertions(BeakerResult or string)
test_resources on_period UNK UNK on_op resource on_op on_ignored_nl manifest on_op resource on_lbracket on_symbeg UNK on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end if # ensure it's an array so we enumerate properly
manifest on_op resource on_lbracket on_symbeg UNK on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end on_op UNK on_op on_tstring_beg on_tstring_content on_tstring_end if resource on_lbracket # ensure these are double quotes around the namevar incase users puppet-interpolate inside it # FIXME: add test ^^
test_resources on_period UNK UNK on_op resource on_op on_ignored_nl if resource on_lbracket on_symbeg assertions on_rbracket on_nl resource on_lbracket on_symbeg assertions on_rbracket # ensure it's an array so we enumerate properly
resource on_lbracket on_symbeg assertions on_rbracket on_period UNK UNK on_op assertion_type on_op on_ignored_nl expect_failure on_op UNK on_nl if assertion_type on_lbracket on_symbeg # ensure it's an array so we enumerate properly
assertion_type on_lbracket on_symbeg expect_failure on_rbracket on_period UNK on_lparen on_symbeg UNK on_rparen on_nl assertion_type on_op assertion_type on_lbracket on_symbeg expect_failure on_rbracket on_nl # delete the message
assertion_type on_op assertion_type on_lbracket on_symbeg expect_failure on_rbracket on_nl assertion_type on_period UNK on_lparen on_symbeg expect_failure on_rparen on_nl end on_nl on_ignored_nl UNK # promote the hash in expect_failure
UNK on_op on_lbracket assertion_type on_period UNK on_rbracket on_period UNK on_nl UNK on_period UNK UNK on_op assertion_value on_op on_ignored_nl if assertion_type # ensure all the values are arrays
if assertion_type on_period UNK on_period UNK on_op UNK on_tstring_content UNK on_nl UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK assertion_type on_period # TODO: non matching asserts? # TODO: non stdout? (support stdout, stderr, exit_code) # TODO: what about checking resource state on host (non agent/apply #on use)?
UNK on_period UNK on_op UNK on_nl end on_nl UNK on_op UNK on_nl on_ignored_nl UNK on_ignored_nl UNK on_lparen assertions on_rparen on_nl # handle results sent in as string
