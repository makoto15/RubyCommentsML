it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl on_ivar on_period set_arguments on_symbeg name on_op nil on_nl on_ivar on_lbracket on_symbeg name on_rbracket on_op # this test is to clarify a crazy edge case # if you specify these special names as params, the resource # will override the special variables
on_ivar on_period catalog on_period add_resource on_ivar on_nl on_ignored_nl on_ivar on_op on_const on_op on_const on_op on_const on_period new on_lparen on_symbeg hostclass # This is so the internal resource lookup works, yo.
expect on_lparen on_ivar on_rparen on_period to receive on_lparen on_symbeg set_resource_parameters on_rparen on_period with on_lparen on_ivar on_comma subscope on_rparen on_nl on_ignored_nl # Just to keep the stub quiet about intermediate calls
on_ivar on_period catalog on_period add_resource on_lparen UNK on_rparen on_nl expect on_lbrace on_ivar on_period ensure_in_catalog on_lparen on_ivar on_comma on_lbrace on_rbrace on_rparen # add the same class resource to the catalog
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl on_ivar on_period ensure_in_catalog on_lparen on_ivar on_rparen on_nl on_ignored_nl expect on_lparen on_ivar on_period catalog on_rparen # #795 - tag before evaluation.
UNK on_op on_const on_op on_const on_op on_const on_op on_const on_period new on_lparen on_symbeg UNK on_op on_lbracket code on_lparen on_tstring_beg on_tstring_content # PUP-3274, the code merging at the top still uses AST::BlockExpression # But does not do mutating changes to code blocks, instead a new block is created # with references to the two original blocks. # TODO: fix this when the code merging is changed at the very top in 4x. #
