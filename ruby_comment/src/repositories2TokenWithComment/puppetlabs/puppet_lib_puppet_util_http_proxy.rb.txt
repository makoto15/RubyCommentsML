UNK on_period UNK on_op nil on_nl UNK on_nl end on_nl end on_nl on_ignored_nl def self on_period UNK on_nl UNK on_op # Net::HTTP defaults the proxy port even though we said not to # use one. Set it to nil so caller is not surprised
UNK on_op on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl UNK on_ignored_nl return on_const # Returns a URI object if proxy is set, or nil
def self on_period UNK on_lparen dest on_rparen on_ignored_nl no_proxy on_op self on_period no_proxy on_nl UNK no_proxy on_nl return UNK on_nl # The documentation around the format of the no_proxy variable seems # inconsistent. Some suggests the use of the * as a way of matching any # hosts under a domain, e.g.: # *.example.com # Other documentation suggests that just a leading '.' indicates a domain # level exclusion, e.g.: # .example.com # We'll accommodate both here.
if port on_nl UNK on_op UNK on_embexpr_beg host on_embexpr_end on_tstring_content on_embexpr_beg port on_embexpr_end on_tstring_content UNK on_nl UNK on_op on_tstring_beg on_embexpr_beg #If this no_proxy entry specifies a port, we want to match it against #the destination port. Otherwise just match hosts.
def self on_period UNK on_lparen uri on_rparen on_ignored_nl proxy on_op proxy on_lparen uri on_rparen on_nl on_ignored_nl if uri on_period UNK # Return a Net::HTTP::Proxy object. # # This method optionally configures SSL correctly if the URI scheme is # 'https', including setting up the root certificate store so remote server # SSL certificates can be validated. # # @param [URI] uri The URI that is to be accessed. # @return [Net::HTTP::Proxy] object constructed tailored for the passed URI
def self on_period UNK on_lparen uri on_comma UNK on_comma UNK on_op UNK on_comma on_op UNK on_rparen on_ignored_nl current_uri on_op uri # Retrieve a document through HTTP(s), following redirects if necessary. The # returned response body may be compressed, and it is the caller's # responsibility to decompress it based on the 'content-encoding' header. # # Based on the the client implementation in the HTTP pool. # # @see Puppet::Network::HTTP::Connection#request_with_redirects # # @param [URI] uri The address of the resource to retrieve. # @param [symbol] method The name of the Net::HTTP method to use, typically :get, :head, :post etc. # @param [FixNum] redirect_limit The number of redirections that can be followed. # @return [Net::HTTPResponse] a response object
current_uri on_op on_const on_period UNK on_lparen response on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_rparen on_nl UNK on_nl end on_nl on_ignored_nl if # handle the redirection
