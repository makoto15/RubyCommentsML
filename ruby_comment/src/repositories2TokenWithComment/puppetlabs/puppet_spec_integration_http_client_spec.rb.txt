UNK on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma UNK on_rparen on_nl port on_op UNK on_period UNK on_period UNK # get available port, but don't bind to it
expect on_lparen UNK on_rparen on_period to UNK on_lparen on_ignored_nl UNK on_lparen on_label on_symbeg UNK on_comma on_label on_regexp_beg on_tstring_content on_regexp_end on_rparen # TLS version string can be TLSv1 or TLSv1.[1-3], but not TLSv1.0
UNK on_period UNK on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_nl on_rbrace on_nl on_rbrace on_nl # configures the server to require the client to present a client cert
UNK on_op UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_const on_period UNK on_lparen UNK on_comma https_server on_period UNK on_rparen on_nl # create a temp cacert bundle
on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_op UNK on_rparen do on_ignored_nl system_context on_op ssl_provider on_period UNK on_lparen # override path to system cacert bundle, this must be done before # the SSLContext is created and the call to X509::Store.set_default_paths
UNK on_op UNK on_lparen UNK on_comma res on_rparen UNK on_ignored_nl res on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end # advertise that we support keep-alive, but we don't really
expect on_lparen client on_period UNK on_lparen UNK on_comma on_tstring_beg on_tstring_end on_comma on_op UNK on_rparen on_rparen on_period to be_success on_nl on_rbrace # the server closes its connection after each request, so posting # again will force ruby to detect that the remote side closed the # connection, and reconnect
