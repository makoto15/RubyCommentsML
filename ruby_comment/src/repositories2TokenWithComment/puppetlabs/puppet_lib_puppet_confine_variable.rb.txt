UNK on_const on_op on_const on_op on_const on_op on_const on_op on_const on_nl def UNK on_period UNK on_lparen UNK on_rparen on_ignored_nl UNK # Require a specific value for a variable, either a Puppet setting # or a Facter value. This class is a bit weird because the name # is set explicitly by the ConfineCollection class -- from this class, # it's not obvious how the name would ever get set.
def UNK on_period UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_const on_period UNK UNK on_op UNK UNK UNK on_op UNK # Provide a hash summary of failing confines -- the key of the hash # is the name of the confine, and the value is the missing yet required values. # Only returns failed values, not all required values.
UNK UNK name on_nl on_ignored_nl def UNK on_nl UNK on_op on_op on_const on_period UNK on_lparen name on_rparen on_period UNK on_period # This is set by ConfineCollection.
def UNK on_nl UNK on_op on_op on_const on_period UNK on_lparen name on_rparen on_period UNK on_period UNK on_nl end on_nl on_ignored_nl # Retrieve the value from facter
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK on_period UNK on_op UNK on_period UNK on_period UNK on_nl end on_nl # Compare the passed-in value to the retrieved value.
UNK on_op UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_period UNK on_lparen UNK on_period UNK on_period UNK on_rparen # Reset the cache. We want to cache it during a given # run, but not across runs.
