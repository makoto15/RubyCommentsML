def render_multiple on_lparen instances on_rparen on_ignored_nl instances on_period UNK on_nl end on_nl on_ignored_nl def UNK on_lparen klass on_rparen on_ignored_nl true # Yaml monkey-patches Array, so this works.
on_const on_op on_const on_op on_const on_period UNK on_lparen on_symbeg UNK on_comma on_symbeg UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_comma on_symbeg UNK # By default, to_binary is called to render and from_binary called to intern. Note unlike # text-based formats (json, yaml, etc), we don't use to_data_hash for binary.
on_const on_op on_const on_op on_const on_period create_serialized_formats on_lparen on_symbeg UNK on_comma on_symbeg UNK on_op on_int on_comma on_symbeg UNK on_op on_lbracket # PSON is deprecated
def render_multiple on_lparen instances on_rparen on_ignored_nl instances on_period UNK on_nl end on_nl on_ignored_nl def data_to_instance on_lparen klass on_comma data on_rparen # PSON monkey-patches Array, so this works.
def data_to_instance on_lparen klass on_comma data on_rparen on_ignored_nl UNK on_op data on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket if data on_period is_a? # If they pass class information, we want to ignore it. # This is required for compatibility with Puppet 3.x
def data_to_instance on_lparen klass on_comma data on_rparen on_ignored_nl return data if data on_period is_a? on_lparen klass on_rparen on_nl klass on_period # Unlike PSON, we do not need to unwrap the data envelope, because legacy 3.x agents # have never supported JSON
on_const on_op on_const on_op on_const on_period create_serialized_formats on_lparen on_symbeg UNK on_comma on_symbeg UNK on_op on_lbracket on_symbeg UNK on_rbracket on_rparen on_nl # This is really only ever going to be used for Catalogs.
if datum on_period is_a? on_lparen on_const on_rparen on_op datum on_period UNK on_period UNK on_lbrace on_op UNK on_op UNK on_period is_a? # Simple hash to table
if datum on_period is_a? on_const on_nl output on_op on_tstring_beg on_tstring_end on_nl datum on_period UNK do on_op UNK on_op on_ignored_nl output # Print one item per line for arrays
on_const on_op on_const on_op on_const on_period UNK on_lparen datum on_comma on_symbeg UNK on_op true on_comma on_symbeg UNK on_op true on_rparen # ...or pretty-print the inspect outcome.
