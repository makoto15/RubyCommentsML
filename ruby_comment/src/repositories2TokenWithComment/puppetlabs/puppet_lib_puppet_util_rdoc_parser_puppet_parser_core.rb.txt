UNK on_const on_op on_const on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl def UNK on_period UNK on_lparen UNK on_rparen # Functionality common to both our RDoc version 1 and 2 parsers.
UNK on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl end on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_comma UNK on_comma UNK # parser registration into RDoc
def UNK on_lparen UNK on_comma UNK on_comma UNK on_comma options on_comma UNK on_rparen on_ignored_nl on_ivar on_op options on_nl on_ivar on_op # called with the top level file
def UNK on_nl environment on_op on_const on_period UNK on_lparen on_symbeg UNK on_rparen on_nl UNK on_lparen on_ivar on_comma environment on_rparen on_nl # main entry point
def UNK on_lparen container on_comma name on_rparen on_ignored_nl UNK container if container on_period name on_op name on_nl container on_period UNK # Due to a bug in RDoc, we need to roll our own find_module_named # The issue is that RDoc tries harder by asking the parent for a class/module # of the name. But by doing so, it can mistakenly use a module of same name # but from which we are not descendant.
def UNK on_lparen container on_comma name on_rparen on_ignored_nl on_ignored_nl if name on_op on_regexp_beg on_tstring_content on_regexp_end on_nl container on_op on_ivar on_nl # walk down the namespace and lookup/create container as needed
if name on_op on_regexp_beg on_tstring_content on_regexp_end on_nl container on_op on_ivar on_nl end on_nl on_ignored_nl UNK on_op name on_period UNK on_lparen # class ::A -> A is in the top level
def UNK on_lparen UNK on_comma environment on_rparen on_ignored_nl UNK on_op on_const on_period UNK on_lparen UNK on_rparen on_nl on_const on_period debug # split_module tries to find if +path+ belongs to the module path # if it does, it returns the module name, otherwise if we are sure # it is part of the global manifest path, "__site__" is returned. # And finally if this path couldn't be mapped anywhere, nil is returned.
UNK on_op on_const on_period UNK on_lparen UNK on_rparen on_nl on_const on_period debug on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_end on_nl if # find a module
environment on_period UNK on_period each do on_op UNK on_op on_ignored_nl dirname on_op UNK on_nl UNK on_op dirname on_nl UNK on_lparen # there can be paths we don't want to scan under modules # imagine a ruby or manifest that would be distributed as part as a module # but we don't want those to be hosted under <site>
dirname on_op UNK on_nl UNK on_op dirname on_nl UNK on_lparen dirname on_op on_const on_period dirname on_lparen UNK on_rparen on_rparen on_op # check that fullpath is a descendant of mp
on_const on_period debug on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_nl end on_nl on_ignored_nl def UNK on_lparen container on_comma environment on_rparen on_ignored_nl # we are under a global manifests
def UNK on_lparen container on_comma environment on_rparen on_ignored_nl comment on_op on_tstring_beg on_tstring_end on_nl UNK on_tstring_content UNK on_tstring_content on_tstring_end on_period each # create documentation for the top level +container+
comment on_op on_tstring_beg on_tstring_end on_nl UNK on_tstring_content UNK on_tstring_content on_tstring_end on_period each do on_op UNK on_op on_ignored_nl UNK on_op on_const # use the module README as documentation for the module
comment on_op on_const on_period UNK on_lparen UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen UNK on_op UNK on_op UNK on_period UNK UNK # module README should be UTF-8, not default system encoding
name on_op UNK on_lparen on_ivar on_comma environment on_rparen on_nl if name on_period UNK on_nl container on_period UNK on_op UNK on_nl # infer module name from directory
container on_period UNK on_op UNK on_nl UNK on_nl end on_nl on_ignored_nl on_const on_period debug on_tstring_beg on_tstring_content on_embexpr_beg name on_embexpr_end on_tstring_end # skip .pp files that are not in manifests directories as we can't guarantee they're part # of a module or the global configuration. # PUP-3638, keeping this while it should have no effect since no .pp files are now processed
def UNK on_lparen container on_rparen on_ignored_nl on_const on_period debug on_tstring_beg on_tstring_content on_tstring_end on_nl if on_ivar on_op on_regexp_beg on_tstring_content on_regexp_end on_nl # create documentation for plugins
def UNK on_lparen container on_rparen on_ignored_nl comments on_op on_tstring_beg on_tstring_end on_nl current_fact on_op UNK on_nl UNK on_op UNK UNK on_nl # this is a poor man custom fact parser :-)
if line on_op on_regexp_beg on_tstring_content on_regexp_end on_nl comments on_op on_backref on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK line on_op on_regexp_beg on_tstring_content # fetch comments
comments on_op on_tstring_beg on_tstring_end on_nl end on_nl end on_nl end on_nl UNK on_period each do on_op UNK on_op on_ignored_nl container # unknown line type
def UNK on_lparen container on_rparen on_ignored_nl comments on_op on_tstring_beg on_tstring_end on_nl current_plugin on_op UNK on_nl on_ignored_nl on_const on_period UNK on_lparen # this is a poor man puppet plugin parser :-) # it doesn't extract doc nor desc :-(
if line on_op on_regexp_beg on_tstring_content on_regexp_end on_nl comments on_op on_backref on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK line on_op on_regexp_beg on_tstring_content # fetch comments
UNK comments on_op on_tstring_beg on_tstring_end on_nl end on_nl end on_nl end on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_lparen # skip
comments on_op on_tstring_beg on_tstring_end on_nl end on_nl end on_nl end on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_lparen on_const # unknown line type
def UNK on_nl UNK on_lparen on_const on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_comma # New instance of the appropriate PreProcess for our RDoc version.
def UNK on_lparen UNK on_comma comment on_rparen on_ignored_nl UNK on_op UNK on_nl on_ignored_nl UNK on_period UNK on_lparen comment on_rparen do # look_for_directives_in scans the current +comment+ for RDoc directives
UNK on_symbeg UNK on_nl when on_tstring_beg on_tstring_content on_tstring_end on_nl options on_op on_const on_period UNK on_nl options on_period UNK on_op UNK #context.done_documenting = true #""
UNK on_nl UNK on_ignored_nl UNK on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_tstring_end on_nl UNK on_nl end on_nl end on_nl UNK # 1.8 doesn't support #clear
