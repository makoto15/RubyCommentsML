on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end #! /usr/bin/env ruby #-- # Copyright 2004 Austin Ziegler <ruby-install@halostatue.ca> # Install utility. Based on the original installation script for rdoc by the # Pragmatic Programmers. # # This program is free software. It may be redistributed and/or modified under # the terms of the GPL version 2 (or later) or the Ruby licence. # # Usage # ----- # In most cases, if you have a typical project layout, you will need to do # absolutely nothing to make this work for you. This layout is: # # bin/ # executable files -- "commands" # lib/ # the source of the library # # The default behaviour: # 1) Build Rdoc documentation from all files in bin/ (excluding .bat and .cmd), # all .rb files in lib/, ./README, ./ChangeLog, and ./Install. # 2) Build ri documentation from all files in bin/ (excluding .bat and .cmd), # and all .rb files in lib/. This is disabled by default on Microsoft Windows. # 3) Install commands from bin/ into the Ruby bin directory. On Windows, if a # if a corresponding batch file (.bat or .cmd) exists in the bin directory, # it will be copied over as well. Otherwise, a batch file (always .bat) will # be created to run the specified command. # 4) Install all library files ending in .rb from lib/ into Ruby's # site_lib/version directory. # #++
unless on_gvar on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_op UNK on_tstring_content on_tstring_end on_nl UNK on_period UNK on_nl UNK on_embexpr_beg UNK # Solaris does not support gzipped man pages. When called with # --no-check-prereqs/without facter the default gzip behavior still applies
def UNK on_nl on_const on_period each on_lbrace on_op UNK on_op on_ignored_nl UNK on_ignored_nl require UNK on_nl if UNK on_op on_tstring_beg # Verify that all of the prereqs are installed
UNK on_op on_const on_period UNK on_period UNK on_nl if UNK on_op on_const on_nl puts on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content # to_f isn't quite exact for strings like "1.5.1" but is good # enough for this purpose.
def UNK on_nl on_const on_period configs on_op true on_nl on_const on_period UNK on_op true on_nl on_const on_period UNK on_op true ## # Prepare the file installation. #
if on_gvar on_nl on_const on_period UNK on_op true on_nl on_const on_period ri on_op true on_nl else on_ignored_nl on_const on_period UNK # Only try to do docs if we're sure they have rdoc
if on_const on_op on_regexp_beg on_tstring_content on_regexp_end on_nl on_const on_op on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end on_nl # Mac OS X 10.5 and higher declare bindir # /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin # which is not generally where people expect executables to be installed # These settings are appropriate defaults for all OS X versions.
if on_const on_period UNK on_nl UNK on_nl on_gvar on_op on_const on_period UNK on_symbeg UNK on_nl end on_nl on_ignored_nl if on_gvar # Here we only set $operatingsystem if we have opted to check for prereqs. # Otherwise facter won't be guaranteed to be present.
require on_tstring_beg on_tstring_content on_tstring_end on_nl rescue on_const on_op e on_nl puts on_tstring_beg on_tstring_content on_embexpr_beg e on_embexpr_end on_tstring_end on_nl UNK on_lparen # populates constants used to specify default Windows directories
if not on_const on_period destdir on_period nil? on_nl destdir on_op on_const on_period destdir on_nl elsif not on_const on_lbracket on_tstring_beg on_tstring_content # This is the new way forward
elsif not on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period nil? on_nl destdir on_op on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl # To be deprecated once people move over to using --destdir option
def join on_lparen UNK on_comma UNK on_rparen on_ignored_nl UNK on_tstring_beg on_embexpr_beg UNK on_embexpr_end on_embexpr_beg UNK on_lbracket on_int on_op on_op on_int ## # Join two paths. On Windows, dir must be converted to a relative path, # by stripping the drive letter, but only if the basedir is not empty. #
def UNK on_lparen UNK on_rparen on_ignored_nl UNK unless on_gvar on_nl UNK on_ignored_nl UNK on_op on_const on_op on_const on_period UNK on_nl ## # Build the rdoc documentation. Also, try to build the RI documentation. #
ri on_period UNK on_lparen on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op UNK on_rparen on_nl rescue on_const on_op on_const on_op e on_nl #ri.document(["--ri-site", "--merge"] + files)
def UNK on_lparen from on_comma UNK on_comma target on_rparen on_ignored_nl UNK on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen ## # Install file(s) from ./bin to RbConfig::CONFIG['bindir']. Patch it on the way # to insert a #! line; on a Unix install, the command is named as expected # (e.g., bin/rdoc becomes rdoc); the shebang line handles running it. Under # windows, we add an '.rb' extension and let file associations do their stuff.
on_const on_period UNK on_const on_period UNK on_lparen UNK on_rparen do on_ignored_nl configs on_op glob on_lparen on_qwords_beg on_tstring_content UNK on_tstring_content UNK # Change directory into the puppet root so we don't get the wrong files for install.
configs on_op glob on_lparen on_qwords_beg on_tstring_content UNK on_tstring_content UNK on_tstring_content on_tstring_end on_rparen on_nl UNK on_op glob on_lparen on_qwords_beg on_tstring_content on_tstring_end # Set these values to what you want installed.
UNK on_op glob on_lparen on_qwords_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_op glob on_lparen on_qwords_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_op #rdoc = glob(%w{bin/* lib/**/*.rb README* }).reject { |e| e=~ /\.(bat|cmd)$/ } #ri = glob(%w{bin/*.rb lib/**/*.rb}).reject { |e| e=~ /\.(bat|cmd)$/ }
UNK on_lparen configs on_comma on_const on_period UNK on_rparen if on_const on_period configs on_nl UNK on_lparen UNK on_comma on_const on_period UNK #build_rdoc(rdoc) if InstallOptions.rdoc #build_ri(ri) if InstallOptions.ri
