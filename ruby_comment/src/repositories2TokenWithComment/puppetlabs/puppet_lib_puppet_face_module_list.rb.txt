on_ignored_nl on_const on_op on_const on_period UNK on_lparen on_symbeg UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen do on_ignored_nl UNK on_lparen on_symbeg UNK # encoding: UTF-8
UNK on_op UNK on_period UNK on_lbrace on_op UNK on_op UNK on_period UNK on_period UNK on_rbrace on_nl on_ivar on_op on_lbrace on_rbrace # The modules with fewest things depending on them will be the # parent of the tree. Can't assume to start with 0 dependencies # since dependencies may be cyclical.
environment on_period UNK on_period UNK on_lbrace on_op mod on_op mod on_period name on_rbrace on_period each do on_op mod on_op on_ignored_nl # Prepare the unmet dependencies for display on the console.
UNK on_op on_lbracket on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_rbracket on_nl UNK on_period each do on_op type on_op # Display unmet dependencies by category.
UNK UNK on_lparen UNK on_comma UNK on_op on_lbracket on_rbracket on_comma parent on_op UNK on_comma params on_op on_lbrace on_rbrace on_rparen on_ignored_nl # Prepare a list of module objects and their dependencies for print in a # tree view. # # Returns an Array of Hashes # # Example: # # [ # { # :text => "puppetlabs-bacula (v0.0.2)", # :dependencies=> [ # { :text => "puppetlabs-stdlib (v2.2.1)", :dependencies => [] }, # { # :text => "puppetlabs-mysql (v1.0.0)" # :dependencies => [ # { # :text => "bodepd-create_resources (v0.0.1)", # :dependencies => [] # } # ] # }, # { :text => "puppetlabs-sqlite (v0.0.1)", :dependencies => [] }, # ] # } # ] # # When the above data structure is passed to Puppet::ModuleTool.build_tree # you end up with something like this: # # /etc/puppetlabs/code/modules # └─┬ puppetlabs-bacula (v0.0.2) # ├── puppetlabs-stdlib (v2.2.1) # ├─┬ puppetlabs-mysql (v1.0.0) # │ └── bodepd-create_resources (v0.0.1) # └── puppetlabs-sqlite (v0.0.1) #
UNK UNK on_lparen mod on_comma parent on_comma params on_rparen on_ignored_nl str on_op on_tstring_beg on_tstring_end on_nl str on_op on_lparen mod on_period # Prepare a module object for print in a tree view. Each node in the tree # must be a Hash in the following format: # # { :text => "puppetlabs-mysql (v1.0.0)" } # # The value of a module's :text is affected by three (3) factors: the format # of the tree, its dependency status, and the location in the modulepath # relative to its parent. # # Returns a Hash #
