UNK on_const on_op on_const on_op on_const on_nl UNK on_nl on_ignored_nl def UNK on_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_comma # A stand-alone module for calculating checksums # in a generic way.
def UNK on_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg # It's not a good idea to use some of these in some contexts: for example, I # wouldn't try bucketing a file using the :none checksum type.
def UNK on_lparen string on_rparen on_ignored_nl string on_op on_regexp_beg on_tstring_content on_regexp_end on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen # Is the provided string a checksum?
string on_op on_regexp_beg on_tstring_content on_regexp_end on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_regexp_beg on_tstring_content on_regexp_end # 'sha256lite'.length == 10
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_regexp_beg on_tstring_content on_regexp_end on_op UNK on_op UNK on_nl end on_nl on_ignored_nl def # Strip the checksum type from an existing checksum
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_regexp_beg on_tstring_content on_regexp_end on_op UNK on_op UNK on_nl end on_nl on_ignored_nl def # Strip the checksum type from an existing checksum
def UNK on_lparen content on_rparen on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_op on_const on_period hexdigest on_lparen content on_rparen on_nl # Calculate a checksum using Digest::SHA256.
def UNK on_lparen content on_rparen on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_op on_const on_period hexdigest on_lparen content on_rparen on_nl # Calculate a checksum using Digest::SHA384.
def UNK on_lparen content on_rparen on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_op on_const on_period hexdigest on_lparen content on_rparen on_nl # Calculate a checksum using Digest::SHA512.
def UNK on_lparen content on_rparen on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_op on_const on_op on_const on_period new on_period hexdigest # Calculate a checksum using Digest::SHA224.
def UNK on_lparen content on_rparen on_ignored_nl on_const on_op on_const on_period hexdigest on_lparen content on_rparen on_nl end on_nl on_ignored_nl def UNK # Calculate a checksum using Digest::MD5.
def UNK on_lparen filename on_comma lite on_op false on_rparen on_ignored_nl digest on_op on_const on_op on_const on_period new on_nl checksum_file on_lparen # Calculate a checksum of a file's content using Digest::MD5.
def UNK on_lparen content on_rparen on_ignored_nl UNK on_lparen content UNK on_int on_op on_int UNK on_rparen on_nl end on_nl on_ignored_nl def # Calculate a checksum of the first 500 chars of the content using Digest::MD5.
def UNK on_lparen filename on_rparen on_ignored_nl UNK on_lparen filename on_comma true on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen on_op # Calculate a checksum of the first 500 chars of a file's content using Digest::MD5.
def UNK on_lparen filename on_rparen on_ignored_nl on_const on_op on_const on_period UNK on_lparen filename on_rparen on_period UNK on_lparen on_symbeg UNK on_rparen # Return the :mtime timestamp of a file.
def UNK on_lparen on_op block on_rparen on_ignored_nl UNK on_op on_const on_period new on_nl UNK UNK on_nl UNK on_nl end on_nl # by definition this doesn't exist # but we still need to execute the block given
def UNK on_lparen content on_rparen on_ignored_nl on_const on_op on_const on_period hexdigest on_lparen content on_rparen on_nl end on_nl on_ignored_nl def UNK # Calculate a checksum using Digest::SHA1.
def UNK on_lparen filename on_comma lite on_op false on_rparen on_ignored_nl digest on_op on_const on_op on_const on_period new on_nl checksum_file on_lparen # Calculate a checksum of a file's content using Digest::SHA1.
def UNK on_lparen content on_rparen on_ignored_nl UNK on_lparen content UNK on_int on_op on_int UNK on_rparen on_nl end on_nl on_ignored_nl def # Calculate a checksum of the first 500 chars of the content using Digest::SHA1.
def UNK on_lparen filename on_rparen on_ignored_nl UNK on_lparen filename on_comma true on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen on_op # Calculate a checksum of the first 500 chars of a file's content using Digest::SHA1.
def UNK on_lparen filename on_rparen on_ignored_nl on_const on_op on_const on_period UNK on_lparen filename on_rparen on_period UNK on_lparen on_symbeg UNK on_rparen # Return the :ctime of a file.
def UNK on_lparen filename on_rparen on_ignored_nl on_tstring_beg on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_op on_const on_period new # Return a "no checksum"
def on_op on_lparen UNK on_rparen on_ignored_nl UNK on_ivar on_nl UNK on_ivar on_op on_int on_nl UNK on_op UNK UNK on_int on_comma # Provide an interface for digests. If lite, only digest the first 512 bytes
def checksum_file on_lparen digest on_comma filename on_comma lite on_op false on_rparen on_ignored_nl UNK on_op lite on_op on_int on_op on_int on_nl # Perform an incremental checksum on a file.
digest on_op content on_nl UNK UNK lite on_nl end on_nl end on_nl on_ignored_nl digest on_period hexdigest on_nl end on_nl on_ignored_nl #rubocop:disable Lint/AssignmentInCondition
