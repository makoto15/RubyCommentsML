UNK on_symbeg UNK on_comma on_symbeg UNK on_op on_regexp_beg on_tstring_content on_regexp_end UNK on_symbeg UNK on_comma on_symbeg UNK on_op on_regexp_beg on_tstring_content on_regexp_end # translation not supported
UNK on_symbeg UNK on_comma on_symbeg UNK on_op on_regexp_beg on_tstring_content on_regexp_end UNK on_symbeg UNK on_comma on_symbeg UNK on_op on_regexp_beg on_tstring_content on_regexp_end # translation not supported
UNK on_symbeg UNK on_comma on_symbeg UNK on_op on_regexp_beg on_tstring_content on_regexp_end on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end # translation not supported
on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_const on_op # translation not supported
end on_nl on_ignored_nl step on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl UNK on_op UNK on_nl on_tstring_content UNK on_ignored_nl UNK on_lparen master on_comma # TODO This test needs to be updated with the proper translation and re-enabled when translations for the affected strings are updated. # site_pp_content_3 = <<-PP # node default { # class { 'i18ndemo': param1 => false } # } # PP # create_sitepp(master, tmp_environment_1, site_pp_content_3) # on(agent, puppet("agent -t --environment #{tmp_environment_1}", 'ENV' => { 'LANGUAGE' => '', 'LANG' => language }), :acceptable_exit_codes => 1) do |result| # assert_match(/Error: リモートサーバからカタログを取得できませんでした: SERVERのエラー500 : サーバエラー: Evaluation/, result.stderr, 'missing translation for Server Error') # assert_match(/Error:.*の検証中にエラーが生じました。.*ファイルの作成に失敗しました/, result.stderr, 'missing translation for fail from init.pp') # end
