on_ignored_nl on_ignored_nl UNK on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_period UNK on_lparen UNK on_rparen on_nl UNK # By comparing account SIDs we don't have to worry about case # sensitivity, or canonicalization of account names.
on_ignored_nl UNK on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_period UNK on_lparen UNK on_rparen on_nl UNK on_op # Cannot use munge of the group property to canonicalize @should # since the default array_matching comparison is not commutative
UNK on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_period UNK on_lparen UNK on_rparen on_nl UNK on_op on_const # dupes automatically weeded out when hashes built
sid on_op UNK if on_ivar on_period UNK on_nl on_ignored_nl on_const on_op on_const on_op on_const on_op on_const on_op on_const on_period UNK # lookup sid before we delete account
def UNK on_nl on_ivar on_period UNK if on_ivar on_op on_op on_ivar on_nl end on_nl on_ignored_nl def UNK on_nl user on_lbracket # Only flush if we created or modified a user, not deleted
UNK UNK if on_ivar on_lbracket on_symbeg password on_rbracket on_period UNK on_nl user on_period UNK on_lparen on_ivar on_lbracket on_symbeg password on_rbracket # avoid a LogonUserW style password check when the resource is not yet # populated with a password (as is the case with `puppet resource user`)
