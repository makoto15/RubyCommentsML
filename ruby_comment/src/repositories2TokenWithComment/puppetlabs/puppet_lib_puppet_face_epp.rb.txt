options on_lbracket on_symbeg node on_rbracket on_op on_const on_op on_const on_period new on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_symbeg facts on_op on_const # pass a dummy node, as facts are not needed for validation
UNK on_op args on_nl if UNK on_period UNK on_nl if UNK on_const on_period UNK on_nl UNK on_op UNK on_lparen on_const # no validation error yet
on_const on_period UNK _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl end on_nl on_ignored_nl missing_files on_op on_lbracket on_rbracket on_nl # This is not an error since a validate of all files in an empty # directory should not be treated as a failed validation.
raise on_const on_op on_const on_comma _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen UNK status on_nl end on_nl end on_nl end on_nl # Exit with 1 if there were errors
options on_lbracket on_symbeg node on_rbracket on_op on_const on_op on_const on_period new on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_symbeg facts on_op on_const # pass a dummy node, as facts are not needed for dump
buffer on_op on_const on_period new on_nl on_ignored_nl if options on_lbracket on_symbeg e on_rbracket on_nl buffer on_period print UNK on_lparen options # Print to a buffer since the face needs to return the resulting string # and the face API is "all or nothing" #
buffer on_op on_const on_period new on_nl status on_op true on_nl if options on_lbracket on_symbeg e on_rbracket on_nl buffer on_period print # Print to a buffer since the face needs to return the resulting string # and the face API is "all or nothing" #
UNK on_op evaluating_parser on_period UNK on_period UNK on_lparen UNK on_rparen on_nl end on_nl if show_filename on_op options on_lbracket on_symbeg header # side step the assert_and_report step
template_file on_op on_const on_op on_const on_op on_const on_period UNK on_lparen epp_template_name on_comma compiler on_period environment on_rparen on_nl if template_file on_period # Change to an absolute file only if reference is to a an existing file. Note that an absolute file must be used # or the template must be found on the module path when calling the epp evaluator.
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_period new on_lparen # @api private
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_period new on_lparen # @api private
def UNK on_lparen options on_rparen on_ignored_nl if options on_lbracket on_symbeg node on_rbracket on_nl node on_op options on_lbracket on_symbeg node on_rbracket # @api private
on_const on_period UNK on_lbracket on_symbeg UNK on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_period UNK on_lbracket on_symbeg UNK on_rbracket on_op # If we want to lookup the node we are currently on # we must returning these settings to their default values
node on_period environment on_op on_const on_lbracket on_symbeg environment on_rbracket on_nl end on_nl on_ignored_nl fact_file on_op options on_lbracket on_symbeg facts on_rbracket # Found node must be given the environment to use in some cases, use the one configured # or given on the command line
UNK on_op fact_file on_nl UNK fact_file on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_op on_const on_op on_const on_op # when used via the Face API
node on_op on_const on_op on_const on_period new on_lparen node on_period UNK on_comma on_symbeg facts on_op on_const on_op on_const on_op on_const # It is difficult to add to or modify the set of facts once the node is created # as changes does not show up in parameters. Rather than manually patching up # a node and risking future regressions, a new node is created from scratch
compiler on_period UNK on_lparen on_symbeg UNK on_rparen on_nl on_ignored_nl compiler on_period topscope on_period UNK on_lparen on_tstring_beg on_tstring_end on_comma compiler on_period # configure compiler with facts and node related data # Set all global variables from facts
compiler on_period topscope on_period UNK on_lparen on_tstring_beg on_tstring_end on_comma compiler on_period topscope on_rparen on_nl compiler on_nl end on_nl on_ignored_nl def # pretend that the main class (named '') has been evaluated # since it is otherwise not possible to resolve top scope variables # using '::' when rendering. (There is no harm doing this for the other actions) #
def UNK on_lparen file on_comma UNK on_rparen on_ignored_nl template_file on_op on_const on_op on_const on_op on_const on_period UNK on_lparen file on_comma # Produces the effective template file from a module/template or file reference # @api private
