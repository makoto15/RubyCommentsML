UNK UNK UNK UNK UNK UNK on_nl UNK UNK UNK UNK UNK UNK UNK UNK UNK on_period UNK UNK on_nl # This module should be included when a class can be serialized to yaml and # needs to handle the deserialization from Psych with more control. Psych normally # pokes values directly into an instance using `instance_variable_set` which completely # bypasses encapsulation. # # The class that includes this module must implement an instance method `initialize_from_hash` # that is given a hash with attribute to value mappings. #
UNK UNK UNK UNK UNK UNK UNK UNK UNK on_period UNK UNK on_nl UNK on_nl UNK UNK UNK UNK UNK # This method is called from the Psych Yaml deserializer when it encounters a tag # in the form !ruby/object:<class name>. #
UNK UNK UNK on_period UNK UNK on_nl UNK on_nl UNK UNK UNK UNK UNK UNK UNK UNK UNK UNK on_period # The PsychCoder has a hashmap of instance variable name (sans the @ symbol) to values # to set, and can thus directly be fed to initialize_from_hash. #
UNK UNK UNK UNK UNK UNK UNK UNK UNK on_period UNK UNK UNK on_period UNK UNK UNK UNK UNK UNK # This method is called from the Psych Yaml serializer # The serializer will call this method to create a hash that will be serialized to YAML. # Instead of using the object itself during the mapping process we use what is # returned by calling `to_data_hash` on the object itself since some of the # objects we manage have asymmetrical serialization and deserialization. #
