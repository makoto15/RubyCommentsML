UNK on_nl on_ignored_nl newvalue on_lparen on_symbeg absent on_rparen do on_ignored_nl on_const on_op on_const on_period UNK on_lparen on_ivar on_lbracket on_symbeg path # Most 'ensure' properties have a default, but with files we, um, don't.
property on_op on_ivar on_period property on_lparen on_symbeg UNK on_rparen on_op on_ivar on_period property on_lparen on_symbeg UNK on_rparen on_nl if property # Make sure we're not managing the content some other way
newvalue on_lparen on_symbeg UNK on_comma on_symbeg event on_op on_symbeg UNK on_rparen do on_ignored_nl UNK on_nl end on_nl on_ignored_nl newvalue on_lparen #aliasvalue(:present, :file)
UNK on_nl end on_nl on_ignored_nl newvalue on_lparen on_symbeg UNK on_comma on_symbeg event on_op on_symbeg UNK on_rparen do on_ignored_nl UNK on_op # Make a file if they want something, but this will match almost # anything.
newvalue on_lparen UNK on_tstring_content UNK on_rparen do on_ignored_nl end on_nl on_ignored_nl UNK do on_op value on_op on_ignored_nl value on_op UNK # Symlinks.
end on_nl on_ignored_nl UNK do on_op value on_op on_ignored_nl value on_op UNK on_lparen value on_rparen on_nl value on_comma UNK on_lbracket # This code never gets executed. We need the regex to support # specifying it, but the work is done in the 'symlink' code block.
UNK on_op on_ivar on_period UNK on_lparen on_symbeg UNK on_rparen on_nl if UNK on_nl should on_op UNK on_period UNK on_nl else # We know that content is out of sync if we're here, because # it's essentially equivalent to 'ensure' in the transaction.
UNK UNK on_nl UNK on_op on_const on_period UNK on_lparen on_ivar on_lbracket on_symbeg path on_rbracket on_rparen on_nl on_ignored_nl if on_op on_const # Check that we can actually create anything
UNK UNK on_lparen currentvalue on_rparen on_ignored_nl unless currentvalue on_op on_symbeg absent UNK UNK on_period UNK on_nl return UNK on_nl end # We have to treat :present specially, because it works with any # type of file.
