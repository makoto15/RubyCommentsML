allow on_lparen on_const on_op on_const on_op on_const on_rparen on_period to receive on_lparen on_symbeg UNK on_rparen on_nl end on_nl on_ignored_nl it # stub this to not try to create state.yaml
expect on_lparen on_const on_op on_const on_op on_const on_period UNK on_rparen on_period to include on_lparen on_symbeg UNK on_comma on_symbeg UNK on_comma # msgpack is optional, so using include instead of eq
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl catalog on_op on_const on_op on_const on_op on_const on_period new on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # audit only resources are unmanaged # as are resources without properties with should values
expect on_lparen on_ivar on_period resource on_lparen resource on_period ref on_rparen on_rparen on_period to UNK on_lparen on_const on_op on_const on_rparen on_nl # Warning: a failure here will result in "global resource iteration is # deprecated" being raised, because the rspec rendering to get the # result tries to call `each` on the resource, and that raises.
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl UNK on_op on_const on_op on_const on_period new on_symbeg file on_comma on_ivar on_op on_tstring_beg on_tstring_content # This tests #931.
on_ivar on_period UNK on_lparen true on_rparen on_nl end on_nl end on_nl on_ignored_nl describe on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl before on_symbeg # Remove all resource instances.
expect on_lparen on_ivar on_period resource on_lparen on_symbeg UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_rparen on_period to eq on_lparen # Yay, I've already got a 'should' method
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl on_ivar on_period add_resource on_ivar on_nl on_ivar on_period alias on_lparen on_ivar on_comma on_tstring_beg on_tstring_content on_tstring_end # This test is the same as the previous, but the behaviour should be explicit.
UNK on_tstring_beg on_tstring_content on_tstring_end UNK on_ivar on_period resource on_lparen on_symbeg file on_comma resource on_period name on_rparen on_nl end on_nl on_ignored_nl # We can't use .should here, because the resources respond to that method.
before do on_ignored_nl on_ivar on_period host_config on_op true on_nl allow on_lparen on_const on_op on_const on_op on_const on_rparen on_period to receive # super() doesn't work in the setup method for some reason
expect on_lparen on_const on_op on_const on_rparen on_period to receive on_lparen on_symbeg new on_rparen on_period UNK on_lparen on_const on_rparen on_nl expect # Short-circuit the apply, so we know we're loading before the transaction
on_const on_op on_const on_op on_const on_period UNK on_period UNK on_nl on_ignored_nl on_const on_period UNK on_lbracket on_symbeg UNK on_rbracket on_op on_tstring_beg # Puppet only checks the terminus setting the first time you ask # so this returns the object to the clean state # at the expense of making this test less pure
expect on_lparen on_const on_period parse on_lparen on_ivar on_period to_json on_comma on_symbeg UNK on_op false on_rparen on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket # TODO this should really guarantee sort order
