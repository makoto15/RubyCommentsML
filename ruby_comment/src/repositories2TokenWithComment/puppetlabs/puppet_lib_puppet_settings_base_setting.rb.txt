UNK on_const on_op on_const on_op on_const on_nl UNK on_symbeg name on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma # The base setting type
on_const on_period UNK _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_lbrace on_label name on_rbrace on_nl value on_op on_symbeg UNK on_nl #TRANSLATORS ':%{name}', ':call_hook', and ':on_write_only' should not be translated
raise on_const on_comma _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_lbrace on_label value on_rbrace on_nl end on_nl on_ivar on_op value #TRANSLATORS 'call_hook' is a Puppet option name and should not be translated
def UNK on_nl if UNK on_nl on_lbracket on_lbracket on_tstring_beg on_tstring_content on_embexpr_beg name on_embexpr_end on_tstring_end on_comma on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end # get the arguments in getopt format
def UNK on_nl if UNK on_nl on_lbracket on_tstring_beg on_tstring_content on_embexpr_beg name on_embexpr_end on_tstring_end on_comma on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_end # get the arguments in OptionParser format
def UNK on_lparen args on_op on_lbrace on_rbrace on_rparen on_ignored_nl on_ivar on_op args on_period UNK on_lparen on_symbeg UNK on_rparen on_nl unless # Create the new element. Pretty much just sets the name.
on_ivar on_op args on_lbracket on_symbeg name on_rbracket if args on_period UNK on_symbeg name on_nl on_ignored_nl on_ivar on_op on_symbeg UNK if # explicitly set name prior to calling other param= methods to provide meaningful feedback during # other warnings
on_ivar on_op on_symbeg UNK if args on_lbracket on_symbeg UNK on_rbracket UNK UNK args on_lbracket on_symbeg UNK on_rbracket on_nl on_ivar on_op #set the default value for call_hook
raise on_const on_comma _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_lbrace on_label on_ivar on_rbrace on_nl end on_nl on_ignored_nl args on_period #TRANSLATORS ':call_hook' and ':hook' are specific setting names and should not be translated
def UNK on_lparen value on_rparen on_ignored_nl raise on_const on_comma _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen if value on_period UNK on_period # short name for the element
unless UNK on_lparen on_symbeg on_ivar on_rparen on_nl on_ivar on_op on_ivar on_period UNK on_nl end on_nl UNK on_op on_ivar on_nl UNK # Give unit tests a chance to reevaluate the call by removing the instance variable
def UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_op on_const on_op on_const on_op on_const on_period UNK on_lparen on_ivar on_rparen # Convert the object to a config statement.
UNK on_op on_const on_op on_const on_op on_const on_period UNK on_lparen on_ivar on_rparen on_period UNK on_lparen UNK on_tstring_content UNK on_comma on_tstring_beg # Scrub any funky indentation; comment out description.
UNK on_op on_tstring_beg on_tstring_content on_embexpr_beg UNK on_lparen UNK on_rparen on_embexpr_end on_tstring_content on_tstring_end if UNK on_lparen UNK on_rparen on_nl on_ignored_nl value # Add in a statement about the default.
value on_op on_ivar on_period value on_lparen self on_period name on_rparen on_nl on_ignored_nl if value on_op on_ivar on_nl UNK on_op on_tstring_beg # If the value has not been overridden, then print it out commented # and unconverted, so it's clear that that's the default and how it # works.
UNK on_period UNK on_lparen UNK on_tstring_content UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_ignored_nl def value on_lparen UNK # Indent
def value on_lparen UNK on_op UNK on_rparen on_ignored_nl on_ivar on_period value on_lparen self on_period name on_comma UNK on_comma UNK on_rparen # @param bypass_interpolation [Boolean] Set this true to skip the # interpolation step, returning the raw setting value. Defaults to false. # @return [String] Retrieves the value, or if it's not set, retrieves the default. # @api public
def UNK on_lparen value on_rparen on_ignored_nl value on_nl end on_nl on_ignored_nl def UNK on_lparen value on_rparen on_ignored_nl UNK on_lparen value # Modify the value when it is first evaluated
def UNK on_lparen value on_rparen on_ignored_nl UNK on_lparen value on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl # Print the value for the user in a config compatible format
raise on_const on_comma _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_lbrace on_label UNK on_rbrace on_op on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op #TRANSLATORS 'deprecated' is a Puppet setting and ':completely' and ':allowed_on_commandline' are possible values and should not be translated
def UNK on_nl on_ivar on_op on_symbeg UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_op on_symbeg UNK on_nl end # True if we should raise a deprecation_warning if the setting is submitted # on the commandline or is set in puppet.conf.
def UNK on_nl on_ivar on_op on_symbeg UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_tstring_beg on_tstring_content on_embexpr_beg self on_period UNK # True if we should raise a deprecation_warning if the setting is found in # puppet.conf, but not if the user sets it on the commandline
