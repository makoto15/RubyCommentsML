UNK on_op on_const on_op on_const on_op on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_op on_const # necessary for localized name of guests
UNK on_op on_const on_op on_const on_period UNK on_lparen on_symbeg UNK on_rparen on_period new on_lparen on_symbeg UNK on_op on_tstring_beg on_tstring_content on_tstring_end # The TCP/IP NetBIOS Helper service (aka 'lmhosts') has ended up # disabled on some VMs for reasons we couldn't track down. This # condition causes tests which rely on resolving UNC style paths # (like \\localhost) to fail with unhelpful error messages. # Put a check for this upfront to aid debug should this strike again.
winsec on_period set_group on_lparen sids on_lbracket on_symbeg system on_rbracket on_comma path on_rparen on_nl mode on_op winsec on_period get_mode on_lparen path # if the current user is SYSTEM, by setting the group to # guest, SYSTEM is automagically given full control, so instead # override that behavior with SYSTEM as group and a specific mode
end on_nl end on_nl end on_nl on_ignored_nl describe on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl expect # ERROR_INVALID_OWNER
end on_nl end on_nl end on_nl on_ignored_nl describe on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl winsec # ERROR_FILE_NOT_FOUND
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl winsec on_period set_group on_lparen sids on_lbracket on_symbeg power_users on_rbracket on_comma path on_rparen on_nl end # Unlike unix, if the user has permission to WRITE_OWNER, which the file owner has by default, # then they can set the primary group to a group that the user does not belong to.
expect on_lparen UNK on_period UNK on_rparen on_period to eq on_lparen on_int on_rparen on_nl expect on_lparen UNK on_lbracket on_int on_rbracket on_period # there should only be a single ace for the given group
expect on_lparen on_lparen winsec on_period get_mode on_lparen path on_rparen on_op on_int on_rparen on_period to_s on_lparen on_int on_rparen on_period UNK on_lparen # ensure that mode is still read as 070 (written as 70)
end on_nl end on_nl end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl system_aces on_op winsec on_period get_aces_for_path_by_sid on_lparen path # ERROR_FILE_NOT_FOUND
system_aces on_op winsec on_period get_aces_for_path_by_sid on_lparen path on_comma sids on_lbracket on_symbeg system on_rbracket on_rparen on_nl expect on_lparen system_aces on_rparen on_period # new file has SYSTEM
expect on_lparen system_aces on_period UNK do on_op ace on_op on_ignored_nl ace on_period mask on_op klass on_op on_const on_nl end on_rparen # when running under SYSTEM account, multiple ACEs come back # so we only care that we have at least one of these
winsec on_period set_group on_lparen sids on_lbracket on_symbeg power_users on_rbracket on_comma path on_rparen on_nl winsec on_period set_owner on_lparen sids on_lbracket on_symbeg # changing the owner/group will no longer make the SD protected
winsec on_period set_group on_lparen sids on_lbracket on_symbeg UNK on_rbracket on_comma path on_rparen on_nl on_ignored_nl on_int on_period upto on_lparen on_int on_rparen # windows defaults set Administrators, None when Administrator # or Administrators, SYSTEM when System # but we can guarantee group is different by explicitly setting to Users
UNK if on_lparen on_lparen u on_op g on_rparen on_op g on_rparen UNK on_lparen on_lparen g on_op o on_rparen on_op o # if user is superset of group, and group superset of other, then # no deny ace is required, and mode can be converted to win32 # access mask, and back to mode without loss of information # (provided the owner and group are not the same)
UNK if on_lparen on_lparen ug on_op o on_rparen on_op o on_rparen on_nl mode on_op on_lparen s on_op on_int on_op ug # if user and group superset of other, then # no deny ace is required, and mode can be converted to win32 # access mask, and back to mode without loss of information # (provided the owner and group are the same)
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl winsec on_period set_owner on_lparen sids on_lbracket on_symbeg UNK on_rbracket on_comma path on_rparen on_nl winsec # The SYSTEM user is a special case therefore we need to test that we round trip correctly when set
winsec on_period set_owner on_lparen sids on_lbracket on_symbeg UNK on_rbracket on_comma path on_rparen on_nl winsec on_period set_group on_lparen sids on_lbracket on_symbeg # The owner and group for files/dirs created, when running as a service under Local System are # Owner = Administrators # Group = SYSTEM
UNK if on_lparen on_lparen u on_op g on_rparen on_op g on_rparen UNK on_lparen on_lparen g on_op o on_rparen on_op o # if user is superset of group, and group superset of other, then # no deny ace is required, and mode can be converted to win32 # access mask, and back to mode without loss of information # (provided the owner and group are not the same)
UNK on_op on_lparen s on_op on_int on_op u on_op on_int on_op on_int on_op on_int on_op o on_op on_int on_rparen on_nl # SYSTEM must always be Full Control (7)
system_aces on_op winsec on_period get_aces_for_path_by_sid on_lparen path on_comma sids on_lbracket on_symbeg system on_rbracket on_rparen on_nl expect on_lparen system_aces on_rparen on_period # new file has SYSTEM
expect on_lparen system_aces on_period UNK do on_op ace on_op on_ignored_nl ace on_period mask on_op klass on_op on_const on_nl end on_rparen # when running under SYSTEM account, multiple ACEs come back # so we only care that we have at least one of these
winsec on_period set_group on_lparen sids on_lbracket on_symbeg UNK on_rbracket on_comma path on_rparen on_nl winsec on_period set_mode on_lparen on_int on_comma path # changing the mode will make the SD protected
system_aces on_op winsec on_period get_aces_for_path_by_sid on_lparen path on_comma sids on_lbracket on_symbeg system on_rbracket on_rparen on_nl system_aces on_period each do on_op # and should have a non-inherited SYSTEM ACE(s)
UNK on_op on_const on_period join on_lparen path on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_const on_period new on_lparen UNK on_comma on_tstring_beg # it's critically important that this file be default created # and that this file not have it's owner / group / mode set by winsec
expect on_lparen system_aces on_period UNK do on_op ace on_op on_ignored_nl ace on_period mask on_op klass on_op on_const on_op ace on_period # even when SYSTEM is the owner (in CI), there should be an inherited SYSTEM
expect on_lparen system_aces on_period UNK do on_op ace on_op on_ignored_nl ace on_period mask on_op klass on_op on_const on_nl end on_rparen # when running under SYSTEM account, and set_group / set_owner hasn't been called # SYSTEM full access will be restored
end on_nl end on_nl end on_nl on_ignored_nl describe on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl sd # ERROR_FILE_NOT_FOUND
end on_nl end on_nl end on_nl on_ignored_nl describe on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl winsec # ERROR_FILE_NOT_FOUND
allow on_op klass on_op on_const on_op klass on_op on_const on_nl UNK on_op on_const on_op on_const on_op on_const on_op on_const on_op # add a bunch of aces to the parent with permission to add children
allow on_comma on_ignored_nl UNK on_nl on_rparen on_nl on_lparen on_int on_op on_int on_rparen on_period each do on_op UNK on_op on_ignored_nl sd #everyone
winsec on_period set_mode on_lparen on_const on_op on_const on_comma path on_comma UNK on_rparen on_nl expect on_lparen winsec on_period get_mode on_lparen path # unprotect child, it should inherit from parent
end on_nl end on_nl end on_nl on_ignored_nl describe on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl winsec # ERROR_FILE_NOT_FOUND
on_ignored_nl expect on_lparen on_lparen winsec on_period get_mode on_lparen path on_rparen on_op on_int on_rparen on_period to_s on_lparen on_int on_rparen on_rparen on_period # note group execute permission added to user ace, and then group rwx value # reflected to match
expect on_lparen on_lparen winsec on_period get_mode on_lparen path on_rparen on_op on_int on_rparen on_period to_s on_lparen on_int on_rparen on_rparen on_period to # Exclude missing system ace, since that's not relevant
end on_nl end on_nl end on_nl on_ignored_nl describe on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end on_nl it on_tstring_beg # ERROR_FILE_NOT_FOUND
UNK on_op UNK on_nl UNK on_op on_const on_op on_const on_op on_const on_op on_const on_period new on_lparen sd on_period owner on_comma # don't allow inherited aces to affect the test
end on_nl on_ignored_nl describe on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl winsec on_period set_group on_lparen sids # REMIND: ruby crashes when trying to set a NULL DACL # it "should allow all when it is nil" do # winsec.set_owner(sids[:current_user], path) # winsec.open_file(path, WindowsSecurityTester::READ_CONTROL | WindowsSecurityTester::WRITE_DAC) do |handle| # winsec.set_security_info(handle, WindowsSecurityTester::DACL_SECURITY_INFORMATION | WindowsSecurityTester::PROTECTED_DACL_SECURITY_INFORMATION, nil) # end # winsec.get_mode(path).to_s(8).should == "777" # end
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl winsec on_period set_group on_lparen sids on_lbracket on_symbeg system on_rbracket on_comma path on_rparen on_nl winsec # setting owner to SYSTEM requires root
winsec on_period set_group on_lparen sids on_lbracket on_symbeg system on_rbracket on_comma path on_rparen on_nl winsec on_period set_owner on_lparen sids on_lbracket on_symbeg # The owner and group for files/dirs created, when running as a Scheduled Task as Local System are # Owner = SYSTEM # Group = SYSTEM
UNK if on_lparen on_lparen ug on_op o on_rparen on_op o on_rparen on_nl UNK on_op on_lparen s on_op on_int on_op ug # if user and group superset of other, then # no deny ace is required, and mode can be converted to win32 # access mask, and back to mode without loss of information # (provided the owner and group are the same)
UNK on_op on_lparen s on_op on_int on_op on_int on_op on_int on_op on_int on_op on_int on_op o on_op on_int on_rparen on_nl # SYSTEM must always be Full Control (7)
UNK on_lparen parent on_rparen on_nl end on_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl def UNK on_lparen mode on_comma path # allow temp files to be cleaned up
UNK on_lparen parent on_rparen on_nl end on_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl def UNK on_lparen mode on_comma path # allow temp files to be cleaned up
expect on_lparen aces on_period UNK on_rparen on_period to UNK on_op on_int on_nl end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do # only non-inherited aces will be reassigned to guest, so # make sure we find at least the two we added
dir on_op UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl UNK on_op on_const on_op on_const on_op on_const on_op on_const on_op # inherit only aces can only be set on directories
dir on_op UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl UNK on_op on_const on_op on_const on_op on_const on_op on_const on_op # inheritance can only be set on directories
sd on_op winsec on_period get_security_descriptor on_lparen path on_rparen on_nl sd on_period dacl on_period allow on_lparen sids on_lbracket on_symbeg guest on_rbracket # add a guest ace, it's never owner or group
winsec on_period set_mode on_lparen on_int on_comma path on_rparen on_nl on_ignored_nl dacl on_op winsec on_period get_security_descriptor on_lparen path on_rparen on_period dacl # setting the mode, it should remove extra aces
dacl on_op winsec on_period get_security_descriptor on_lparen path on_rparen on_period dacl on_nl aces on_op dacl on_period UNK on_lbrace on_op ace on_op # make sure it's gone
