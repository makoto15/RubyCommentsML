on_ignored_nl UNK on_op UNK on_period UNK on_lparen on_symbeg UNK on_rparen do on_ignored_nl UNK on_symbeg UNK do on_ignored_nl UNK on_tstring_beg on_tstring_content # frozen_string_literal: true
UNK on_op UNK on_period UNK on_lparen on_symbeg UNK on_rparen do on_ignored_nl UNK on_symbeg UNK do on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end # Returns two arrays, the first containing the elements of enum for which the block evaluates to true, # the second containing the rest.
UNK on_symbeg UNK do on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_comma on_symbeg collection on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_comma on_symbeg UNK # @param collection A collection of things to partition. # @example Partition array of empty strings, results in e.g. [[''], [b, c]] # ['', b, c].partition |$s| { $s.empty } # @example Partition array of strings using index, results in e.g. [['', 'ab'], ['b']] # ['', b, ab].partition |$i, $s| { $i == 2 or $s.empty } # @example Partition hash of strings by key-value pair, results in e.g. [[['b', []]], [['a', [1, 2]]]] # { a => [1, 2], b => [] }.partition |$kv| { $kv[1].empty } # @example Partition hash of strings by key and value, results in e.g. [[['b', []]], [['a', [1, 2]]]] # { a => [1, 2], b => [] }.partition |$k, $v| { $v.empty }
