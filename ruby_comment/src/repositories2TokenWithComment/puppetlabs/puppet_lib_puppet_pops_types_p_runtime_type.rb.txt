UNK on_const on_op on_const on_nl on_const on_op on_const on_period new on_lparen UNK on_const on_op on_const on_comma on_const on_period new on_lparen # @api public
def UNK on_lparen runtime on_comma UNK on_rparen on_ignored_nl unless runtime on_period nil? on_op runtime on_period is_a? on_lparen on_const on_rparen on_nl # Creates a new instance of a Runtime type # # @param runtime [String] the name of the runtime, e.g. 'ruby' # @param name_or_pattern [String,Array(Regexp,String)] name of runtime or two patterns, mapping Puppet name => runtime name # @api public
def UNK on_nl on_ivar on_period is_a? on_lparen on_const on_rparen on_op on_ivar on_op nil on_nl end on_nl on_ignored_nl def UNK on_nl # @api private
def UNK on_nl UNK on_tstring_beg on_tstring_content UNK runtime UNK on_tstring_end unless runtime on_op UNK UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end # @api private
def UNK on_lparen UNK on_rparen on_ignored_nl if on_ivar on_period is_a? on_lparen on_const on_rparen on_nl UNK on_op UNK on_period UNK on_lparen # @api private
def UNK on_lparen o on_comma guard on_rparen on_ignored_nl return UNK unless o on_period is_a? on_lparen on_const on_rparen on_nl return UNK # Assignable if o's has the same runtime and the runtime name resolves to # a class that is the same or subclass of t1's resolved runtime type name # @api private
on_ignored_nl UNK on_op o on_period UNK on_nl return UNK if on_ivar on_op UNK on_nl return UNK unless on_ivar on_period is_a? # t1 is wider
UNK on_ignored_nl UNK on_op on_const on_period UNK on_lparen self on_rparen on_nl UNK on_op on_const on_period UNK on_lparen o on_rparen on_nl # NOTE: This only supports Ruby, must change when/if the set of runtimes is expanded
