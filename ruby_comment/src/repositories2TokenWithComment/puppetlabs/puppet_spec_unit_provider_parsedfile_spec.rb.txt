describe on_const on_op on_const on_op on_const do on_ignored_nl let on_lparen on_symbeg UNK on_rparen do on_ignored_nl on_const on_op on_const on_period UNK # Most of the tests for this are still in test/ral/provider/parsedfile.rb.
let on_lparen on_symbeg UNK on_rparen do on_ignored_nl on_const on_op on_const on_period UNK on_lparen on_symbeg UNK on_rparen on_nl end on_nl on_ignored_nl # The ParsedFile provider class is meant to be used as an abstract base class # but also stores a lot of state within the singleton class. To avoid # sharing data between classes we construct an anonymous class that inherits # the ParsedFile provider instead of directly working with the ParsedFile # provider itself.
allow on_lparen provider on_rparen on_period to receive on_lparen on_symbeg UNK on_rparen on_period and_return on_lparen on_lbracket on_rbracket on_rparen on_nl provider on_period # This way we start with some @records, like we would in real life.
example_provider_class on_period UNK do on_ignored_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_op UNK on_tstring_content UNK on_nl end on_nl example_provider_class on_period # Setup some record rules
allow on_lparen example_provider_class on_rparen on_period to receive on_lparen on_symbeg UNK on_rparen on_period on_ignored_nl and_return on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl # evade a race between multiple invocations of the header method
example_provider_class on_period UNK do on_ignored_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_op UNK on_tstring_content on_words_sep on_tstring_content on_tstring_end on_comma on_symbeg UNK # Setup some record rules
