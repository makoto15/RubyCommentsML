UNK on_const on_op on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl def # This class provides parsing of Type Specification from a string into the Type # Model that is produced by the TypeFactory. # # The Type Specifications that are parsed are the same as the stringified forms # of types produced by the {TypeCalculator TypeCalculator}. # # @api public
def UNK on_nl on_ivar on_op on_const on_op on_const on_period UNK on_nl on_ivar on_op on_const on_period UNK on_lparen nil on_comma on_tstring_beg # @api public
def UNK on_lparen string on_comma context on_op nil on_rparen on_ignored_nl t on_op self on_period UNK on_period UNK on_lbracket string on_rbracket # Produces a *puppet type* based on the given string. # # @example # parser.parse('Integer') # parser.parse('Array[String]') # parser.parse('Hash[Integer, Array[String]]') # # @param string [String] a string with the type expressed in stringified form as produced by the # types {"#to_s} method. # @param context [Loader::Loader] optional loader used as no adapted loader is found # @return [PAnyType] a specialization of the PAnyType representing the type. # # @api public #
t on_op self on_period UNK on_period UNK on_lbracket string on_rbracket on_nl if t on_nl UNK t on_nl end on_nl UNK # quick "peephole" optimization of common data types
def UNK on_lparen string on_comma context on_op nil on_rparen on_ignored_nl UNK on_op on_ivar on_period UNK on_lparen string on_rparen on_nl interpret_any # @api private
def UNK on_lparen ast on_comma context on_op nil on_rparen on_ignored_nl result on_op on_ivar on_period visit_this_1 on_lparen self on_comma ast on_comma # @param ast [Puppet::Pops::Model::PopsObject] the ast to interpret # @param context [Loader::Loader] optional loader used when no adapted loader is found # @return [PAnyType] a specialization of the PAnyType representing the type. # # @api public
def interpret_any on_lparen ast on_comma context on_rparen on_ignored_nl on_ivar on_period visit_this_1 on_lparen self on_comma ast on_comma context on_rparen on_nl end # @api private
def UNK on_lparen o on_comma context on_rparen on_ignored_nl raise_invalid_type_specification_error on_lparen o on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen o # @api private
def UNK on_lparen o on_comma context on_rparen on_ignored_nl interpret_any on_lparen o on_period UNK on_comma context on_rparen on_nl end on_nl on_ignored_nl # @api private
def UNK on_lparen o on_comma context on_rparen on_ignored_nl on_const on_op on_const on_period UNK on_lparen o on_period name on_comma o on_period # @api private
def UNK on_lparen o on_comma context on_rparen on_ignored_nl on_const on_op on_const on_period UNK on_lparen o on_rparen on_nl end on_nl on_ignored_nl # @api private
def UNK on_lparen o on_comma context on_rparen on_ignored_nl o on_nl end on_nl on_ignored_nl def UNK on_lparen o on_comma context on_rparen # @api private
def UNK on_lparen o on_comma context on_rparen on_ignored_nl interpret_any on_lparen o on_period UNK on_comma context on_rparen on_nl end on_nl on_ignored_nl # @api private
def UNK on_lparen o on_comma context on_rparen on_ignored_nl o on_period value on_nl end on_nl on_ignored_nl def UNK on_lparen o on_comma # @api private
def UNK on_lparen o on_comma context on_rparen on_ignored_nl o on_period value on_nl end on_nl on_ignored_nl def UNK on_lparen o on_comma # @api private
def UNK on_lparen o on_comma context on_rparen on_ignored_nl on_symbeg default on_nl end on_nl on_ignored_nl def UNK on_lparen o on_comma context # @api private
def UNK on_lparen o on_comma context on_rparen on_ignored_nl o on_period value on_nl end on_nl on_ignored_nl def UNK on_lparen o on_comma # @api private
def UNK on_lparen o on_comma context on_rparen on_ignored_nl result on_op on_lbrace on_rbrace on_nl o on_period UNK on_period UNK UNK on_op # @api private
def UNK on_lparen o on_comma context on_rparen on_ignored_nl o on_period value on_nl end on_nl on_ignored_nl def UNK on_lparen o on_comma # @api private
def UNK on_lparen o on_comma context on_rparen on_ignored_nl o on_period UNK on_period UNK on_lbrace on_op value on_op on_ivar on_period visit_this_1 # @api private
def UNK on_lparen o on_comma context on_rparen on_ignored_nl o on_period value on_nl end on_nl on_ignored_nl def UNK on_lparen o on_comma # @api private
def UNK on_lparen o on_comma context on_rparen on_ignored_nl o on_period value on_nl end on_nl on_ignored_nl def UNK on_lparen o on_comma # @api private
def UNK on_lparen o on_comma context on_rparen on_ignored_nl nil on_nl end on_nl on_ignored_nl def UNK on_lparen o on_comma context on_rparen # @api private
def UNK on_lparen o on_comma context on_rparen on_ignored_nl o on_nl end on_nl on_ignored_nl def UNK on_lparen o on_comma context on_rparen # @api private
def UNK on_lparen o on_comma context on_rparen on_ignored_nl on_op on_ivar on_period visit_this_1 on_lparen self on_comma o on_period UNK on_comma context # @api private
def self on_period UNK on_nl on_ivar on_op on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_const on_period UNK on_comma on_ignored_nl on_tstring_beg on_tstring_content # @api private
on_tstring_beg on_tstring_content on_tstring_end on_op on_const on_period UNK on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_const on_period UNK on_comma on_ignored_nl on_tstring_beg on_tstring_content # A generic callable as opposed to one that does not accept arguments
def self on_period UNK on_nl on_ivar on_op on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_const on_period UNK on_comma on_ignored_nl on_tstring_beg on_tstring_content # @api private
on_ivar on_op on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_const on_period UNK on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_const on_period UNK # Map of common (and simple to optimize) data types in string form # (Note that some types are the result of evaluation even if they appear to be simple # - for example 'Data' and they cannot be optimized this way since the factory calls # back to the parser for evaluation). #
def UNK on_lparen UNK on_comma context on_rparen on_ignored_nl name on_op UNK on_period value on_nl UNK on_op self on_period UNK on_period # @api private
def UNK on_lparen ast on_comma context on_rparen on_ignored_nl UNK on_op on_const on_op on_const on_period UNK on_lparen ast on_comma nil on_comma # @api private
context on_period UNK on_period UNK on_lparen UNK on_period UNK on_rparen on_op context on_op UNK on_nl else on_ignored_nl UNK on_nl end # Only swap a given TypeSetLoader for another loader when the other loader is different # from the one associated with the TypeSet expression
def UNK on_lparen ast on_comma context on_rparen on_ignored_nl parameters on_op ast on_period UNK on_period UNK on_lbrace on_op param on_op interpret_any # @api private
raise_invalid_parameters_error on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma parameters on_period size on_rparen unless parameters on_period size on_op on_int # 1 parameter being a string, or regular expression
UNK on_op parameters on_period UNK on_nl UNK on_op UNK on_nl if UNK on_op UNK on_op UNK on_op UNK on_nl parameters # 1..m parameters being string
raise_invalid_parameters_error on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma parameters on_period size on_rparen unless parameters on_period size on_op on_int # 1..m parameters being strings or regular expressions
raise_invalid_parameters_error on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma parameters on_period size on_rparen unless parameters on_period size on_op on_int # 1 parameter which is a string or a URI
raise_invalid_parameters_error on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma parameters on_period size on_rparen unless parameters on_period size on_op on_int # 1..m parameters being strings or regular expressions
raise_invalid_parameters_error on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma parameters on_period size on_rparen unless parameters on_period size on_op on_int # 1..m parameters being types (last two optionally integer or literal default
min on_op parameters on_lbracket on_op on_int on_rbracket on_nl min on_op on_lparen min on_op on_symbeg default on_op min on_op on_tstring_beg on_tstring_content # min, max specification
if parameters on_period size on_op on_int on_op parameters on_lbracket on_int on_rbracket on_period is_a? on_lparen on_const on_rparen on_nl raise_invalid_parameters_error on_lparen on_tstring_beg # 1..m parameters being types (last three optionally integer or literal default, and a callable)
raise_invalid_parameters_error on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma parameters on_period size on_rparen unless parameters on_period size on_op on_int # 1..m parameters being types (last two optionally integer or literal default
end on_nl elsif parameters on_period size on_op on_int on_nl raise_invalid_parameters_error on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma parameters # unbound
end on_nl elsif parameters on_period size on_op on_int on_nl raise_invalid_parameters_error on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma parameters # unbound
UNK on_lparen qref on_rparen on_nl end on_nl end on_nl end on_nl on_ignored_nl UNK on_nl on_ignored_nl def UNK on_lparen name on_comma # Must be a type alias. They can't use parameters (yet)
