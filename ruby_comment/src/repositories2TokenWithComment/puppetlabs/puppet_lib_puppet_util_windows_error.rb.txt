UNK on_const on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_nl UNK on_tstring_beg UNK on_tstring_end on_nl UNK on_const # represents an error resulting from a Win32 error code
UNK UNK on_lparen UNK on_comma code on_op on_const on_period UNK on_comma UNK on_op UNK on_rparen on_ignored_nl UNK on_lparen UNK on_op # NOTE: FFI.errno only works properly when prior Win32 calls have been made # through FFI bindings. Calls made through Win32API do not have their error # codes captured by FFI.errno
UNK UNK on_period UNK on_lparen code on_rparen on_ignored_nl UNK on_op on_int on_nl UNK on_op on_const on_op on_ignored_nl on_const on_op on_ignored_nl # Helper method that wraps FormatMessage that returns a human readable string.
UNK on_op on_int on_nl UNK on_op on_const on_op on_ignored_nl on_const on_op on_ignored_nl on_const on_op on_ignored_nl on_const on_op on_ignored_nl on_const on_nl # specifying 0 will look for LANGID in the following order # 1.Language neutral # 2.Thread LANGID, based on the thread's locale value # 3.User default LANGID, based on the user's default locale value # 4.System default LANGID, based on the system default locale value # 5.US English
on_const on_op on_const on_period UNK on_lparen on_symbeg UNK on_comma on_int on_rparen UNK on_op UNK on_op on_ignored_nl UNK on_op on_const on_lparen # this pointer actually points to a :lpwstr (pointer) since we're letting Windows allocate for us
UNK on_const on_op on_const on_period UNK on_lparen UNK on_lparen on_tstring_beg UNK on_tstring_end on_rparen on_op UNK UNK code UNK on_rparen on_nl # can't raise same error type here or potentially recurse infinitely
UNK on_period UNK UNK on_op UNK on_op on_ignored_nl UNK UNK on_period UNK on_nl UNK on_const on_op on_const on_period UNK on_lparen # returns an FFI::Pointer with autorelease set to false, which is what we want
UNK on_symbeg UNK on_nl UNK on_symbeg on_const on_comma on_ignored_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg # https://msdn.microsoft.com/en-us/library/windows/desktop/ms679351(v=vs.85).aspx # DWORD WINAPI FormatMessage( # _In_ DWORD dwFlags, # _In_opt_ LPCVOID lpSource, # _In_ DWORD dwMessageId, # _In_ DWORD dwLanguageId, # _Out_ LPTSTR lpBuffer, # _In_ DWORD nSize, # _In_opt_ va_list *Arguments # ); # NOTE: since we're not preallocating the buffer, use a :pointer for lpBuffer
