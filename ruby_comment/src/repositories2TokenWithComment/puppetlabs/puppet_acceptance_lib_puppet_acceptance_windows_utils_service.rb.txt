UNK UNK on_lparen host on_comma config on_op UNK UNK on_comma UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen on_ignored_nl config on_lbracket on_symbeg # Sets up a mock service on the host. The methodology here is a simplified # version of what's described in https://msdn.microsoft.com/en-us/magazine/mt703436.aspx
UNK on_op host on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl UNK on_op on_const on_period UNK on_lparen on_ignored_nl on_const # Create a temporary directory to store the service's C# source code + # its .exe file.
UNK on_op on_const on_period UNK on_lparen on_ignored_nl on_const on_period UNK on_lparen UNK on_rparen on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl # Copy-over the C# code
UNK on_op on_tstring_beg on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg config on_lbracket on_symbeg name on_rbracket on_embexpr_end on_tstring_content on_tstring_end on_period UNK on_lparen on_tstring_beg # Create the service.exe file by compiling the copied over C# code # with PowerShell
UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_tstring_beg on_tstring_content on_embexpr_beg config on_lbracket on_symbeg name on_rbracket on_embexpr_end on_tstring_end on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end # Now register the service with SCM
UNK UNK UNK on_lparen host on_comma config on_lbracket on_symbeg name on_rbracket on_rparen UNK on_nl end on_nl on_ignored_nl UNK UNK on_lparen # Ensure that our service is deleted after the tests
UNK on_ignored_nl on host on_comma powershell on_lparen on_tstring_beg on_tstring_content on_embexpr_beg name on_embexpr_end on_tstring_end on_rparen on_nl UNK on_const on_op on_const on_op # Check if our service has already been deleted. If so, then we # have nothing else to do.
on host on_comma powershell on_lparen on_tstring_beg on_tstring_content on_embexpr_beg name on_embexpr_end on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl on UNK on_comma on_tstring_beg on_tstring_content # Ensure that our service process is killed. We cannot do a Stop-Service here # b/c there's a chance that our service could be in a pending state (e.g. # "PausePending", "ContinuePending"). If this is the case, then Stop-Service # will fail.
on UNK on_comma on_tstring_beg on_tstring_content on_embexpr_beg name on_embexpr_end on_tstring_end on_nl end on_nl on_ignored_nl UNK UNK on_lparen host on_comma name on_comma # Now remove our service. We use sc.exe because older versions of PowerShell # may not have the Remove-Service commandlet.
UNK UNK on_lparen host on_comma name on_comma UNK on_op UNK UNK on_rparen on_ignored_nl UNK on_period UNK UNK on_op UNK on_comma # Config should be a hash of <property> => <expected value>
UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_tstring_beg on_tstring_content on_embexpr_beg name on_embexpr_end on_tstring_content on_tstring_end on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_tstring_end on_nl # We need to get the underlying WMI object for the service since that # object contains all of our service properties. The one returned by # Get-Service only has these properties for newer versions of PowerShell.
