on_const on_op on_const on_period UNK on_lparen on_symbeg UNK on_rparen on_period UNK on_symbeg UNK on_comma on_symbeg UNK on_op on_symbeg UNK do # The standard init-based service type. Many other service types are # customizations of this module.
UNK on_symbeg true on_op UNK on_ignored_nl UNK on_op on_const on_period value on_lparen on_symbeg UNK on_rparen on_period UNK on_nl UNK on_op # Debian and Ubuntu should use the Debian provider. # RedHat systems should use the RedHat provider.
on_ignored_nl def self on_period excludes on_nl excludes on_op on_lbracket on_rbracket on_nl excludes on_op on_qwords_beg on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_tstring_end # We can't confine this here, because the init path can be overridden. #confine :exists => defpath
def self on_period excludes on_nl excludes on_op on_lbracket on_rbracket on_nl excludes on_op on_qwords_beg on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_tstring_end on_nl # some init scripts are not safe to execute, e.g. we do not want # to suddenly run /etc/init.d/reboot.sh status and reboot our system. The # exclude list could be platform agnostic but I assume an invalid init script # on system A will never be a valid init script on system B
excludes on_op on_qwords_beg on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_tstring_end on_nl excludes on_op on_qwords_beg on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content # these exclude list was found with grep -L '\/sbin\/runscript' /etc/init.d/* on gentoo
excludes on_op on_qwords_beg on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_tstring_end on_nl excludes on_op # this exclude list is all from /sbin/service (5.x), but I did not exclude kudzu
excludes on_op on_qwords_beg on_tstring_content on_words_sep on_tstring_content on_tstring_end on_nl excludes on_op on_qwords_beg on_tstring_content on_words_sep on_tstring_content on_tstring_end on_nl if on_const on_period value # 'wait-for-state' and 'portmap-wait' are excluded from instances here # because they take parameters that have unclear meaning. It looks like # 'wait-for-state' is a generic waiter mainly used internally for other # upstart services as a 'sleep until something happens' # (http://lists.debian.org/debian-devel/2012/02/msg01139.html), while # 'portmap-wait' is a specific instance of a waiter. There is an open # launchpad bug # (https://bugs.launchpad.net/ubuntu/+source/upstart/+bug/962047) that may # eventually explain how to use the wait-for-state service or perhaps why # it should remain excluded. When that bug is addressed this should be # reexamined.
excludes on_op on_qwords_beg on_tstring_content on_words_sep on_tstring_content on_tstring_end on_nl if on_const on_period value on_lparen on_symbeg UNK on_rparen on_op on_tstring_beg on_tstring_content on_tstring_end # these excludes were found with grep -r -L start /etc/init.d
if on_const on_period value on_lparen on_symbeg UNK on_rparen on_op on_tstring_beg on_tstring_content on_tstring_end on_nl excludes on_op on_qwords_beg on_tstring_content on_words_sep on_tstring_content on_words_sep # Prevent puppet failing on unsafe scripts from Yocto Linux
excludes on_op on_qwords_beg on_tstring_content on_tstring_end on_nl excludes on_op on_qwords_beg on_tstring_content on_words_sep on_tstring_content on_tstring_end on_nl excludes on_op on_qwords_beg on_tstring_content on_tstring_end on_nl # Prevent puppet failing to get status of the new service introduced # by the fix for this (bug https://bugs.launchpad.net/ubuntu/+source/lightdm/+bug/982889) # due to puppet's inability to deal with upstart services with instances.
excludes on_op on_qwords_beg on_tstring_content on_words_sep on_tstring_content on_tstring_end on_nl excludes on_op on_qwords_beg on_tstring_content on_tstring_end on_nl excludes on_op on_qwords_beg on_tstring_content on_tstring_end on_nl # Prevent puppet failing to get status of these services, which need parameters # passed in (see https://bugs.launchpad.net/ubuntu/+source/puppet/+bug/1276766).
excludes on_op on_qwords_beg on_tstring_content on_tstring_end on_nl excludes on_op on_qwords_beg on_tstring_content on_tstring_end on_nl excludes on_op on_qwords_beg on_tstring_content on_tstring_end on_nl excludes on_nl # Prevent puppet failing to get status of these services, additional upstart # service with instances
def self on_period UNK on_nl UNK on_lparen self on_period defpath on_rparen on_nl end on_nl on_ignored_nl def self on_period UNK on_lparen # List all services of this type.
def UNK on_lparen value on_rparen on_ignored_nl UNK value on_nl when true on_comma on_tstring_beg on_tstring_content on_tstring_end UNK on_ivar on_lbracket on_symbeg UNK # Mark that our init script supports 'status' commands.
def initscript on_nl on_ivar on_op self on_period UNK on_lparen on_ivar on_lbracket on_symbeg name on_rbracket on_rparen on_nl end on_nl on_ignored_nl def # Where is our init script?
def UNK on_nl on_lbracket initscript on_comma on_symbeg UNK on_rbracket on_nl end on_nl on_ignored_nl def UNK on_nl on_lbracket initscript on_comma on_symbeg # The start command is just the init script with 'start'.
def UNK on_nl on_lbracket initscript on_comma on_symbeg UNK on_rbracket on_nl end on_nl on_ignored_nl def UNK on_nl on_lparen on_ivar on_lbracket on_symbeg # The stop command is just the init script with 'stop'.
def UNK on_nl on_lparen on_ivar on_lbracket on_symbeg UNK on_rbracket on_op on_symbeg true on_rparen on_op on_lbracket initscript on_comma on_symbeg UNK on_rbracket # If it was specified that the init script has a 'status' command, then # we just return that; otherwise, we return false, which causes it to # fallback to other mechanisms.
