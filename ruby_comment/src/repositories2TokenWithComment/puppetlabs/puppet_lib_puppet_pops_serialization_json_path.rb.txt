def UNK on_period UNK on_lparen path on_rparen on_ignored_nl UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl path on_period UNK UNK on_op UNK # Creates a _json_path_ reference from the given `path` argument # # @path path [Array<Integer,String>] An array of integers and strings # @return [String] the created json_path # # @api private
UNK UNK on_nl end on_nl end on_nl UNK on_nl end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_op on_const on_op # Unable to construct json path from complex segments
UNK on_const on_nl UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl def UNK on_nl UNK on_op on_const on_op on_const on_period # Resolver for JSON path that uses the Puppet parser to create the AST. The path must start # with '$' which denotes the value that is passed into the parser. This parser can easily # be extended with more elaborate resolution mechanisms involving document sets. # # The parser is limited to constructs generated by the {JsonPath#to_json_path} # method. # # @api private
def UNK on_lparen context on_comma path on_rparen on_ignored_nl UNK on_op UNK on_period UNK on_lparen path on_rparen on_nl v on_op resolve_any # Resolve the given _path_ in the given _context_. # @param context [Object] the context used for resolution # @param path [String] the json path # @return [Object] the resolved value #
bad_json_path on_lparen path on_rparen UNK on_const on_op resolve_any on_lparen ast on_period UNK on_comma context on_comma path on_rparen on_nl context on_nl # A single '$' means root, i.e. the context.
