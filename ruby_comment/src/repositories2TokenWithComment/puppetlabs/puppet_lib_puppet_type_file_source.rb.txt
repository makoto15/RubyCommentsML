on_const on_op on_const on_period UNK on_lparen on_symbeg file on_rparen on_period UNK on_lparen on_symbeg source on_rparen do on_ignored_nl on_ignored_nl UNK on_symbeg # Copy files from a local or remote source. This state *only* does any work # when the remote file is an actual file; in that case, this state copies # the file down. If the remote file is a dir or a link or whatever, then # this state, during retrieval, modifies the appropriate other states # so that things get taken care of appropriately.
UNK on_op on_const on_op on_const on_period UNK on_lparen source on_rparen on_period to_s on_nl on_const on_period UNK on_lparen UNK on_period UNK # CGI.unescape will butcher properly escaped URIs
on_const on_period UNK on_lparen UNK on_period UNK on_lparen on_const on_op on_const on_rparen on_rparen on_nl UNK on_ignored_nl source on_nl end on_nl # Ruby 1.9.3 and earlier have a URI bug in URI # to_s returns an ASCII string despite UTF-8 fragments # since its escaped its safe to universally call encode # URI.unescape always returns strings in the original encoding
if resource on_period UNK on_lparen on_symbeg UNK on_rparen on_period UNK on_op on_symbeg UNK on_nl UNK on_tstring_beg on_tstring_content on_embexpr_beg metadata on_period # newvalue = "{md5}#{@metadata.checksum}"
def UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end unless metadata on_nl on_ignored_nl if metadata on_period UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_op # Copy the values from the source to the resource. Yay.
if metadata on_period UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_op on_op on_lparen metadata on_period UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_op metadata # conditionally copy :checksum
on_lbracket on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_rbracket on_period UNK do on_op metadata_method on_op on_ignored_nl UNK if metadata_method # Take each of the stats and set them as states on the local file # if a value has not already been provided.
UNK metadata on_period UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl resource on_lbracket on_symbeg UNK on_rbracket on_op metadata on_period UNK on_nl UNK # We know all we need to
def metadata on_nl on_ivar on_op resource on_period catalog on_period metadata on_lbracket resource on_period UNK on_rbracket on_nl UNK on_ivar if on_ivar # Provide, and retrieve if necessary, the metadata for this file. Fail # if we can't find data about this host, and fail if there are any # problems in our query.
value on_op value on_period to_s on_lparen UNK on_rparen if UNK on_op on_symbeg UNK on_op value on_period UNK on_lparen on_const on_rparen # Force the mode value in file resources to be a string containing octal.
resource on_lbracket on_symbeg checksum on_rbracket on_op metadata on_period UNK on_nl end on_nl end on_nl end on_nl on_ignored_nl def UNK on_lparen # If copying checksum, also copy checksum_type
UNK UNK on_nl end on_nl end on_nl end on_nl on_ignored_nl def UNK on_lparen url on_comma on_op block on_rparen on_ignored_nl UNK #rubocop:disable Lint/AssignmentInCondition
on_const on_period UNK on_lparen UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_comma on_label on_ivar on_period file on_comma on_label on_ivar on_period UNK #TRANSLATORS "source_permissions" is a parameter name and should not be translated
