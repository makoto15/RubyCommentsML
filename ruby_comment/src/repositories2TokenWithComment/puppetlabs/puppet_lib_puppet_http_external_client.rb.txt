UNK on_const on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_nl def UNK on_lparen UNK on_rparen on_ignored_nl UNK # # Adapts an external http_client_class to the HTTP client API. The former # is typically registered by puppetserver and only implements a subset of # the Puppet::Network::HTTP::Connection methods. As a result, only the # `get` and `post` methods are supported. Calling `delete`, etc will # raise a NotImplementedError. # # @api private
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op UNK on_nl end on_nl on_ignored_nl def UNK on_lparen url on_comma on_label on_lbrace # Create an external http client # # @param [Class] http_client_class The class to create to handle the request # @api private
def UNK on_lparen url on_comma on_label on_lbrace on_rbrace on_comma on_label on_lbrace on_rbrace on_comma on_label on_lbrace on_rbrace on_comma on_op UNK on_rparen # (see Puppet::HTTP::Client#get) # @api private
def UNK on_lparen url on_comma UNK on_comma on_label on_lbrace on_rbrace on_comma on_label on_lbrace on_rbrace on_comma on_label on_lbrace on_rbrace on_comma on_op # (see Puppet::HTTP::Client#post) # @api private
def UNK on_nl end on_nl on_ignored_nl on_ignored_nl def UNK on_nl raise on_const on_nl end on_nl on_ignored_nl def UNK on_lparen UNK # Close the external http client. # # @api private
end on_nl on_ignored_nl on_ignored_nl def UNK on_nl raise on_const on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_comma on_label on_lbrace # This is a noop as puppetserver doesn't provide a way to close its http client.
on_ignored_nl def UNK on_nl raise on_const on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_comma on_label on_lbrace on_rbrace on_comma on_op # The following are intentionally not documented
