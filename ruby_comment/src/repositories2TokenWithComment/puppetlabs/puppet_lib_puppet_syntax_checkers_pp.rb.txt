UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_const on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_nl # A syntax checker for JSON. # @api public
UNK UNK on_lparen UNK on_comma UNK on_comma UNK on_comma UNK on_rparen UNK UNK on_const on_period UNK on_lparen UNK on_lparen on_tstring_beg # Checks the text for Puppet Language syntax issues and reports them to the given acceptor. # # Error messages from the checker are capped at 100 chars from the source text. # # @param text [String] The text to check # @param syntax [String] The syntax identifier in mime style (only accepts 'pp') # @param acceptor [#accept] A Diagnostic acceptor # @param source_pos [Puppet::Pops::Adapters::SourcePosAdapter] A source pos adapter with location information # @api public #
UNK on_op UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op UNK UNK UNK on_period UNK on_lparen on_rparen on_period UNK on_lparen UNK # Cap the message to 100 chars and replace newlines
UNK on_op on_const on_op on_const on_op on_const on_op UNK on_lparen UNK on_const on_rparen UNK UNK UNK on_nl UNK on_period UNK # TODO: improve the pops API to allow simpler diagnostic creation while still maintaining capabilities # and the issue code. (In this case especially, where there is only a single error message being issued). #
