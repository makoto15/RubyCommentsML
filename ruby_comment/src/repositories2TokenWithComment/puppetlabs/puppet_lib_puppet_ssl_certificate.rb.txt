UNK on_const on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_nl UNK on_const on_op on_const on_op on_const on_nl # Manage certificates themselves. This class has no # 'generate' method because the CA is responsible # for turning CSRs into certificates; we can only # retrieve them from the CA (or not, as is often # the case). # # @deprecated Use {Puppet::SSL::SSLProvider} instead.
UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl UNK on_const on_op on_const on_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_op # This is defined from the base class
def UNK on_period UNK on_nl UNK on_symbeg UNK UNK on_nl end on_nl on_ignored_nl def UNK on_period UNK on_lparen UNK on_rparen # Because of how the format handler class is included, this # can't be in the base class.
def UNK on_nl UNK on_period UNK on_period UNK on_lparen content on_period UNK on_period UNK on_rparen on_nl end on_nl on_ignored_nl def # This name is what gets extracted from the subject before being passed # to the constructor, so it's not downcased
def UNK on_nl UNK on_op content on_period UNK on_period UNK UNK on_op ext on_op on_ignored_nl on_const on_op on_const on_op on_const # Any extensions registered with custom OIDs as defined in module # Puppet::SSL::Oids may be looked up here. # # A cert with a 'pp_uuid' extension having the value 'abcd' would return: # # [{ 'oid' => 'pp_uuid', 'value' => 'abcd'}] # # @return [Array<Hash{String => String}>] An array of two element hashes, # with key/value pairs for the extension's oid, and its value.
def UNK on_nl UNK on_op UNK on_nl on_ignored_nl UNK on_op on_const on_op on_const on_period UNK on_lparen content on_period UNK on_rparen # Extract the extensions sequence from the wrapped certificate's raw ASN.1 form
UNK on_op UNK on_nl on_ignored_nl UNK on_op on_const on_op on_const on_period UNK on_lparen content on_period UNK on_rparen on_period value UNK # See RFC-2459 section 4.1 (https://tools.ietf.org/html/rfc2459#section-4.1) # to see where this is defined. Essentially this is saying "in the first # sequence in the certificate, find the item that's tagged with 3. This # is where the extensions are stored."
def UNK on_lparen oid on_rparen on_ignored_nl UNK on_op UNK on_period value on_period UNK UNK on_op UNK on_op on_ignored_nl UNK on_period # Get the DER parsed value of an X.509 extension by it's OID, or short name # if one has been registered with OpenSSL.
UNK on_nl end on_nl end on_nl on_ignored_nl end on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # This is required to maintain backward compatibility with the previous # way trusted facts were signed. See PUP-3560
