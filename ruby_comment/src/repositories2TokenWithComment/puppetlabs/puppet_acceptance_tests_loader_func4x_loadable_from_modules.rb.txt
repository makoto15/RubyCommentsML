on_ignored_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_comma # Purpose: # Test that a packed puppet can call a 4x system function, and that a 4x function in # a module can be called. # # Method: # * Manually construct a very simple module with a manifest that creates a file. # * The file has content that depends on logic that calls both a system function (reduce), and # a function supplied in the module (helloworld::mul10). # * The module is manually constructed to allow the test to also run on Windows where the module tool # is not supported. # * The module is included by calling 'include' from 'puppet apply'. # * Puppet apply is executed to generate the file with the content. # * The generated contents is asserted.
on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl # TODO: The test can be improved by adding yet another module that calls the function in helloworld. # TODO: The test can be improved to also test loading of a non namespaced function
on_ignored_nl UNK on_nl on_ignored_nl UNK on_period UNK UNK on_op agent on_op on_ignored_nl UNK on_op UNK on_lparen agent on_comma on_tstring_beg on_tstring_content # This should be covered adequately by unit tests
UNK on_op UNK on_lparen agent on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl dev_modulepath on_op UNK on_lparen agent on_comma on_tstring_beg on_tstring_content on_tstring_end # The modulepath to use in environment 'dev'
UNK on_op UNK on_lparen agent on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK agent on_comma UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma # make sure that we use the modulepath from the dev environment
UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK agent on_comma on_tstring_beg on_tstring_content UNK on_const on_period join on_lparen dev_modulepath on_comma on_tstring_beg on_tstring_content # Where the functions in the written modules should go
UNK agent on_comma on_tstring_beg on_tstring_content UNK on_const on_period join on_lparen dev_modulepath on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen UNK on_tstring_end on_nl UNK # Clean out the module that will be written to ensure no interference from a previous run
UNK on_lparen agent on_comma on_const on_period join on_lparen dev_modulepath on_comma UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_comma UNK on_rparen on_nl # Write a module # Write the function helloworld::mul10, that multiplies its argument by 10
UNK agent on_comma on_const on_period join on_lparen dev_modulepath on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_lparen # Write a manifest that calls a 4x function (reduce), and calls a function defined in the module # (helloworld::mul10). #
UNK agent on_comma UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end # Run apply to generate the file with the output
UNK on_lparen agent on_comma on_tstring_beg on_tstring_content UNK on_const on_period join on_lparen UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen UNK on_tstring_end on_rparen # Assert that the file was written with the generated content
