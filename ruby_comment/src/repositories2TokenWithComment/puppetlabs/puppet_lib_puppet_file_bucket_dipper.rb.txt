on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen UNK on_op UNK UNK on_rparen on_ignored_nl UNK on_op UNK on_lbracket on_symbeg # This is a transitional implementation that uses REST # to access remote filebucket files.
def UNK on_lparen UNK on_op UNK UNK on_rparen on_ignored_nl UNK on_op UNK on_lbracket on_symbeg on_const on_rbracket on_nl UNK on_op UNK # Creates a bucket client
UNK on_op UNK on_lbracket on_symbeg on_const on_rbracket on_nl UNK on_op UNK on_lbracket on_symbeg on_const on_rbracket on_op on_const on_lbracket on_symbeg UNK # Emulate the XMLRPC client
def UNK on_lparen file on_rparen on_ignored_nl file_handle on_op on_const on_op on_const on_period UNK on_lparen file on_rparen on_nl raise on_lparen on_const # Backs up a file to the file bucket
unless on_const on_op on_const on_op on_const on_period UNK on_period UNK on_lparen UNK on_comma on_symbeg bucket_path on_op file_bucket_file on_period bucket_path on_rparen # Make a HEAD request for the file so that we don't waste time # uploading it if it already exists in the bucket.
def UNK on_lparen UNK on_comma UNK on_comma UNK on_comma UNK on_rparen on_ignored_nl raise on_const on_comma _ on_lparen on_tstring_beg on_tstring_content on_tstring_end # Diffs two filebucket files identified by their sums
def UNK on_lparen sum on_rparen on_ignored_nl UNK on_lparen sum on_rparen on_period UNK on_nl end on_nl on_ignored_nl def UNK on_lparen sum # Retrieves a file by sum.
def UNK on_lparen sum on_rparen on_ignored_nl source_path on_op on_tstring_beg on_embexpr_beg on_ivar on_embexpr_end on_embexpr_beg on_ivar on_embexpr_end on_tstring_content on_embexpr_beg sum on_embexpr_end on_tstring_end # Retrieves a FileBucket::File by sum.
def restore on_lparen file on_comma sum on_rparen on_ignored_nl restore on_op UNK on_nl file_handle on_op on_const on_op on_const on_period UNK on_lparen # Restores the file
if UNK on_op sum on_nl restore on_op UNK on_nl end on_nl end on_nl on_ignored_nl if restore on_nl UNK on_op UNK # if the checksum has changed... # this might be extra effort
def UNK on_lparen UNK on_comma UNK on_rparen on_ignored_nl raise on_const on_op on_const on_comma _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen unless # List Filebucket content.
