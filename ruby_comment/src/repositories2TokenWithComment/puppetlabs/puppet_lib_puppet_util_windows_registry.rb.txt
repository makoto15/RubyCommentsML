on_const on_op on_int on_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_const on_op on_int on_nl on_const on_op on_int # https://msdn.microsoft.com/en-us/library/windows/desktop/aa384129(v=vs.85).aspx
def UNK on_lparen key on_comma on_op UNK on_rparen on_ignored_nl index on_op on_int on_nl subkey on_op nil on_nl on_ignored_nl UNK on_comma # subkey is String which contains name of subkey. # wtime is last write time as FILETIME (64-bit integer). (see Registry.wtime2time)
def UNK on_lparen key on_comma UNK on_rparen on_ignored_nl vals on_op on_lbrace on_rbrace on_nl UNK on_period UNK do on_op name on_op # Retrieve a set of values from a registry key given their names # Value names listed but not found in the registry will not be added to the # resultant Hashtable # # @param key [RegistryKey] An open handle to a Registry Key # @param names [String[]] An array of names of registry values to return if they exist # @return [Hashtable<String, Object>] A hashtable of all of the found values in the registry key
raise UNK UNK UNK on_period UNK on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_nl end on_nl end # ignore missing names, but raise other errors
result on_op on_const on_lparen key on_period hkey on_comma index on_comma on_ignored_nl subkey_ptr on_comma subkey_length_ptr on_comma on_ignored_nl on_const on_op on_const on_op # RegEnumKeyEx cannot be called twice to properly size the buffer
subkey_length_ptr on_period UNK on_lparen UNK on_rparen on_nl on_ignored_nl result on_op on_const on_lparen key on_period hkey on_comma index on_comma on_ignored_nl subkey_ptr # RegEnumValueW cannot be called twice to properly size the buffer
UNK on_period read_dword on_op on_int on_comma on_ignored_nl UNK on_period read_dword on_op on_int on_comma on_ignored_nl on_rbracket on_nl end on_nl end on_nl # Unicode characters *not* including trailing NULL
def UNK on_lparen key on_comma name_ptr on_comma on_op UNK on_rparen on_ignored_nl result on_op nil on_nl on_ignored_nl UNK on_lparen key on_comma # Read a registry value named name and return array of # [ type, data ]. # When name is nil, the `default' value is read. # type is value type. (see Win32::Registry::Constants module) # data is value data, its class is: # :REG_SZ, REG_EXPAND_SZ # String # :REG_MULTI_SZ # Array of String # :REG_DWORD, REG_DWORD_BIG_ENDIAN, REG_QWORD # Integer # :REG_BINARY # String (contains binary data) # # When rtype is specified, the value type must be included by # rtype array, or TypeError is raised.
UNK on_op on_lparen UNK on_op on_const on_period UNK on_lparen on_symbeg UNK on_rparen on_rparen on_op on_int if UNK on_op on_int on_nl # buffer is raw bytes, *not* chars - less a NULL terminator
UNK on_op on_lparen name_ptr on_period UNK on_op on_const on_period UNK on_lparen on_symbeg UNK on_rparen on_rparen on_op on_int if name_ptr on_period # buffer is raw bytes, *not* chars - less a NULL terminator
UNK on_lbracket UNK on_period read_dword on_comma UNK on_comma UNK on_period read_dword on_rbracket on_nl end on_nl end on_nl end on_nl end # allows caller to use FFI MemoryPointer helpers to read / shape
UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_nl end on_nl on_ignored_nl UNK on_symbeg # Replace null bytes with a space
ffi_lib on_symbeg advapi32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg handle on_comma on_symbeg dword on_comma on_symbeg UNK on_comma on_symbeg # https://msdn.microsoft.com/en-us/library/windows/desktop/ms724862(v=vs.85).aspx # LONG WINAPI RegEnumKeyEx( # _In_ HKEY hKey, # _In_ DWORD dwIndex, # _Out_ LPTSTR lpName, # _Inout_ LPDWORD lpcName, # _Reserved_ LPDWORD lpReserved, # _Inout_ LPTSTR lpClass, # _Inout_opt_ LPDWORD lpcClass, # _Out_opt_ PFILETIME lpftLastWriteTime # );
ffi_lib on_symbeg advapi32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg handle on_comma on_symbeg dword on_comma on_symbeg UNK on_comma on_symbeg # https://msdn.microsoft.com/en-us/library/windows/desktop/ms724865(v=vs.85).aspx # LONG WINAPI RegEnumValue( # _In_ HKEY hKey, # _In_ DWORD dwIndex, # _Out_ LPTSTR lpValueName, # _Inout_ LPDWORD lpcchValueName, # _Reserved_ LPDWORD lpReserved, # _Out_opt_ LPDWORD lpType, # _Out_opt_ LPBYTE lpData, # _Inout_opt_ LPDWORD lpcbData # );
ffi_lib on_symbeg advapi32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg handle on_comma on_symbeg UNK on_comma on_symbeg lpdword on_comma on_symbeg # https://msdn.microsoft.com/en-us/library/windows/desktop/ms724911(v=vs.85).aspx # LONG WINAPI RegQueryValueExW( # _In_ HKEY hKey, # _In_opt_ LPCTSTR lpValueName, # _Reserved_ LPDWORD lpReserved, # _Out_opt_ LPDWORD lpType, # _Out_opt_ LPBYTE lpData, # _Inout_opt_ LPDWORD lpcbData # );
ffi_lib on_symbeg advapi32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg handle on_comma on_symbeg UNK on_rbracket on_comma on_symbeg win32_long on_nl # LONG WINAPI RegDeleteValue( # _In_ HKEY hKey, # _In_opt_ LPCTSTR lpValueName # );
ffi_lib on_symbeg advapi32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg handle on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg # LONG WINAPI RegDeleteKeyEx( # _In_ HKEY hKey, # _In_ LPCTSTR lpSubKey, # _In_ REGSAM samDesired, # _Reserved_ DWORD Reserved # );
ffi_lib on_symbeg advapi32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg handle on_comma on_symbeg UNK on_comma on_symbeg lpdword on_comma on_symbeg # https://msdn.microsoft.com/en-us/library/windows/desktop/ms724902(v=vs.85).aspx # LONG WINAPI RegQueryInfoKey( # _In_ HKEY hKey, # _Out_opt_ LPTSTR lpClass, # _Inout_opt_ LPDWORD lpcClass, # _Reserved_ LPDWORD lpReserved, # _Out_opt_ LPDWORD lpcSubKeys, # _Out_opt_ LPDWORD lpcMaxSubKeyLen, # _Out_opt_ LPDWORD lpcMaxClassLen, # _Out_opt_ LPDWORD lpcValues, # _Out_opt_ LPDWORD lpcMaxValueNameLen, # _Out_opt_ LPDWORD lpcMaxValueLen, # _Out_opt_ LPDWORD lpcbSecurityDescriptor, # _Out_opt_ PFILETIME lpftLastWriteTime # );
