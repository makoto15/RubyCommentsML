on_const on_op UNK on_lparen resource on_lbracket on_symbeg UNK on_rbracket on_comma on_const on_op on_const on_rparen UNK on_ignored_nl UNK on_op resource on_lbracket # Ruby 2.1 and later interrupt execution in a way that bypasses error # handling by default. Passing Timeout::Error causes an exception to be # raised that can be rescued inside of the block by cleanup routines. # # This is backwards compatible all the way to Ruby 1.8.7.
on_ignored_nl output on_op on_const on_op on_const on_op on_const on_period UNK on_lparen on_ignored_nl command on_comma on_ignored_nl on_symbeg UNK on_op UNK on_comma # It's ok if cwd is nil. In that case Puppet::Util::Execution.execute() simply will not attempt to # change the working directory, which is exactly the right behavior when no cwd parameter is # expressed on the resource. Moreover, attempting to change to the directory that is already # the working directory can fail under some circumstances, so avoiding the directory change attempt # is preferable to defaulting cwd to that directory.
output on_op on_const on_op on_const on_op on_const on_period UNK on_lparen on_ignored_nl command on_comma on_ignored_nl on_symbeg UNK on_op UNK on_comma on_ignored_nl # note that we are passing "false" for the "override_locale" parameter, which ensures that the user's # default/system locale will be respected. Callers may override this behavior by setting locale-related # environment variables (LANG, LC_ALL, etc.) in their 'environment' configuration.
if output on_period UNK on_op on_int on_nl UNK on_const on_comma output on_nl end on_nl on_ignored_nl UNK output on_comma output on_nl # The shell returns 127 if the command is missing.
UNK output on_comma output on_nl end on_nl on_ignored_nl UNK UNK on_lparen command on_rparen on_ignored_nl if command on_period UNK on_const on_nl # Return output twice as processstatus was returned before, but only exitstatus was ever called. # Output has the exitstatus on it so it is returned instead. This is here twice as changing this # would result in a change to the underlying API.
match on_lbracket on_int on_rbracket UNK match on_lbracket on_int on_rbracket on_nl UNK on_ignored_nl command on_period UNK on_lparen UNK on_tstring_content UNK on_rparen # extract whichever of the two sides matched the content.
UNK on_period UNK UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op UNK UNK UNK UNK if on_op UNK on_lparen UNK on_rparen # if we're not fully qualified, require a path
