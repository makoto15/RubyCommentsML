UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl on_ignored_nl on_const on_op on_lbracket on_ignored_nl on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content # This module defines OIDs for use within Puppet. # # == ASN.1 Definition # # The following is the formal definition of OIDs specified in this file. # # puppetCertExtensions OBJECT IDENTIFIER ::= {iso(1) identified-organization(3) # dod(6) internet(1) private(4) enterprise(1) 34380 1} # # -- the tree under registeredExtensions 'belongs' to puppetlabs # -- privateExtensions can be extended by enterprises to suit their own needs # registeredExtensions OBJECT IDENTIFIER ::= { puppetCertExtensions 1 } # privateExtensions OBJECT IDENTIFIER ::= { puppetCertExtensions 2 } # authorizationExtensions OBJECT IDENTIFIER ::= { puppetCertExtensions 3 } # # -- subtree of common registered extensions # -- The short names for these OIDs are intentionally lowercased and formatted # -- since they may be exposed inside the Puppet DSL as variables. # pp_uuid OBJECT IDENTIFIER ::= { registeredExtensions 1 } # pp_instance_id OBJECT IDENTIFIER ::= { registeredExtensions 2 } # pp_image_name OBJECT IDENTIFIER ::= { registeredExtensions 3 } # pp_preshared_key OBJECT IDENTIFIER ::= { registeredExtensions 4 } # # @api private
on_ignored_nl on_const on_op on_lbracket on_ignored_nl on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_comma on_ignored_nl # Note: When updating the following OIDs make sure to also update the OID # definitions here: # https://github.com/puppetlabs/puppetserver/blob/master/src/clj/puppetlabs/puppetserver/certificate_authority.clj#L122-L159
UNK UNK on_period UNK on_lparen on_rparen on_ignored_nl UNK on_op UNK on_nl on_const on_period UNK UNK on_op UNK on_op on_ignored_nl on_const # Register our custom Puppet OIDs with OpenSSL so they can be used as CSR # extensions. Without registering these OIDs, OpenSSL will fail when it # encounters such an extension in a CSR.
UNK UNK on_period UNK on_lparen custom_oid_file on_comma map_key on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen on_ignored_nl UNK on_const on_period UNK on_lparen custom_oid_file # Parse custom OID mapping file that enables custom OIDs to be resolved # into user-friendly names. # # @param custom_oid_file [String] File to obtain custom OIDs mapping from # @param map_key [String] Hash key in which custom OIDs mapping is stored # # @example Custom OID mapping file # --- # oid_mapping: # '1.3.6.1.4.1.34380.1.2.1.1': # shortname : 'myshortname' # longname : 'Long name' # '1.3.6.1.4.1.34380.1.2.1.2': # shortname: 'myothershortname' # longname: 'Other Long name'
UNK UNK on_period UNK on_lparen custom_oid_file on_comma map_key on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen on_ignored_nl oid_defns on_op UNK on_lparen custom_oid_file on_comma # Load custom OID mapping file that enables custom OIDs to be resolved # into user-friendly names. # # @param custom_oid_file [String] File to obtain custom OIDs mapping from # @param map_key [String] Hash key in which custom OIDs mapping is stored # # @example Custom OID mapping file # --- # oid_mapping: # '1.3.6.1.4.1.34380.1.2.1.1': # shortname : 'myshortname' # longname : 'Long name' # '1.3.6.1.4.1.34380.1.2.1.2': # shortname: 'myothershortname' # longname: 'Other Long name'
UNK UNK on_period UNK on_lparen UNK on_comma UNK on_comma UNK on_op UNK on_rparen on_ignored_nl UNK on_op on_const on_op on_const on_op # Determine if the first OID contains the second OID # # @param first [String] The containing OID, in dotted form or as the short name # @param second [String] The contained OID, in dotted form or as the short name # @param exclusive [true, false] If an OID should not be considered as a subtree of itself # # @example Comparing two dotted OIDs # Puppet::SSL::Oids.subtree_of?('1.3.6.1', '1.3.6.1.4.1') #=> true # Puppet::SSL::Oids.subtree_of?('1.3.6.1', '1.3.6') #=> false # # @example Comparing an OID short name with a dotted OID # Puppet::SSL::Oids.subtree_of?('IANA', '1.3.6.1.4.1') #=> true # Puppet::SSL::Oids.subtree_of?('1.3.6.1', 'enterprises') #=> true # # @example Comparing an OID against itself # Puppet::SSL::Oids.subtree_of?('IANA', 'IANA') #=> true # Puppet::SSL::Oids.subtree_of?('IANA', 'IANA', true) #=> false # # @return [true, false]
