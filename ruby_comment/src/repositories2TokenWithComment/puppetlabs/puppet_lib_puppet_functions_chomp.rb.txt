UNK UNK UNK UNK UNK on_lparen on_symbeg UNK on_rparen UNK on_ignored_nl on_ignored_nl UNK on_symbeg UNK UNK on_ignored_nl UNK UNK UNK # Returns a new string with the record separator character(s) removed. # The record separator is the line ending characters `\r` and `\n`. # # This function is compatible with the stdlib function with the same name. # # The function does the following: # * For a `String` the conversion removes `\r\n`, `\n` or `\r` from the end of a string. # * For an `Iterable[Variant[String, Numeric]]` (for example an `Array`) each value is processed and the conversion is not recursive. # * If the value is `Numeric` it is simply returned (this is for backwards compatibility). # * An error is raised for all other data types. # # @example Removing line endings # ```puppet # "hello\r\n".chomp() # chomp("hello\r\n") # ``` # Would both result in `"hello"` # # @example Removing line endings in an array # ```puppet # ["hello\r\n", "hi\r\n"].chomp() # chomp(["hello\r\n", "hi\r\n"]) # ``` # Would both result in `['hello', 'hi']` #
UNK UNK on_lparen UNK on_rparen on_ignored_nl UNK on_nl end on_nl on_ignored_nl UNK UNK on_lparen UNK on_rparen on_ignored_nl UNK UNK UNK # unit function - since the old implementation skipped Numeric values
x UNK UNK on_lparen UNK on_rparen UNK x UNK UNK UNK x on_nl end on_nl end on_nl EMP EMP EMP # x can only be a String or Numeric because type constraints have been automatically applied
