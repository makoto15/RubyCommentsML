UNK on_const on_nl def UNK on_period convert on_lparen value on_comma UNK on_op on_const on_rparen on_ignored_nl UNK on_lparen UNK on_rparen on_period # Class that can process the `Data` produced by the {ToDataConverter} class and reassemble # the objects that were converted. # # @api public
def UNK on_period convert on_lparen value on_comma UNK on_op on_const on_rparen on_ignored_nl UNK on_lparen UNK on_rparen on_period convert on_lparen value # Converts the given `Data` _value_ according to the given _options_ and returns the resulting `RichData`. # # @param value [Data] the value to convert # @param options {Symbol => <Boolean,String>} options hash # @option options [Loaders::Loader] :loader the loader to use. Can be `nil` in which case the default is # determined by the {Types::TypeParser}. # @option options [Boolean] :allow_unresolved `true` to allow that rich_data hashes are kept "as is" if the # designated '__ptype' cannot be resolved. Defaults to `false`. # @return [RichData] the processed result. # # @api public
def UNK on_lparen UNK on_op on_const on_rparen on_ignored_nl on_ivar on_op UNK on_lbracket on_symbeg UNK on_rbracket on_nl on_ivar on_op UNK if # Creates a new instance of the processor # # @param options {Symbol => Object} options hash # @option options [Loaders::Loader] :loader the loader to use. Can be `nil` in which case the default is # determined by the {Types::TypeParser}. # @option options [Boolean] :allow_unresolved `true` to allow that rich_data hashes are kept "as is" if the # designated '__ptype' cannot be resolved. Defaults to `false`. # # @api public
UNK on_lparen type on_comma value on_rparen on_nl end on_nl end on_nl end on_nl end on_nl on_ignored_nl def convert on_lparen value # not a string
def convert on_lparen value on_rparen on_ignored_nl if value on_period is_a? on_lparen on_const on_rparen on_nl pcore_type on_op value on_lbracket on_const on_rbracket # Converts the given `Data` _value_ and returns the resulting `RichData` # # @param value [Data] the value to convert # @return [RichData] the processed result # # @api public
if value on_period UNK on_nl build on_lparen pcore_type on_period UNK on_rparen on_nl UNK pcore_type on_period UNK on_period UNK on_lparen on_symbeg # Complex object
