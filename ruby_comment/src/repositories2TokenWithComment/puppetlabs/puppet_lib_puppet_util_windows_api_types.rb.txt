on_const on_op on_int on_nl end on_nl on_ignored_nl UNK on_op on_const on_op on_const on_nl def UNK on_lparen on_op UNK on_rparen on_ignored_nl # standard Win32 error codes
def UNK on_lparen on_op UNK on_rparen on_ignored_nl UNK on_lparen on_op UNK on_rparen on_nl UNK UNK on_lbracket on_int on_rbracket on_nl end # Wrapper method for attach_function + private
ptr on_period UNK on_lparen on_int on_comma str on_period UNK on_period UNK on_rparen on_nl on_ignored_nl UNK ptr on_nl end on_nl on_ignored_nl # uchar here is synonymous with byte
UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_op on_const on_op on_const on_nl end on_nl on_ignored_nl alias_method on_symbeg UNK # ptr has already had free called, so nothing to return
UNK on_op on_const on_op on_const on_nl end on_nl on_ignored_nl alias_method on_symbeg UNK on_comma on_symbeg UNK on_nl alias_method on_symbeg UNK on_comma # BOOL is always a 32-bit integer in Win32 # some Win32 APIs return 1 for true, while others are non-0
str on_op UNK on_lparen on_int on_comma UNK on_op on_int on_rparen on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl str on_period # char_length is number of wide chars (typically excluding NULLs), *not* bytes
def UNK on_lparen UNK on_op on_int on_comma null_terminator on_op on_symbeg UNK on_comma UNK on_op UNK UNK on_rparen on_ignored_nl UNK null_terminator # @param max_char_length [Integer] Maximum number of wide chars to return (typically excluding NULLs), *not* bytes # @param null_terminator [Symbol] Number of number of null wchar characters, *not* bytes, that determine the end of the string # null_terminator = :single_null, then the terminating sequence is two bytes of zero. This is UNIT16 = 0 # null_terminator = :double_null, then the terminating sequence is four bytes of zero. This is UNIT32 = 0 # @param encode_options [Hash] Accepts the same option hash that may be passed to String#encode in Ruby
on_lparen on_int on_op UNK on_op UNK on_rparen on_period UNK UNK on_op UNK on_op on_ignored_nl UNK UNK on_lparen UNK on_comma on_const # Look for a null terminating characters; if found, read up to that null (exclusive)
UNK on_lparen UNK on_comma on_const on_op on_const on_comma UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen on_op UNK on_rparen # String is longer than the max; read just to the max
UNK on_nl end on_nl on_ignored_nl def UNK on_lparen on_op UNK on_rparen on_ignored_nl ptr on_op UNK on_nl UNK on_ignored_nl ptr on_op # ptr has already had LocalFree called, so nothing to return
UNK on_nl end on_nl on_ignored_nl on_ignored_nl alias_method on_symbeg UNK on_comma on_symbeg UNK on_nl alias_method on_symbeg UNK on_comma on_symbeg UNK on_nl # ptr has already had CoTaskMemFree called, so nothing to return
on_ignored_nl on_ignored_nl on_ignored_nl on_const on_period typedef on_symbeg UNK on_comma on_symbeg word on_nl on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK # FFI Types # https://github.com/ffi/ffi/wiki/Types
on_ignored_nl on_ignored_nl on_const on_period typedef on_symbeg UNK on_comma on_symbeg word on_nl on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl # Windows - Common Data Types # https://msdn.microsoft.com/en-us/library/cc230309.aspx
on_ignored_nl on_const on_period typedef on_symbeg UNK on_comma on_symbeg word on_nl on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl on_const # Windows Data Types # https://msdn.microsoft.com/en-us/library/windows/desktop/aa383751(v=vs.85).aspx
on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl on_const # uintptr_t is defined in an FFI conf as platform specific, either # ulong_long on x64 or just ulong on x86
on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl on_const on_period # buffer_inout is similar to pointer (platform specific), but optimized for buffers
on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl on_const # buffer_in is similar to pointer (platform specific), but optimized for CONST read only buffers
on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl on_const on_period typedef on_symbeg pointer on_comma on_symbeg UNK on_nl on_const # string is also similar to pointer, but should be used for const char * # NOTE that this is not wide, useful only for A suffixed functions
on_const on_period typedef on_symbeg pointer on_comma on_symbeg UNK on_nl on_const on_period typedef on_symbeg pointer on_comma on_symbeg UNK on_nl on_const on_period # pointer in FFI is platform specific # NOTE: for API calls with reserved lpvoid parameters, pass a FFI::Pointer::NULL
on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl on_const on_period # any time LONG / ULONG is in a win32 API definition DO NOT USE platform specific width # which is what FFI uses by default # instead create new aliases for these very special cases # NOTE: not a good idea to redefine FFI :ulong since other typedefs may rely on it
on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl # FFI bool can be only 1 byte at times, # Win32 BOOL is a signed int, and is always 4 bytes, even on x64 # https://blogs.msdn.com/b/oldnewthing/archive/2011/03/28/10146459.aspx
on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl # BOOLEAN (unlike BOOL) is a BYTE - typedef unsigned char BYTE;
on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl on_ignored_nl on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl # Same as a LONG, a 32-bit signed integer
on_ignored_nl on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl # NOTE: FFI already defines (u)short as a 16-bit (un)signed like this: # FFI.typedef :uint16, :ushort # FFI.typedef :int16, :short
on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl on_const on_period typedef on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl UNK # 8 bits per byte
UNK on_const on_op on_const on_op on_const on_nl UNK on_symbeg on_const on_comma on_symbeg UNK on_comma on_ignored_nl on_symbeg on_const on_comma on_symbeg word # https://msdn.microsoft.com/en-us/library/windows/desktop/aa373931(v=vs.85).aspx # typedef struct _GUID { # DWORD Data1; # WORD Data2; # WORD Data3; # BYTE Data4[8]; # } GUID;
UNK on_const on_op on_const on_op on_const on_nl UNK on_symbeg UNK on_comma on_symbeg word on_comma on_ignored_nl on_symbeg UNK on_comma on_symbeg word # https://msdn.microsoft.com/en-us/library/windows/desktop/ms724950(v=vs.85).aspx # typedef struct _SYSTEMTIME { # WORD wYear; # WORD wMonth; # WORD wDayOfWeek; # WORD wDay; # WORD wHour; # WORD wMinute; # WORD wSecond; # WORD wMilliseconds; # } SYSTEMTIME, *PSYSTEMTIME;
UNK on_const on_op on_const on_op on_const on_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_comma on_ignored_nl on_symbeg UNK on_comma on_symbeg UNK # https://msdn.microsoft.com/en-us/library/windows/desktop/ms724284(v=vs.85).aspx # Contains a 64-bit value representing the number of 100-nanosecond # intervals since January 1, 1601 (UTC). # typedef struct _FILETIME { # DWORD dwLowDateTime; # DWORD dwHighDateTime; # } FILETIME, *PFILETIME;
UNK on_symbeg UNK on_nl UNK on_symbeg on_const on_comma on_lbracket on_symbeg UNK on_rbracket on_comma on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK # https://msdn.microsoft.com/en-us/library/windows/desktop/aa366730(v=vs.85).aspx # HLOCAL WINAPI LocalFree( # _In_ HLOCAL hMem # );
UNK on_symbeg UNK on_nl UNK on_symbeg on_const on_comma on_lbracket on_symbeg UNK on_rbracket on_comma on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK # https://msdn.microsoft.com/en-us/library/windows/desktop/ms724211(v=vs.85).aspx # BOOL WINAPI CloseHandle( # _In_ HANDLE hObject # );
UNK on_symbeg UNK on_nl UNK on_symbeg on_const on_comma on_lbracket on_symbeg UNK on_rbracket on_comma on_symbeg UNK on_nl end on_nl end on_nl # https://msdn.microsoft.com/en-us/library/windows/desktop/ms680722(v=vs.85).aspx # void CoTaskMemFree( # _In_opt_ LPVOID pv # );
