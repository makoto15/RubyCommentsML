end on_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl expect on_lparen generate_assertions on_lparen on_lbrace on_symbeg assertions on_op on_lbracket on_lbrace on_symbeg UNK #expect(generate_assertions({:assertions => {:expect_failure => [{:fake => 'matcher'},{:fake2 => 'matcher2'}]}})) #.to match(/^expect_failure '' do\nfake\(.*\)\nfake2\(.*\)\nend$/)
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl expect on_lparen UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_rparen on_period #def run_assertions(assertions = '', result)
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl expect on_lparen UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma result #rescue RuntimeError, SyntaxError => e
