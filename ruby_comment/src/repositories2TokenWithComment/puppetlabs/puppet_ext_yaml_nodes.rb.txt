on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl on_const on_op on_const on_period UNK on_lparen on_const on_period #!/usr/bin/ruby # # = Synopsis # # Use YAML files to provide external node support. # # = Usage # # yaml-nodes <host> # # = Description # # This is a simple example external node script. It allows you to maintain your # node information in yaml files, and it will find a given node's file and produce # it on stdout. It has simple inheritance, in that a node can specify a parent # node, and the node will inherit that parent's classes and parameters. # # = Options # # help:: # Print this help message # # yamldir:: # Specify where the yaml is found. Defaults to 'yaml' in the current directory. # # = License # Copyright 2011 Luke Kanies # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # https://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License.
UNK UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_const on_period UNK on_lparen on_const on_comma on_tstring_beg UNK UNK UNK on_tstring_content on_tstring_end # Read in a pure yaml representation of our node.
UNK on_op on_lbracket on_rbracket on_nl UNK UNK on_op info on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket UNK on_tstring_beg on_tstring_content UNK UNK UNK # Iterate over any provided parents, merging in there information.
UNK on_tstring_beg on_tstring_content UNK UNK UNK on_tstring_end UNK UNK on_period UNK on_lparen UNK on_rparen on_nl on_ignored_nl UNK on_op UNK on_nl #rubocop:disable Lint/AssignmentInCondition
UNK parent_info on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl info on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op parent_info on_lbracket on_tstring_beg on_tstring_content on_tstring_end # Include any parent classes in our list.
UNK parent_info on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl info on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op parent_info on_lbracket on_tstring_beg on_tstring_content on_tstring_end # And inherit parameters from our parent, while preferring our own values.
info on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op parent_info on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period UNK on_lparen info on_lbracket on_tstring_beg on_tstring_content # When using Hash#merge, the hash being merged in wins, and we # want the subnode parameters to be the parent node parameters.
UNK parent_info on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl info on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op parent_info on_lbracket on_tstring_beg on_tstring_content on_tstring_end # Copy over any parent node name.
