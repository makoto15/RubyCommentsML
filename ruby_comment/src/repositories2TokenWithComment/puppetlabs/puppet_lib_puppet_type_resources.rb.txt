on_lbracket on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_regexp_beg on_tstring_content on_regexp_end on_comma on_ignored_nl on_regexp_beg on_tstring_content # Administrator, Guest, Domain Admins, Schema Admins, Enterprise Admins. # https://support.microsoft.com/en-us/help/243330/well-known-security-identifiers-in-windows-operating-systems
def UNK on_nl return on_lbracket on_rbracket unless self on_period UNK on_nl UNK on_period UNK on_period on_ignored_nl UNK on_lbrace on_op r # Generate any new resources we need to manage. This is pretty hackish # right now, because it only supports purging.
resource on_period UNK on_nl on_rbrace on_nl end on_nl on_ignored_nl def UNK on_nl unless UNK on_lparen on_ivar on_rparen on_nl UNK on_op # Mark that we're purging, so transactions can handle relationships # correctly
def UNK on_lparen resource on_rparen on_ignored_nl return true unless self on_lbracket on_symbeg name on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end on_nl return # Make sure we don't purge users with specific uids
on_const on_period UNK on_lbrace on_op UNK on_op UNK on_op UNK on_rbrace on_nl else on_ignored_nl UNK on_op self on_lbracket on_symbeg UNK # Windows user; is a system user if any regex matches.
if on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ivar on_op on_const on_op on_const on_period UNK on_tstring_beg # First try to read the minimum user id from login.defs
on_ivar on_op UNK on_const on_period value on_lparen on_symbeg UNK on_rparen on_nl when on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_nl # Otherwise, use a sensible default based on the OS family
