on_const on_op on_int on_nl on_const on_op on_int on_nl on_const on_op on_int on_nl on_ignored_nl def UNK on_lparen UNK on_comma UNK on_comma # https://docs.microsoft.com/en-us/windows/desktop/ProcThread/process-creation-flags
on_const on_op on_int on_nl on_const on_op on_int on_nl on_ignored_nl def UNK on_lparen UNK on_comma UNK on_comma UNK on_comma UNK on_comma # https://docs.microsoft.com/en-us/windows/desktop/ProcThread/process-security-and-access-rights
on_const on_op on_int on_nl on_ignored_nl def UNK on_lparen UNK on_comma UNK on_comma UNK on_comma UNK on_comma UNK on_rparen on_ignored_nl UNK # https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file#maximum-path-length-limitation
UNK on_embexpr_beg on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_end on_nl end on_nl on_ignored_nl UNK on_nl # $CHILD_STATUS is not set when calling win32/process Process.create # and since it's read-only, we can't set it. But we can execute a # a shell that simply returns the desired exit status, which has the # desired effect.
on_const on_lparen on_rparen on_nl end on_nl module_function on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen desired_access on_comma UNK on_comma UNK on_comma # this pseudo-handle does not require closing per MSDN docs
nil on_nl end on_nl module_function on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen handle on_comma desired_access on_comma on_op UNK on_rparen on_ignored_nl # phandle has had CloseHandle called against it, so nothing to return
nil on_nl end on_nl module_function on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen UNK on_comma on_op UNK on_rparen on_ignored_nl handle on_op # token_handle has had CloseHandle called against it, so nothing to return
def UNK on_lparen UNK on_comma on_op UNK on_rparen on_ignored_nl handle on_op UNK on_nl UNK on_lparen handle on_comma UNK on_rparen do # Execute a block with the current process token
nil on_nl end on_nl module_function on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_tstring_beg on_tstring_end on_nl # all handles have been closed, so nothing to safely return
UNK on_op on_const on_op on_int on_nl UNK on_period UNK on_lparen UNK on_rparen on_nl on_const on_op on_const on_period new on_lparen on_symbeg # UTF is 2 bytes/char:
nil on_nl end on_nl module_function on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen token_handle on_comma UNK on_comma on_op UNK on_rparen on_ignored_nl # the underlying MemoryPointer for LUID is cleaned up by this point
on_const on_op on_const on_period new on_lparen on_symbeg dword on_comma on_int on_rparen do on_op return_length_ptr on_op on_ignored_nl result on_op on_const on_lparen # to determine buffer size
on_const on_op on_const on_period new on_lparen UNK on_rparen do on_op token_information_buf on_op on_ignored_nl result on_op on_const on_lparen token_handle on_comma UNK # re-call API with properly sized buffer for all results
nil on_nl end on_nl module_function on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen token_information_buf on_rparen on_ignored_nl UNK on_op on_const on_period new # GetTokenInformation buffer has been cleaned up by this point, nothing to return
on_int on_period UNK on_lparen privileges on_lbracket on_symbeg UNK on_rbracket on_op on_int on_rparen do on_op UNK on_op on_ignored_nl privileges on_lbracket on_symbeg # extract each instance of LUID_AND_ATTRIBUTES
UNK on_ignored_nl raise e on_nl end on_nl end on_nl module_function on_symbeg UNK on_nl on_ignored_nl on_const on_op on_int on_nl def UNK # pre-Vista
def UNK on_nl UNK on_op UNK on_nl handle on_op nil on_nl on_ignored_nl UNK on_ignored_nl handle on_op UNK on_nl UNK on_lparen # Returns whether or not the owner of the current process is running # with elevated security privileges. # # Only supported on Windows Vista or later. #
UNK on_op UNK on_nl handle on_op nil on_nl on_ignored_nl UNK on_ignored_nl handle on_op UNK on_nl UNK on_lparen handle on_comma on_const # default / pre-Vista
UNK on_op UNK on_lbracket on_symbeg on_const on_rbracket on_op on_int on_nl end on_nl end on_nl on_ignored_nl UNK on_nl UNK on_const on_op # TokenIsElevated member of the TOKEN_ELEVATION struct
def UNK on_nl UNK on_op on_const on_lparen on_rparen on_nl on_ignored_nl UNK on_op UNK on_period UNK on_lparen on_int on_comma on_symbeg UNK # Returns a hash of the current environment variables encoded as UTF-8 # The memory block returned from GetEnvironmentStringsW is double-null terminated and the vars are paired as below; # Var1=Value1\0 # Var2=Value2\0 # VarX=ValueX\0\0 # Note - Some env variable names start with '=' and are excluded from the return value # Note - The env_ptr MUST be freed using the FreeEnvironmentStringsW function # Note - There is no technical limitation to the size of the environment block returned. # However a practical limit of 64K is used as no single environment variable can exceed 32KB
UNK on_op UNK on_period UNK on_lparen on_int on_comma on_symbeg UNK on_comma on_lbrace on_symbeg UNK on_op on_symbeg UNK on_rbrace on_rparen on_ignored_nl # pass :invalid => :replace to the Ruby String#encode to use replacement characters
if env_str on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_const on_period UNK on_lparen _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # reject any string containing the Unicode replacement character
def UNK on_nl UNK on_op on_int on_nl end on_nl module_function on_symbeg UNK on_nl on_ignored_nl on_const on_op on_int on_nl on_const on_op # Returns whether or not the OS has the ability to set elevated # token information. # # Returns true on Windows Vista or later, otherwise false #
ffi_lib on_symbeg kernel32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg handle on_comma on_symbeg dword on_rbracket on_comma on_symbeg dword on_nl # https://msdn.microsoft.com/en-us/library/windows/desktop/ms687032(v=vs.85).aspx # DWORD WINAPI WaitForSingleObject( # _In_ HANDLE hHandle, # _In_ DWORD dwMilliseconds # );
ffi_lib on_symbeg kernel32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg handle on_comma on_symbeg UNK on_rbracket on_comma on_symbeg win32_bool on_nl # https://msdn.microsoft.com/en-us/library/windows/desktop/ms683189(v=vs.85).aspx # BOOL WINAPI GetExitCodeProcess( # _In_ HANDLE hProcess, # _Out_ LPDWORD lpExitCode # );
ffi_lib on_symbeg kernel32 on_nl attach_function_private on_symbeg on_const on_comma on_lbracket on_rbracket on_comma on_symbeg handle on_nl on_ignored_nl ffi_lib on_symbeg kernel32 on_nl attach_function_private # https://msdn.microsoft.com/en-us/library/windows/desktop/ms683179(v=vs.85).aspx # HANDLE WINAPI GetCurrentProcess(void);
ffi_lib on_symbeg kernel32 on_nl attach_function_private on_symbeg on_const on_comma on_lbracket on_rbracket on_comma on_symbeg UNK on_nl on_ignored_nl ffi_lib on_symbeg kernel32 on_nl attach_function_private # https://msdn.microsoft.com/en-us/library/windows/desktop/ms683187(v=vs.85).aspx # LPTCH GetEnvironmentStrings(void);
ffi_lib on_symbeg kernel32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg UNK on_rbracket on_comma on_symbeg win32_bool on_nl on_ignored_nl ffi_lib on_symbeg # https://msdn.microsoft.com/en-us/library/windows/desktop/ms683151(v=vs.85).aspx # BOOL FreeEnvironmentStrings( # _In_ LPTCH lpszEnvironmentBlock # );
ffi_lib on_symbeg kernel32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg UNK on_comma on_symbeg UNK on_rbracket on_comma on_symbeg win32_bool on_nl # https://msdn.microsoft.com/en-us/library/windows/desktop/ms686206(v=vs.85).aspx # BOOL WINAPI SetEnvironmentVariableW( # _In_ LPCTSTR lpName, # _In_opt_ LPCTSTR lpValue # );
ffi_lib on_symbeg kernel32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg dword on_comma on_symbeg win32_bool on_comma on_symbeg dword on_rbracket on_comma # https://msdn.microsoft.com/en-us/library/windows/desktop/ms684320(v=vs.85).aspx # HANDLE WINAPI OpenProcess( # _In_ DWORD DesiredAccess, # _In_ BOOL InheritHandle, # _In_ DWORD ProcessId # );
ffi_lib on_symbeg UNK on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg handle on_comma on_symbeg dword on_comma on_symbeg phandle on_rbracket on_comma # https://msdn.microsoft.com/en-us/library/windows/desktop/aa379295(v=vs.85).aspx # BOOL WINAPI OpenProcessToken( # _In_ HANDLE ProcessHandle, # _In_ DWORD DesiredAccess, # _Out_ PHANDLE TokenHandle # );
ffi_lib on_symbeg kernel32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg handle on_comma on_symbeg dword on_comma on_symbeg UNK on_comma on_symbeg # https://docs.microsoft.com/en-us/windows/desktop/api/winbase/nf-winbase-queryfullprocessimagenamew # BOOL WINAPI QueryFullProcessImageName( # _In_ HANDLE hProcess, # _In_ DWORD dwFlags, # _Out_ LPWSTR lpExeName, # _In_ PDWORD lpdwSize, # );
UNK on_const on_op on_const on_op on_const on_nl UNK on_symbeg on_const on_comma on_symbeg dword on_comma on_ignored_nl on_symbeg on_const on_comma on_symbeg UNK # https://msdn.microsoft.com/en-us/library/windows/desktop/aa379261(v=vs.85).aspx # typedef struct _LUID { # DWORD LowPart; # LONG HighPart; # } LUID, *PLUID;
ffi_lib on_symbeg UNK on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_rbracket on_comma # https://msdn.microsoft.com/en-us/library/Windows/desktop/aa379180(v=vs.85).aspx # BOOL WINAPI LookupPrivilegeValue( # _In_opt_ LPCTSTR lpSystemName, # _In_ LPCTSTR lpName, # _Out_ PLUID lpLuid # );
on_const on_op UNK on_lparen on_ignored_nl on_symbeg on_const on_comma on_int on_comma on_ignored_nl on_symbeg on_const on_comma on_ignored_nl on_symbeg on_const on_comma on_ignored_nl on_symbeg # https://msdn.microsoft.com/en-us/library/windows/desktop/aa379626(v=vs.85).aspx
UNK on_const on_op on_const on_op on_const on_nl UNK on_symbeg on_const on_comma on_const on_comma on_ignored_nl on_symbeg on_const on_comma on_symbeg dword on_nl # https://msdn.microsoft.com/en-us/library/windows/desktop/aa379263(v=vs.85).aspx # typedef struct _LUID_AND_ATTRIBUTES { # LUID Luid; # DWORD Attributes; # } LUID_AND_ATTRIBUTES, *PLUID_AND_ATTRIBUTES;
UNK on_const on_op on_const on_op on_const on_nl UNK on_symbeg on_const on_comma on_symbeg dword on_comma on_ignored_nl on_symbeg on_const on_comma on_lbracket on_const # https://msdn.microsoft.com/en-us/library/windows/desktop/aa379630(v=vs.85).aspx # typedef struct _TOKEN_PRIVILEGES { # DWORD PrivilegeCount; # LUID_AND_ATTRIBUTES Privileges[ANYSIZE_ARRAY]; # } TOKEN_PRIVILEGES, *PTOKEN_PRIVILEGES;
end on_nl on_ignored_nl UNK on_const on_op on_const on_op on_const on_nl UNK on_symbeg on_const on_comma on_symbeg dword on_nl end on_nl on_ignored_nl # placeholder for offset
UNK on_const on_op on_const on_op on_const on_nl UNK on_symbeg on_const on_comma on_symbeg dword on_nl end on_nl on_ignored_nl ffi_lib on_symbeg UNK # https://msdn.microsoft.com/en-us/library/windows/desktop/bb530717(v=vs.85).aspx # typedef struct _TOKEN_ELEVATION { # DWORD TokenIsElevated; # } TOKEN_ELEVATION, *PTOKEN_ELEVATION;
ffi_lib on_symbeg UNK on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg handle on_comma on_const on_comma on_symbeg UNK on_comma on_symbeg dword # https://msdn.microsoft.com/en-us/library/windows/desktop/aa446671(v=vs.85).aspx # BOOL WINAPI GetTokenInformation( # _In_ HANDLE TokenHandle, # _In_ TOKEN_INFORMATION_CLASS TokenInformationClass, # _Out_opt_ LPVOID TokenInformation, # _In_ DWORD TokenInformationLength, # _Out_ PDWORD ReturnLength # );
UNK on_const on_op on_const on_op on_const on_nl UNK on_lparen on_ignored_nl on_symbeg UNK on_comma on_symbeg dword on_comma on_ignored_nl on_symbeg UNK on_comma # https://msdn.microsoft.com/en-us/library/windows/desktop/ms724834%28v=vs.85%29.aspx # typedef struct _OSVERSIONINFO { # DWORD dwOSVersionInfoSize; # DWORD dwMajorVersion; # DWORD dwMinorVersion; # DWORD dwBuildNumber; # DWORD dwPlatformId; # TCHAR szCSDVersion[128]; # } OSVERSIONINFO;
ffi_lib on_symbeg kernel32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg UNK on_rbracket on_comma on_symbeg win32_bool on_nl on_ignored_nl ffi_lib on_symbeg # https://msdn.microsoft.com/en-us/library/windows/desktop/ms724451(v=vs.85).aspx # BOOL WINAPI GetVersionEx( # _Inout_ LPOSVERSIONINFO lpVersionInfo # );
ffi_lib on_symbeg kernel32 on_nl attach_function_private on_symbeg on_const on_comma on_lbracket on_rbracket on_comma on_symbeg UNK on_nl end on_nl EMP EMP EMP EMP # https://msdn.microsoft.com/en-us/library/windows/desktop/dd318123(v=vs.85).aspx # LANGID GetSystemDefaultUILanguage(void);
