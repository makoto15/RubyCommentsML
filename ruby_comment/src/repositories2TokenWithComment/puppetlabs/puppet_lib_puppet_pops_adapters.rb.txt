UNK on_const on_op on_const on_nl UNK on_const on_nl on_ignored_nl class on_const on_op on_const on_op on_const on_op on_const on_op on_const on_nl # The Adapters module contains adapters for Documentation, Origin, SourcePosition, and Loader. #
def UNK on_lparen UNK on_rparen on_ignored_nl on_ivar UNK UNK on_period UNK UNK on_op UNK UNK on_nl end on_nl end on_nl # Retrieves a mutable hash with all stored values
class on_const on_op on_const on_op on_const on_nl UNK on_symbeg UNK on_nl end on_nl on_ignored_nl class on_const on_op on_const on_op on_const # A documentation adapter adapts an object with a documentation string. # (The intended use is for a source text parser to extract documentation and store this # in DocumentationAdapter instances). #
UNK on_symbeg UNK on_nl end on_nl on_ignored_nl class on_const on_op on_const on_op on_const on_nl UNK on_symbeg UNK on_nl end on_nl # @return [String] The documentation associated with an object
class on_const on_op on_const on_op on_const on_nl UNK on_symbeg UNK on_nl end on_nl on_ignored_nl class on_const on_nl def UNK on_period # An empty alternative adapter is used when there is the need to # attach a value to be used if the original is empty. This is used # when a lazy evaluation takes place, and the decision how to handle an # empty case must be delayed. #
UNK on_symbeg UNK on_nl end on_nl on_ignored_nl class on_const on_nl def UNK on_period UNK on_lparen UNK on_rparen on_ignored_nl UNK on_lparen # @return [Object] The alternative value associated with an object
class on_const on_nl def UNK on_period UNK on_lparen UNK on_rparen on_ignored_nl UNK on_lparen UNK on_rparen on_nl end on_nl on_ignored_nl def # This class is for backward compatibility only. It's not really an adapter but it is # needed for the puppetlabs-strings gem # @deprecated
class on_const on_op on_const on_op on_const on_nl UNK on_symbeg loader_name on_nl on_ignored_nl def UNK on_period UNK on_lparen UNK on_comma file # A LoaderAdapter adapts an object with a {Loader}. This is used to make further loading from the # perspective of the adapted object take place in the perspective of this Loader. # # It is typically enough to adapt the root of a model as a search is made towards the root of the model # until a loader is found, but there is no harm in duplicating this information provided a contained # object is adapted with the correct loader. # # @see Utils#find_adapter # @api private
def UNK on_period UNK on_lparen UNK on_comma file on_op nil on_comma UNK on_op nil on_rparen on_ignored_nl loaders on_op on_const on_period # Finds the loader to use when loading originates from the source position of the given argument. # # @param instance [Model::PopsObject] The model object # @param file [String] the file from where the model was parsed # @param default_loader [Loader] the loader to return if no loader is found for the model # @return [Loader] the found loader or default_loader if it could not be found #
def UNK on_period UNK on_lparen environment on_comma UNK on_comma file on_rparen on_ignored_nl file on_op UNK on_period file if file on_period # Attempts to find the module that `instance` originates from by looking at it's {SourcePosAdapter} and # compare the `locator.file` found there with the module paths given in the environment found in the # given `scope`. If the file is found to be relative to a path, then the first segment of the relative # path is interpreted as the name of a module. The object that the {SourcePosAdapter} is adapted to # will then be adapted to the private loader for that module and that adapter is returned. # # The method returns `nil` when no module could be found. # # @param environment [Puppet::Node::Environment] the current environment # @param instance [Model::PopsObject] the AST for the code # @param file [String] the path to the file for the code or `nil` # @return [String] the name of the loader associated with the source # @api private
def UNK on_period UNK on_lparen environment on_comma UNK on_comma dir on_rparen on_ignored_nl UNK nil if dir on_period nil? on_nl UNK # @api private
UNK on_nl end on_nl if UNK on_period UNK on_op UNK on_nl mod on_op environment on_period UNK on_lparen UNK UNK UNK # file_path was not relative to the module_path. That's OK.
