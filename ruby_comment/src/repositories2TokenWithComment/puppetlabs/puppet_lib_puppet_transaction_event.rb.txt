UNK on_const on_op on_const on_op on_const on_nl UNK on_const on_op on_const on_op on_const on_nl UNK on_const on_op on_const on_op on_const # A simple struct for storing what happens on the system.
on_const on_op on_const on_op on_const on_op on_const on_period UNK on_lparen UNK on_comma on_symbeg UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl # Use the stringifying converter since rich data is not possible downstream. # (This will destroy some data type information, but this is expected).
def UNK on_lparen UNK on_rparen on_ignored_nl if on_ivar on_period UNK on_op on_ignored_nl on_op on_ivar on_period UNK on_op on_ignored_nl on_op UNK # Calculate and set the corrective_change parameter, based on the old_system_value of the property. # @param [Object] old_system_value system_value from last transaction # @return [bool] true if this is a corrective_change
if on_ivar on_period UNK on_op on_ignored_nl on_op on_ivar on_period UNK on_op on_ignored_nl on_op UNK on_period UNK on_nl on_ignored_nl UNK on_op # Only idempotent properties, and cases where we have an old system_value # are corrective_changes.
UNK on_op on_ivar on_period UNK on_lparen UNK on_comma UNK on_rparen on_nl on_ignored_nl on_ivar on_op UNK on_period UNK on_op nil on_op # If the values aren't insync, we have confirmed a corrective_change
on_ivar on_op UNK on_period UNK on_op nil on_op on_op UNK on_nl UNK on_ignored_nl on_ivar on_op UNK on_nl end on_nl end # Preserve the nil state, but flip true/false
def UNK on_nl UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_op on_symbeg UNK on_op on_lparen on_ivar on_op on_symbeg UNK on_rparen on_nl end # If it's a failure, use 'err', else use either the resource's log level (if available) # or 'notice'.
def UNK on_nl UNK on_op UNK on_op UNK on_nl end on_nl end on_nl EMP EMP EMP EMP EMP EMP EMP # Used by the Logging module
