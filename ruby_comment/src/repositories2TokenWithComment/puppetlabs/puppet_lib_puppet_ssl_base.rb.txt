UNK on_const on_op on_const on_op on_const on_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl on_const on_op UNK on_tstring_content UNK on_nl # The base class for wrapping SSL instances.
on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl on_const on_op UNK on_tstring_content UNK on_nl on_ignored_nl def self on_period UNK on_lparen UNK # For now, use the YAML separator.
on_const on_op UNK on_tstring_content UNK on_nl on_ignored_nl def self on_period UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK on_lparen on_const # Only allow printing ascii characters, excluding /
def self on_period UNK on_lparen UNK on_rparen on_ignored_nl on_const on_op on_const on_op on_const on_period UNK on_lparen UNK on_rparen on_nl end ## # name_from_subject extracts the common name attribute from the subject of an # x.509 certificate certificate # # @api private # # @param [OpenSSL::X509::Name] subject The full subject (distinguished name) of the x.509 # certificate. # # @return [String] the name (CN) extracted from the subject.
def self on_period UNK on_lparen instance on_comma name on_op UNK on_rparen on_ignored_nl unless instance on_period UNK on_lparen wrapped_class on_rparen on_nl # Create an instance of our Puppet::SSL::* class using a given instance of the wrapped class
def self on_period UNK on_lparen UNK on_comma name on_op UNK on_rparen on_ignored_nl instance on_op wrapped_class on_period UNK on_lparen UNK on_rparen # Convert a string into an instance
def UNK on_lparen UNK on_rparen on_ignored_nl on_ivar on_op wrapped_class on_period UNK on_lparen on_const on_op on_const on_period UNK on_lparen UNK on_comma # Read content from disk appropriately.
on_ivar on_op wrapped_class on_period UNK on_lparen on_const on_op on_const on_period UNK on_lparen UNK on_comma UNK UNK on_op on_const on_op on_const # applies to Puppet::SSL::Certificate, Puppet::SSL::CertificateRequest # Puppet::SSL::Key uses this, but also provides its own override # nothing derives from Puppet::SSL::Certificate, but it is called by a number of other SSL Indirectors: # Puppet::Indirector::CertificateStatus::File (.indirection.find) # Puppet::Network::HTTP::WEBrick (.indirection.find) # Puppet::Network::HTTP::RackREST (.from_instance) # Puppet::Network::HTTP::WEBrickREST (.from_instance) # Puppet::SSL::Host (.indirection.find) # Puppet::SSL::Inventory (.indirection.search, implements its own add / rebuild / serials with encoding UTF8) # Puppet::SSL::Validator::DefaultValidator (.from_instance) / Puppet::SSL::Validator::NoValidator does nothing
def UNK on_nl UNK on_tstring_beg on_tstring_end unless content on_nl content on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK # Convert our thing to pem.
def UNK on_nl UNK on_tstring_beg on_tstring_end unless content on_nl content on_period UNK on_nl end on_nl on_ignored_nl def UNK on_lparen UNK # Provide the full text of the thing we're dealing with.
UNK on_op on_const on_period UNK on_lparen on_ignored_nl UNK on_tstring_content UNK on_comma on_ignored_nl UNK on_tstring_content UNK on_comma on_ignored_nl UNK on_tstring_content UNK # The signature_algorithm on the X509 cert is a combination of the digest # algorithm and the encryption algorithm # e.g. md5WithRSAEncryption, sha256WithRSAEncryption # Unfortunately there isn't a consistent pattern # See RFCs 3279, 5758
