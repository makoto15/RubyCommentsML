UNK on_op false on_nl on_ignored_nl newparam on_lparen on_symbeg path on_rparen do on_ignored_nl desc on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_nl UNK # Tidy names are not isomorphic with the objects.
UNK on_lbrace on_op UNK on_op on_rbrace on_nl UNK do on_op value on_op on_ignored_nl UNK on_op UNK on_lparen value on_rparen on_nl # Replace the validation so that we allow numbers in # addition to string representations of them.
UNK do on_op value on_op on_ignored_nl UNK _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen if on_tstring_beg UNK UNK on_lbracket on_symbeg recurse # Make sure we convert to an array.
def tidy? on_lparen path on_comma stat on_rparen on_ignored_nl basename on_op on_const on_period basename on_lparen path on_rparen on_nl UNK on_op on_const # Does a given path match our glob patterns, if any? Return true # if no patterns have been provided.
on_lparen on_const on_period UNK on_period UNK on_op stat on_period UNK on_lparen resource on_lbracket on_symbeg UNK on_rbracket on_rparen on_period UNK on_rparen # If the file's older than we allow, we should get rid of it.
self on_period UNK _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_lbrace on_label age on_rbrace on_nl end on_nl on_ignored_nl UNK on_lparen #TRANSLATORS tidy is the name of a program and should not be translated
self on_period UNK _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_lbrace on_label age on_rbrace on_nl end on_nl on_ignored_nl UNK on_lparen #TRANSLATORS tidy is the name of a program and should not be translated
UNK do on_ignored_nl end on_nl on_ignored_nl def self on_period UNK on_nl on_lbracket on_rbracket on_nl end on_nl on_ignored_nl def UNK on_nl # Erase PFile's validate method
self on_lbracket on_symbeg UNK on_rbracket on_op false unless self on_lbracket on_symbeg UNK on_rbracket on_period UNK on_const on_op on_const on_op on_const # only allow backing up into filebuckets
def UNK on_lparen path on_rparen on_ignored_nl UNK on_op on_lbrace on_ignored_nl on_symbeg path on_op path on_comma on_symbeg UNK on_op self on_lbracket # Make a file resource to remove a given file.
UNK on_op on_lbrace on_ignored_nl on_symbeg path on_op path on_comma on_symbeg UNK on_op self on_lbracket on_symbeg UNK on_rbracket on_comma on_ignored_nl on_symbeg # Force deletion, so directories actually get deleted.
UNK on_op UNK on_lbracket on_symbeg UNK on_rbracket on_nl if UNK on_nl return UNK on_period UNK on_nl else on_ignored_nl return on_lbrace # Our ensure property knows how to retrieve everything for us.
def UNK on_nl on_lbracket on_rbracket on_nl end on_nl on_ignored_nl def UNK on_nl return on_lbracket on_rbracket unless stat on_lparen self on_lbracket # Hack things a bit so we only ever check the ensure property.
UNK _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_lbrace on_label UNK on_period size on_rbrace on_nl end on_nl on_ignored_nl return result #TRANSLATORS "Tidy" is a program name and should not be translated
return result unless UNK on_nl on_ignored_nl UNK on_op result on_period UNK on_lparen on_lbrace on_rbrace on_rparen on_lbrace on_op UNK on_comma file # No need to worry about relationships if we don't have rmdirs; there won't be # any directories.
UNK on_op result on_period UNK on_lparen on_lbrace on_rbrace on_rparen on_lbrace on_op UNK on_comma file on_op UNK on_lbracket file on_lbracket on_symbeg # Now make sure that all directories require the files they contain, if all are available, # so that a directory is emptied before we try to remove it.
def UNK on_lparen path on_rparen on_ignored_nl return true unless self on_lbracket on_symbeg UNK on_rbracket on_nl on_ignored_nl basename on_op on_const on_period # Does a given path match our glob patterns, if any? Return true # if no patterns have been provided.
def tidy? on_lparen path on_rparen on_ignored_nl return false if UNK on_period resource on_lparen on_symbeg file on_comma path on_rparen on_nl on_ignored_nl # Should we remove the specified file?
return false if UNK on_period resource on_lparen on_symbeg file on_comma path on_rparen on_nl on_ignored_nl stat on_op self on_period stat on_lparen # ignore files that are already managed, since we can't tidy # those files anyway
param on_op parameter on_lparen on_symbeg UNK on_rparen on_nl return false if param on_op on_op param on_period tidy? on_lparen path on_comma # The 'matches' parameter isn't OR'ed with the other tests -- # it's just used to reduce the list of files we can match.
return true unless UNK on_nl false on_nl end on_nl on_ignored_nl def stat on_lparen path on_rparen on_ignored_nl UNK on_ignored_nl on_const on_op # If they don't specify either, then the file should always be removed.
UNK _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl return UNK on_nl end on_nl end on_nl end on_nl EMP EMP EMP #TRANSLATORS "stat" is a program name and should not be translated
