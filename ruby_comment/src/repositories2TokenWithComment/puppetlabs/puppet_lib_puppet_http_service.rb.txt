UNK on_const on_op on_const on_op on_const on_nl UNK on_symbeg UNK on_nl on_ignored_nl on_const on_op on_lbracket on_symbeg UNK on_comma on_symbeg UNK # # @api private # # Represents a puppet web service #
UNK on_symbeg UNK on_nl on_ignored_nl on_const on_op on_lbracket on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_rbracket # @api private # @return [URI] the url associated with this service
on_const on_op on_lbracket on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_rbracket on_period UNK on_nl on_ignored_nl on_const # @api private # @return [Array<Symbol>] available services
on_const on_op on_lbracket on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_rbracket on_period UNK on_nl on_ignored_nl def UNK on_period UNK # @api private # @return [Array<Symbol>] format types that are unsupported
def UNK on_period UNK on_lparen client on_comma session on_comma name on_comma server on_op UNK on_comma port on_op UNK on_rparen on_ignored_nl # # @api private # # Create a new web service, which contains the URL used to connect to the # service. The four services implemented are `:ca`, `:fileserver`, `:puppet`, # and `:report`. # # The `:ca` and `:report` services handle certs and reports, respectively. The # `:fileserver` service handles puppet file metadata and content requests. And # the default service, `:puppet`, handles nodes, facts, and catalogs. # # @param [Puppet::HTTP::Client] client the owner of the session # @param [Puppet::HTTP::Session] session the owner of the service # @param [Symbol] name the type of service to create # @param [<Type>] server optional, the server to connect to # @param [<Type>] port optional, the port to connect to # # @return [Puppet::HTTP::Service] an instance of the service type requested #
def UNK on_period UNK on_lparen name on_rparen on_ignored_nl on_const on_period UNK on_lparen name on_rparen on_nl end on_nl on_ignored_nl def UNK # # @api private # # Check if the service named is included in the list of available services. # # @param [Symbol] name # # @return [Boolean] #
def UNK on_lparen client on_comma session on_comma UNK on_rparen on_ignored_nl on_ivar on_op client on_nl on_ivar on_op session on_nl on_ivar on_op # # @api private # # Create a new service # # @param [Puppet::HTTP::Client] client # @param [Puppet::HTTP::Session] session # @param [URI] url The url to connect to #
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_ivar on_period UNK on_nl UNK on_period UNK on_op on_const on_op on_const on_period # # @api private # # Return the url with the given path encoded and appended # # @param [String] path the string to append to the base url # # @return [URI] the URI object containing the encoded path #
def UNK on_lparen on_label UNK on_rparen on_ignored_nl on_ivar on_period UNK on_lparen on_ivar on_comma on_label UNK on_label UNK UNK on_rparen on_nl # # @api private # # Open a connection using the given ssl context # # @param [Puppet::SSL::SSLContext] ssl_context (nil) optional ssl context to # connect with #
UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end UNK on_const on_lbracket on_symbeg UNK on_rbracket on_nl on_ignored_nl on_const on_lbracket # Add 'X-Puppet-Profiling' to enable performance profiling if turned on
on_const on_lbracket on_symbeg UNK on_rbracket on_period UNK UNK on_op name on_comma UNK on_op on_ignored_nl UNK UNK on_period UNK on_period UNK # Add additional user-defined headers if they are defined
on_ignored_nl formatter on_op on_const on_op on_const on_op on_const on_period UNK on_lparen UNK on_rparen on_nl raise on_const on_op on_const on_op on_const # strip any charset
