def UNK on_period UNK on_nl on_ivar on_op on_lbracket on_rbracket on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end # Keep track of our local tmpdirs for cleanup
def UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl response on_op UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK # PE creates a "Production environment" group during installation which # all nodes are a member of by default. This method just looks up this # group and returns its uuid so that other methods may reference it.
def UNK on_lparen UNK on_comma UNK on_rparen on_ignored_nl group_uuid on_op on_const on_op on_const on_period UNK on_lparen on_rparen on_nl response on_op # Create a Classifier Group which by default will apply to all of the passed # nodes. The Group will merge in the passed group_hash which will be converted # into the json body for a Classifier PUT /v1/groups/:id request. # # A teardown body is registered to delete the created group at the end of the test. # # @returns String the created uuid for the group.
UNK on_op UNK on_op on_const on_op on_const on_op on_const on_op on_const on_nl body on_op on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op # In order to override the environment for test nodes, we need the # groups we create to be a child of this "Production environment" group, # otherwise we get a classification error from the conflicting groups.
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_lparen UNK on_comma on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_content on_tstring_end on_comma # Creates a group which allows the given nodes to specify their own environments. # Will be torn down at the end of the test.
UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_op UNK on_lparen UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_symbeg UNK # fallback to master since currently the sqautils genconfig does not recognize # a classifier role.
on_const on_period UNK on_lparen on_ivar on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen do on_op UNK on_op on_ignored_nl UNK on_period UNK on_lparen UNK # RFC 1421 states PEM is 7-bit ASCII https://tools.ietf.org/html/rfc1421
on_ivar on_op on_const on_period UNK do on_ignored_nl UNK on_const on_nl UNK on_const on_nl on_ivar on_op on_const on_period UNK on_nl on_ivar # HTTParty performs a lot of configuration at the class level. # This is inconvenient for our needs because we don't have the # server/cert info available at the time the class is loaded. I'm # sidestepping this by generating an anonymous class on the fly when # the test code actually requests a handle to the classifier.
UNK on_const on_nl on_ignored_nl on_lbracket on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_rbracket # Handle logging
def UNK on_nl UNK on_nl UNK on_ignored_nl on_ivar on_period UNK on_nl on_ivar on_period UNK on_lbrace on_op UNK on_op on_ivar on_period # Ensure that the captured debugging output is logged to Beaker.
