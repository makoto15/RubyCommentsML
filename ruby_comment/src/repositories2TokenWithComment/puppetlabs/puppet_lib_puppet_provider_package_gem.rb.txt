on_const on_op on_const on_period UNK on_lparen on_symbeg UNK on_rparen on_period UNK on_symbeg UNK on_comma on_symbeg UNK on_op on_const on_op on_const # Ruby gems support.
def self on_period UNK on_nl UNK on_op UNK on_nl UNK on_op UNK on_op UNK on_period UNK on_op on_int on_nl on_ignored_nl # Override the specificity method to return 1 if gem is not set as default provider
on_ignored_nl def self on_period UNK on_nl command on_lparen on_symbeg UNK on_rparen on_nl end on_nl on_ignored_nl on_ignored_nl UNK on_lparen on_symbeg UNK # Define the default provider package command name when the provider is targetable. # Required by Puppet::Provider::Package::Targetable::resource_or_provider_command
on_ignored_nl UNK on_lparen on_symbeg UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen UNK on_ignored_nl UNK on_nl end on_nl on_ignored_nl on_ignored_nl def self # Define the default provider package command as optional when the provider is targetable. # Doing do defers the evaluation of provider suitability until all commands are evaluated.
on_ignored_nl def self on_period UNK on_lparen command on_comma command_options on_rparen on_ignored_nl UNK on_lparen command on_rparen on_nl UNK on_op on_lbracket command # CommandDefiner in provider.rb creates convenience execution methods that set failonfail, combine, and optionally, environment. # And when a child provider defines its own command via commands() or has_command(), the provider-specific path is always returned by command(). # But when the convenience execution method is invoked, the last convenience method to be defined is executed. # This makes invoking those convenience execution methods unsuitable for inherited providers. # # In this case, causing the puppet_gem provider to inherit the parent gem provider's convenience gemcmd() methods, with the wrong path.
return on_lbracket on_rbracket unless command on_nl end on_nl on_ignored_nl UNK on_lparen on_symbeg command on_op command on_comma on_symbeg UNK on_op true # The default provider package command is optional.
pkg on_lbracket on_symbeg command on_rbracket on_op command on_nl UNK on_lparen pkg on_rparen on_nl end on_nl end on_nl on_ignored_nl def self # Track the command when the provider is targetable.
on_ignored_nl if UNK on_op UNK on_tstring_content UNK on_nl UNK on_op UNK on_nl UNK on_op UNK on_period UNK on_lparen on_tstring_beg on_tstring_content # `gem list` when output console has a line like: # *** LOCAL GEMS *** # but when it's not to the console that line # and all blank lines are stripped # so we don't need to check for them
UNK on_op on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_end on_comma should on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_rparen # Range intersections are not supported by Gem::Requirement, so just split by comma.
return UNK on_nl end on_nl on_ignored_nl is on_period UNK on_lbrace on_op UNK on_op UNK on_period UNK on_lparen on_tstring_beg on_tstring_end on_comma # Bad requirements will cause an error during gem command invocation, so just return not in sync
is on_period UNK on_lbrace on_op UNK on_op UNK on_period UNK on_lparen on_tstring_beg on_tstring_end on_comma UNK on_rparen on_rbrace on_nl end on_nl # Check if any version matches the dependency
command_options on_op source on_nl UNK UNK on_tstring_content UNK on_nl command_options on_op UNK on_period UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl # no URI scheme => interpret the source as a local file
UNK on_const on_op on_const on_period UNK on_lparen _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_rparen on_nl else on_ignored_nl if on_const on_op # we don't support puppet:// URLs (yet)
if on_const on_op on_const on_period UNK on_lparen source on_rparen on_nl command_options on_op source on_nl else on_ignored_nl command_options on_op on_tstring_beg on_tstring_content # check whether it's an absolute file path to help Windows out
command_options on_op on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg UNK source UNK on_tstring_end on_op resource on_lbracket on_symbeg name on_rbracket on_nl end on_nl # interpret it as a gem repository
self on_period UNK _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_lbrace on_label output on_period UNK on_rbrace if output on_period UNK # Apparently some gem versions don't exit non-0 on failure.
self on_period UNK _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_lbrace on_label output on_period UNK on_rbrace if output on_period UNK # Apparently some gem versions don't exit non-0 on failure.
