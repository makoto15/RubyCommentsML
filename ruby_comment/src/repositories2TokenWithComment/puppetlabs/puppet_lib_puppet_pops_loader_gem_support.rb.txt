UNK on_const on_op on_const on_op on_const on_op on_const on_nl on_ignored_nl UNK UNK on_lparen UNK on_rparen on_ignored_nl UNK UNK on_nl UNK # GemSupport offers methods to find a gem's location by name or gem://gemname URI. # # TODO: The Puppet 3x, uses Puppet::Util::RubyGems to do this, and obtain paths, and avoids using ::Gems # when ::Bundler is in effect. A quick check what happens on Ruby 1.8.7 and Ruby 1.9.3 with current # version of bundler seems to work just fine without jumping through any hoops. Hopefully the Puppet::Utils::RubyGems is # just dealing with arcane things prior to RubyGems 1.8 that are not needed any more. To verify there is # the need to set up a scenario where additional bundles than what Bundler allows for a given configuration are available # and then trying to access those. #
UNK UNK on_lparen UNK on_rparen on_ignored_nl UNK UNK on_nl UNK on_const on_nl UNK on_lparen UNK on_rparen on_nl UNK on_const on_nl # Produces the root directory of a gem given as an URI (gem://gemname/optional/path), or just the # gemname as a string. #
UNK UNK on_lparen UNK on_rparen on_ignored_nl spec on_op on_const on_op on_const on_period UNK on_lparen UNK on_period UNK on_rparen on_nl UNK # Produces the root directory of a gem given as an uri, where hostname is the gemname, and an optional # path is appended to the root of the gem (i.e. if the reference is given to a sub-location within a gem. # TODO: FIND by name raises exception Gem::LoadError with list of all gems on the path #
UNK UNK on_period UNK on_period UNK on_nl spec on_period UNK on_nl UNK on_ignored_nl on_const on_period UNK on_lparen spec on_period UNK # if path given append that, else append given subdir
UNK UNK on_lparen UNK on_rparen on_ignored_nl spec on_op on_const on_op on_const on_period UNK on_lparen UNK on_rparen on_nl UNK spec on_nl # Produces the root directory of a gem given as a string with the gem's name. # TODO: FIND by name raises exception Gem::LoadError with list of all gems on the path #
