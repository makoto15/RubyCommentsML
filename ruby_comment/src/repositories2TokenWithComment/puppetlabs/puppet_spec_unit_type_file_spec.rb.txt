allow on_lparen on_const on_op on_const on_op on_const on_rparen on_period to receive on_lparen on_symbeg UNK on_rparen on_period and_return on_lparen false on_rparen # Mocha won't let me just stub SUIDManager.asuser to yield and return, # but it will do exactly that if we're not root.
file on_op described_class on_period new on_lparen on_symbeg path on_op path on_comma UNK on_op value on_rparen on_nl child on_op file on_period # Make a new file, because we have to set the param at initialization # or it wouldn't be copied regardless.
allow on_lparen file on_rparen on_period to receive on_lparen on_symbeg stat on_rparen on_period and_return on_lparen double on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma # Default: file[:backup] = true
file on_lbracket on_symbeg UNK on_rbracket on_op false on_nl allow on_lparen file on_rparen on_period to receive on_lparen on_symbeg stat on_rparen on_period # Default: file[:backup] = true
file on_lbracket on_symbeg UNK on_rbracket on_op true on_nl allow on_lparen file on_rparen on_period to receive on_lparen on_symbeg stat on_rparen on_period # Default: file[:backup] = true
file on_period stat on_nl allow on_lparen file on_rparen on_period to receive on_lparen on_symbeg stat on_rparen on_period and_return on_lparen double on_lparen # Actually call stat to set @needs_stat to nil
file on_lbracket on_symbeg UNK on_rbracket on_op true on_nl allow on_lparen file on_rparen on_period to receive on_lparen on_symbeg stat on_rparen on_period # Default: file[:backup] = true
file on_period stat on_nl allow on_lparen file on_rparen on_period to receive on_lparen on_symbeg stat on_rparen on_period and_return on_lparen double on_lparen # Actually call stat to set @needs_stat to nil
end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl file on_lbracket on_symbeg links on_rbracket on_op on_symbeg UNK on_nl on_ignored_nl expect # so we always use :lstat
on_const on_period UNK on_lparen on_int on_comma dir on_rparen on_nl end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl UNK on_op # chmod it back so we can clean it up
allow on_lparen on_const on_op on_const on_op on_const on_rparen on_period to receive on_lparen on_symbeg UNK on_rparen on_nl end on_nl on_ignored_nl it # to prevent the catalog from trying to write state.yaml
catalog on_period UNK on_nl on_ignored_nl expect on_lparen on_lparen on_const on_op on_const on_period stat on_lparen on_ivar on_rparen on_period mode on_op on_int # default
expect on_lparen on_lparen on_const on_op on_const on_period stat on_lparen on_ivar on_rparen on_period mode on_op on_int on_rparen on_period UNK on_lparen on_int # I convert them to strings so they display correctly if there's an error.
let on_lparen on_symbeg UNK on_rparen on_lbrace on_tstring_beg on_tstring_content on_tstring_end on_rbrace on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl filename on_op on_tstring_beg # different UTF-8 widths # 1-byte A # 2-byte ۿ - http://www.fileformat.info/info/unicode/char/06ff/index.htm - 0xDB 0xBF / 219 191 # 3-byte ᚠ - http://www.fileformat.info/info/unicode/char/16A0/index.htm - 0xE1 0x9A 0xA0 / 225 154 160 # 4-byte <U+070E> - http://www.fileformat.info/info/unicode/char/2070E/index.htm - 0xF0 0xA0 0x9C 0x8E / 240 160 156 142
on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl filename on_op on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_end on_nl source on_op on_tstring_beg on_tstring_content # Aۿᚠ<U+070E>
metadata on_op double on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_symbeg source on_op source on_rparen on_nl expect on_lparen metadata on_rparen on_period to # intercept the indirector call to provide back mocked metadata for the given URI
metadata on_op double on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_symbeg source on_op source on_rparen on_nl expect on_lparen metadata on_rparen on_period to # for this test to properly trigger previously errant behavior, the code for # Puppet::FileServing::Metadata.indirection.find must run and produce an # instance of Puppet::Indirector::FileMetadata::Rest that can be amended
on_ivar on_op on_lbrace on_ignored_nl on_symbeg UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_symbeg md5lite on_op on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl # Contents of an empty file generate the below hash values # in case you need to add support for additional algorithms in future
allow on_lparen on_const on_op on_const on_op on_const on_rparen on_period to receive on_lparen on_symbeg UNK on_rparen on_nl end on_nl on_ignored_nl it # to prevent the catalog from trying to write state.yaml
UNK on_period UNK on_op on_symbeg UNK on_nl on_rbrace on_nl end on_nl end on_nl on_ignored_nl describe on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl # the audit metaparameter is deprecated and logs a warning
