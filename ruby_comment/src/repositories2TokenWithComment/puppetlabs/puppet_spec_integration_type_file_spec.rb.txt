parent on_op tmpdir on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_const on_period join on_lparen parent on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl # we create a directory first so backups of :path that are stored in # the same directory will also be removed after the tests
parent on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_period join on_lparen parent on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_ignored_nl # we create a file inside windows protected folders (C:\Windows, C:\Windows\system32, etc) # the file will also be removed after the tests
parent on_op tmpdir on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_const on_period join on_lparen parent on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl # we create a directory first so backups of :path that are stored in # the same directory will also be removed after the tests
UNK on_lparen on_const on_op on_const on_op on_const on_rparen on_period to receive on_lparen on_symbeg UNK on_rparen on_nl on_ignored_nl UNK on_lparen on_const # stub this to not try to create state.yaml
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl on_const on_period touch on_lparen path on_rparen on_nl catalog on_period add_resource on_lparen described_class on_period new # issue #14599
set_mode on_lparen on_int on_comma target on_rparen on_nl end on_nl end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl catalog on_period # so we can cleanup
UNK on_symbeg each do on_ignored_nl set_mode on_lparen on_int on_comma link_target on_rparen on_nl end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do # so we can cleanup
on_const on_op on_const on_period symlink on_lparen UNK on_comma target on_rparen on_nl on_const on_op on_const on_period symlink on_lparen target on_comma link # link -> target -> real_target
on_const on_period mkdir on_lparen on_const on_period join on_lparen dir on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_rparen on_nl on_ignored_nl UNK on_lparen on_const # Create a directory where the backup should be so that writing to it fails
UNK on_tstring_beg on_tstring_content on_tstring_end on_comma on_lbrace on_symbeg checksum on_op checksum_type on_rbrace do on_ignored_nl let on_lparen on_symbeg UNK on_rparen on_lbrace on_const # FileBucket uses the globally configured default for lookup by digest, which right now is MD5.
on_const on_period touch checksum_file on_comma on_symbeg mtime on_op on_const on_period UNK on_op on_int on_nl catalog on_period add_resource on_const on_op on_const # Ensure the test believes the source file was written in the past.
second_catalog on_period add_resource on_const on_op on_const on_period send on_lparen on_symbeg newfile on_comma on_ivar on_rparen on_nl result on_op second_catalog on_period apply # The 2nd time the resource should not change.
on_const on_period open on_lparen checksum_file on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_lbrace on_op f on_op f on_period write on_tstring_beg on_tstring_content on_tstring_end # Change the source file.
second_catalog on_period add_resource on_const on_op on_const on_period send on_lparen on_symbeg newfile on_comma on_ivar on_rparen on_nl result on_op second_catalog on_period apply # The 2nd time should update the resource.
UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_ignored_nl dest on_op tmpfile on_lparen on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_end on_rparen on_nl source on_op # different UTF-8 widths # 1-byte A # 2-byte ۿ - http://www.fileformat.info/info/unicode/char/06ff/index.htm - 0xDB 0xBF / 219 191 # 3-byte ᚠ - http://www.fileformat.info/info/unicode/char/16A0/index.htm - 0xE1 0x9A 0xA0 / 225 154 160 # 4-byte <U+070E> - http://www.fileformat.info/info/unicode/char/2070E/index.htm - 0xF0 0xA0 0x9C 0x8E / 240 160 156 142
on_ignored_nl dest on_op tmpfile on_lparen on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_end on_rparen on_nl source on_op tmpfile_with_contents on_lparen on_tstring_beg on_tstring_content on_embexpr_beg # Aۿᚠ<U+070E>
resource on_op catalog on_period UNK on_period first on_lbrace on_op UNK on_op UNK on_period UNK on_op on_tstring_beg on_tstring_content on_embexpr_beg dest on_embexpr_end # find the resource and verify
UNK on_op on_const on_op on_const on_op on_const on_period windows? on_op on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_end on_nl on_ignored_nl expect on_lparen # note that Windows file:// style URIs get an extra / in front of c:/ like /c:/
expect on_lparen on_const on_period UNK on_lparen UNK on_rparen on_rparen on_period to eq on_lparen UNK on_op source on_rparen on_nl expect on_lparen # the URI can be round-tripped through unescape
expect on_lparen UNK on_period UNK on_rparen on_period to eq on_lparen on_const on_op on_const on_rparen on_nl on_ignored_nl expect on_lparen on_const on_period # and is properly UTF-8
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl on_const on_period open on_lparen httppath on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_lbrace on_op f on_op # The fixture has neither last-modified nor content-checksum headers. # Such upstream ressources are treated as "really fresh" and get # downloaded during every run.
on_const on_period touch httppath on_comma on_symbeg mtime on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl catalog on_period add_resource # make sure the mtime is not "right now", lest we get a race
on_const on_period touch httppath on_comma on_symbeg mtime on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl catalog on_period add_resource # fixture has Last-Modified: Sun, 22 Mar 2015 22:25:34 GMT
on_ivar on_lbracket on_symbeg owner on_rbracket on_op on_ivar on_lbracket on_symbeg UNK on_rbracket on_nl on_ivar on_lbracket on_symbeg links on_rbracket on_op on_symbeg follow # at minimal, we need an owner and/or group
on_const on_op on_const on_op on_const on_op on_const on_op on_const on_comma on_ignored_nl on_const on_op on_const on_op on_const on_op on_const on_op on_const #everyone
on_ivar on_lbracket on_symbeg owner on_rbracket on_op on_ivar on_lbracket on_symbeg UNK on_rbracket on_nl on_ivar on_lbracket on_symbeg links on_rbracket on_op on_symbeg follow # at minimal, we need an owner and/or group
on_const on_period open on_lparen on_ivar on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_lbrace on_op f on_op f on_period print on_tstring_beg on_tstring_content on_tstring_end # this file should get removed
