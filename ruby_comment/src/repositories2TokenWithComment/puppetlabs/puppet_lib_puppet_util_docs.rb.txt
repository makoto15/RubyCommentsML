UNK UNK on_op UNK on_op UNK on_nl def UNK on_lparen str on_rparen on_ignored_nl UNK on_op str on_nl end on_nl on_ignored_nl # Some simple methods for helping manage automatic documentation generation.
def UNK on_lparen str on_rparen on_ignored_nl UNK on_op str on_nl end on_nl on_ignored_nl def UNK on_lparen name on_comma on_op UNK # Specify the actual doc string.
def UNK on_lparen name on_comma on_op UNK on_rparen on_ignored_nl UNK on_op on_tstring_beg on_tstring_content on_embexpr_beg name on_embexpr_end on_tstring_end on_nl on_ignored_nl UNK # Add a new autodoc block. We have to define these as class methods, # rather than just sticking them in a hash, because otherwise they're # too difficult to do inheritance with.
def UNK on_nl UNK on_op UNK on_period UNK on_lbrace on_op UNK on_op UNK on_period to_s on_op UNK on_tstring_content UNK on_rbrace # Generate the full doc string.
def UNK on_lparen UNK on_comma UNK on_rparen on_ignored_nl str on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl lengths on_op on_lbracket on_rbracket on_nl # Build a table
UNK on_period UNK do on_op name on_comma UNK on_op on_ignored_nl on_lbracket name on_comma UNK on_rbracket on_period UNK on_period UNK do # Figure out the longest field for all columns
UNK on_period UNK do on_op value on_comma i on_op on_ignored_nl lengths on_lbracket i on_rbracket on_op value on_period to_s on_period length # The headers could also be longest
str on_op UNK on_period UNK on_lparen lengths on_rparen on_period UNK on_lbrace on_op value on_comma UNK on_op UNK on_lparen value on_comma # Add the header names
str on_op lengths on_period UNK on_lbrace on_op UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_op UNK on_rbrace on_period UNK on_lparen on_tstring_beg on_tstring_content # And the header row
UNK on_period UNK on_lbrace on_op UNK on_comma UNK on_op UNK on_lbracket UNK on_rbracket on_period to_s on_op UNK on_lbracket UNK on_rbracket # Now each data row
UNK UNK UNK on_nl def UNK on_nl UNK on_nl end on_nl on_ignored_nl def UNK on_lparen value on_comma length on_rparen on_ignored_nl # There is nothing that would ever set this. It gets read in reference/type.rb, but will never have any value but nil.
def UNK on_lparen value on_comma length on_rparen on_ignored_nl value on_period to_s on_op on_lparen on_tstring_beg on_tstring_content on_tstring_end on_op on_lparen length on_op # Pad a field with spaces
def UNK on_lparen text on_rparen on_ignored_nl UNK text on_period UNK if text on_period UNK on_op UNK on_tstring_content UNK on_nl UNK # Strip indentation and trailing whitespace from embedded doc fragments. # # Multi-line doc fragments are sometimes indented in order to preserve the # formatting of the code they're embedded in. Since indents are syntactic # elements in Markdown, we need to make sure we remove any indent that was # added solely to preserve surrounding code formatting, but LEAVE any indent # that delineates a Markdown element (code blocks, multi-line bulleted list # items). We can do this by removing the *least common indent* from each line. # # Least common indent is defined as follows: # # * Find the smallest amount of leading space on any line... # * ...excluding the first line (which may have zero indent without affecting # the common indent)... # * ...and excluding lines that consist solely of whitespace. # * The least common indent may be a zero-length string, if the fragment is # not indented to match code. # * If there are hard tabs for some dumb reason, we assume they're at least # consistent within this doc fragment. # # See tests in spec/unit/util/docs_spec.rb for examples.
UNK text on_period UNK if text on_period UNK on_op UNK on_tstring_content UNK on_nl UNK on_op text on_period UNK on_lparen on_tstring_beg # One-liners are easy! (One-liners may be buffered with extra newlines.)
if UNK on_period length on_op UNK on_nl text on_op text on_period UNK on_lparen UNK on_tstring_content on_embexpr_beg UNK on_embexpr_end UNK on_comma # prevent nil # Clean hanging indent, if any
text on_period UNK on_period UNK on_lbrace on_op UNK on_op UNK on_period UNK on_rbrace on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # Clean trailing space
