UNK UNK on_nl UNK UNK on_comma UNK on_comma on_const on_nl UNK on_ignored_nl UNK on_op on_tstring_beg on_tstring_content UNK UNK UNK on_tstring_end # XXX: We don't actually deal with epochs here.
UNK on_ignored_nl UNK on_op on_tstring_beg on_tstring_content UNK UNK UNK on_tstring_end on_nl end on_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_comma UNK # pass
UNK on_op on_tstring_beg on_tstring_content UNK UNK UNK on_tstring_end on_nl end on_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_comma UNK on_nl on_ignored_nl # Add the package version
UNK UNK on_nl UNK on_op UNK on_tstring_beg on_tstring_content on_tstring_end on_comma on_ivar on_lbracket on_symbeg UNK on_rbracket on_nl on_ignored_nl UNK UNK on_op # What's the latest package version available?
UNK on_ivar on_lbracket on_symbeg UNK on_rbracket on_nl end on_nl end on_nl on_ignored_nl UNK UNK on_nl UNK on_period UNK on_nl end # urpmi didn't find updates, pretend the current # version is the latest
UNK on_period UNK on_nl end on_nl on_ignored_nl UNK UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_comma on_ivar on_lbracket on_symbeg UNK on_rbracket # Install in urpmi can be used for update, too
UNK UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_comma on_ivar on_lbracket on_symbeg UNK on_rbracket on_nl end on_nl end on_nl EMP EMP # For normal package removal the urpmi provider will delegate to the RPM # provider. If the package to remove has dependencies then uninstalling via # rpm will fail, but `urpme` can be used to remove a package and its # dependencies.
