UNK on_op on_lbrace on_ignored_nl on_symbeg name on_op command on_comma on_ignored_nl on_rbrace on_period UNK on_lparen options on_rparen on_nl on_ignored_nl UNK on_op #unless_val = options.delete(:unless) || :true
on_rbrace on_period UNK on_lparen options on_rparen on_nl on_ignored_nl UNK on_op on_const on_op on_const on_period type on_lparen on_symbeg exec on_rparen on_period #:unless => unless_val,
UNK on_op on_const on_op on_const on_period type on_lparen on_symbeg exec on_rparen on_period new on_lparen on_symbeg name on_op on_ivar on_rparen on_nl # Chicken, meet egg: # Provider methods have to be stubbed before resource init or checks fail # We have to set 'unless' in resource init or it can not be marked sensitive correctly. # So: we create a dummy ahead of time and use 'any_instance' to stub out provider methods.
on_const on_op on_const on_period type on_lparen on_symbeg exec on_rparen on_period new on_lparen on_symbeg name on_op on_ivar on_comma on_symbeg UNK on_op # Specify shell provider so we don't have to care about command validation
on_const on_op on_const on_period type on_lparen on_symbeg exec on_rparen on_period new on_lparen on_symbeg name on_op on_ivar on_comma on_symbeg creates on_op # Specify shell provider so we don't have to care about command validation
