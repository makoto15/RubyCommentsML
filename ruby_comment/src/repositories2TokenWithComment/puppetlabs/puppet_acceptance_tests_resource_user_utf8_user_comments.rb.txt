UNK on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_ignored_nl UNK on_symbeg UNK # Ensure a user can be managed with UTF-8 comment value. The comment value is # normally used for "Full Name" so this is important in a UTF-8 context. # We should be able to: # - create a new user with a UTF-8 comment # - modify an existing UTF-8 comment to a new UTF-8 comment # - modify an existing UTF-8 comment to an ASCII comment # - create a new user with an ASCII comment # - modify an existing ASCII comment to a UTF-8 one # Where applicable, we should be able to do this in different locales
on_ignored_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_op on_regexp_beg on_tstring_content on_regexp_end on_nl on_ignored_nl UNK on_op on_tstring_beg on_tstring_content on_embexpr_beg UNK on_lparen # Could be done as integration tests, but would # require changing the system running the test # in ways that might require special permissions # or be harmful to the system running the test
UNK on_symbeg UNK on_comma on_symbeg UNK on_op on_regexp_beg on_tstring_content on_regexp_end on_nl on_ignored_nl UNK on_op on_tstring_beg on_tstring_content on_embexpr_beg UNK on_lparen UNK # PUP-7049 / ARISTA-42 - user provider bug on Arista # AIX providers are separate from most other platforms, # and have not been made unicode-aware yet.
mixed_utf8_0 on_op on_tstring_beg on_tstring_content on_tstring_end on_nl reported_mixed_utf8_0 on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_op # different UTF-8 widths # 1-byte A # 2-byte ۿ - http://www.fileformat.info/info/unicode/char/06ff/index.htm - 0xDB 0xBF / 219 191 # 3-byte ᚠ - http://www.fileformat.info/info/unicode/char/16A0/index.htm - 0xE1 0x9A 0xA0 / 225 154 160 # 4-byte 𠜎 - http://www.fileformat.info/info/unicode/char/2070E/index.htm - 0xF0 0xA0 0x9C 0x8E / 240 160 156 142
UNK on_op on_heredoc_beg on_nl on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end # remove user on all agents
apply_manifest_on on_lparen agents on_comma create_user on_comma on_symbeg expect_changes on_op true on_comma on_symbeg environment on_op on_lbrace on_symbeg on_const on_op on_tstring_beg on_tstring_content # Note setting LANG='<encoding>' environment like this has no effect on Windows agents.
apply_manifest_on on_lparen agents on_comma set_comment_utf8 on_comma on_symbeg expect_changes on_op true on_comma on_symbeg environment on_op on_lbrace on_symbeg on_const on_op on_tstring_beg on_tstring_content # Note setting LANG='<encoding>' environment like this has no effect on Windows agents.
step on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl create_user on_op on_heredoc_beg on_nl on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg mixed_utf8_0 on_embexpr_end on_tstring_content on_heredoc_end # *NIX and OSX should also work with ISO-8859-1 (at least, let's make sure we don't regress)
apply_manifest_on on_lparen agents on_op UNK on_comma create_user on_comma on_symbeg expect_changes on_op true on_comma on_symbeg environment on_op on_lbrace on_symbeg on_const on_op # Since LANG=<'encoding'> has no effect, this test is redundant on Windows - exclude it.
apply_manifest_on on_lparen agents on_op UNK on_comma set_comment_utf8 on_comma on_symbeg expect_changes on_op true on_comma on_symbeg environment on_op on_lbrace on_symbeg on_const on_op # Since LANG=<'encoding'> has no effect, this test is redundant on Windows - exclude it.
apply_manifest_on on_lparen agents on_op osx_agents on_op UNK on_comma create_user on_comma on_symbeg expect_changes on_op true on_comma on_symbeg environment on_op on_lbrace on_symbeg # OS X is known broken in POSIX locale with UTF-8 chars on OS X, so exclude OS X here. # Also since LANG=<'encoding'> has no effect, this test is redundant on Windows - exclude it.
apply_manifest_on on_lparen agents on_op osx_agents on_op UNK on_comma set_comment_utf8 on_comma on_symbeg expect_changes on_op true on_comma on_symbeg environment on_op on_lbrace on_symbeg # OS X is known broken in POSIX locale with UTF-8 chars on OS X, so exclude OS X here. # Also since LANG=<'encoding'> has no effect, this test is redundant on Windows - exclude it.
apply_manifest_on on_lparen agents on_op osx_agents on_comma create_user on_comma on_symbeg expect_changes on_op true on_comma on_symbeg environment on_op on_lbrace on_symbeg on_const on_op # While setting LANG='<encoding>' environment like this has no effect on # Windows agents, we still want to run this and the following tests on Windows # because we want to ensure we can set create/modify ASCII comments to UTF-8 # and back. # OS X is known broken in POSIX locale with UTF-8 chars on OS X, so exclude OS X here.
step on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl set_comment_utf8 on_op on_heredoc_beg on_nl on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg mixed_utf8_0 on_embexpr_end on_tstring_content on_heredoc_end # This test is important because of ruby's Etc.getpwnam behavior which returns # strings in current locale if compatible - make sure we can get a system # value in POSIX and compare it to incoming from puppet in UTF-8.
apply_manifest_on on_lparen agents on_op osx_agents on_comma set_comment_utf8 on_comma on_symbeg expect_changes on_op true on_comma on_symbeg environment on_op on_lbrace on_symbeg on_const on_op # While setting LANG='<encoding>' environment like this has no effect on # Windows agents, we still want to run this and the following tests on Windows # because we want to ensure we can set create/modify ASCII comments to UTF-8 # and back. # OS X is known broken in POSIX locale with UTF-8 chars on OS X, so exclude OS X here.
apply_manifest_on on_lparen agents on_op osx_agents on_comma create_user on_comma on_symbeg expect_changes on_op true on_comma on_symbeg environment on_op on_lbrace on_symbeg on_const on_op # While setting LANG='<encoding>' environment like this has no effect on # Windows agents, we still want to run this and the following tests on Windows # because we want to ensure we can set create/modify ASCII comments to UTF-8 # and back. # OS X is known broken in POSIX locale with UTF-8 chars on OS X, so exclude OS X here.
apply_manifest_on on_lparen agents on_op osx_agents on_comma UNK on_comma on_symbeg expect_changes on_op true on_comma on_symbeg environment on_op on_lbrace on_symbeg on_const on_op # While setting LANG='<encoding>' environment like this has no effect on # Windows agents, we still want to run this on Windows because we want to # ensure we can set create/modify ASCII comments to UTF-8 and back. # OS X is known broken in POSIX locale with UTF-8 chars, so exclude OS X here
