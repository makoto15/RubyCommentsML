UNK on_const on_op on_const on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end # @api public
on_ignored_nl def UNK on_nl on_const on_op on_const on_op on_const on_period UNK on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen # This is just so we can search for actions. We only use its # list of directories to search.
def UNK on_nl on_const on_op on_const on_op on_const on_period UNK on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl # Lists all loaded faces # @return [Array<Symbol>] The names of the loaded faces
def UNK on_lparen UNK on_rparen on_ignored_nl on_const on_op on_const on_op on_const on_period UNK on_lparen UNK on_rparen on_nl end on_nl on_ignored_nl # Register a face # @param instance [Puppet::Interface] The face # @return [void] # @api private
def UNK on_lparen name on_comma version on_comma on_op UNK on_rparen on_ignored_nl face on_op on_const on_op on_const on_op on_const on_lbracket name # Defines a new Face. # @todo Talk about using Faces DSL inside the block # # @param name [Symbol] the name of the face # @param version [String] the version of the face (this should # conform to {http://semver.org/ Semantic Versioning}) # @overload define(name, version, {|| ... }) # @return [Puppet::Interface] The created face # @api public # @dsl Faces
face on_period UNK on_nl end on_nl on_ignored_nl face on_period UNK on_lparen on_op UNK on_rparen UNK UNK on_nl on_ignored_nl UNK face # REVISIT: Shouldn't this be delayed until *after* we evaluate the # current block, not done before? --daniel 2011-04-07
def UNK on_lparen name on_comma version on_rparen on_ignored_nl on_const on_op on_const on_op on_const on_lbracket name on_comma version on_rbracket on_nl end # Retrieves a face by name and version. Use `:current` for the # version to get the most recent available version. # # @param name [Symbol] the name of the face # @param version [String, :current] the version of the face # # @return [Puppet::Interface] the face # # @api public
def on_op on_lparen name on_comma version on_rparen on_ignored_nl face on_op on_const on_op on_const on_op on_const on_lbracket name on_comma version on_rbracket # Retrieves a face by name and version # # @param name [Symbol] the name of the face # @param version [String] the version of the face # # @return [Puppet::Interface] the face # # @api public
UNK on_const on_op on_const on_op on_const on_lbracket name on_comma on_symbeg UNK on_rbracket on_nl UNK on_const on_op on_const on_comma on_tstring_beg on_tstring_content # REVISIT (#18042) no sense in rechecking if version == :current -- josh
def UNK on_lparen name on_comma action on_comma version on_op on_symbeg UNK on_rparen on_ignored_nl on_const on_op on_const on_op on_const on_period UNK # Retrieves an action for a face # @param name [Symbol] The face # @param action [Symbol] The action name # @param version [String, :current] The version of the face # @return [Puppet::Interface::Action] The action
on_ignored_nl on_ignored_nl def UNK on_nl UNK UNK on_period name on_comma on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK ######################################################################## # Documentation. We currently have to rewrite both getters because we share # the same instance between build-time and the runtime instance. When that # splits out this should merge into a module that both the action and face # include. --daniel 2011-04-17
def UNK on_nl UNK UNK on_period name on_comma on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg name # Returns the synopsis for the face. This shows basic usage and global # options. # @return [String] usage synopsis # @api private
on_ignored_nl UNK on_symbeg name on_nl on_ignored_nl UNK on_symbeg version on_nl on_ignored_nl UNK on_symbeg UNK on_nl UNK on_symbeg UNK on_nl on_ignored_nl ########################################################################
UNK on_symbeg name on_nl on_ignored_nl UNK on_symbeg version on_nl on_ignored_nl UNK on_symbeg UNK on_nl UNK on_symbeg UNK on_nl on_ignored_nl def # The name of the face # @return [Symbol] # @api private
UNK on_symbeg version on_nl on_ignored_nl UNK on_symbeg UNK on_nl UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen name on_comma version # The version of the face # @return [SemanticPuppet::Version]
UNK on_symbeg UNK on_nl UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen name on_comma version on_comma on_op UNK on_rparen on_ignored_nl # The autoloader instance for the face # @return [Puppet::Util::Autoload] # @api private
def UNK on_lparen name on_comma version on_comma on_op UNK on_rparen on_ignored_nl UNK on_const on_op on_const on_period UNK on_lparen version on_rparen # @api private
on_ivar on_op on_lbracket on_rbracket on_nl on_ivar on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl on_ivar on_op on_const on_op on_const on_op on_const on_period # The few bits of documentation we actually demand. The default license # is a favour to our end users; if you happen to get that in a core face # report it as a bug, please. --daniel 2011-04-26
def UNK on_nl UNK on_period UNK on_lparen on_const on_period UNK on_lparen on_symbeg UNK on_rparen on_rparen on_nl end on_nl on_ignored_nl def # Loads all actions defined in other files. # # @return [void] # @api private
def UNK on_nl on_tstring_beg on_tstring_content on_embexpr_beg name on_period UNK on_embexpr_end on_tstring_content on_embexpr_beg version on_period UNK on_embexpr_end on_tstring_content on_tstring_end on_nl end # Returns a string representation with the face's name and version # @return [String]
def UNK on_nl on_ivar on_op UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_nl end on_nl UNK on_nl def # @return [void]
def UNK on_nl on_ivar on_nl end on_nl UNK on_nl def UNK on_lparen UNK on_comma action on_comma UNK on_op on_lbracket on_rbracket # @return [Boolean]
UNK on_nl def UNK on_lparen UNK on_comma action on_comma UNK on_op on_lbracket on_rbracket on_comma UNK on_op UNK UNK on_rparen on_ignored_nl ######################################################################## # Action decoration, whee! You are not expected to care about this code, # which exists to support face building and construction. I marked these # private because the implementation is crude and ugly, and I don't yet know # enough to work out how to make it clean. # # Once we have established that these methods will likely change radically, # to be unrecognizable in the final outcome. At which point we will throw # all this away, replace it with something nice, and work out if we should # be making this visible to the outside world... --daniel 2011-04-14
def UNK on_lparen UNK on_comma action on_comma UNK on_op on_lbracket on_rbracket on_comma UNK on_op UNK UNK on_rparen on_ignored_nl on_lbracket on_symbeg # @return [void] # @api private
UNK on_op action on_period UNK on_period UNK UNK on_op name on_op on_ignored_nl UNK on_period UNK name on_nl end on_period UNK # Collect the decoration methods matching our pass.
UNK on_period UNK UNK on_op UNK on_op on_ignored_nl UNK UNK UNK UNK on_period UNK on_lparen UNK on_comma action on_comma UNK # Exceptions here should propagate up; this implements a hook we can use # reasonably for option validation.
def UNK on_lparen name on_comma UNK on_rparen on_ignored_nl UNK on_lparen name on_comma on_op UNK on_rparen on_nl UNK on_lparen name on_rparen # @return [void] # @api private
def UNK on_period UNK on_lparen name on_comma UNK on_rparen on_ignored_nl UNK on_lparen name on_comma UNK on_rparen on_nl UNK on_lparen name # @return [void] # @api private
