it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl resource on_op on_const on_op on_const on_period type on_lparen on_symbeg notify on_rparen on_period new on_symbeg # This will basically only ever be used during testing.
allow_any_instance_of on_lparen on_const on_op on_const on_op on_const on_rparen on_period to receive on_lparen on_symbeg UNK on_rparen on_period and_return on_lparen true on_rparen # Enable persistence during tests
expect on_lparen UNK on_rparen on_period to eq on_lparen on_lbracket dependent on_rbracket on_rparen on_nl expect on_lparen on_ivar on_period resource_status on_lparen resource # We should have gone on to evaluate the children
allow on_lparen catalog on_rparen on_period to receive on_lparen on_symbeg UNK on_rparen on_period and_return on_lparen generator on_rparen on_nl end on_nl on_ignored_nl # avoid crude failures because of nil resources that result # from implicit containment and lacking containers
catalog on_period UNK UNK on_nl expect on_lparen transaction on_rparen on_period to receive on_lparen on_symbeg UNK on_rparen on_period UNK on_nl on_ignored_nl #Only the generator resource should be applied, all the other resources are failed, and skipped.
times_send_log_with_skipping_called on_op on_int on_nl allow_any_instance_of on_lparen on_const on_op on_const on_op on_const on_rparen on_period to receive on_lparen on_symbeg send_log on_rparen on_lbrace # Exec['exec1'] is outside of a class, so it's warning is not subject to being coalesced.
UNK on_op on_int on_nl allow_any_instance_of on_lparen on_const on_op on_const on_rparen on_period to receive on_lparen on_symbeg send_log on_rparen on_lbrace UNK on_op # Class['declared_class'] depends upon Class['required_class'] which contains a resource with a failure.
