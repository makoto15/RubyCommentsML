def self on_period UNK on_nl on_ivar on_op on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl # If yaourt is installed, we can make use of it
UNK on_symbeg UNK on_op on_tstring_beg on_tstring_content on_tstring_end if UNK on_nl on_ignored_nl UNK on_symbeg UNK on_op on_lbracket on_symbeg UNK on_comma on_symbeg # Yaourt is a common AUR helper which, if installed, we can use to query the AUR
def self on_period UNK on_lparen name on_rparen on_ignored_nl UNK on_ignored_nl on_op pacman on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma name on_rparen on_period # Checks if a given name is a group
UNK on_nl end on_nl end on_nl on_ignored_nl def UNK on_nl if on_ivar on_lbracket on_symbeg source on_rbracket on_nl UNK on_nl else # pacman returns an expected non-zero exit code when the name is not a group
def UNK on_nl if on_ivar on_lbracket on_symbeg source on_rbracket on_nl UNK on_nl else on_ignored_nl UNK on_nl end on_nl on_ignored_nl UNK # Install a package using 'pacman', or 'yaourt' if available. # Installs quietly, without confirmation or progress bar, updates package # list from servers defined in pacman.conf.
def self on_period UNK on_nl UNK on_op on_lbracket on_rbracket on_nl on_ignored_nl installed_packages on_op UNK on_nl installed_packages on_period UNK on_lbrace on_op # Fetch the list of packages and package groups that are currently installed on the system. # Only package groups that are fully installed are included. If a group adds packages over time, it will not # be considered as fully installed any more, and we would install the new packages on the next run. # If a group removes packages over time, nothing will happen. This is intended.
installed_packages on_op UNK on_nl installed_packages on_period UNK on_lbrace on_op UNK on_comma _ on_op UNK on_rbrace on_period UNK do on_op package # Get the installed packages
UNK on_lparen installed_packages on_rparen on_period UNK do on_op UNK on_comma version on_op on_ignored_nl UNK on_op UNK on_lparen UNK on_lparen UNK # Get the installed groups
def self on_period UNK on_nl UNK on_ignored_nl packages on_op on_lbrace on_rbrace on_nl UNK on_lparen on_lbracket UNK on_lparen on_symbeg pacman on_rparen # returns a hash package => version of installed packages
UNK on_op on_regexp_beg on_tstring_content on_regexp_end on_nl UNK on_period UNK do on_op line on_op on_ignored_nl UNK on_op UNK on_period UNK on_lparen # pacman -Q output is 'packagename version-rel'
def self on_period UNK on_lparen installed_packages on_comma UNK on_op UNK on_rparen on_ignored_nl groups on_op on_lbrace on_rbrace on_nl UNK on_ignored_nl UNK # returns a hash of group => version of installed groups
UNK on_op on_lbracket UNK on_lparen on_symbeg pacman on_rparen on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl UNK on_op UNK if UNK on_nl # Build a hash of group name => list of packages
groups on_period UNK do on_op _ on_comma packages on_op on_ignored_nl on_op packages on_period UNK on_lbrace on_op package on_op installed_packages on_lbracket # Remove any group that doesn't have all its packages installed
groups on_period UNK do on_op name on_comma packages on_op on_ignored_nl groups on_lbracket name on_rbracket on_op packages on_period UNK on_period UNK # Replace the list of packages with a version string consisting of packages that make up the group
UNK UNK UNK on_nl end on_nl groups on_nl end on_nl on_ignored_nl def UNK on_nl self on_period UNK on_nl end on_nl # pacman returns an expected non-zero exit code when the filter name is not a group
def UNK on_nl self on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl resource_name on_op on_ivar on_lbracket on_symbeg name on_rbracket # Because Archlinux is a rolling release based distro, installing a package # should always result in the newest release.
self on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl resource_name on_op on_ivar on_lbracket on_symbeg name on_rbracket on_nl on_ignored_nl UNK # Install in pacman can be used for update, too
def UNK on_nl resource_name on_op on_ivar on_lbracket on_symbeg name on_rbracket on_nl on_ignored_nl UNK pacman on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg # We rescue the main check from Pacman with a check on the AUR using yaourt, if installed
UNK pacman on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma resource_name on_rparen on_period UNK on_period # If target is a group, construct the group version
UNK on_op UNK on_nl UNK on_ignored_nl if UNK on_nl UNK on_op pacman on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma # Start by querying with pacman first # If that fails, retry using yaourt against the AUR
UNK on_nl else on_ignored_nl UNK on_nl end on_nl end on_nl end on_nl on_ignored_nl def UNK on_nl installed_packages on_op self on_period # now try the AUR
def UNK on_nl installed_packages on_op self on_period class on_period UNK on_nl resource_name on_op on_ivar on_lbracket on_symbeg name on_rbracket on_nl on_ignored_nl # Queries information for a package or package group
version on_op self on_period class on_period UNK on_lparen installed_packages on_comma resource_name on_rparen on_lbracket resource_name on_rbracket on_nl on_ignored_nl if version on_nl # Check for the resource being a group
UNK UNK UNK version on_nl on_ignored_nl self on_period class on_period UNK on_lparen resource_name on_comma version on_rparen on_nl end on_nl on_ignored_nl # Return nil if no package or group found
def UNK on_nl resource_name on_op on_ivar on_lbracket on_symbeg name on_rbracket on_nl on_ignored_nl UNK on_op self on_period class on_period UNK on_lparen # Removes a package from the system.
fail on_lparen _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_lbrace on_label resource_name on_rbrace on_rparen if self on_period class on_period UNK # Refuse to install if not allowing virtual packages and the resource is a group
