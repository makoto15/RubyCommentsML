UNK on_lparen on_symbeg mixed_utf8 on_rparen UNK on_tstring_beg on_tstring_content on_tstring_end UNK on_ignored_nl UNK do on_ignored_nl UNK on_op UNK on_lparen on_tstring_beg on_tstring_content # different UTF-8 widths # 1-byte A # 2-byte ۿ - http://www.fileformat.info/info/unicode/char/06ff/index.htm - 0xDB 0xBF / 219 191 # 3-byte ᚠ - http://www.fileformat.info/info/unicode/char/16A0/index.htm - 0xE1 0x9A 0xA0 / 225 154 160 # 4-byte ܎ - http://www.fileformat.info/info/unicode/char/2070E/index.htm - 0xF0 0xA0 0x9C 0x8E / 240 160 156 142
on_ignored_nl UNK do on_ignored_nl UNK on_op UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl on_const on_period UNK on_lbracket on_symbeg UNK # Aۿᚠ܎
UNK on_op UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl on_const on_period UNK on_lbracket on_symbeg UNK on_rbracket on_op UNK on_nl # Get a safe temporary file
on_const on_op on_const on_op on_const on_period UNK on_period UNK on_period UNK on_nl end on_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end do # This is necessary so the terminus instances don't lie around. # and so that Puppet::SSL::Key.indirection.save may be used
UNK on_op UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_const on_lbracket on_symbeg UNK on_rbracket on_op UNK on_nl on_const on_op on_const # write custom password file to where Puppet expects
UNK on_op on_const on_op on_const on_op on_const on_period UNK on_lparen UNK on_rparen on_nl on_ignored_nl on_const on_period UNK on_lparen on_const on_lbracket # use OpenSSL APIs to generate a private key
on_const on_period UNK on_lparen on_const on_lbracket on_symbeg UNK on_rbracket on_rparen on_nl UNK on_op on_const on_period UNK on_lparen on_const on_lbracket on_symbeg # stash it in Puppets private key directory
UNK on_op UNK on_period UNK on_lparen on_const on_op on_const on_op on_const on_period new on_lparen on_symbeg on_const on_comma on_symbeg on_const on_rparen # with password protection enabled
UNK on_op on_const on_op on_const on_op on_const on_period new on_lparen key_name on_rparen on_nl UNK on_period key on_nl on_ignored_nl expect on_lparen # indirector loads existing .pem off disk instead of replacing it
expect on_lparen UNK on_period key on_period UNK on_period UNK on_rparen on_period to eq on_lparen UNK on_period UNK on_rparen on_nl expect # newly loaded host private key matches the manually created key # Private-Key: (512 bit) style data
expect on_lparen UNK on_period key on_period UNK on_period UNK on_rparen on_period to eq on_lparen UNK on_period UNK on_rparen on_nl expect # -----BEGIN RSA PRIVATE KEY-----
key on_op on_const on_op on_const on_op on_const on_period new on_lparen key_name on_rparen on_nl key on_period UNK on_nl on_const on_op on_const # uses specified :passfile when writing the private key
UNK on_op on_const on_period UNK on_lparen on_const on_lbracket on_symbeg UNK on_rbracket on_comma on_tstring_beg UNK key_name UNK on_tstring_content on_tstring_end on_rparen on_nl # indirector writes file here
expect do on_ignored_nl on_const on_op on_const on_period UNK on_lparen UNK on_comma UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen do on_op f # note incorrect password is an error
UNK on_op UNK on_nl on_const on_op on_const on_period UNK on_lparen UNK on_comma UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen do on_op # but when specifying the correct password
expect on_lparen key on_period UNK on_period UNK on_rparen on_period to eq on_lparen UNK on_period UNK on_rparen on_nl expect on_lparen key # the original key matches the manually reloaded key # Private-Key: (512 bit) style data
expect on_lparen key on_period UNK on_period UNK on_rparen on_period to eq on_lparen UNK on_period UNK on_rparen on_nl end on_nl end # -----BEGIN RSA PRIVATE KEY-----
