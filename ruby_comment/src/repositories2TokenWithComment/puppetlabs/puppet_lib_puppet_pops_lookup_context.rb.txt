UNK on_const on_op on_const on_op on_const on_nl UNK on_const on_nl UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen path on_comma # The EnvironmentContext is adapted to the current environment #
def UNK on_lparen path on_rparen on_ignored_nl file_data on_op on_ivar on_lbracket path on_rbracket on_nl stat on_op on_const on_op on_const on_period stat # Loads the contents of the file given by _path_. The content is then yielded to the provided block in # case a block is given, and the returned value from that block is cached and returned by this method. # If no block is given, the content is stored instead. # # The cache is retained as long as the inode, mtime, and size of the file remains unchanged. # # @param path [String] path to the file to be read # @yieldparam content [String] the content that was read from the file # @yieldreturn [Object] some result based on the content # @return [Object] the content, or if a block was given, the return value of the block #
UNK on_const on_nl UNK on_const on_nl on_ignored_nl UNK on_symbeg module_name on_comma on_symbeg UNK on_nl UNK on_symbeg UNK on_nl on_ignored_nl def # A FunctionContext is created for each unique hierarchy entry and adapted to the Compiler (and hence shares # the compiler's life-cycle). # @api private
UNK on_const on_nl UNK on_const on_op on_const on_nl UNK on_const on_nl on_ignored_nl def UNK on_period UNK on_nl on_ivar on_nl end # The Context is created once for each call to a function. It provides a combination of the {Invocation} object needed # to provide explanation support and the {FunctionContext} object needed to provide the private cache. # The {Context} is part of the public API. It will be passed to a _data_hash_, _data_dig_, or _lookup_key_ function and its # attributes and methods can be used in a Puppet function as well as in a Ruby function. # The {Context} is maps to the Pcore type 'Puppet::LookupContext' # # @api public
def UNK on_period UNK on_lparen module_name on_rparen on_ignored_nl UNK on_lparen on_const on_period UNK on_lparen on_const on_period UNK on_lparen on_const on_period # Mainly for test purposes. Makes it possible to create a {Context} in Puppet code provided that a current {Invocation} exists.
UNK on_symbeg on_ivar on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg # Public methods delegated to the {FunctionContext}
def UNK on_lparen on_op block on_rparen on_ignored_nl on_ivar on_period UNK on_lparen on_op block on_rparen on_nl UNK on_nl end on_nl on_ignored_nl # Will call the given block to obtain a textual explanation if explanation support is active. #
def UNK on_lparen UNK on_rparen on_ignored_nl on_ivar on_period UNK on_lparen UNK on_comma on_ivar on_comma UNK on_rparen on_nl end on_nl on_ignored_nl # Resolve interpolation expressions in the given value # @param [Object] value # @return [Object] the value with all interpolation expressions resolved
def UNK on_nl on_ivar on_nl end on_nl end on_nl end on_nl end on_nl EMP EMP EMP EMP EMP EMP EMP # @api private
