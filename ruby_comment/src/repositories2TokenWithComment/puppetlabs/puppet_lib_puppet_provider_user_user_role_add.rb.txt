def UNK on_nl cmd on_op on_lbracket on_rbracket on_nl on_const on_op on_const on_period type on_lparen on_symbeg UNK on_rparen on_period UNK on_period #must override this to hand the keyvalue pairs
UNK if on_lbracket on_symbeg UNK on_comma on_symbeg password on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_rbracket on_period UNK #skip the password because we can't create it with the solaris useradd
value on_op on_ivar on_period UNK on_lparen property on_rparen on_nl if value on_op value on_op on_tstring_beg on_tstring_end on_nl if property on_op # 1680 Now you can set the hashed passwords on solaris:lib/puppet/provider/user/user_role_add.rb # the value needs to be quoted, mostly because -c might # have spaces in it
UNK on_period password on_op on_ivar on_lbracket on_symbeg password on_rbracket if on_ivar on_lbracket on_symbeg password on_rbracket on_nl end on_nl on_ignored_nl def # added to handle case when password is specified
UNK on_nl end on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl cmd on_op on_lbracket on_rbracket on_nl UNK on_period #we have to get rid of all the keys we are managing another way
def target_file_path on_nl on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl UNK on_symbeg target_file_path on_nl on_ignored_nl def shadow_entry on_nl UNK on_ivar if # This helper makes it possible to test this on stub data without having to # do too many crazy things!
def shadow_entry on_nl UNK on_ivar if UNK on_ivar on_nl on_ivar on_op on_const on_period UNK on_lparen target_file_path on_rparen on_period on_ignored_nl UNK #Read in /etc/shadow, find the line for this user (skipping comments, because who knows) and return it #No abstraction, all esoteric knowledge of file formats, yay
UNK on_lbrace on_op UNK on_op UNK on_period UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_op on_int on_rparen on_rbrace on_period # PUP-229: don't suppress the empty fields
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_ignored_nl UNK on_op on_const on_period UNK on_lparen target_file_path on_rparen on_nl on_ignored_nl on_const on_op # Read in /etc/shadow, find the line for our used and rewrite it with the # new pw. Smooth like 80 grit sandpaper. # # Now uses the `replace_file` mechanism to minimize the chance that we lose # data, but it is still terrible. We still skip platform locking, so a # concurrent `vipw -s` session will have no idea we risk data loss.
on_const on_op on_const on_period UNK on_lparen target_file_path on_comma on_int on_rparen do on_op UNK on_op on_ignored_nl UNK on_period UNK do on_op # Go Mifune loves the race here where we can lose data because # /etc/shadow changed between reading it and writing it. # --daniel 2012-02-05
