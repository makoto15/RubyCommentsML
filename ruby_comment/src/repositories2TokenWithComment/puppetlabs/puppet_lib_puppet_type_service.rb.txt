on_ignored_nl on_ignored_nl UNK on_const on_nl on_ignored_nl on_const on_period UNK on_lparen on_symbeg UNK on_rparen do on_ignored_nl UNK on_op on_tstring_beg on_tstring_content on_tstring_end # This is our main way of managing processes right now. # # a service is distinct from a process in that services # can only be managed through the interface of an init script # which is why they have a search path for initscripts and such
newvalue on_lparen on_symbeg UNK on_comma on_symbeg event on_op on_symbeg UNK on_comma on_symbeg UNK on_op on_symbeg UNK on_rparen do on_ignored_nl provider # This only makes sense on systemd systems. Otherwise, it just defaults # to disable.
newvalue on_lparen on_symbeg UNK on_comma on_symbeg event on_op on_symbeg UNK on_rparen do on_ignored_nl provider on_period UNK on_nl end on_nl on_ignored_nl # This only works on Windows systems.
UNK on_lparen on_symbeg UNK on_rparen do on_ignored_nl desc on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl newvalue on_lparen on_symbeg UNK on_comma on_symbeg event # Handle whether the service should actually be running right now.
def UNK on_nl if on_lparen UNK on_lbracket on_symbeg UNK on_rbracket on_op UNK on_lparen on_symbeg UNK on_rparen on_rparen on_period UNK on_op # Basically just a synonym for restarting. Used to respond # to events.
if on_lparen UNK on_lbracket on_symbeg UNK on_rbracket on_op UNK on_lparen on_symbeg UNK on_rparen on_rparen on_period UNK on_op on_symbeg UNK on_nl # Only restart if we're actually running
