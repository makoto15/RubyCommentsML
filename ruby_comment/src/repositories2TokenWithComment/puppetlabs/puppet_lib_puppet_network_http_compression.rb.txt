on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl def UNK on_nl UNK on_lparen on_const on_period UNK on_period UNK on_op on_const on_op # from https://github.com/ruby/ruby/blob/v2_1_3/lib/net/http/generic_request.rb#L40
def UNK on_nl UNK on_lparen on_const on_period UNK on_period UNK on_op on_const on_op on_const on_rparen on_nl end on_nl UNK UNK # this module function allows to use the right underlying # methods depending on zlib presence
def UNK on_lparen response on_rparen on_ignored_nl UNK response UNK on_tstring_beg on_tstring_content on_tstring_end UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK # return an uncompressed body if the response has been # compressed
UNK on_const on_op on_const on_period new on_lparen on_const on_period new on_lparen response on_period UNK on_rparen on_comma UNK UNK on_op on_const # ZLib::GzipReader has an associated encoding, by default Encoding.default_external
UNK on_const on_nl def UNK on_lparen uncompressor on_op on_const on_op on_const on_period new on_lparen UNK on_op UNK on_rparen on_rparen on_ignored_nl # This adapters knows how to uncompress both 'zlib' stream (the deflate algorithm from Content-Encoding) # and GZip streams.
on_ivar on_op uncompressor on_nl on_ivar on_op UNK on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_ivar # Create an inflater that knows to parse GZip streams and zlib streams. # This uses a property of the C Zlib library, documented as follow: # windowBits can also be greater than 15 for optional gzip decoding. Add # 32 to windowBits to enable zlib and gzip decoding with automatic header # detection, or add 16 to decode only the gzip format (the zlib format will # return a Z_DATA_ERROR). If a gzip stream is being decoded, strm->adler is # a crc32 instead of an adler32.
on_ivar on_op on_const on_op on_const on_period new on_nl UNK on_ivar UNK on_ignored_nl on_ivar on_op UNK on_nl UNK on_nl end on_nl # it can happen that we receive a raw deflate stream # which might make our inflate throw a data error. # in this case, we try with a verbatim (no header) # deflater.
