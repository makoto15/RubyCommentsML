UNK on_const on_op on_const on_op on_const on_op on_const on_nl on_const on_op on_const on_op on_const on_op on_const on_nl on_const on_op on_const # The receiver of `import(file)` calls; once per imported file, or nil if imports are ignored # # Transforms a Pops::Model to classic Puppet AST. # TODO: Documentation is currently skipped completely (it is only used for Rdoc) #
def UNK on_lparen o on_comma UNK on_comma hash on_op on_lbrace on_rbrace on_rparen on_ignored_nl UNK on_period UNK on_lparen UNK on_lparen hash # Initialize klass from o (location) and hash (options to created instance). # The object o is used to compute a source location. It may be nil. Source position is merged into # the given options (non surgically). If o is non-nil, the first found source position going up # the containment hierarchy is set. I.e. callers should pass nil if a source position is not wanted # or known to be unobtainable for the object. # # @param o [Object, nil] object from which source position / location is obtained, may be nil # @param klass [Class<Puppet::Parser::AST>] the ast class to create an instance of # @param hash [Hash] hash with options for the class to create #
UNK on_period UNK on_lparen UNK on_lparen hash on_comma o on_rparen on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen hash on_comma # create and pass hash with file and line information # PUP-3274 - still needed since hostname transformation requires AST::HostName, and AST::Regexp
def UNK on_lparen hash on_comma o on_rparen on_ignored_nl UNK o on_nl pos on_op on_lbrace on_rbrace on_nl UNK on_op o on_period # THIS IS AN EXPENSIVE OPERATION # The 3x AST requires line, pos etc. to be recorded directly in the AST nodes and this information # must be computed. # (Newer implementation only computes the information that is actually needed; typically when raising an # exception). #
def UNK on_lparen o on_rparen on_ignored_nl UNK on_ignored_nl on_cvar on_period UNK on_lparen UNK on_comma o on_rparen on_nl UNK on_const on_op # Transforms pops expressions into AST 3.1 statements/expressions
def UNK on_lparen o on_rparen on_ignored_nl on_cvar on_period UNK on_lparen UNK on_comma o on_rparen on_nl end on_nl on_ignored_nl def UNK # Transforms pops expressions into AST 3.1 query expressions
def UNK on_lparen o on_rparen on_ignored_nl on_cvar on_period UNK on_lparen UNK on_comma o on_rparen on_nl end on_nl on_ignored_nl on_ignored_nl def # Transforms pops expressions into AST 3.1 hostnames
def UNK on_lparen o on_rparen on_ignored_nl UNK UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_lbrace UNK o on_period UNK on_period # Ensures transformation fails if a 3.1 non supported object is encountered in a query expression #
def UNK on_lparen o on_rparen on_ignored_nl o on_period UNK on_lbrace on_op x on_op UNK x on_comma on_const on_op on_const on_comma # Transforms Array of host matching expressions into a (Ruby) array of AST::HostName
end on_nl on_ignored_nl def UNK on_lparen o on_rparen on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_lparen # Number to string with correct radix
def UNK on_lparen o on_rparen on_ignored_nl o on_period UNK on_op o on_period UNK on_lparen on_const on_op on_const on_rparen on_nl end # Nil, nop # Bee bopp a luh-lah, a bop bop boom. #
