UNK on_const on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_nl UNK UNK on_lparen UNK on_comma # # @api private # # Use the server_list setting to resolve a service. This resolver is only used # if server_list is set either on the command line or in the configuration file. #
UNK UNK on_lparen UNK on_comma on_label on_comma on_label on_comma on_label on_rparen on_ignored_nl on_ivar on_op UNK on_nl on_ivar on_op UNK on_nl # # @api private # # @param [Puppet::HTTP::Client] client # @param [Array<String>] server_list_setting array of servers set via the # configuration or the command line # @param [Integer] default_port if a port is not set for a server in # server_list, use this port # @param [Array<Symbol>] services array of services that server_list can be # used to resolve. If a service is not included in this array, this resolver # will return nil. #
UNK UNK on_lparen UNK on_comma UNK on_comma on_label nil on_comma on_label nil on_rparen on_ignored_nl return nil UNK on_ivar on_period UNK # # @api private # # Walk the server_list to find a server and port that will connect successfully. # # @param [Puppet::HTTP::Session] session <description> # @param [Symbol] name the name of the service being resolved # @param [Puppet::SSL::SSLContext] ssl_context # @param [Proc] error_handler (nil) optional callback for each error # encountered while resolving a route. # # @return [nil] return nil if the service to be resolved does not support # server_list # @return [Puppet::HTTP::Service] a validated service to use for future HTTP # requests # # @raise [Puppet::Error] raise if none of the servers defined in server_list # are available #
return nil UNK on_ivar on_period UNK on_lparen UNK on_rparen on_nl on_ignored_nl UNK on_ivar on_nl return on_const on_op on_const on_op on_const # If we're configured to use an explicit service host, e.g. report_server # then don't use server_list to resolve the `:report` service.
UNK on_ivar on_nl return on_const on_op on_const on_op on_const on_period UNK on_lparen on_ivar on_comma UNK on_comma UNK on_comma on_ivar on_period # If we resolved the URL already, use its host & port for the service
on_ivar on_period UNK on_period UNK UNK on_op UNK on_op on_ignored_nl UNK on_op UNK UNK UNK UNK on_nl UNK on_op UNK # Return the first simple service status endpoint we can connect to
UNK UNK on_lparen uri on_comma UNK on_comma on_label nil on_comma on_label nil on_rparen on_ignored_nl UNK on_op on_ivar on_period UNK on_lparen # # @api private # # Check if a server and port is available # # @param [URI] uri A URI created from the server and port to test # @param [Puppet::HTTP::Session] session # @param [Puppet::SSL::SSLContext] ssl_context # @param [Proc] error_handler (nil) optional callback for each error # encountered while resolving a route. # # @return [Boolean] true if a successful response is returned by the server, # false otherwise #
on_const on_period UNK UNK on_lparen UNK on_tstring_content UNK on_rparen on_op UNK on_label UNK UNK on_nl return UNK on_nl end on_nl #TRANSLATORS 'server_list' is the name of a setting and should not be translated
