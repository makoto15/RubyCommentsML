UNK on_const on_op on_const on_op on_const on_nl UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK UNK UNK UNK on_op on_const # Monitor a given file for changes on a periodic interval. Changes are detected # by looking for a change in the file ctime.
UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK UNK UNK UNK on_op on_const on_op on_const on_op on_const on_op on_const UNK # @!attribute [r] filename # @return [String] The fully qualified path to the file.
UNK UNK UNK UNK UNK UNK on_op on_const on_op on_const on_op on_const on_op on_const UNK UNK UNK on_const UNK UNK # @param filename [String] The fully qualified path to the file. # @param timer [Puppet::Util::Watcher::Timer] The polling interval for checking for file # changes. Setting the timeout to a negative value will treat the file as # always changed. Defaults to `Puppet[:filetimeout]`
UNK UNK on_nl on_ivar UNK UNK on_nl UNK on_nl on_ignored_nl UNK UNK on_nl on_ivar on_nl UNK on_nl on_ignored_nl UNK UNK # @return [true, false] If the file has changed since it was last checked.
UNK UNK on_nl on_ivar on_nl UNK on_nl on_ignored_nl UNK UNK on_nl UNK UNK UNK on_ivar UNK UNK UNK on_ivar UNK # Allow this to be used as the name of the file being watched in various # other methods (such as Puppet::FileSystem.exist?)
