UNK on_const on_nl UNK on_const on_nl on_ignored_nl UNK UNK UNK on_comma UNK UNK on_comma UNK segments on_nl on_ignored_nl def UNK # @api private
def UNK on_lparen value on_rparen on_ignored_nl UNK on_ivar on_period nil? on_nl value on_nl UNK on_ignored_nl UNK on_op on_ivar on_period UNK # Prunes a found root value with respect to subkeys in this key. The given _value_ is returned untouched # if this key has no subkeys. Otherwise an attempt is made to create a Hash or Array that contains only the # path to the appointed value and that value. # # If subkeys exists and no value is found, then this method will return `nil`, an empty `Array` or an empty `Hash` # to enable further merges to be applied. The returned type depends on the given _value_. # # @param value [Object] the value to prune # @return the possibly pruned value
def UNK on_lparen value on_rparen on_ignored_nl on_ivar on_period nil? on_op value on_op segments on_period UNK on_period UNK on_lparen value on_rparen # Create a structure that can be dug into using the subkeys of this key in order to find the # given _value_. If this key has no subkeys, the _value_ is returned. # # @param value [Object] the value to wrap in a structure in case this value has subkeys # @return [Object] the possibly wrapped value
