UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op UNK on_nl end on_nl ## # @api private # # Parses puppet configuration files #
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op UNK on_nl end on_nl on_ignored_nl def UNK on_lparen file on_comma UNK on_comma ## # @param value_converter [Proc] a function that will convert strings into ruby types
def UNK on_lparen file on_comma UNK on_comma allowed_section_names on_op on_lbracket on_rbracket on_rparen on_ignored_nl result on_op on_const on_period new on_nl if # @param file [String, File] pointer to the file whose text we are parsing # @param text [String] the actual text of the inifile to be parsed # @param allowed_section_names [Array] an optional array of accepted section # names; if this list is non-empty, sections outside of it will raise an # error. # @return A Struct with a +sections+ array representing each configuration section
message on_op on_tstring_beg on_tstring_content on_tstring_end on_op _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_ignored_nl on_lbrace on_label allowed_section_names on_period UNK on_lparen #TRANSLATORS 'puppet.conf' is the name of the puppet configuration file and should not be translated.
if UNK on_op on_symbeg UNK on_nl value on_op setting on_period value on_nl UNK on_ignored_nl value on_op UNK on_lbracket setting on_period # We don't want to munge modes, because they're specified in octal, so we'll # just leave them as a String, since Puppet handles that case correctly.
UNK on_ignored_nl options on_op UNK on_lparen value on_rparen if value on_period UNK on_lparen on_const on_rparen on_nl if options on_nl section # Check to see if this is a file argument and it has extra options
