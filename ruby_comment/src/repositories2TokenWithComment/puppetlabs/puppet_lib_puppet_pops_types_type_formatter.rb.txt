UNK on_const on_nl UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl def UNK on_period string on_lparen t on_rparen on_ignored_nl UNK # String # ------ # Creates a string representation of a type. # # @api public #
def UNK on_period string on_lparen t on_rparen on_ignored_nl UNK on_period string on_lparen t on_rparen on_nl end on_nl on_ignored_nl def UNK # Produces a String representation of the given type. # @param t [PAnyType] the type to produce a string form # @return [String] the type in string form # # @api public #
def string on_lparen t on_rparen on_ignored_nl on_ivar on_op on_tstring_beg on_tstring_end on_nl append_string on_lparen t on_rparen on_nl on_ivar on_nl end on_nl # Produces a string representing the type # @api public #
def UNK on_lparen t on_comma indent on_op on_int on_comma indent_width on_op on_int on_rparen on_ignored_nl on_ivar on_op on_tstring_beg on_tstring_end on_nl UNK # Produces an string containing newline characters and indentation that represents the given # type or literal _t_. # # @param t [Object] the type or literal to produce a string for # @param indent [Integer] the current indentation level # @param indent_width [Integer] the number of spaces to use for one indentation # # @api public
def UNK on_lparen t on_comma indent on_op on_int on_comma indent_width on_op on_int on_comma UNK on_op false on_rparen on_ignored_nl UNK on_op # @api private
def UNK on_lparen UNK on_comma indent on_comma t on_rparen on_ignored_nl on_ivar on_op true on_nl on_ivar on_op UNK on_nl begin on_ignored_nl # @api private
def UNK on_lparen t on_rparen on_ignored_nl on_ivar on_op true on_nl begin on_ignored_nl string on_lparen t on_rparen on_nl ensure on_ignored_nl on_ivar # Produces a string representing the type where type aliases have been expanded # @api public #
def UNK on_lparen t on_rparen on_ignored_nl on_ivar on_op true on_nl begin on_ignored_nl string on_lparen t on_rparen on_nl ensure on_ignored_nl on_ivar # Produces a debug string representing the type (possibly with more information that the regular string format) # @api public #
def UNK on_lparen _ on_rparen on_semicolon on_ivar on_op on_tstring_beg on_tstring_content on_tstring_end on_semicolon end on_nl on_ignored_nl def UNK on_lparen _ on_rparen # @api private
def UNK on_lparen _ on_rparen on_semicolon on_ivar on_op on_tstring_beg on_tstring_content on_tstring_end on_semicolon end on_nl on_ignored_nl def UNK on_lparen _ on_rparen # @api private
def UNK on_lparen _ on_rparen on_semicolon on_ivar on_op on_tstring_beg on_tstring_content on_tstring_end on_semicolon end on_nl on_ignored_nl def UNK on_lparen t on_rparen # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma t on_period value on_period nil? on_rparen on_lbrace append_string # @api private
def UNK on_lparen _ on_rparen on_semicolon on_ivar on_op on_tstring_beg on_tstring_content on_tstring_end on_semicolon end on_nl on_ignored_nl def UNK on_lparen _ on_rparen # @api private
def UNK on_lparen _ on_rparen on_semicolon on_ivar on_op on_tstring_beg on_tstring_content on_tstring_end on_semicolon end on_nl on_ignored_nl def UNK on_lparen _ on_rparen # @api private
def UNK on_lparen _ on_rparen on_semicolon on_ivar on_op on_tstring_beg on_tstring_content on_tstring_end on_semicolon end on_nl on_ignored_nl def UNK on_lparen _ on_rparen # @api private
def UNK on_lparen _ on_rparen on_semicolon on_ivar on_op on_tstring_beg on_tstring_content on_tstring_end on_semicolon end on_nl on_ignored_nl def UNK on_lparen t on_rparen # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma t on_period UNK on_rparen on_lbrace append_elements on_lparen range_array_part # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma t on_period type on_period nil? on_rparen on_lbrace append_string # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma t on_period type on_period nil? on_rparen on_lbrace append_strings # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma t on_period UNK on_period nil? on_rparen on_lbrace append_string # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma t on_period UNK on_period nil? on_rparen on_lbrace append_string # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma t on_period UNK on_rparen on_lbrace append_elements on_lparen range_array_part # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma t on_period UNK on_period nil? on_rparen on_lbrace append_string # @api private
def UNK on_lparen t on_rparen on_ignored_nl range on_op range_array_part on_lparen t on_period size_type on_rparen on_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma t on_period UNK on_period empty? on_rparen do on_ignored_nl # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma t on_period types on_period empty? on_rparen on_lbrace append_strings # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma t on_period UNK on_period empty? on_rparen on_lbrace append_strings # @api private
def UNK on_lparen t on_rparen on_ignored_nl on_ivar on_op on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_lparen t on_rparen # @api private
def UNK on_lparen t on_rparen on_ignored_nl min on_op t on_period UNK on_nl max on_op t on_period UNK on_nl append_array on_lparen # @api private
def UNK on_lparen t on_rparen on_ignored_nl min on_op t on_period UNK on_nl max on_op t on_period UNK on_nl append_array on_lparen # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma t on_period types on_period empty? on_rparen do on_ignored_nl # @api private
def UNK on_lparen t on_rparen on_ignored_nl if t on_period UNK on_period nil? on_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma t # @api private
append_strings on_lparen t on_period UNK on_period types on_period UNK on_lbrace on_op UNK on_op UNK on_period UNK on_op on_const on_rbrace on_comma # translate to string, and skip Unit types
append_strings on_lparen on_lbracket t on_period UNK on_rbracket on_comma true on_rparen unless t on_period UNK on_period nil? on_nl chomp_list on_nl end # Add block T last (after min, max) if present) #
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma t on_period UNK on_period empty? on_rparen on_lbrace append_hash # @api private
def UNK on_lparen t on_rparen on_ignored_nl k on_op t on_period UNK on_nl UNK on_op t on_period UNK on_period UNK on_lparen # @api private
k on_op t on_period name if UNK on_nl else on_ignored_nl k on_op UNK on_op on_const on_period UNK on_lparen k on_rparen # Output as literal String
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma t on_period UNK on_period empty? on_rparen on_lbrace append_strings # @api private
def UNK on_lparen t on_rparen on_ignored_nl range on_op range_array_part on_lparen t on_period size_type on_rparen on_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma t on_period UNK on_period nil? on_rparen on_lbrace append_string # @api private
def UNK on_lparen _ on_rparen on_ignored_nl on_ivar on_op on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_lparen t on_rparen # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma t on_period UNK on_period nil? on_op t on_period # @api private
def UNK on_lparen t on_rparen on_ignored_nl if t on_period UNK on_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_lbrace append_strings on_lparen # @api private
def UNK on_lparen t on_rparen on_ignored_nl if t on_period UNK on_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_lbrace append_strings on_lparen # @api private
def UNK on_lparen _ on_rparen on_ignored_nl on_ivar on_op on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_lparen t on_rparen # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma t on_period UNK on_period nil? on_rparen on_lbrace append_elements # @api private
def UNK on_lparen t on_rparen on_ignored_nl if t on_period UNK on_nl append_array on_lparen UNK on_lparen t on_period UNK on_rparen on_comma # @api private
def UNK on_lparen t on_rparen on_ignored_nl contained_type on_op t on_period type on_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma contained_type on_period # @api private
def UNK on_lparen UNK on_rparen on_ignored_nl hash on_op UNK on_period _pcore_init_hash on_nl if hash on_period UNK on_op on_int on_nl string # @api private
def symbolic_key on_lparen UNK on_rparen on_ignored_nl on_ivar on_op on_tstring_beg on_tstring_content UNK UNK UNK on_tstring_content on_tstring_end on_op UNK on_nl end on_nl # Used when printing names of well known keys in an Object type. Placed in a separate # method to allow override. # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen do on_ignored_nl append_hash on_lparen t on_period _pcore_init_hash on_period # @api private
def UNK on_lparen t on_rparen on_ignored_nl if on_ivar on_nl UNK on_lparen t on_period _pcore_init_hash on_lparen on_ivar on_period nil? on_op on_op # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_const on_op on_const on_op t on_period type on_rparen # @api private
def UNK on_lparen t on_rparen on_ignored_nl optional_type on_op t on_period optional_type on_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma optional_type on_period # @api private
def UNK on_lparen t on_rparen on_ignored_nl expand on_op on_ivar on_nl if expand on_op t on_period UNK on_nl on_ivar on_op on_const # @api private
def UNK on_lparen t on_comma expand on_rparen on_ignored_nl if on_ivar on_period nil? on_nl on_ivar on_op t on_period name on_nl if # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_lbrace append_string on_lparen t on_period UNK on_rparen on_rbrace # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_array on_lparen on_tstring_beg on_tstring_end on_rparen do on_ignored_nl if on_ivar on_op on_op UNK on_lparen t # @api private
def UNK on_lparen t on_rparen on_semicolon on_ivar on_op on_tstring_beg on_tstring_content on_tstring_end on_semicolon end on_nl on_ignored_nl def UNK on_lparen t on_rparen # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_hash on_lparen t on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen t on_rparen on_ignored_nl # @api private
def UNK on_lparen t on_rparen on_ignored_nl append_string on_lparen on_const on_period UNK on_period type on_lparen t on_rparen on_rparen on_nl end on_nl # @api private
def UNK on_lparen t on_rparen on_semicolon on_ivar on_op on_lparen on_ivar on_op on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen on_semicolon # @api private
def UNK on_lparen t on_rparen on_semicolon on_ivar on_op t on_period to_s on_semicolon end on_nl on_ignored_nl def UNK on_lparen t on_rparen # @api private
def UNK on_lparen t on_rparen on_semicolon on_ivar on_op on_const on_period UNK on_lparen t on_rparen on_semicolon end on_nl on_ignored_nl def UNK # @api private
def UNK on_lparen t on_rparen on_ignored_nl on_ivar on_op on_const on_period UNK on_period UNK on_lparen t on_rparen on_nl end on_nl on_ignored_nl # @api private
on_ivar on_op on_const on_period UNK on_period UNK on_lparen t on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen t on_rparen on_semicolon # Use single qoute on strings that does not contain single quotes, control characters, or backslashes.
def UNK on_lparen t on_rparen on_semicolon on_ivar on_op t on_period to_s on_semicolon end on_nl on_ignored_nl def UNK on_lparen t on_rparen # @api private
def UNK on_lparen t on_rparen on_semicolon on_ivar on_op on_tstring_beg on_tstring_content on_tstring_end on_semicolon end on_nl on_ignored_nl def UNK on_lparen t on_rparen # @api private
def UNK on_lparen t on_rparen on_semicolon on_ivar on_op on_tstring_beg on_tstring_content UNK t UNK on_tstring_content on_tstring_end on_semicolon end on_nl on_ignored_nl def # @api private
def UNK on_lparen t on_rparen on_semicolon on_ivar on_op on_tstring_beg on_tstring_content UNK t UNK on_tstring_content on_tstring_end on_semicolon end on_nl on_ignored_nl def # @api private
def UNK on_lparen t on_rparen on_semicolon on_ivar on_op on_tstring_beg on_tstring_content UNK t UNK on_tstring_content on_tstring_end on_semicolon end on_nl on_ignored_nl def # @api private
def UNK on_lparen t on_rparen on_semicolon on_ivar on_op on_tstring_beg on_tstring_content UNK t UNK on_tstring_content on_tstring_end on_semicolon end on_nl on_ignored_nl def # @api private
def to_s on_nl on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period UNK on_nl on_const on_op # Debugging to_s to reduce the amount of output
def UNK on_lparen qualified_name on_rparen on_ignored_nl if on_op qualified_name on_period is_a? on_lparen on_const on_rparen on_op qualified_name on_op on_const on_nl qualified_name # Capitalizes each segment in a name separated with the {NAME_SEPARATOR} conditionally. The name # will not be subject to capitalization if it already starts with a capital letter. This to avoid # that existing camel casing is lost. # # @param qualified_name [String] the name to capitalize # @return [String] the capitalized name # # @api private
append_hash on_lparen v on_rparen do on_op _ on_comma UNK on_op on_ignored_nl if UNK on_period is_a? on_lparen on_const on_rparen on_nl append_hash # Types might need to be output as type references
