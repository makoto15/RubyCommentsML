UNK on_const on_op on_const on_nl UNK on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period UNK on_nl # @api private
def UNK on_lparen UNK on_comma lookup_invocation on_comma UNK on_rparen on_ignored_nl root_key on_op UNK on_period root_key on_nl lookup_invocation on_period UNK on_lparen # Performs a lookup with the assumption that a recursive check has been made. # # @param key [LookupKey] The key to lookup # @param lookup_invocation [Invocation] The current lookup invocation # @param merge [MergeStrategy,String,Hash{String => Object},nil] Merge strategy, merge strategy name, strategy and options hash, or nil (implies "first found") # @return [Object] the found object # @throw :no_such_key when the object is not found
UNK on_const on_op on_const on_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period UNK on_nl on_ignored_nl def UNK on_lparen UNK on_comma UNK # @api private
UNK on_op UNK on_period UNK on_lparen lookup_invocation on_rparen on_period UNK on_lparen UNK on_comma UNK on_comma lookup_invocation on_comma UNK on_comma on_tstring_beg # Extra paths provided. Must be resolved and placed in front of known paths
UNK on_const on_op on_const on_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period UNK on_nl on_ignored_nl def UNK on_nl on_tstring_beg on_tstring_content on_embexpr_beg # TODO: API 5.0, remove this class # @api private
