UNK on_const on_op on_const on_op on_const on_op on_const UNK on_symbeg UNK on_nl UNK on_symbeg UNK on_nl UNK on_symbeg UNK on_nl # Perform peer certificate verification against the known CA. # If there is no CA information known, then no verification is performed # # @deprecated # @api private #
UNK on_symbeg UNK on_nl UNK on_symbeg UNK on_nl UNK on_symbeg UNK on_nl on_ignored_nl on_const on_op UNK on_op UNK on_nl on_ignored_nl #< class Puppet::SSL::Validator
def UNK on_lparen on_ignored_nl UNK on_op on_const UNK on_symbeg UNK UNK on_op on_const UNK on_symbeg UNK UNK on_rparen on_ignored_nl on_ignored_nl # Creates a new DefaultValidator, optionally with an SSL Configuration and SSL Host. # # @param ca_path [String] Filepath for the cacert # # @api private #
def UNK on_nl on_ivar on_op UNK UNK on_nl on_ivar on_op UNK UNK on_nl on_ivar on_op UNK on_nl on_ivar on_op UNK # Resets this validator to its initial validation state. The ssl configuration is not changed. # # @api private #
def UNK on_lparen UNK on_comma store_context on_rparen on_ignored_nl current_cert on_op store_context on_period current_cert on_nl on_ivar on_op current_cert on_nl on_ignored_nl if # Performs verification of the SSL connection and collection of the # certificates for use in constructing the error message if the verification # failed. This callback will be executed once for each certificate in a # chain being verified. # # From the [OpenSSL # documentation](https://www.openssl.org/docs/ssl/SSL_CTX_set_verify.html): # The `verify_callback` function is used to control the behaviour when the # SSL_VERIFY_PEER flag is set. It must be supplied by the application and # receives two arguments: preverify_ok indicates, whether the verification of # the certificate in question was passed (preverify_ok=1) or not # (preverify_ok=0). x509_store_ctx is a pointer to the complete context used for # the certificate chain verification. # # See {Puppet::Network::HTTP::Connection} for more information and where this # class is intended to be used. # # @param [Boolean] preverify_ok indicates whether the verification of the # certificate in question was passed (preverify_ok=true) # @param [OpenSSL::X509::StoreContext] store_context holds the X509 store context # for the chain being verified. # # @return [Boolean] false if the peer is invalid, true otherwise. # # @api private #
if UNK on_nl if on_ivar on_period UNK on_op store_context on_period UNK on_period UNK on_nl UNK on_op UNK on_nl end on_nl # We must make a copy since the scope of the store_context will be lost # across invocations of this method.
if on_ivar on_period UNK on_op store_context on_period UNK on_period UNK on_nl UNK on_op UNK on_nl end on_nl else on_ignored_nl UNK # If we've copied all of the certs in the chain out of the SSL library
UNK on_op UNK on_nl end on_nl else on_ignored_nl UNK on_op store_context on_period UNK on_op UNK on_nl error_string on_op store_context on_period # (#20027) The peer cert must be issued by a specific authority
UNK on_op store_context on_period UNK on_period UNK on_nl on_ignored_nl if current_cert on_op UNK on_op current_cert on_period UNK on_op UNK on_period # chain is from leaf to root, opposite of the order that `call` is invoked
if current_cert on_op UNK on_op current_cert on_period UNK on_op UNK on_period UNK on_op on_op on_const on_op on_const on_period UNK on_lparen # ruby 2.4 doesn't compare certs based on value, so force to DER byte array
crl on_op store_context on_period UNK on_nl if crl on_nl if crl on_period UNK on_op crl on_period UNK on_op on_const on_period # current_crl can be nil # https://github.com/ruby/ruby/blob/ruby_1_9_3/ext/openssl/ossl_x509store.c#L501-L510
def UNK on_lparen connection on_comma UNK on_op on_const on_period UNK on_lparen on_symbeg UNK on_rparen on_rparen on_ignored_nl on_ivar on_op connection on_period # Registers the instance's call method with the connection. # # @param [Net::HTTP] connection The connection to validate # # @param [Puppet::SSL::Host] host The host object containing SSL data # @return [void] # # @api private #
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op UNK on_tstring_content UNK on_nl UNK on_op UNK on_period UNK on_lparen UNK on_rparen ## # Decode a string of concatenated certificates # # @return [Array<OpenSSL::X509::Certificate>]
def UNK on_lparen UNK on_rparen on_ignored_nl on_const on_op on_const on_period UNK on_lparen UNK on_comma on_symbeg UNK on_op on_const on_op on_const # read_file makes testing easier.
on_const on_op on_const on_period UNK on_lparen UNK on_comma on_symbeg UNK on_op on_const on_op on_const on_rparen on_nl end on_nl on_ignored_nl def # https://www.ietf.org/rfc/rfc2459.txt defines the x509 V3 certificate format # CA bundles are concatenated X509 certificates, but may also include # comments, which could have UTF-8 characters
def UNK on_nl UNK on_op on_ivar on_period UNK on_nl UNK on_op UNK on_lparen UNK on_lparen on_ivar on_rparen on_rparen on_nl on_ignored_nl # Validates the peer certificates against the authorized certificates. # # @api private #
def UNK on_lparen UNK on_comma UNK on_rparen on_ignored_nl UNK on_period UNK UNK on_op UNK on_op on_ignored_nl UNK on_period UNK UNK # Checks if the set of peer_certs contains at least one certificate issued # by a certificate listed in authz_certs # # @return [Boolean] # # @api private #
def UNK on_nl on_const on_op on_const on_period UNK on_lparen on_const UNK on_symbeg UNK UNK on_rparen on_op on_const on_op on_const on_period # @api private #
