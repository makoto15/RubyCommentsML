UNK on_const on_nl UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl on_const on_op on_lbrace on_ignored_nl # This class provides a data structure representing a module's metadata. # @api private
def UNK on_nl on_ivar on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen # Returns a filesystem-friendly version of this module name.
def UNK on_nl return nil UNK on_ivar on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_ivar on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl # Returns a string that uniquely represents this version of this module.
def UNK on_lparen data on_rparen on_ignored_nl UNK on_lparen data on_rparen if data on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl UNK on_lparen # Merges the current set of metadata with another metadata hash. This # method also handles the validation of module names and versions, in an # effort to be proactive about module publishing constraints.
def UNK on_lparen name on_comma version_requirement on_op nil on_comma UNK on_op nil on_rparen on_ignored_nl UNK on_lparen name on_rparen on_nl UNK # Validates the name and version_requirement for a dependency, then creates # the Dependency and adds it. # Returns the Dependency that was added.
def UNK on_nl on_ivar on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_lbracket on_tstring_beg on_tstring_content # Provides an accessor for the now defunct 'description' property. This # addresses a regression in Puppet 3.6.x where previously valid templates # referring to the 'description' property were broken. # @deprecated
def UNK on_nl on_ivar on_nl end on_nl UNK on_symbeg UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_nl data on_op on_ivar # Returns a hash of the module's metadata. Used by Puppet's automated # serialization routines. # # @see Puppet::Network::FormatSupport#to_data_hash
def UNK on_lparen name on_comma on_op UNK on_rparen on_ignored_nl return on_ivar on_lbracket name on_period UNK on_rbracket if on_ivar on_period UNK # Expose any metadata keys as callable reader methods.
def UNK on_lparen data on_rparen on_ignored_nl UNK on_lparen data on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_rparen on_nl UNK on_comma on_ivar on_op # Do basic validation and parsing of the name parameter.
def UNK on_lparen data on_rparen on_ignored_nl UNK on_lparen data on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_rparen on_nl end on_nl on_ignored_nl def # Do basic validation on the version parameter.
def UNK on_lparen data on_rparen on_ignored_nl if data on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_regexp_beg on_tstring_content on_regexp_end on_nl source_uri on_op # Do basic parsing of the source parameter. If the source is hosted on # GitHub, we can predict sensible defaults for both project_page and # issues_url.
def UNK on_lparen data on_rparen on_ignored_nl data on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period UNK UNK on_op dep on_op on_ignored_nl UNK # Validates and parses the dependencies.
data on_period UNK on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_lparen name on_rparen on_ignored_nl return if name on_op # Clear dependencies so @data dependencies are not overwritten
def UNK on_lparen name on_rparen on_ignored_nl return if name on_op on_regexp_beg on_tstring_content on_regexp_end on_nl on_ignored_nl UNK on_comma UNK on_op name # Validates that the given module name is both namespaced and well-formed.
def UNK on_lparen UNK on_rparen on_ignored_nl return if on_const on_op on_const on_period UNK on_lparen UNK on_rparen on_nl on_ignored_nl UNK on_op # Validates that the version string can be parsed as per SemVer.
def UNK on_lparen value on_rparen on_ignored_nl if value on_period UNK on_lparen on_const on_rparen on_nl UNK value on_op on_regexp_beg on_tstring_content on_regexp_end # Validates that the given _value_ is a symbolic name that starts with a letter # and then contains only letters, digits, or underscore. Will raise an ArgumentError # if that's not the case. # # @param value [Object] The value to be tested
def UNK on_lparen UNK on_rparen on_ignored_nl on_const on_op on_const on_period UNK on_lparen UNK on_rparen on_nl UNK on_const on_op UNK on_nl # Validates that the version range can be parsed by Semantic.
