def UNK on_lparen request on_rparen on_ignored_nl UNK on_op request on_period options on_lbracket on_symbeg facts on_rbracket on_nl return unless UNK on_nl # @param request [Puppet::Indirector::Request] an indirection request # (possibly) containing facts # @return [Puppet::Node::Facts] facts object corresponding to facts in request
def UNK on_lparen request on_rparen on_ignored_nl facts on_op UNK on_lparen request on_rparen on_nl on_ignored_nl UNK on_lparen facts on_comma request on_rparen # Compile a node's catalog.
def UNK on_lparen catalog on_rparen on_ignored_nl return catalog on_period UNK on_lbrace on_op UNK on_op UNK on_period UNK on_rbrace if catalog # filter-out a catalog to remove exported resources
def UNK on_nl on_const on_period UNK on_period UNK on_nl end on_nl on_ignored_nl UNK on_nl on_ignored_nl def UNK on_lparen facts on_comma # Is our compiler part of a network, or are we just local?
def UNK on_lparen facts on_comma format on_rparen on_ignored_nl if format on_op on_tstring_beg on_tstring_content on_tstring_end on_nl return on_const on_op on_const on_op # @param facts [String] facts in a wire format for decoding # @param format [String] a content-type string # @return [Puppet::Node::Facts] facts object deserialized from supplied string # @api private
return on_const on_op on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_const on_period UNK on_lparen facts on_rparen on_rparen # We unescape here because the corresponding code in Puppet::Configurer::FactHandler encodes with Puppet::Util.uri_query_encode # PSON is deprecated, but continue to accept from older agents
def UNK on_lparen node on_rparen on_ignored_nl node on_period UNK on_lparen on_ivar on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen UNK # Add any extra data necessary to the node.
node on_period UNK on_lparen on_ivar on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl if UNK on_nl UNK # Merge in our server-side facts, so they can be used during compilation.
def UNK on_lparen UNK on_rparen on_ignored_nl if UNK on_nl UNK on_op UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period # Determine which checksum to use; if agent_checksum_type is not nil, # use the first entry in it that is also in known_checksum_types. # If no match is found, return nil.
UNK on_op on_const on_period UNK on_lparen metadata on_period UNK on_rparen on_nl UNK on_op UNK on_period UNK on_lparen environment_path on_rparen on_period # The static file content server doesn't know how to expand mountpoints, so # we need to do that ourselves from the actual system path of the source file. # This does that, while preserving any user-specified server or port.
def UNK on_lparen resource on_comma sources on_rparen on_ignored_nl UNK on_ignored_nl UNK resource on_lbracket on_symbeg UNK on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end # Helper method to decide if a file resource's metadata can be inlined. # Also used to profile/log reasons for not inlining.
return on_const on_op on_const on_op on_const on_period profile on_lparen _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_comma on_lbracket on_symbeg compiler on_comma #TRANSLATORS Inlining refers to adding additional metadata (in this case we are not inlining)
return on_const on_op on_const on_op on_const on_period profile on_lparen _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_comma on_lbracket on_symbeg compiler on_comma #TRANSLATORS Inlining refers to adding additional metadata (in this case we are not inlining)
return on_const on_op on_const on_op on_const on_period profile on_lparen _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_comma on_lbracket on_symbeg compiler on_comma #TRANSLATORS Inlining refers to adding additional metadata (in this case we are not inlining)
def UNK on_lparen metadata on_comma source on_comma environment_path on_rparen on_ignored_nl source_as_uri on_op on_const on_period UNK on_lparen on_const on_op on_const on_period # Return true if metadata is inlineable, meaning the request's source is # for the 'modules' mount and the resolved path is of the form: # $codedir/environments/$environment/*/*/files/**
def UNK on_nl on_const on_op on_const on_op on_const on_period profile on_lparen _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_comma on_lbracket on_symbeg # Helper method to log file resources that could not be inlined because they # fall outside of an environment.
on_const on_op on_const on_op on_const on_period profile on_lparen _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_comma on_lbracket on_symbeg compiler on_comma on_symbeg #TRANSLATORS Inlining refers to adding additional metadata (in this case we are not inlining)
def UNK on_nl on_const on_op on_const on_op on_const on_period profile on_lparen _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_comma on_lbracket on_symbeg # Helper method to log file resources that were successfully inlined.
on_const on_op on_const on_op on_const on_period profile on_lparen _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_comma on_lbracket on_symbeg compiler on_comma on_symbeg #TRANSLATORS Inlining refers to adding additional metadata
def UNK on_lparen catalog on_comma checksum_type on_rparen on_ignored_nl environment_path on_op on_const on_period UNK on_const on_period UNK on_lparen on_const on_lbracket on_symbeg # Inline file metadata for static catalogs # Initially restricted to files sourced from codedir via puppet:/// uri.
on_ignored_nl UNK on_period UNK do on_op resource on_op on_ignored_nl sources on_op on_lbracket resource on_lbracket on_symbeg source on_rbracket on_rbracket on_period UNK # TODO: get property/parameter defaults if entries are nil in the resource # For now they're hard-coded to match the File type.
if resource on_lbracket on_symbeg UNK on_rbracket on_op true on_op resource on_lbracket on_symbeg UNK on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end on_op resource # both need to handle multiple sources
options on_op on_lbrace on_ignored_nl on_symbeg environment on_op catalog on_period UNK on_comma on_ignored_nl on_symbeg links on_op resource on_lbracket on_symbeg links on_rbracket # Construct a hash mapping sources to arrays (list of files found recursively) of metadata
UNK on_nl UNK on_op UNK on_nl UNK on_nl end on_nl on_ignored_nl UNK on_op UNK on_lparen UNK on_comma source on_comma environment_path # If any source is not in the environment path, skip inlining this resource.
if resource on_lbracket on_symbeg UNK on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end on_op resource on_lbracket on_symbeg UNK on_rbracket on_period nil? on_nl UNK # Optimize for returning less data if sourceselect is first
catalog on_period metadata on_lbracket resource on_period UNK on_rbracket on_op metadata on_nl else on_ignored_nl UNK on_nl end on_nl end on_nl end # If the file is in the environment directory, we can safely inline
UNK on_nl end on_nl end on_nl end on_nl end on_nl on_ignored_nl def UNK on_lparen node on_comma options on_rparen on_ignored_nl if # Log a profiler event that we skipped this file because it is not in an environment.
def UNK on_lparen node on_comma options on_rparen on_ignored_nl if node on_period environment on_op node on_period environment on_period UNK on_op options # Compile the actual catalog.
checksum_type on_op UNK on_lparen options on_lbracket on_symbeg checksum_type on_rbracket on_rparen on_nl raise on_const on_op on_const on_comma _ on_lparen on_tstring_beg on_tstring_content # Check for errors before compiling the catalog
benchmark_str on_op _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_lbrace on_label escaped_node_name on_comma on_label escaped_node_environment on_rbrace on_nl profile_str on_op _ #TRANSLATORS Inlined refers to adding additional metadata
profile_str on_op _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_lbrace on_label node on_period name on_comma on_label node on_period environment on_rbrace #TRANSLATORS Inlined refers to adding additional metadata
benchmark_str on_op _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_lbrace on_label escaped_node_name on_rbrace on_nl profile_str on_op _ on_lparen on_tstring_beg on_tstring_content #TRANSLATORS Inlined refers to adding additional metadata
profile_str on_op _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_lbrace on_label node on_period name on_rbrace on_nl end on_nl UNK on_lparen #TRANSLATORS Inlined refers to adding additional metadata
def UNK on_lparen name on_comma environment on_comma transaction_uuid on_comma UNK on_comma facts on_rparen on_ignored_nl on_const on_op on_const on_op on_const on_period # Use indirection to find the node associated with a given request
if node on_nl UNK on_lparen node on_rparen on_nl end on_nl node on_nl end on_nl end on_nl on_ignored_nl def UNK on_lparen # Add any external data to the node.
def UNK on_lparen facts on_comma request on_rparen on_ignored_nl node on_op request on_period options on_lbracket on_symbeg UNK on_rbracket on_nl if node # Extract the node from the request, or use the request # to find the node.
name on_op request on_period UNK on_op request on_period node on_nl node on_op UNK on_lparen name on_comma request on_period environment on_comma # We rely on our authorization system to determine whether the connected # node is allowed to compile the catalog's node referenced by key. # By default the REST authorization system makes sure only the connected node # can compile his catalog. # This allows for instance monitoring systems or puppet-load to check several # node's catalog with only one certificate and a modification to auth.conf # If no key is provided we can only compile the currently connected node.
def UNK on_nl on_ivar on_op on_lbrace on_rbrace on_nl on_ignored_nl UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl if on_const on_period UNK on_lparen # Initialize our server fact hash; we add these to each client, and they # won't change while we're running, so it's safe to cache the values. # # See also set_server_facts in Puppet::Server::Compiler in puppetserver.
UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl if on_const on_period UNK on_lparen UNK on_rparen UNK on_op on_const on_period UNK on_lparen UNK # Add our server Puppet Enterprise version, if available.
on_ivar on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_const on_period UNK on_period to_s on_nl on_ignored_nl on_lbrace on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg # Add our server version to the fact list
on_lbrace on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg # And then add the server name and IP
on_ivar on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_lbracket UNK on_comma UNK on_rbracket on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl #rubocop:disable Lint/AssignmentInCondition
