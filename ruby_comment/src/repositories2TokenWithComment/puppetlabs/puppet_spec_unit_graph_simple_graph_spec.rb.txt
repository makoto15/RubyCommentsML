it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl on_ivar on_op on_const on_op on_const on_op on_const on_period new on_nl on_ivar on_period add_vertex on_lparen # Bug #2111
UNK on_symbeg vertex do on_ignored_nl on_const on_period new do on_op hash on_comma key on_op on_ignored_nl hash on_lbracket key on_rbracket on_op # This works with `add_edges` to auto-vivify the resource instances.
resource on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_lparen resource on_rparen on_period to receive on_lparen on_symbeg on_op on_rparen on_nl on_ivar on_op # Resource is a String here although not for realz. Stub [] to always return nil # because indexing a String with a non-Integer throws an exception (and none of # these tests need anything meaningful from []).
UNK on_period collect on_lbrace on_op x on_op x on_period UNK on_rbrace on_period sort on_nl end on_nl on_ignored_nl def UNK on_lparen # Return a sorted list of the object id's of the elements of an # enumerable.
on_lbracket on_symbeg UNK on_comma on_symbeg new on_rbracket on_period each do on_op which_format on_op on_ignored_nl UNK on_period each do on_op graph_to_test # Test serialization of graph to YAML.
UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_op on_const on_op on_const on_op on_const # Hack the YAML so that objects in the Puppet namespace get # changed to YAML::DomainType objects. This lets us inspect # the serialized objects easily without invoking any # yaml_initialize hooks.
expect on_lparen UNK on_period keys on_period UNK on_lbrace on_op x on_op x on_op on_tstring_beg on_tstring_content on_tstring_end on_rbrace on_period sort on_rparen # Check that the object contains instance variables @edges and # @vertices only. @reversal is also permitted, but we don't # check it, because it is going to be phased out.
edges on_op UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl expect on_lparen edges on_rparen on_period to be_a on_lparen on_const on_rparen on_nl # Check edges by forming a set of tuples (source, target, # callback, event) based on the graph and the YAML and make sure # they match.
vertices on_op UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl UNK which_format on_op on_symbeg UNK on_nl expect on_lparen vertices on_rparen on_period # Check vertices one by one.
UNK on_op direction on_op on_symbeg UNK on_op UNK on_op key on_nl UNK on_op direction on_op on_symbeg UNK on_op key on_op # Since we already checked edges, just check consistency # with edges.
UNK on_period each do on_op graph_to_test on_op on_ignored_nl it on_tstring_beg on_tstring_content on_embexpr_beg graph_to_test on_embexpr_end on_tstring_content on_embexpr_beg which_format on_embexpr_end on_tstring_content on_tstring_end # Test deserialization of graph from YAML. This presumes the # correctness of serialization to YAML, which has already been # tested.
UNK on_op UNK on_period vertices on_period UNK on_nl UNK on_op UNK on_period vertices on_period UNK on_nl expect on_lparen on_const on_period # Test that the recovered vertices match the vertices in the # reference graph.
expected_edge_tuples on_op UNK on_period edges on_period collect do on_op edge on_op on_ignored_nl on_lbracket edge on_period UNK on_comma edge on_period UNK # Test that the recovered edges match the edges in the # reference graph.
end on_nl end on_nl end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl UNK on_const on_op on_const on_op on_const on_op # We ought to test that the recovered graph is self-consistent # too. But we're not going to bother with that yet because # the internal representation of the graph is about to change.
