UNK UNK on_tstring_content UNK on_nl on_ignored_nl on_ignored_nl UNK on_const on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_op # Targetable package providers implement a `command` attribute. # # The `packages` hash passed to `Puppet::Provider::Package::prefetch` is deduplicated, # as it is keyed only by name in `Puppet::Transaction::prefetch_if_necessary`. # # (The `packages` hash passed to ``Puppet::Provider::Package::prefetch`` should be keyed by all namevars, # possibly via a `prefetchV2` method that could take a better data structure.) # # In addition, `Puppet::Provider::Package::properties` calls `query` in the provider.
on_ignored_nl UNK on_const on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_nl UNK self on_period UNK # But `query` in the provider depends upon whether a `command` attribute is defined for the resource. # This is a Catch-22. # # Instead ... # # Inspect any package to access the catalog (every package includes a reference to the catalog). # Inspect the catalog to find all of the `command` attributes for all of the packages of this class. # Find all of the package instances using each package `command`, including the default provider command. # Assign each instance's `provider` by selecting it from the `packages` hash passed to `prefetch`, based upon `name` and `command`. # # The original `command` parameter in the catalog is not populated by the default (`:default`) for the parameter in type/package.rb. # Rather, the result of the `original_parameters` is `nil` when the `command` parameter is undefined in the catalog.
UNK self on_period UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op UNK on_period UNK on_period UNK on_period UNK on_period UNK on_period # Prefetch our package list, yo.
on_ignored_nl UNK UNK on_nl UNK on_period UNK UNK on_symbeg command UNK on_op self on_period UNK on_period UNK on_nl end on_nl # Returns the resource command or provider command.
on_ignored_nl UNK self on_period UNK on_lparen cmd on_rparen on_ignored_nl UNK cmd on_nl UNK on_const on_op on_const UNK UNK on_lparen UNK # Targetable providers use has_command/is_optional to defer validation of provider suitability. # Evaluate provider suitability here and now by validating that the command is defined and exists. # # cmd: the full path to the package command.
on_ignored_nl UNK UNK on_nl cmd on_op UNK UNK on_symbeg command UNK on_op on_symbeg UNK on_nl UNK UNK UNK UNK on_tstring_content # Return information about the package, its provider, and its (optional) command.
