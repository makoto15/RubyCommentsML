UNK on_const on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end # # @api private # # The Compiler service is used to submit and retrieve data from the # puppetserver. #
on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period UNK on_nl on_ignored_nl def UNK on_lparen UNK on_comma UNK on_comma UNK on_comma UNK on_rparen # @api private # @return [String] Default API for the Compiler service
def UNK on_lparen UNK on_comma UNK on_comma UNK on_comma UNK on_rparen on_ignored_nl UNK on_op UNK on_lparen on_const on_comma UNK on_op # # @api private # # @param [Puppet::HTTP::Client] client # @param [Puppet::HTTP::Session] session # @param [String] server (Puppet[:ca_server]) If an explicit server is given, # create a service using that server. If server is nil, the default value # is used to create the service. # @param [Integer] port (Puppet[:ca_port]) If an explicit port is given, create # a service using that port. If port is nil, the default value is used to # create the service. #
def UNK on_lparen name on_comma on_label on_comma on_label nil on_comma on_label nil on_rparen on_ignored_nl headers on_op add_puppet_headers on_lparen on_tstring_beg on_tstring_content # # @api private # # Submit a GET request to retrieve a node from the server # # @param [String] name The name of the node being requested # @param [String] environment The name of the environment we are operating in # @param [String] configured_environment Optional, the name of the configured # environment. If unset, `environment` is used. # @param [String] transaction_uuid An agent generated transaction uuid, used # for connecting catalogs and reports. # # @return [Array<Puppet::HTTP::Response, Puppet::Node>] An array containing # the request response and the deserialized requested node #
def UNK on_lparen name on_comma on_label on_comma on_label on_comma on_label nil on_comma on_label nil on_comma on_label nil on_comma on_label UNK # # @api private # # Submit a POST request to submit a catalog to the server # # @param [String] name The name of the catalog to be submitted # @param [Puppet::Node::Facts] facts Facts for this catalog # @param [String] environment The name of the environment we are operating in # @param [String] configured_environment Optional, the name of the configured # environment. If unset, `environment` is used. # @param [String] transaction_uuid An agent generated transaction uuid, used # for connecting catalogs and reports. # @param [String] job_uuid A unique job identifier defined when the orchestrator # starts a puppet run via pxp-agent. This is used to correlate catalogs and # reports with the orchestrator job. # @param [Boolean] static_catalog Indicates if the file metadata(s) are inlined # in the catalog. This informs the agent if it needs to make a second request # to retrieve metadata in addition to the initial catalog request. # @param [Array<String>] checksum_type An array of accepted checksum type. # Currently defaults to `["md5", "sha256", "sha384", "sha512", "sha224"]`, # or `["sha256", "sha384", "sha512", "sha224"]` if fips is enabled. # # @return [Array<Puppet::HTTP::Response, Puppet::Resource::Catalog>] An array # containing the request response and the deserialized catalog returned by # the server #
UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_ignored_nl formatter on_op on_const on_op on_const on_op on_const on_period UNK on_lparen on_symbeg UNK # must use 'pson' instead of 'text/pson'
UNK on_op on_lbrace on_ignored_nl on_label UNK on_comma on_ignored_nl on_label on_const on_op on_const on_period UNK on_lparen UNK on_rparen on_comma on_ignored_nl on_label # query parameters are sent in the POST request body
on_label on_lbrace on_label environment on_rbrace on_comma on_ignored_nl on_rparen on_nl on_ignored_nl process_response on_lparen response on_rparen on_nl on_ignored_nl on_lbracket response on_comma UNK # for legacy reasons we always send environment as a query parameter too
def UNK on_lparen name on_comma on_label on_rparen on_ignored_nl headers on_op add_puppet_headers on_lparen on_tstring_beg on_tstring_content on_tstring_end on_op UNK on_lparen on_const on_op # # @api private # # Submit a GET request to retrieve the facts for the named node # # @param [String] name Name of the node to retrieve facts for # @param [String] environment Name of the environment we are operating in # # @return [Array<Puppet::HTTP::Response, Puppet::Node::Facts>] An array # containing the request response and the deserialized facts for the # specified node #
def UNK on_lparen name on_comma on_label on_comma on_label on_rparen on_ignored_nl formatter on_op on_const on_op on_const on_op on_const on_period UNK on_lparen # # @api private # # Submits a PUT request to submit facts for the node to the server # # @param [String] name Name of the node we are submitting facts for # @param [String] environment Name of the environment we are operating in # @param [Puppet::Node::Facts] facts Facts for the named node # # @return [Puppet::HTTP::Response] The request response #
def UNK on_lparen name on_rparen on_ignored_nl headers on_op add_puppet_headers on_lparen on_tstring_beg on_tstring_content on_tstring_end on_op UNK on_lparen on_const on_op on_const on_rparen # # @api private # # Submit a GET request to find the status of a compiler # # @param [String] name The name of the node that a status being requested for # # @return [Array<Puppet::HTTP::Response, Puppet::Status>] An array containing # the request response and the deserialized status returned from the server #
on_label on_tstring_beg on_tstring_content on_tstring_end on_nl on_rbrace on_comma on_ignored_nl on_rparen on_nl on_ignored_nl process_response on_lparen response on_rparen on_nl on_ignored_nl on_lbracket response on_comma # environment is required, but meaningless, default to production
def UNK on_lparen path on_comma on_label on_comma on_label nil on_comma on_label nil on_comma on_label nil on_comma on_label nil on_comma on_label # # @api private # # Submit a GET request to retrieve a file stored with filebucket # # @param [String] path The request path, formatted by Puppet::FileBucket::Dipper # @param [String] environment Name of the environment we are operating in. # This should not impact filebucket at all, but is included to be consistent # with legacy code. # @param [String] bucket_path # @param [String] diff_with a checksum to diff against if we are comparing # files that are both stored in the bucket # @param [String] list_all # @param [String] fromdate # @param [String] todate # # @return [Array<Puppet::HTTP::Response, Puppet::FileBucket::File>] An array # containing the request response and the deserialized file returned from # the server. #
def UNK on_lparen path on_comma on_label on_comma on_label on_rparen on_ignored_nl headers on_op add_puppet_headers on_lparen on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op # # @api private # # Submit a PUT request to store a file with filebucket # # @param [String] path The request path, formatted by Puppet::FileBucket::Dipper # @param [String] body The contents of the file to be backed # @param [String] environment Name of the environment we are operating in. # This should not impact filebucket at all, but is included to be consistent # with legacy code. # # @return [Puppet::HTTP::Response] The response request #
def UNK on_lparen path on_comma on_label on_comma on_label nil on_rparen on_ignored_nl headers on_op add_puppet_headers on_lparen on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg # # @api private # # Submit a HEAD request to check the status of a file stored with filebucket # # @param [String] path The request path, formatted by Puppet::FileBucket::Dipper # @param [String] environment Name of the environment we are operating in. # This should not impact filebucket at all, but is included to be consistent # with legacy code. # @param [String] bucket_path # # @return [Puppet::HTTP::Response] The request response #
