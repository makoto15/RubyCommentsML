UNK on_const on_comma _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_ignored_nl version on_op on_symbeg UNK on_nl if UNK #TRANSLATORS 'puppet help' is a command line and should not be translated
UNK on_const on_comma _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl end on_nl end on_nl on_ignored_nl facename on_comma actionname #TRANSLATORS '--version' is a command line option and should not be translated
def UNK on_nl on_const on_op on_const on_period UNK on_period UNK do on_op appname on_op on_ignored_nl on_lparen UNK on_lparen appname on_rparen # Return a list of applications that are not simply just stubs for Faces.
def UNK on_lparen on_rparen on_ignored_nl UNK on_lparen on_rparen on_period UNK on_lparen on_lbracket on_rbracket on_rparen do on_op result on_comma appname on_op # Return a list of all applications (both legacy and Face applications), along with a summary # of their functionality. # @return [Array] An Array of Arrays. The outer array contains one entry per application; each # element in the outer array is a pair whose first element is a String containing the application # name, and whose second element is a String containing the summary for that application.
summary on_op face on_period UNK on_op face on_period summary on_op on_tstring_beg on_tstring_content on_tstring_end on_op _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # Add deprecation message to summary if the face is deprecated
UNK UNK on_op help on_period UNK do UNK on_op UNK on_tstring_content UNK appname UNK on_tstring_content UNK on_period UNK on_lparen UNK # Now we find the line with our summary, extract it, and return it. This # depends on the implementation coincidence of how our pages are # formatted. If we can't match the pattern we expect we return the empty # string to ensure we don't blow up in the summary. --daniel 2011-04-11
UNK on_op UNK on_tstring_content UNK appname UNK on_tstring_content UNK on_period UNK on_lparen UNK on_rparen on_nl if UNK on_nl return UNK #rubocop:disable Lint/AssignmentInCondition
on_ignored_nl def UNK on_lparen appname on_rparen on_ignored_nl UNK on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep # This should absolutely be a private method, but for some reason it appears # that you can't use the 'private' keyword inside of a Face definition. # See #14205. #private :horribly_extract_summary_from
on_ignored_nl def UNK on_lparen appname on_rparen on_ignored_nl UNK on_op on_const on_op on_const on_period UNK on_lparen appname on_rparen on_nl on_ignored_nl UNK # This should absolutely be a private method, but for some reason it appears # that you can't use the 'private' keyword inside of a Face definition. # See #14205. #private :exclude_from_docs?
on_ignored_nl end on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # This should probably be a private method, but for some reason it appears # that you can't use the 'private' keyword inside of a Face definition. # See #14205. #private :is_face_app?
