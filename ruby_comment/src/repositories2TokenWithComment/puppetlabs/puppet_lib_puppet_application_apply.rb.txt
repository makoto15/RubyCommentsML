UNK facts on_op UNK on_lparen on_rparen node on_op UNK on_lparen on_rparen apply_environment on_op UNK on_lparen node on_comma manifest on_rparen on_nl # Get either a manifest or nil if apply should use content of Puppet[:code]
facts on_op UNK on_lparen on_rparen node on_op UNK on_lparen on_rparen apply_environment on_op UNK on_lparen node on_comma manifest on_rparen on_nl on_ignored_nl # splay if needed
node on_op UNK on_lparen on_rparen apply_environment on_op UNK on_lparen node on_comma manifest on_rparen on_nl on_ignored_nl on_const on_period UNK on_lparen on_lbrace # facts or nil
apply_environment on_op UNK on_lparen node on_comma manifest on_rparen on_nl on_ignored_nl on_const on_period UNK on_lparen on_lbrace on_symbeg UNK on_op apply_environment on_rbrace # node or error
on_const on_period UNK on_lparen on_lbrace on_symbeg UNK on_op apply_environment on_rbrace on_comma _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_rparen do on_ignored_nl # TRANSLATORS "puppet apply" is a program command and should not be translated
if options on_lbracket on_symbeg UNK on_rbracket on_nl UNK on_op on_const on_lbracket on_symbeg UNK on_rbracket on_nl if on_const on_op on_const on_period # Allow users to load the classes that puppet agent creates.
UNK on_op on_const on_period UNK on_nl on_ignored_nl catalog on_op on_ignored_nl UNK on_ignored_nl on_const on_op on_const on_op on_const on_period UNK on_period # Compile the catalog
catalog on_op on_ignored_nl UNK on_ignored_nl on_const on_op on_const on_op on_const on_period UNK on_period UNK on_lparen node on_period UNK on_comma on_symbeg # When compiling, the compiler traps and logs certain errors # Those that do not lead to an immediate exit are caught by the general # rule and gets logged. #
exit on_lparen on_int on_rparen on_nl end on_nl on_ignored_nl UNK on_op on_const on_period UNK on_lparen on_symbeg UNK on_op on_const on_op on_const # already logged and handled by the compiler, including Puppet::ParseErrorWithIssue
UNK on_op on_const on_period UNK on_lparen on_symbeg UNK on_op on_const on_op on_const on_op on_const on_period UNK on_lparen apply_environment on_rparen on_rparen # Loaders are required when resolving deferred values and at the end # when apply_catalog is called - it is therefore used around all of the # required steps as it is expensive to set up loaders twice (once for # resolution and once for the apply). #
on_const on_op on_const on_op on_const on_op on_const on_period UNK on_lparen node on_period facts on_comma catalog on_rparen on_nl on_ignored_nl catalog on_op # Resolve all deferred values and replace them / mutate the catalog
catalog on_op catalog on_period UNK on_nl on_ignored_nl catalog on_period UNK on_nl on_ignored_nl catalog on_period UNK on_op on_const on_period UNK on_op # Translate it to a RAL catalog
def UNK on_nl on_const on_period UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_const on_period UNK on_period UNK on_lparen # Enable all of the most common test options.
on_const on_op on_const on_op on_const on_period UNK on_period UNK on_op on_symbeg UNK on_nl on_ignored_nl UNK on_nl on_ignored_nl if on_const on_lbracket # we want the last report to be persisted locally
on_const on_period UNK on_lparen on_lbrace on_symbeg UNK on_op UNK on_rbrace on_comma _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_rparen do on_ignored_nl # TRANSLATORS "puppet apply" is a program command and should not be translated
UNK on_op on_const on_op on_const on_op on_const on_period UNK on_nl UNK on_ignored_nl catalog on_op on_const on_op on_const on_op on_const on_period # NOTE: Does not set rich_data = true automatically (which would ensure always reading catalog with rich data # on (seemingly the right thing to do)), but that would remove the ability to test what happens when a # rich catalog is processed without rich_data being turned on.
on_const on_op on_const on_op on_const on_op on_const on_period UNK on_lparen node on_period facts on_comma catalog on_rparen on_nl on_ignored_nl catalog on_period # Resolve all deferred values and replace them / mutate the catalog
def UNK on_lparen on_rparen on_ignored_nl facts on_op UNK on_nl unless on_const on_lbracket on_symbeg UNK on_rbracket on_period UNK on_nl facts on_op # Returns facts or nil #
facts on_op on_const on_op on_const on_op on_const on_period UNK on_period UNK on_lparen on_const on_lbracket on_symbeg node_name_value on_rbracket on_rparen on_nl UNK # Collect our facts.
def UNK on_lparen on_rparen on_ignored_nl node on_op on_const on_op on_const on_period UNK on_period UNK on_lparen on_const on_lbracket on_symbeg node_name_value on_rbracket # Returns the node or raises and error if node not found. #
def UNK on_lparen on_rparen on_ignored_nl manifest on_op UNK on_nl if options on_lbracket on_symbeg UNK on_rbracket UNK UNK on_period UNK on_period # Returns either a manifest (filename) or nil if apply should use content of Puppet[:code] #
if options on_lbracket on_symbeg UNK on_rbracket UNK UNK on_period UNK on_period UNK on_op on_int on_nl on_const on_lbracket on_symbeg UNK on_rbracket # Set our code or file to use.
def UNK on_lparen node on_comma manifest on_op UNK on_rparen on_ignored_nl UNK on_op node on_period UNK on_op on_const on_period UNK on_lparen # Returns a configured environment, if a manifest is given it overrides what is configured for the environment # specified by the node (or the current_environment found in the Puppet context). # The node's resolved environment is modified if needed. #
node on_period UNK on_op apply_environment on_nl apply_environment on_nl end on_nl on_ignored_nl def UNK on_lparen node on_comma facts on_rparen on_ignored_nl node # Modify the node descriptor to use the special apply_environment. # It is based on the actual environment from the node, or the locally # configured environment if the node does not specify one. # If a manifest file is passed on the command line, it overrides # the :manifest setting of the apply_environment.
def UNK on_lparen node on_comma facts on_rparen on_ignored_nl node on_period UNK on_lparen facts on_period UNK on_rparen if facts on_nl node # Mixes the facts into the node, and mixes in server facts
node on_period UNK on_lparen on_lbrace on_rbrace on_rparen on_nl end on_nl end on_nl EMP EMP EMP EMP EMP EMP EMP EMP # Add server facts so $server_facts[environment] exists when doing a puppet apply
