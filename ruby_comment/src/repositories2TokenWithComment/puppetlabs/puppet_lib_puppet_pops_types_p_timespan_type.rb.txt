def UNK on_lparen UNK on_comma UNK on_op nil on_rparen on_ignored_nl on_ivar on_op UNK on_lparen UNK on_comma UNK on_rparen on_nl on_ivar # @param from [AbstractTime] lower bound for this type. Nil or :default means unbounded # @param to [AbstractTime] upper bound for this type. Nil or :default means unbounded
def UNK on_lparen o on_rparen on_ignored_nl self on_period class on_op o on_period class on_op on_op on_lparen on_ivar on_op o on_period # Checks if this numeric range intersects with another # # @param o [PNumericType] the range to compare with # @return [Boolean] `true` if this range intersects with the other range # @api public
def UNK on_nl on_ivar on_op on_op on_const on_op on_const on_op nil on_op on_ivar on_nl end on_nl on_ignored_nl def UNK on_nl # Returns the lower bound of the numeric range or `nil` if no lower bound is set. # @return [Float,Integer]
def UNK on_nl on_ivar on_op on_const on_op on_const on_op nil on_op on_ivar on_nl end on_nl on_ignored_nl def numeric_from on_nl on_ivar # Returns the upper bound of the numeric range or `nil` if no upper bound is set. # @return [Float,Integer]
def numeric_from on_nl on_ivar on_nl end on_nl on_ignored_nl def numeric_to on_nl on_ivar on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar # Same as #from but will return `-Float::Infinity` instead of `nil` if no lower bound is set. # @return [Float,Integer]
def numeric_to on_nl on_ivar on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_period UNK on_op on_ivar on_period UNK on_nl end # Same as #to but will return `Float::Infinity` instead of `nil` if no lower bound is set. # @return [Float,Integer]
def UNK on_lparen o on_rparen on_ignored_nl UNK UNK on_lparen o on_rparen on_op UNK on_lparen o on_rparen on_nl UNK on_op numeric_from # Concatenates this range with another range provided that the ranges intersect or # are adjacent. When that's not the case, this method will return `nil` # # @param o [PAbstractTimeDataType] the range to concatenate with this range # @return [PAbstractTimeDataType,nil] the concatenated range or `nil` when the ranges were apart # @api public
