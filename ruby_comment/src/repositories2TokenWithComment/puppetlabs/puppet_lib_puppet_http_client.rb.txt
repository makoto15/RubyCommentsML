UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen on_label on_const on_op on_const # # @api private # # The client contains a pool of persistent HTTP connections and creates HTTP # sessions. #
UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen on_label on_const on_op on_const on_op on_const on_op on_const on_period new on_lparen on_const # @api private # @return [Puppet::Network::HTTP::Pool] the pool instance associated with # this client
def UNK on_lparen on_label on_const on_op on_const on_op on_const on_op on_const on_period new on_lparen on_const on_lbracket on_symbeg UNK on_rbracket on_rparen # # @api private # # Create a new http client instance. The client contains a pool of persistent # HTTP connections and creates HTTP sessions. # # @param [Puppet::Network::HTTP::Pool] pool pool of persistent Net::HTTP # connections # @param [Puppet::SSL::SSLContext] ssl_context ssl context to be used for # connections # @param [Puppet::SSL::SSLContext] system_ssl_context the system ssl context # used if :include_system_store is set to true # @param [Integer] redirect_limit number of HTTP redirections to allow in a # given request # @param [Integer] retry_limit number of HTTP reties allowed in a given # request #
def UNK on_nl on_const on_op on_const on_op on_const on_period new on_lparen UNK on_comma UNK on_rparen on_nl end on_nl on_ignored_nl def # # @api private # # Create a new HTTP session. A session is the object through which services # may be connected to and accessed. # # @return [Puppet::HTTP::Session] the newly created HTTP session #
def UNK on_lparen uri on_comma on_label on_lbrace on_rbrace on_comma on_op UNK on_rparen on_ignored_nl start on_op on_const on_period UNK on_nl UNK # # @api private # # Open a connection to the given URI # # @param [URI] uri the connection destination # @param [Hash] options # @option options [Puppet::SSL::SSLContext] :ssl_context (nil) ssl context to # be used for connections # @option options [Boolean] :include_system_store (false) if we should include # the system store for connection # # @yield [Net::HTTP] If a block is given, yields an active http connection # from the pool #
def UNK on_lparen url on_comma on_label on_lbrace on_rbrace on_comma on_label on_lbrace on_rbrace on_comma on_label on_lbrace on_rbrace on_comma on_op UNK on_rparen # # @api private # # Submits a GET HTTP request to the given url # # @param [URI] url the location to submit the http request # @param [Hash] headers merged with the default headers defined by the client # @param [Hash] params encoded and set as the url query # @param [Hash] options passed through to the request execution # @option options [Puppet::SSL::SSLContext] :ssl_context (nil) ssl context to # be used for connections # @option options [Boolean] :include_system_store (false) if we should include # the system store for connection # # @yield [Puppet::HTTP::Response] if a block is given yields the response # # @return [String] if a block is not given, returns the response body #
def UNK on_lparen url on_comma on_label on_lbrace on_rbrace on_comma on_label on_lbrace on_rbrace on_comma on_label on_lbrace on_rbrace on_rparen on_ignored_nl url on_op # # @api private # # Submits a HEAD HTTP request to the given url # # @param [URI] url the location to submit the http request # @param [Hash] headers merged with the default headers defined by the client # @param [Hash] params encoded and set as the url query # @param [Hash] options passed through to the request execution # @option options [Puppet::SSL::SSLContext] :ssl_context (nil) ssl context to # be used for connections # @option options [Boolean] :include_system_store (false) if we should include # the system store for connection # # @return [String] the body of the request response #
def UNK on_lparen url on_comma body on_comma on_label on_lbrace on_rbrace on_comma on_label on_lbrace on_rbrace on_comma on_label on_lbrace on_rbrace on_rparen on_ignored_nl # # @api private # # Submits a PUT HTTP request to the given url # # @param [URI] url the location to submit the http request # @param [String] body the body of the PUT request # @param [Hash] headers merged with the default headers defined by the client # @param [Hash] params encoded and set as the url query # @param [Hash] options passed through to the request execution # @option options [String] :content_type the type of the body content # @option options [Puppet::SSL::SSLContext] :ssl_context (nil) ssl context to # be used for connections # @option options [Boolean] :include_system_store (false) if we should include # the system store for connection # # @return [String] the body of the request response #
def UNK on_lparen url on_comma body on_comma on_label on_lbrace on_rbrace on_comma on_label on_lbrace on_rbrace on_comma on_label on_lbrace on_rbrace on_comma on_op # # @api private # # Submits a POST HTTP request to the given url # # @param [URI] url the location to submit the http request # @param [String] body the body of the POST request # @param [Hash] headers merged with the default headers defined by the client # @param [Hash] params encoded and set as the url query # @param [Hash] options passed through to the request execution # @option options [String] :content_type the type of the body content # @option options [Puppet::SSL::SSLContext] :ssl_context (nil) ssl context to # be used for connections # @option options [Boolean] :include_system_store (false) if we should include # the system store for connection # # @return [String] the body of the request response #
def UNK on_lparen url on_comma on_label on_lbrace on_rbrace on_comma on_label on_lbrace on_rbrace on_comma on_label on_lbrace on_rbrace on_rparen on_ignored_nl url on_op # # @api private # # Submits a DELETE HTTP request to the given url # # @param [URI] url the location to submit the http request # @param [Hash] headers merged with the default headers defined by the client # @param [Hash] params encoded and set as the url query # @param [Hash] options options hash passed through to the request execution # @option options [Puppet::SSL::SSLContext] :ssl_context (nil) ssl context to # be used for connections # @option options [Boolean] :include_system_store (false) if we should include # the system store for connection # # @return [String] the body of the request response #
def UNK on_nl on_ivar on_period UNK on_nl end on_nl on_ignored_nl UNK on_nl on_ignored_nl def encode_query on_lparen url on_comma params on_rparen # # @api private # # Close persistent connections in the pool #
http on_period request on_lparen request on_rparen do on_op UNK on_op on_ignored_nl response on_op on_const on_op on_const on_op on_const on_period new # don't call return within the `request` block
UNK on_op on_const on_op on_const on_op on_const on_op on_const on_period UNK on_nl on_ignored_nl if on_const on_period UNK on_period UNK on_lparen # use server list to resolve all services
if on_const on_period UNK on_period UNK on_lparen on_symbeg UNK on_rparen on_nl UNK on_period UNK on_lparen on_symbeg UNK on_rparen on_nl end # except if it's been explicitly set
