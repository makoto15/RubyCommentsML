UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_const on_op on_const on_op on_const on_op on_const on_op on_const # A syntax checker for Base64. # @api public
UNK UNK on_lparen UNK on_comma UNK on_comma UNK on_comma UNK on_rparen UNK UNK on_const on_period UNK on_lparen UNK on_lparen on_tstring_beg # Checks the text for BASE64 syntax issues and reports them to the given acceptor. # This checker allows the most relaxed form of Base64, including newlines and missing padding. # It also accept URLsafe input. # # @param text [String] The text to check # @param syntax [String] The syntax identifier in mime style (e.g. 'base64', 'text/xxx+base64') # @param acceptor [#accept] A Diagnostic acceptor # @param source_pos [Puppet::Pops::Adapters::SourcePosAdapter] A source pos adapter with location information # @api public #
on_const on_period UNK on_lparen UNK on_rparen on_nl UNK on_nl UNK on_op UNK on_lparen UNK on_period UNK on_period UNK on_period UNK # Do a strict decode64 on text with all whitespace stripped since the non strict version # simply skips all non base64 characters
UNK on_op on_const on_op on_const on_op on_const on_op UNK on_lparen UNK on_const on_rparen UNK UNK UNK on_nl UNK on_period UNK # TODO: improve the pops API to allow simpler diagnostic creation while still maintaining capabilities # and the issue code. (In this case especially, where there is only a single error message being issued). #
