def UNK on_lparen name on_comma UNK on_op on_lbrace on_rbrace on_comma on_op UNK on_rparen on_ignored_nl method on_op name on_period UNK on_op # Create a new feature test. You have to pass the feature name, and it must be # unique. You can pass a block to determine if the feature is present: # # Puppet.features.add(:myfeature) do # # return true or false if feature is available # # return nil if feature may become available later # end # # The block should return true if the feature is available, false if it is # not, or nil if the state is unknown. True and false values will be cached. A # nil value will not be cached, and should be used if the feature may become # true in the future. # # Features are often used to detect if a ruby library is installed. To support # that common case, you can pass one or more ruby libraries, and the feature # will be true if all of the libraries load successfully: # # Puppet.features.add(:myfeature, libs: 'mylib') # Puppet.features.add(:myfeature, libs: ['mylib', 'myotherlib']) # # If the ruby library is not installed, then the failure is not cached, as # it's assumed puppet may install the gem during catalog application. # # If a feature is defined using `:libs` and a block, then the block is # used and the `:libs` are ignored. # # Puppet evaluates the feature test when the `Puppet.features.myfeature?` # method is called. If the feature test was defined using a block and the # block returns nil, then the feature test will be re-evaluated the next time # `Puppet.features.myfeature?` is called. # # @param [Symbol] name The unique feature name # @param [Hash<Symbol,Array<String>>] options The libraries to load
UNK on_ivar on_period UNK on_lparen name on_rparen on_op on_ignored_nl on_lparen on_op on_ivar on_lbracket name on_rbracket on_period UNK on_op on_op on_const # we return a cached result if: # * if we've tested this feature before # AND # * the result was true/false # OR # * we're configured to never retry
def UNK on_lparen UNK on_rparen on_ignored_nl on_ivar on_op UNK on_nl on_ivar on_op on_lbrace on_rbrace on_nl on_ivar on_op on_const on_op on_const # Create a new feature collection.
def UNK on_lparen name on_comma UNK on_comma on_op UNK on_rparen on_ignored_nl UNK UNK on_nl UNK on_ignored_nl UNK on_op UNK on_nl # Actually test whether the feature is present. We only want to test when # someone asks for the feature, so we don't unnecessarily load # files.
UNK on_lparen UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_ignored_nl on_lbrace on_label lib on_comma on_label name on_rbrace on_rparen on_nl UNK # Expected case. Required library insn't installed.
