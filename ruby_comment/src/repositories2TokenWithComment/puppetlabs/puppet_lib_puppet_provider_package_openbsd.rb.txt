on_const on_op on_const on_period UNK on_lparen on_symbeg UNK on_rparen on_period UNK on_symbeg UNK on_comma on_symbeg UNK on_op on_const on_op on_const # Packaging on OpenBSD. Doesn't work anywhere else that I know of.
UNK on_op on_regexp_beg on_tstring_content on_regexp_end on_nl UNK on_op on_lbracket on_symbeg name on_comma on_symbeg ensure on_comma on_symbeg flavor on_rbracket on_nl UNK # our regex for matching pkg_info output
UNK on_period UNK on_lbrace on_op line on_op on_ignored_nl match on_op UNK on_period match on_lparen line on_period UNK on_lbracket on_int on_rbracket # now turn each returned line into a package object
UNK on_lparen UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_lbrace UNK line on_rbrace on_rparen on_nl end on_nl end on_nl on_rbrace # Print a warning on lines we can't match, but move # on, since it should be non-fatal
output on_op output on_period UNK on_period UNK on_lbrace on_op UNK on_op UNK on_op on_regexp_beg on_tstring_content on_embexpr_beg resource on_lbracket on_symbeg name # Remove all fuzzy matches first.
UNK on_tstring_beg on_tstring_content on_embexpr_beg resource on_lbracket on_symbeg name on_rbracket on_embexpr_end on_tstring_content on_embexpr_beg version on_embexpr_end on_tstring_content on_embexpr_beg match on_lbracket on_int on_rbracket # The locally installed package may actually be newer than what a mirror # has. Log it at debug, but ignore it otherwise.
if latest on_op resource on_lbracket on_symbeg flavor on_rbracket on_nl on_tstring_beg on_embexpr_beg resource on_lbracket on_symbeg name on_rbracket on_embexpr_end on_tstring_content on_embexpr_beg resource # In case of a real update (i.e., the package already exists) then # pkg_add(8) can handle the flavors. However, if we're actually # installing with 'latest', we do need to handle the flavors. This is # done so we can feed pkg_add(8) the full package name to install to # prevent ambiguity.
on_ivar on_lbracket on_symbeg name on_rbracket on_nl else on_ignored_nl if on_ivar on_lbracket on_symbeg ensure on_rbracket on_period UNK on_op on_regexp_beg on_tstring_content on_regexp_end # Don't depend on get_version for updates.
if on_ivar on_lbracket on_symbeg ensure on_rbracket on_period UNK on_op on_regexp_beg on_tstring_content on_regexp_end on_nl UNK on_op on_ivar on_lbracket on_symbeg ensure on_rbracket # If :ensure contains a version, use that instead of looking it up. # This allows for installing packages with the same stem, but multiple # version such as openldap-server.
UNK on_op on_regexp_beg on_tstring_content on_regexp_end on_nl UNK on_op on_int on_nl version on_op on_op on_int on_nl on_ignored_nl UNK on_period UNK UNK # our regex for matching pkg_info output
version on_op match on_period UNK on_lbracket on_int on_rbracket on_nl return version unless on_ivar on_lbracket on_symbeg ensure on_rbracket on_op on_tstring_beg on_tstring_content # now we return the first version, unless ensure is latest
if UNK on_lparen on_ivar on_lbracket on_symbeg name on_rbracket on_rparen on_op on_regexp_beg on_tstring_content on_embexpr_beg on_ivar on_lbracket on_symbeg name on_rbracket on_embexpr_end on_tstring_content # Search for the version info
