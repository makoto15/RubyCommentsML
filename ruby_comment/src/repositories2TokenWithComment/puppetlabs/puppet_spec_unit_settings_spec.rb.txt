UNK UNK on_lparen setting on_rparen on_ignored_nl UNK setting on_period UNK on_lparen on_const on_op on_const on_op on_const on_rparen on_nl on_lbrace on_ignored_nl # Return a given object's file metadata.
expect on_lparen on_ivar on_period UNK on_period UNK on_period UNK on_rparen on_period to eq on_lparen UNK on_rparen on_nl end on_nl on_ignored_nl # Note this relies on undocumented side effect that eachsection returns the Settings internal # configuration on which keys returns all parameters.
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl on_ivar on_period initialize_app_defaults on_lparen default_values on_period UNK on_lparen on_symbeg UNK on_op on_symbeg master on_rparen # ultimately I'd like to stop treating "run_mode" as a normal setting, because it has so many special # case behaviors / uses. However, until that time... we need to make sure that our private run_mode= # setter method gets properly called during app initialization.
on_ivar on_period initialize_app_defaults on_lparen default_values on_rparen on_nl on_ignored_nl on_const on_op on_const on_op on_const on_period each do on_op key on_op on_ignored_nl # initialize_app_defaults is called in spec_helper, before we even # get here, but call it here to make it explicit what we're trying # to do.
on_ivar on_period override_default on_lparen on_symbeg bool on_comma false on_rparen on_nl on_ivar on_period handlearg on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_end # Turn it off first
on_ivar on_period override_default on_lparen on_symbeg bool on_comma false on_rparen on_nl on_ivar on_period handlearg on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl expect # Turn it off first
on_ivar on_period override_default on_lparen on_symbeg bool on_comma false on_rparen on_nl on_ivar on_period handlearg on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content # Turn it off first
myfile on_op on_const on_period UNK on_lparen on_ivar on_rparen on_nl on_ivar on_lbracket on_symbeg config on_rbracket on_op myfile on_nl text on_op on_heredoc_beg # This is needed in order to make sure we pass on windows
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl text on_op on_tstring_beg on_tstring_content on_tstring_end on_nl expect on_lparen on_ivar on_rparen on_period to receive on_lparen #484 - this should probably be in the regression area
expect on_lparen on_ivar on_period preferred_run_mode on_rparen on_period to eq on_lparen on_symbeg user on_rparen on_nl on_ivar on_period send on_lparen on_symbeg parse_config_files # will start initialization as user
on_ivar on_period initialize_app_defaults on_lparen default_values on_period UNK on_lparen on_symbeg UNK on_op on_symbeg master on_rparen on_rparen on_nl expect on_lparen on_ivar on_period # change app run_mode to master
expect on_lparen on_ivar on_lbracket on_symbeg myfile on_rbracket on_rparen on_period to eq on_lparen otherfile on_rparen on_nl expect on_lparen UNK on_lparen on_ivar # initializing the app should have reloaded the metadata based on run_mode
expect on_lparen on_ivar on_period preferred_run_mode on_rparen on_period to eq on_lparen on_symbeg user on_rparen on_nl on_ivar on_period send on_lparen on_symbeg parse_config_files # will start initialization as user
on_ivar on_period initialize_app_defaults on_lparen default_values on_period UNK on_lparen on_symbeg UNK on_op on_symbeg master on_rparen on_rparen on_nl expect on_lparen on_ivar on_period # change app run_mode to master
expect on_lparen on_ivar on_lbracket on_symbeg myfile on_rbracket on_rparen on_period to eq on_lparen on_tstring_beg on_embexpr_beg file on_embexpr_end on_tstring_content on_tstring_end on_rparen on_nl # initializing the app should have reloaded the metadata based on run_mode
text on_op on_tstring_beg on_tstring_content on_tstring_end on_nl allow on_lparen on_ivar on_rparen on_period to receive on_lparen on_symbeg read_file on_rparen on_period and_return on_lparen # Now replace the value
text on_op on_tstring_beg on_tstring_content on_tstring_end on_nl expect on_lparen on_ivar on_rparen on_period to receive on_lparen on_symbeg read_file on_rparen on_period and_return on_lparen # Init the value
text on_op on_tstring_beg on_tstring_content on_tstring_end on_nl expect on_lparen on_ivar on_rparen on_period to receive on_lparen on_symbeg read_file on_rparen on_period and_return on_lparen # Now replace the value
expect on_lparen on_ivar on_lbracket on_symbeg one on_rbracket on_rparen on_period to eq on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl expect on_lparen # The originally-overridden value should be replaced with the default
expect on_lparen on_ivar on_lbracket on_symbeg two on_rbracket on_rparen on_period to eq on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_ignored_nl # and we should now have the new value in memory
text on_op on_tstring_beg on_tstring_content on_tstring_end on_nl expect on_lparen on_ivar on_rparen on_period to receive on_lparen on_symbeg read_file on_rparen on_period with on_lparen # Init the value
text on_op on_tstring_beg on_tstring_content on_tstring_end on_nl expect on_lparen on_ivar on_rparen on_period to receive on_lparen on_symbeg read_file on_rparen on_period with on_lparen # Now replace the value with something bogus
expect on_lparen on_ivar on_lbracket on_symbeg one on_rbracket on_rparen on_period to eq on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl expect on_lparen # The originally-overridden value should not be replaced with the default
expect on_lparen on_ivar on_lbracket on_symbeg UNK on_rbracket on_rparen on_period to be_nil on_nl end on_nl end on_nl on_ignored_nl it on_tstring_beg on_tstring_content # and we should not have the new value in memory
on_const on_op on_const on_period type on_lparen on_symbeg user on_rparen on_period new on_lparen on_symbeg UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl # when this spec is run in isolation to build a settings catalog # it will not be able to autorequire and load types for the first time # on Windows with windows? stubbed to false, because # Puppet::Util.path_to_uri is called to generate a URI to load code # and it manipulates the path based on OS # so instead we forcefully "prime" the cached types
end on_nl on_ignored_nl before do on_ignored_nl allow on_lparen on_const on_period features on_rparen on_period to receive on_lparen on_symbeg root? on_rparen on_period # appropriate for OS
allow on_lparen on_const on_op on_const on_op on_const on_rparen on_period to receive on_lparen on_symbeg UNK on_rparen on_period and_return on_lparen false on_rparen # stubbed to false, as Windows catalogs don't add users / groups
expect on_lbrace on_ivar on_period to_catalog on_rbrace on_period not_to raise_error on_nl end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl expect # This would fail if users/groups were added twice
allow on_lparen on_ivar on_rparen on_period to receive on_lparen on_symbeg value on_rparen on_period with on_lparen on_symbeg configprint on_rparen on_period and_return on_lparen #these are the magic default values
