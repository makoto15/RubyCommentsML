end on_nl on_ignored_nl def retrieve on_nl on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl end on_nl on_ignored_nl UNK on_symbeg behaviors on_nl on_ignored_nl #noop
test_file on_op UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_const on_period UNK on_lparen test_file on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period # see bug #5710
on_ignored_nl status on_op on_ivar on_period evaluate on_lparen resource on_rparen on_nl on_ignored_nl status on_period events on_period each do on_op event on_op # make sure no exceptions get swallowed
UNK on_op on_const on_period UNK on_lparen on_int on_comma UNK on_rparen on_nl current_from_filesystem on_op on_lbrace on_symbeg UNK on_op UNK on_rbrace on_nl # construct a property hash with nanosecond resolution as would be # found on an ext4 file system
UNK on_op on_const on_period UNK on_lparen on_int on_comma UNK on_rparen on_nl UNK on_op on_lbrace on_symbeg UNK on_op UNK on_rbrace on_nl # construct a property hash with a 1 microsecond difference from above
expect on_lparen resource on_rparen on_period to receive on_lparen on_symbeg retrieve on_rparen on_period and_return on_lparen current_from_filesystem on_rparen on_nl allow on_lparen on_const # set up the sequence of stubs; yeah, this is pretty # brittle, so this might need to be adjusted if the # resource_harness logic changes
status on_op on_ivar on_period evaluate on_lparen resource on_rparen on_nl expect on_lparen status on_period events on_rparen on_period not_to UNK on_nl status # there should be an audit change recorded, since the two # timestamps differ by at least 1 microsecond
UNK on_op on_const on_period UNK on_lparen on_int on_comma UNK on_rparen on_nl current_from_filesystem on_op on_lbrace on_symbeg UNK on_op UNK on_rbrace on_nl # construct a property hash with nanosecond resolution as would be # found on an ext4 file system
UNK on_op on_const on_period UNK on_lparen on_int on_comma UNK on_rparen on_nl UNK on_op on_lbrace on_symbeg UNK on_op UNK on_rbrace on_nl # construct a property hash with the same timestamp as above, # truncated to microseconds, as would be read back from state.yaml
expect on_lparen resource on_rparen on_period to receive on_lparen on_symbeg retrieve on_rparen on_period and_return on_lparen current_from_filesystem on_rparen on_nl allow on_lparen on_const # set up the sequence of stubs; yeah, this is pretty # brittle, so this might need to be adjusted if the # resource_harness logic changes
status on_op on_ivar on_period evaluate on_lparen resource on_rparen on_nl status on_period events on_period each do on_op event on_op on_ignored_nl expect # there should be no audit change recorded, despite the # slight difference in the two timestamps
