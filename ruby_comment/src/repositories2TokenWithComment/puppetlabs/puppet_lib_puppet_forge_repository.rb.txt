UNK on_const on_nl UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl def # = Repository # # This class is a file for accessing remote repositories with modules.
def UNK on_lparen UNK on_comma UNK on_rparen on_ignored_nl on_ivar on_op UNK on_nl on_ivar on_op UNK on_nl on_ivar on_op on_const on_period # Instantiate a new repository instance rooted at the +url+. # The library will report +for_agent+ in the User-Agent to the repository.
def UNK on_lparen UNK on_comma UNK on_op UNK on_rparen on_ignored_nl UNK on_const on_comma on_tstring_beg on_tstring_content on_tstring_end UNK UNK on_period UNK # Return a Net::HTTPResponse read for this +path+.
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_ivar on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op UNK on_nl UNK # Return the local file name containing the data downloaded from the # repository at +release+ (e.g. "myuser-mymodule").
def to_s on_nl on_tstring_beg on_tstring_content UNK UNK on_period UNK UNK on_tstring_content UNK on_ivar UNK on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl # Return the URI string for this repository.
def UNK on_nl UNK on_ivar on_op on_lbracket on_ignored_nl on_ivar on_period to_s on_period UNK on_lparen UNK on_tstring_content UNK on_comma on_tstring_beg on_tstring_content # Return the cache key for this repository, this a hashed string based on # the URI.
