UNK UNK on_nl UNK on_symbeg pretty on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg catalog on_nl UNK on_symbeg catalog # The JsonCatalogEncoder is a wrapper around a catalog produced by the Pal::CatalogCompiler.with_json_encoding # method. # It allows encoding the entire catalog or an individual resource as Rich Data Json. # # @api public #
UNK on_symbeg pretty on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg catalog on_nl UNK on_symbeg catalog on_nl on_ignored_nl UNK # Is the resulting Json pretty printed or not.
UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg catalog on_nl UNK on_symbeg catalog on_nl on_ignored_nl UNK UNK on_lparen catalog UNK UNK # Should unrealized virtual resources be included in the result or not.
UNK on_symbeg catalog on_nl UNK on_symbeg catalog on_nl on_ignored_nl UNK UNK on_lparen catalog UNK UNK UNK UNK UNK UNK on_rparen # The internal catalog being build - what this class wraps with a public API.
UNK UNK on_lparen catalog UNK UNK UNK UNK UNK UNK on_rparen on_ignored_nl UNK on_op catalog on_nl UNK on_op pretty on_nl # Do not instantiate this class directly! Use the `Pal::CatalogCompiler#with_json_encoding` method # instead. # # @param catalog [Puppet::Resource::Catalog] the internal catalog that this class wraps # @param pretty [Boolean] (true), if the resulting JSON should be pretty printed or not # @param exclude_virtual [Boolean] (true), if the resulting catalog should contain unrealzed virtual resources or not # # @api private #
UNK UNK on_nl UNK on_period UNK on_lparen on_symbeg pretty on_op pretty on_rparen on_nl UNK on_nl on_ignored_nl UNK UNK on_lparen UNK # Encodes the entire catalog as a rich-data Json catalog. # @return String The catalog in Json format using rich data format # @api public #
UNK UNK on_lparen UNK UNK UNK on_rparen on_ignored_nl UNK UNK UNK UNK on_lparen UNK UNK UNK on_rparen UNK UNK on_period # Returns one particular resource as a Json string, or returns nil if resource was not found. # @param type [String] the name of the puppet type (case independent) # @param title [String] the title of the wanted resource # @return [String] the resulting Json text # @api public #
UNK UNK UNK UNK on_lparen UNK UNK UNK on_rparen UNK UNK on_period UNK UNK UNK on_period UNK on_nl UNK on_op # Ensure that both type and title are given since the underlying API will do mysterious things # if 'title' is nil. (Other assertions are made by the catalog when looking up the resource). # # TRANSLATORS 'type' and 'title' are internal parameter names - do not translate
UNK UNK on_nl UNK on_op on_lparen UNK on_op catalog on_period UNK UNK on_op UNK on_op UNK on_period UNK UNK on_op # Applies a filter for virtual resources and returns filtered catalog # or the catalog itself if filtering was not needed. # The result is cached. # @api private #
