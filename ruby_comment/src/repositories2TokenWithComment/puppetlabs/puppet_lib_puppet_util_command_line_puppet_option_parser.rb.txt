on_ignored_nl UNK on_const on_nl UNK UNK on_lparen UNK on_op UNK on_rparen on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_op # This is a command line option parser. It is intended to have an API that is very similar to # the ruby stdlib 'OptionParser' API, for ease of integration into our existing code... however, # However, we've removed the OptionParser-based implementation and are only maintaining the # it's implemented based on the third-party "trollop" library. This was done because there # are places where the stdlib OptionParser is not flexible enough to meet our needs.
UNK on_symbeg UNK on_nl on_ignored_nl UNK UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK on_op UNK on_nl end on_nl on_ignored_nl # This parameter, if set, will tell the underlying option parser not to throw an # exception if we pass it options that weren't explicitly registered. We need this # capability because we need to be able to pass all of the command-line options before # we know which application/face they are going to be running, but the app/face # may specify additional command-line arguments that are valid for that app/face.
UNK args on_period UNK on_op UNK on_nl UNK on_comma UNK on_comma type on_op args on_nl UNK args on_period UNK on_op # The 2nd element is an optional "short" representation.
