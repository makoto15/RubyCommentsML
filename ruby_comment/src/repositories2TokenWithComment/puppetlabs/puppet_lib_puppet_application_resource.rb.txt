tmpfile on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_const on_period UNK on_comma on_symbeg UNK on_op on_const on_op on_const # Prefer the current directory, which is more likely to be secure # and, in the case of interactive use, accessible to the user.
tmpfile on_period UNK on_op UNK on_nl tmpfile on_period UNK text on_nl on_ignored_nl UNK on_lparen on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket # sync write, so nothing buffers before we invoke the editor.
UNK on_lparen on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end on_comma tmpfile on_period UNK on_rparen on_nl on_ignored_nl UNK # edit the content
UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_op tmpfile on_period UNK on_rparen on_nl UNK on_ignored_nl tmpfile on_period UNK on_lparen UNK on_rparen on_nl # ...and, now, pass that file to puppet to apply. Because # many editors rename or replace the original file we need to # feed the pathname, not the file content itself, to puppet.
tmpfile on_period UNK on_lparen UNK on_rparen on_nl end on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl type on_op # The temporary file will be safely removed.
UNK on_op on_const on_op on_const on_period UNK on_period UNK on_lparen resource on_comma UNK on_rparen on_nl on_lbracket UNK on_period UNK on_rbracket # save returns [resource that was saved, transaction log from applying the resource]
