UNK on_const on_op on_const on_op on_const on_nl UNK on_op UNK UNK UNK UNK on_const on_op on_const on_op on_const UNK UNK # A module for building AtFork handlers. These handlers are objects providing # pre/post fork callbacks modeled after those registered by the `pthread_atfork` # function. # Currently there are two AtFork handler implementations: # - a noop implementation used on all platforms except Solaris (and possibly # even there as a fallback) # - a Solaris implementation which ensures the forked process runs in a different # contract than the parent process. This is necessary for agent runs started by # the puppet agent service to be able to restart that service without being # killed in the process as a consequence of running in the same contract as the # service.
UNK on_const on_op on_const on_op on_const on_op on_const on_nl UNK on_const on_op UNK on_nl on_const UNK UNK UNK UNK UNK # using break to return a value from the loop block
UNK on_nl UNK on_nl UNK UNK UNK UNK UNK on_nl UNK on_const on_op on_const on_op on_const on_op on_const on_nl UNK # fall through to use the no-op implementation
UNK on_const on_op on_const on_op on_const on_op on_const on_nl UNK on_nl UNK UNK UNK UNK UNK on_nl UNK UNK UNK # using break to return a value from the loop block
