UNK _ on_lparen UNK on_rparen on_nl on_tstring_content UNK UNK UNK on_nl on_tstring_content UNK on_ignored_nl UNK on_nl UNK do on_op on_op #TRANSLATORS '--render-as s' is a command line option and should not be translated
UNK on_op args on_period UNK on_nl on_ignored_nl UNK UNK on_lparen args on_rparen on_nl UNK on_nl UNK on_const on_comma _ on_lparen # 'args' is an array of the subcommand and arguments from the command line and an options hash # [<arg1>, ..., {options}]
UNK on_const on_comma _ on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_ignored_nl manpage on_op args on_period UNK on_nl UNK #TRANSLATORS 'puppet man' is a specific command line and should not be translated
UNK on_op on_const on_op on_const on_lbracket manpage on_period UNK on_comma on_symbeg UNK on_rbracket on_nl UNK on_op UNK on_ignored_nl UNK on_op # set 'face' as it's used in the erb processing.
on_ignored_nl UNK on_op on_lparen on_const on_lparen UNK on_rparen on_period UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl # suppress the unused variable warning
UNK UNK on_period UNK on_lparen UNK on_rparen on_nl end on_nl on_ignored_nl UNK on_symbeg UNK do on_op UNK on_op on_ignored_nl on_ignored_nl # Run the ERB template in our current binding, including all the local # variables we established just above. --daniel 2011-04-11
on_ignored_nl on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_op on_const on_op on_const on_period UNK # OK, if we have Ronn on the path we can delegate to it and override the # normal output process. Otherwise delegate to a pager on the raw text, # otherwise we finally just delegate to our parent. Oh, well.
on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_op on_const on_op on_const on_period UNK on_lparen # These are the same options for less that git normally uses. # -R : Pass through color control codes (allows display of colors) # -X : Don't init/deinit terminal (leave display on screen on exit) # -F : automatically exit if display fits entirely on one screen # -S : don't wrap long lines
on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op UNK UNK UNK on_nl on_ignored_nl args on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_period # ronn is a stupid about pager selection, we can be smarter. :)
on_const on_period UNK on_lparen on_tstring_beg UNK UNK UNK on_tstring_content UNK args UNK on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen do on_op # manual pages could contain UTF-8 text
UNK UNK on_nl on_const on_period UNK on_lparen UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen do on_op UNK on_op UNK on_period UNK # suppress local output, neh?
on_const on_period UNK on_lparen UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen do on_op UNK on_op UNK on_period UNK UNK end on_nl # manual pages could contain UTF-8 text
args on_period UNK on_op UNK on_nl end on_nl on_ignored_nl UNK UNK on_lparen manpage on_rparen on_ignored_nl manpage on_period UNK on_nl end # not too many arguments # This allows the command line case of "puppet man man man" to not throw an error because face_based eats # one of the "man"'s, which means this command line ends up looking like this in the code: 'manface.man("man")' # However when we generate manpages, we do the same call. So we have to allow it and generate the real manpage.
UNK UNK on_lparen manpage on_rparen on_ignored_nl manpage on_period UNK on_nl end on_nl on_ignored_nl UNK UNK on_nl UNK on_const on_op on_const # by default, if you ask for the man manpage "puppet man man" face_base removes the "man" from the args that we # are passed, so we get nil instead
on_const on_op on_const on_period UNK on_period UNK do on_op UNK on_op on_ignored_nl on_const on_op on_const on_period UNK UNK on_period UNK # The list of applications, less those that are duplicated as a face.
UNK on_tstring_content UNK on_tstring_content on_tstring_end on_period UNK UNK on_nl end on_nl end on_nl on_ignored_nl UNK on_nl end on_nl EMP EMP # ...this is a nasty way to exclude non-applications. :(
