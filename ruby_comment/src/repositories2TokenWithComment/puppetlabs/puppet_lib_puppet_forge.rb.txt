on_const on_op UNK on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content on_words_sep on_tstring_content # From https://forgeapi.puppet.com/#!/release/getReleases
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_lbracket on_rbracket on_nl uri on_op on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_end on_nl # Return a list of module metadata hashes that match the search query. # This return value is used by the module_tool face install search, # and displayed to on the console. # # Example return value: # # [ # { # "author" => "puppetlabs", # "name" => "bacula", # "tag_list" => ["backup", "bacula"], # "releases" => [{"version"=>"0.0.1"}, {"version"=>"0.0.2"}], # "full_name" => "puppetlabs/bacula", # "version" => "0.0.2", # "project_url" => "https://github.com/puppetlabs/puppetlabs-bacula", # "desc" => "bacula" # } # ] # # @param term [String] search term # @return [Array] modules found # @raise [Puppet::Forge::Errors::CommunicationError] if there is a network # related error # @raise [Puppet::Forge::Errors::SSLVerifyError] if there is a problem # verifying the remote SSL certificate # @raise [Puppet::Forge::Errors::ResponseError] if the repository returns a # bad HTTP response
response on_op UNK on_lparen uri on_rparen on_nl on_ignored_nl if response on_period UNK on_op on_int on_nl UNK on_op on_const on_op on_const # make_http_request URI encodes parameters
def UNK on_lparen UNK on_rparen on_ignored_nl name on_op UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen # Fetches {ModuleRelease} entries for each release of the named module. # # @param input [String] the module name to look up # @return [Array<SemanticPuppet::Dependency::ModuleRelease>] a list of releases for # the given name # @see SemanticPuppet::Dependency::Source#fetch
response on_op UNK on_lparen uri on_rparen on_nl on_ignored_nl if response on_period UNK on_op on_int on_nl response on_op on_const on_op on_const # make_http_request URI encodes parameters
on_const on_op on_const on_op on_const on_op on_const on_period UNK on_lparen UNK on_comma UNK on_rparen on_nl on_ignored_nl on_const on_period UNK on_lparen # Make sure unpacked module has the same ownership as the folder we are moving it into.
UNK UNK on_nl UNK on_ignored_nl UNK on_period UNK if UNK on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK # Return the Pathname object representing the directory where the # module release archive was unpacked the to.
def UNK on_nl on_ivar on_op on_const on_period UNK on_lparen name on_comma on_const on_op on_const on_op on_const on_period UNK on_rparen on_nl # Obtain a suitable temporary path for unpacking tarballs # # @return [Pathname] path to temporary unpacking location
