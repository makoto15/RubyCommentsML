on_ignored_nl on_ignored_nl temp_file_name on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl on_ignored_nl UNK on_op UNK on_tstring_beg ####################################################################################### # NOTE ####################################################################################### # # This test depends on the following pull requests: # # https://github.com/puppetlabs/puppet-acceptance/pull/123 # # because it needs to be able to set some environment variables for the duration of # the puppet commands. Shouldn't be moved out of 'pending' until after that has been # merged. # #######################################################################################
UNK on_op UNK on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK # these should match up with the value of Puppet::Util::POSIX_USER_ENV_VARS, # but I don't have access to that from here, so this is unfortunately hard-coded # (cprice 2012-01-27)
on_ignored_nl on_ignored_nl UNK on_op UNK on_nl on_tstring_content on_embexpr_beg temp_file_name on_embexpr_end on_tstring_content UNK on_ignored_nl UNK on_period UNK UNK on_op var on_op # in this step we are going to run some "exec" blocks that writes the value of the # user-related environment variables to a file. We need to verify that exec's are # unsetting these vars.
UNK on_period UNK UNK on_op var on_op on_ignored_nl on_ignored_nl on_ignored_nl UNK UNK on_comma UNK on_op UNK var on_comma var UNK # loop over the vars that we care about; these should match up with the value of Puppet::Util::POSIX_USER_ENV_VARS, # but I don't have access to that from here, so this is unfortunately hard-coded (cprice 2012-01-27)
on_ignored_nl UNK UNK on_comma UNK on_op UNK var on_comma var UNK on_comma UNK UNK on_op UNK var on_op UNK UNK # apply the manifest. # # note that we are passing in an extra :environment argument, which will cause the # framework to temporarily set this variable before executing the puppet command. # this lets us know what value we should be looking for as the output of the exec.
UNK UNK UNK on_comma on_tstring_beg on_tstring_content on_embexpr_beg temp_file_name on_embexpr_end on_tstring_end UNK on_period UNK UNK on_op result on_op on_ignored_nl UNK UNK # cat the temp file and make sure it contained the correct value.
on_ignored_nl UNK on_op UNK on_nl on_tstring_content on_embexpr_beg temp_file_name on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content UNK on_ignored_nl UNK on_period UNK UNK # in this step we are going to run some "exec" blocks that write the value of the # user-related environment variables to a file. However, this time, the manifest # explicitly overrides these variables in the "environment" section, so we need to # be sure that we are respecting these overrides.
UNK on_period UNK UNK on_op var on_op on_ignored_nl on_ignored_nl on_ignored_nl UNK UNK on_comma UNK on_op UNK var on_comma var on_comma # loop over the vars that we care about;
on_ignored_nl UNK UNK on_comma UNK on_op UNK var on_comma var on_comma var UNK on_comma on_ignored_nl UNK UNK on_op UNK var # apply the manifest. # # note that we are passing in an extra :environment argument, which will cause the # framework to temporarily set this variable before executing the puppet command. # this lets us know what value we should be looking for as the output of the exec.
UNK UNK UNK on_comma on_tstring_beg on_tstring_content on_embexpr_beg temp_file_name on_embexpr_end on_tstring_end UNK on_period UNK UNK on_op result on_op on_ignored_nl UNK UNK # cat the temp file and make sure it contained the correct value.
UNK UNK on_comma on_tstring_beg on_tstring_content on_embexpr_beg temp_file_name on_embexpr_end on_tstring_end on_nl on_ignored_nl on_ignored_nl on_ignored_nl EMP EMP EMP EMP EMP EMP EMP # remove the temp file
