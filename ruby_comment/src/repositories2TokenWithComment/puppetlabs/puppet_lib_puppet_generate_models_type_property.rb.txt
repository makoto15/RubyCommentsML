UNK on_const on_nl UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK on_nl on_ignored_nl UNK UNK # A model for resource type properties and parameters.
UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK on_nl on_ignored_nl UNK UNK on_lparen property on_rparen # Gets the name of the property as a Puppet string literal.
UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK on_nl on_ignored_nl UNK UNK on_lparen property on_rparen on_ignored_nl UNK on_op on_const on_op # Gets the Puppet type of the property.
UNK UNK UNK on_nl on_ignored_nl UNK UNK on_lparen property on_rparen on_ignored_nl UNK on_op on_const on_op on_const on_op on_const on_op on_const # Gets the doc string of the property.
UNK UNK on_lparen property on_rparen on_ignored_nl UNK on_op on_const on_op on_const on_op on_const on_op on_const on_period UNK on_lparen property on_period # Initializes a property model. # @param property [Puppet::Property] The Puppet property to model. # @return [void]
UNK UNK on_nl UNK on_nl end on_nl on_ignored_nl UNK UNK on_period UNK on_lparen property on_rparen on_ignored_nl UNK on_op UNK UNK # Determines if this property is a namevar. # @return [Boolean] Returns true if the property is a namevar or false if not.
UNK UNK on_period UNK on_lparen property on_rparen on_ignored_nl UNK on_op UNK UNK on_nl strings on_op UNK UNK on_nl UNK on_op # Gets the Puppet type for a property. # @param property [Puppet::Property] The Puppet property to get the Puppet type for. # @return [String] Returns the string representing the Puppet type.
UNK on_op UNK UNK on_nl strings on_op UNK UNK on_nl UNK on_op property on_period UNK on_period UNK on_lparen on_tstring_beg on_tstring_content # HACK: the value collection does not expose the underlying value information at all # thus this horribleness to get the underlying values hash
UNK on_tstring_beg on_tstring_content on_tstring_end UNK strings on_period UNK on_op UNK on_period UNK on_nl on_ignored_nl UNK on_op strings on_period UNK on_op # If no string or regexes, default to Any type
UNK on_op strings on_period UNK on_op UNK on_op on_tstring_beg on_tstring_content UNK strings on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen UNK # Calculate a variant of supported values # Note that boolean strings are mapped to Variant[Boolean, Enum['true', 'false']] # because of tech debt...
