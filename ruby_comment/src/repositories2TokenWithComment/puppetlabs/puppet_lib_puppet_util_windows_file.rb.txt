on_const on_op on_int on_nl on_const on_op on_int on_nl on_const on_op on_int on_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int # https://msdn.microsoft.com/en-us/library/windows/desktop/aa379607(v=vs.85).aspx # The right to use the object for synchronization. This enables a thread to # wait until the object is in the signaled state. Some object types do not # support this access right.
on_const on_op on_int on_nl on_const on_op on_int on_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_const on_op on_int # The right to delete the object.
on_const on_op on_int on_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_const on_op on_int on_nl on_const on_op on_int # The right to read the information in the object's security descriptor, not including the information in the system access control list (SACL). # READ_CONTROL = 0x00020000 # The right to modify the discretionary access control list (DACL) in the object's security descriptor.
on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_const on_op on_int on_nl on_const on_op on_int on_nl on_const on_op on_int # The right to change the owner in the object's security descriptor.
on_const on_op on_int on_nl on_const on_op on_int on_nl on_const on_op on_int on_nl on_const on_op on_int on_nl on_const on_op on_int on_nl # Combines DELETE, READ_CONTROL, WRITE_DAC, and WRITE_OWNER access.
on_const on_op on_int on_nl on_const on_op on_int on_nl on_const on_op on_int on_nl on_const on_op on_int on_nl on_const on_op on_int on_nl # Currently defined to equal READ_CONTROL.
on_const on_op on_int on_nl on_const on_op on_int on_nl on_const on_op on_int on_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int # Currently defined to equal READ_CONTROL.
on_const on_op on_int on_nl on_const on_op on_int on_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_const on_op on_int # Currently defined to equal READ_CONTROL.
on_const on_op on_int on_nl on_const on_op on_int on_nl on_ignored_nl on_const on_op on_int on_nl on_const on_op on_int on_nl on_const on_op on_int # Combines DELETE, READ_CONTROL, WRITE_DAC, WRITE_OWNER, and SYNCHRONIZE access.
path on_op path on_period to_s on_ignored_nl UNK on_op on_lbracket on_rbracket on_nl on_int on_period UNK on_lparen on_int on_rparen do on_op UNK # support WatchedFile
on_ignored_nl UNK on_op on_lbracket on_rbracket on_nl on_int on_period UNK on_lparen on_int on_rparen do on_op UNK on_op on_ignored_nl return false if # support String and Pathname
on_int on_period UNK on_lparen on_int on_rparen do on_op UNK on_op on_ignored_nl return false if UNK on_period UNK on_lparen path on_period # follow up to 64 symlinks before giving up
return false if UNK on_period UNK on_lparen path on_period UNK on_rparen on_nl on_ignored_nl result on_op get_attributes on_lparen path on_comma false # return false if this path has been seen before. This is protection against circular symlinks
return false if result on_op on_const on_nl on_ignored_nl UNK on_op on_lparen result on_op on_const on_rparen on_op on_const on_nl if UNK # return false for path not found
UNK on_op on_lparen result on_op on_const on_rparen on_op on_const on_nl if UNK on_op UNK on_lparen path on_rparen on_nl UNK on_op # return true if path exists and it's not a symlink # Other file attributes are ignored. https://msdn.microsoft.com/en-us/library/windows/desktop/gg258117(v=vs.85).aspx
UNK on_op path on_period UNK on_nl path on_op UNK on_lparen path on_rparen on_nl UNK on_ignored_nl return UNK on_nl end on_nl # walk the symlink and try again...
return UNK on_nl end on_nl end on_nl on_ignored_nl false on_nl end on_nl module_function on_symbeg UNK on_nl on_ignored_nl on_ignored_nl on_const on_op # file was found and its not a symlink
on_ignored_nl def get_attributes on_lparen file_name on_comma UNK on_op UNK on_rparen on_ignored_nl result on_op on_const on_lparen wide_string on_lparen file_name on_period to_s #define INVALID_FILE_ATTRIBUTES (DWORD (-1))
on_const on_op on_const on_op on_const on_period new on_lparen on_op on_int on_rparen on_period UNK on_nl def self on_period UNK on_lparen file_name #define INVALID_HANDLE_VALUE ((HANDLE)(LONG_PTR)-1)
on_const on_op on_const on_period new on_lparen on_const on_rparen do on_op reparse_data_buffer_ptr on_op on_ignored_nl UNK on_lparen handle on_comma on_const on_comma nil # must be multiple of 1024, min 10240
nil on_nl end on_nl on_ignored_nl def self on_period UNK on_lparen handle on_rparen on_ignored_nl reparse_tag on_op nil on_nl on_ignored_nl on_const on_op # underlying struct MemoryPointer has been cleaned up by this point, nothing to return
on_const on_op on_const on_period new on_lparen on_const on_rparen do on_op reparse_data_buffer_ptr on_op on_ignored_nl UNK on_lparen handle on_comma on_const on_comma nil # must be multiple of 1024, min 10240
reparse_tag on_op reparse_data_buffer_ptr on_period UNK on_nl end on_nl on_ignored_nl reparse_tag on_nl end on_nl on_ignored_nl def self on_period UNK on_lparen handle # DWORD ReparseTag is the first member of the struct
UNK on_lparen file_name on_rparen on_op UNK on_lparen file_name on_rparen on_nl end on_nl module_function on_symbeg UNK on_nl on_ignored_nl on_const on_op on_int # Puppet currently only handles mount point and symlink reparse points, ignores others
on_const on_comma on_ignored_nl on_const on_op on_const on_comma on_ignored_nl on_int on_rparen UNK on_ignored_nl on_const on_op on_const on_period on_const on_lparen handle on_rparen # security_attributes
UNK on_ignored_nl on_const on_op on_const on_period on_const on_lparen handle on_rparen if handle on_nl end on_nl on_ignored_nl nil on_nl end on_nl # template_file
nil on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op nil on_nl UNK on_lparen UNK on_rparen do # handle has had CloseHandle called against it, so nothing to return
buffer_size on_op on_const on_lparen path_ptr on_comma on_const on_op on_const on_op on_const on_comma on_int on_rparen on_nl on_const on_op on_const on_period new # includes terminating NULL
buffer_size on_op on_const on_lparen path_ptr on_comma on_const on_op on_const on_op on_const on_comma on_int on_rparen on_nl on_const on_op on_const on_period new # includes terminating NULL
stat on_op on_const on_period stat on_lparen file_name on_rparen on_nl UNK on_op UNK on_op stat UNK self UNK end on_nl UNK # accommodate PathName or String
UNK on_period UNK on_lparen on_symbeg UNK on_comma on_symbeg UNK on_rparen do on_ignored_nl UNK on_nl end on_nl end on_nl on_ignored_nl UNK # sigh, monkey patch instance method for instance, and close over link_ftype
stat on_op on_const on_period UNK on_lparen file_name on_rparen on_nl on_ignored_nl UNK on_op UNK on_op stat UNK self UNK end on_nl # accommodate PathName or String # monkey'ing around!
on_const on_op on_int on_nl on_ignored_nl def self on_period UNK on_lparen handle on_rparen on_ignored_nl path on_op nil on_nl UNK on_lparen handle # https://msdn.microsoft.com/en-us/library/windows/desktop/aa364571(v=vs.85).aspx
end on_nl on_ignored_nl path on_nl end on_nl UNK on_symbeg UNK on_nl on_ignored_nl def self on_period UNK on_lparen path on_rparen on_ignored_nl # length is bytes, need UTF-16 wchars
def self on_period UNK on_lparen path on_rparen on_ignored_nl symlink on_op false on_nl on_ignored_nl UNK on_lparen path on_rparen do on_op handle # these reparse point types are the only ones Puppet currently understands # so rather than raising an exception in readlink, prefer to not consider # the path a symlink when stat'ing later
ffi_lib on_symbeg kernel32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg lpcwstr on_comma on_symbeg lpcwstr on_comma on_symbeg lpcwstr on_comma on_symbeg # https://msdn.microsoft.com/en-us/library/windows/desktop/aa365512(v=vs.85).aspx # BOOL WINAPI ReplaceFile( # _In_ LPCTSTR lpReplacedFileName, # _In_ LPCTSTR lpReplacementFileName, # _In_opt_ LPCTSTR lpBackupFileName, # _In_ DWORD dwReplaceFlags - 0x1 REPLACEFILE_WRITE_THROUGH, # 0x2 REPLACEFILE_IGNORE_MERGE_ERRORS, # 0x4 REPLACEFILE_IGNORE_ACL_ERRORS # _Reserved_ LPVOID lpExclude, # _Reserved_ LPVOID lpReserved # );
ffi_lib on_symbeg kernel32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg lpcwstr on_comma on_symbeg lpcwstr on_comma on_symbeg dword on_rbracket on_comma # https://msdn.microsoft.com/en-us/library/windows/desktop/aa365240(v=vs.85).aspx # BOOL WINAPI MoveFileEx( # _In_ LPCTSTR lpExistingFileName, # _In_opt_ LPCTSTR lpNewFileName, # _In_ DWORD dwFlags # );
UNK on_ignored_nl ffi_lib on_symbeg kernel32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg dword # BOOLEAN WINAPI CreateSymbolicLink( # _In_ LPTSTR lpSymlinkFileName, - symbolic link to be created # _In_ LPTSTR lpTargetFileName, - name of target for symbolic link # _In_ DWORD dwFlags - 0x0 target is a file, 0x1 target is a directory # ); # rescue on Windows < 6.0 so that code doesn't explode
ffi_lib on_symbeg kernel32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg lpcwstr on_rbracket on_comma on_symbeg dword on_nl on_ignored_nl ffi_lib on_symbeg # https://msdn.microsoft.com/en-us/library/windows/desktop/aa364944(v=vs.85).aspx # DWORD WINAPI GetFileAttributes( # _In_ LPCTSTR lpFileName # );
ffi_lib on_symbeg kernel32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg lpcwstr on_comma on_symbeg dword on_rbracket on_comma on_symbeg UNK on_nl # https://msdn.microsoft.com/en-us/library/windows/desktop/aa365535(v=vs.85).aspx # BOOL WINAPI SetFileAttributes( # _In_ LPCTSTR lpFileName, # _In_ DWORD dwFileAttributes # );
ffi_lib on_symbeg kernel32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg lpcwstr on_comma on_symbeg dword on_comma on_symbeg dword on_comma on_symbeg # HANDLE WINAPI CreateFile( # _In_ LPCTSTR lpFileName, # _In_ DWORD dwDesiredAccess, # _In_ DWORD dwShareMode, # _In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes, # _In_ DWORD dwCreationDisposition, # _In_ DWORD dwFlagsAndAttributes, # _In_opt_ HANDLE hTemplateFile # );
ffi_lib on_symbeg kernel32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg handle on_comma on_symbeg dword on_comma on_symbeg UNK on_comma on_symbeg # https://msdn.microsoft.com/en-us/library/windows/desktop/aa363216(v=vs.85).aspx # BOOL WINAPI DeviceIoControl( # _In_ HANDLE hDevice, # _In_ DWORD dwIoControlCode, # _In_opt_ LPVOID lpInBuffer, # _In_ DWORD nInBufferSize, # _Out_opt_ LPVOID lpOutBuffer, # _In_ DWORD nOutBufferSize, # _Out_opt_ LPDWORD lpBytesReturned, # _Inout_opt_ LPOVERLAPPED lpOverlapped # );
UNK on_const on_op on_const on_op on_const on_nl UNK on_symbeg on_const on_comma on_symbeg UNK on_comma on_ignored_nl on_symbeg on_const on_comma on_symbeg ushort # SYMLINK_REPARSE_DATA_BUFFER # https://msdn.microsoft.com/en-us/library/cc232006.aspx # https://msdn.microsoft.com/en-us/library/windows/hardware/ff552012(v=vs.85).aspx # struct is always MAXIMUM_REPARSE_DATA_BUFFER_SIZE bytes
on_symbeg on_const on_comma on_lbracket on_symbeg UNK on_comma on_const on_op on_int on_rbracket on_nl end on_nl on_ignored_nl UNK on_const on_op on_const on_op # max less above fields dword / uint 4 bytes, ushort 2 bytes # technically a WCHAR buffer, but we care about size in bytes here
UNK on_const on_op on_const on_op on_const on_nl UNK on_symbeg on_const on_comma on_symbeg UNK on_comma on_ignored_nl on_symbeg on_const on_comma on_symbeg ushort # MOUNT_POINT_REPARSE_DATA_BUFFER # https://msdn.microsoft.com/en-us/library/cc232007.aspx # https://msdn.microsoft.com/en-us/library/windows/hardware/ff552012(v=vs.85).aspx # struct is always MAXIMUM_REPARSE_DATA_BUFFER_SIZE bytes
on_symbeg on_const on_comma on_lbracket on_symbeg UNK on_comma on_const on_op on_int on_rbracket on_nl end on_nl on_ignored_nl ffi_lib on_symbeg kernel32 on_nl attach_function_private # max less above fields dword / uint 4 bytes, ushort 2 bytes # technically a WCHAR buffer, but we care about size in bytes here
ffi_lib on_symbeg kernel32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg lpcwstr on_comma on_symbeg UNK on_comma on_symbeg dword on_rbracket on_comma # https://msdn.microsoft.com/en-us/library/windows/desktop/aa364980(v=vs.85).aspx # DWORD WINAPI GetLongPathName( # _In_ LPCTSTR lpszShortPath, # _Out_ LPTSTR lpszLongPath, # _In_ DWORD cchBuffer # );
ffi_lib on_symbeg kernel32 on_nl attach_function_private on_symbeg on_const on_comma on_ignored_nl on_lbracket on_symbeg lpcwstr on_comma on_symbeg UNK on_comma on_symbeg dword on_rbracket on_comma # https://msdn.microsoft.com/en-us/library/windows/desktop/aa364989(v=vs.85).aspx # DWORD WINAPI GetShortPathName( # _In_ LPCTSTR lpszLongPath, # _Out_ LPTSTR lpszShortPath, # _In_ DWORD cchBuffer # );
