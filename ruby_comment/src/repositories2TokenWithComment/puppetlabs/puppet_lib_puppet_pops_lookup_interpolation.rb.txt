UNK on_const on_nl UNK on_const on_nl on_ignored_nl def interpolate on_lparen value on_comma context on_comma allow_methods on_rparen on_ignored_nl UNK value on_nl # Adds support for interpolation expressions. The expressions may contain keys that uses dot-notation # to further navigate into hashes and arrays # # @api public
def interpolate on_lparen value on_comma context on_comma allow_methods on_rparen on_ignored_nl UNK value on_nl UNK on_const on_nl value on_period UNK on_lparen # @param value [Object] The value to interpolate # @param context [Context] The current lookup context # @param allow_methods [Boolean] `true` if interpolation expression that contains lookup methods are allowed # @return [Object] the result of resolving all interpolations in the given value # @api public
on_const on_op UNK on_tstring_content UNK on_nl on_ignored_nl def UNK on_lparen subject on_comma context on_comma allow_methods on_rparen on_ignored_nl lookup_invocation on_op context # Matches a key that is quoted using a matching pair of either single or double quotes.
UNK on_period UNK on_nl value on_op nil on_nl UNK on_const on_lbracket UNK on_rbracket on_nl method_key on_comma key on_op UNK on_lparen # Leading and trailing spaces inside an interpolation expression are insignificant
UNK on_lparen on_const on_op on_const on_rparen if UNK on_op subject on_op match on_nl value on_op UNK on_lparen method_key on_rparen on_period # Alias is only permitted if the entire string is equal to the interpolate expression
UNK value if UNK on_nl on_ignored_nl value on_op lookup_invocation on_period UNK on_lparen method_key on_op on_symbeg scope on_op on_tstring_beg on_tstring_content UNK # break gsub and return value immediately if this was an alias substitution. The value might be something other than a String
scope on_op scope on_period UNK on_nl end on_nl lookup_invocation on_period UNK on_lparen scope on_rparen do on_op UNK on_op on_ignored_nl UNK # "unwrap" the Hiera::Scope
on_symbeg UNK on_op UNK on_comma on_symbeg scope on_op UNK on_comma on_ignored_nl on_symbeg UNK on_op UNK on_lbrace on_op key on_comma UNK # this is just an alias for 'lookup'
on_symbeg scope on_op UNK on_comma on_ignored_nl on_symbeg UNK on_op UNK on_lbrace on_op key on_comma UNK on_comma UNK on_op key on_rbrace # same as 'lookup' but expression must be entire string and result is not subject to string substitution
def UNK on_lparen scope on_comma key on_rparen on_ignored_nl if scope on_period UNK on_lparen on_const on_rparen on_nl scope on_period UNK on_lparen # Because the semantics of Puppet::Parser::Scope#include? differs from Hash#include?
else on_ignored_nl key on_op on_symbeg scope on_nl end on_nl on_lbracket key on_comma UNK on_rbracket on_nl end on_nl on_ignored_nl def UNK # double or single qouted
