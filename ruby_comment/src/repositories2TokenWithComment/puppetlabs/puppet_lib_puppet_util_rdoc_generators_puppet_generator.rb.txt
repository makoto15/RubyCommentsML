on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl # This module holds all the classes needed to generate the HTML documentation # of a bunch of puppet manifests. # # It works by traversing all the code objects defined by the Puppet RDoc::Parser # and produces HTML counterparts objects that in turns are used by RDoc template engine # to produce the final HTML. # # It is also responsible of creating the whole directory hierarchy, and various index # files. # # It is to be noted that the whole system is built on top of ruby RDoc. As such there # is an implicit mapping of puppet entities to ruby entitites: # # Puppet => Ruby # ------------------------ # Module Module # Class Class # Definition Method # Resource # Node # Plugin # Fact
UNK on_const on_nl UNK on_symbeg UNK on_symbeg markup on_nl on_ignored_nl def UNK on_lparen UNK on_comma UNK on_op UNK on_rparen on_ignored_nl # We're monkey patching RDoc markup to allow # lowercase class1::class2::class3 crossref hyperlinking
res on_op UNK on_lparen UNK on_comma UNK on_rparen on_nl end on_nl res on_nl end on_nl UNK on_symbeg markup on_symbeg UNK # we need to call it again, since we added a rule
class on_const on_op on_const on_nl on_ignored_nl def on_const on_period UNK on_lparen options on_rparen on_ignored_nl on_const on_op UNK on_nl on_const on_op # This is a specialized HTMLGenerator tailored to Puppet manifests
on_ivar on_op options on_nl UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_const on_op #:not-new:
def UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_const on_op on_const on_nl UNK on_const on_nl on_gvar on_period UNK on_tstring_beg # loads our own html template file
end on_nl on_ignored_nl def UNK on_nl super on_nl UNK on_lparen on_ivar on_rparen on_nl UNK on_lparen on_ivar on_rparen on_nl end on_nl # we don't generate an all define index # as the presentation is per module/per class
def UNK on_nl super on_nl UNK on_lparen on_ivar on_rparen on_nl UNK on_lparen on_ivar on_rparen on_nl end on_nl on_ignored_nl def UNK # This is the central method, it generates the whole structures # along with all the indices.
def UNK on_nl on_ivar on_op on_lbracket on_rbracket on_nl on_ivar on_op on_lbracket on_rbracket on_nl on_ivar on_op on_lbracket on_rbracket on_nl on_ignored_nl on_ivar ## # Generate: # the list of modules # the list of classes and definitions of a specific module # the list of all classes # the list of nodes # the list of resources
on_ivar on_op on_lbrace on_rbrace on_nl on_ivar on_op on_lbrace on_rbrace on_nl on_ignored_nl on_ivar on_op on_ivar on_period UNK on_lbrace on_op UNK on_op # contains all the seen modules
on_ivar on_op on_ivar on_period UNK on_lbrace on_op UNK on_op UNK on_period UNK on_const on_op on_const on_rbrace on_nl on_ignored_nl on_ivar on_period # remove unknown toplevels # it can happen that RDoc triggers a different parser for some files (ie .c, .cc or .h) # in this case RDoc generates a RDoc::TopLevel which we do not support in this generator # So let's make sure we don't generate html for those.
on_ivar on_period each do on_op toplevel on_op on_ignored_nl UNK unless toplevel on_period document_self on_nl file on_op on_const on_period new on_lparen # build the modules, classes and per modules classes and define list
toplevel on_period UNK do on_op k on_op on_ignored_nl UNK on_lparen classes on_comma modules on_comma k on_comma toplevel on_comma on_const on_rparen # find all classes of this toplevel # store modules if we find one
on_const on_period UNK on_period each do on_op UNK on_op on_ignored_nl if UNK on_period context on_period parent on_period toplevel on_op toplevel # find all defines belonging to this toplevel
if UNK on_period context on_period parent on_period toplevel on_op toplevel on_nl UNK on_op UNK on_nl end on_nl end on_nl on_ignored_nl # find parent module, check this method is not already # defined.
classes on_period each do on_op k on_op on_ignored_nl if k on_period context on_period is_module? on_nl k on_period context on_period UNK # generate nodes and plugins found
on_ivar on_period values on_period each do on_op UNK on_op on_ignored_nl superklass on_op UNK on_period context on_period UNK on_nl if superklass # scan all classes to create the child's references
def UNK on_lparen classes on_comma modules on_comma from on_comma html_file on_comma UNK on_rparen on_ignored_nl if from on_period is_module? and on_op # produce a class/module list of HTMLPuppetModule/HTMLPuppetClass # based on the code object traversal.
def UNK on_nl super on_nl on_const on_period UNK on_lparen on_const on_rparen on_nl on_const on_period UNK on_lparen on_const on_rparen on_nl on_const # generate all the subdirectories, modules, classes and files
def UNK on_nl UNK on_lparen on_ivar on_period values on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_const on_op on_const on_op on_const on_comma on_tstring_beg # generate the index of modules
def UNK on_lparen collection on_comma UNK on_comma template on_comma UNK on_rparen on_ignored_nl template on_op on_const on_period new on_lparen on_const on_op # generate a top index
def UNK on_nl UNK on_lparen on_ivar on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_const on_op on_const on_op on_const on_comma on_tstring_beg on_tstring_content on_tstring_end # generate the all classes index file and the combo index
def UNK on_nl UNK on_op on_ivar on_period UNK on_nl ref on_op UNK on_nl if UNK on_nl ref on_op on_const on_lbracket # returns the initial_page url
UNK on_const on_nl def build_referenced_list on_lparen UNK on_rparen on_ignored_nl res on_op on_lbracket on_rbracket on_nl UNK on_period each do on_op i # This module is used to generate a referenced full name list of ContextUser
UNK on_const on_nl def UNK on_nl UNK on_op on_ivar on_period UNK on_nl on_ivar on_op UNK on_period UNK on_lbrace on_op UNK # This module is used to hold/generate a list of puppet resources # this is used in HTMLPuppetClass and HTMLPuppetNode
def UNK on_lparen full_name on_comma prefix on_rparen on_ignored_nl path on_op full_name on_period UNK on_nl path on_period UNK on_lparen UNK on_tstring_content # return the relative file name to store this class in, # which is also its url
def UNK on_lparen full_name on_comma prefix on_rparen on_ignored_nl path on_op full_name on_period UNK on_nl path on_period UNK on_lparen UNK on_tstring_content # return the relative file name to store this class in, # which is also its url
