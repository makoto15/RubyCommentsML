def self on_period UNK on_lparen setting on_rparen on_ignored_nl UNK on_op setting on_nl end on_nl on_ignored_nl def self on_period UNK on_lparen # Specify the directory in which multiple files are stored.
def self on_period UNK on_lparen setting on_rparen on_ignored_nl UNK on_op setting on_nl end on_nl on_ignored_nl class on_op self on_nl UNK # Specify a single file location for storing just one file. # This is used for things like the CRL.
def self on_period collection_directory on_nl return UNK unless UNK on_nl on_const on_period UNK UNK UNK UNK on_nl end on_nl on_ignored_nl # The full path to where we should store our files.
def self on_period file_location on_nl return UNK unless UNK on_nl on_const on_period UNK UNK UNK UNK on_nl end on_nl on_ignored_nl # The full path to an individual file we would be managing.
def UNK on_lparen request on_rparen on_ignored_nl path on_op on_const on_op on_const on_period UNK on_lparen path on_lparen request on_period key on_rparen # Remove our file.
def UNK on_lparen request on_rparen on_ignored_nl UNK on_op UNK on_lparen path on_lparen request on_period key on_rparen on_rparen on_nl on_ignored_nl UNK # Find the file on disk, returning an instance of the model.
def UNK on_lparen request on_rparen on_ignored_nl path on_op path on_lparen request on_period key on_rparen on_nl dir on_op on_const on_period UNK # Save our file to disk.
def UNK on_lparen request on_rparen on_ignored_nl dir on_op collection_directory on_nl on_const on_period UNK on_lparen dir on_rparen on_period on_ignored_nl UNK on_lbrace # Search for more than one file. At this point, it just returns # an instance for every file in the directory.
UNK on_period UNK on_lparen path on_rparen on_nl UNK on_nl end on_nl on_ignored_nl def collection_directory on_nl self on_period class on_period collection_directory # calls Puppet::SSL::Base#read for subclasses of Puppet::SSL::Base # with the exception of any overrides, like Puppet::SSL::Key
def collection_directory on_nl self on_period class on_period collection_directory on_nl end on_nl on_ignored_nl def file_location on_nl self on_period class on_period file_location # Demeterish pointers to class info.
def UNK on_lparen file on_rparen on_ignored_nl return file UNK on_const on_op on_const on_period UNK on_lparen file on_rparen on_nl on_ignored_nl dir # A hack method to deal with files that exist with a different case. # Just renames it; doesn't read it in or anything. # LAK:NOTE This is a copy of the method in sslcertificates/support.rb, # which we'll be EOL'ing at some point. This method was added at 20080702 # and should be removed at some point.
def UNK on_lparen name on_comma path on_rparen on_ignored_nl UNK file_location on_nl on_const on_period UNK on_period setting on_lparen self on_period class # Yield a filehandle set up appropriately, either with our settings doing # the work or opening a filehandle manually.
UNK file_location on_nl on_const on_period UNK on_period setting on_lparen self on_period class on_period UNK on_rparen on_period UNK on_lparen on_tstring_beg on_tstring_content # All types serialized to disk contain only ASCII content: # * SSL::Key may be a .export(OpenSSL::Cipher::DES.new(:EDE3, :CBC), pass) or .to_pem # * All other classes are translated to strings by calling .to_pem
UNK on_tstring_beg on_tstring_content on_tstring_end on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # LAK:NOTE This has to be at the end, because classes like SSL::Key use this # class, and this require statement loads those, which results in a load loop # and lots of failures.
