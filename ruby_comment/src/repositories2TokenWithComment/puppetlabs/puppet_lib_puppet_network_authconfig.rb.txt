on_lbrace on_symbeg acl on_op on_tstring_beg on_embexpr_beg master_url_prefix on_embexpr_end on_tstring_content on_tstring_end on_comma on_symbeg method on_op on_symbeg UNK on_comma on_symbeg allow on_op # Master API V3
on_lbrace on_symbeg acl on_op on_tstring_beg on_embexpr_beg master_url_prefix on_embexpr_end on_tstring_content on_tstring_end on_rbrace on_comma on_ignored_nl on_ignored_nl on_lbrace on_symbeg acl on_op on_tstring_beg on_embexpr_beg # this one will allow all file access, and thus delegate # to fileserver.conf
on_lbracket on_symbeg allow on_comma on_symbeg UNK on_rbracket on_period UNK UNK on_op method on_op on_ignored_nl UNK on_lparen method on_rparen UNK on_op # Just proxy the setting methods to our rights stuff
def UNK on_nl self on_period UNK on_period UNK on_period UNK UNK on_op acl on_op on_ignored_nl UNK rights on_lbracket acl on_lbracket # force regular ACLs to be present
UNK rights on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl rights on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_lparen on_symbeg # queue an empty (ie deny all) right for every other path # actually this is not strictly necessary as the rights system # denies not explicitly allowed paths
def UNK on_lparen method on_comma UNK on_comma UNK on_rparen on_ignored_nl UNK on_op on_ivar on_period UNK on_lparen method on_comma UNK on_comma # check whether this request is allowed in our ACL # raise an Puppet::Network::AuthorizedError if the request # is denied.
