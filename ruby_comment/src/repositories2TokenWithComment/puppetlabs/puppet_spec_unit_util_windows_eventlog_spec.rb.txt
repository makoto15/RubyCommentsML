UNK on_lparen on_const on_op on_const on_op on_const on_op on_const on_rparen on_period to receive on_lparen on_symbeg on_const on_rparen on_period UNK on_lparen # return nil explicitly just to reinforce that we're not leaking eventlog handle
UNK on_lparen on_const on_op on_const on_op on_const on_op on_const on_rparen on_period to receive on_lparen on_symbeg on_const on_rparen on_period and_return on_lparen # RegisterEventSourceW will return NULL on failure # Stubbing prevents leaking eventlog handle
expect on_lparen on_const on_op on_const on_op on_const on_op on_const on_op on_const on_rparen on_period to receive on_lparen on_symbeg new on_rparen on_period # All we're testing here is that the constructor actually receives the exit code from FFI.errno (87) # We do so because `expect to...raise_error` doesn't support multiple parameter match arguments # We return fake_error just because `raise` expects an exception class
UNK on_lparen on_ivar on_rparen on_period to receive on_lparen on_symbeg on_const on_rparen on_period and_return on_lparen on_const on_op on_const on_op on_const on_op # ReportEventW returns 0 on failure, which is mapped to WIN32_FALSE
expect on_lparen on_const on_op on_const on_op on_const on_op on_const on_op on_const on_rparen on_period to receive on_lparen on_symbeg new on_rparen on_period # All we're testing here is that the constructor actually receives the exit code from FFI.errno (5) # We do so because `expect to...raise_error` doesn't support multiple parameter match arguments # We return fake_error just because `raise` expects an exception class
UNK on_op on_lbrace on_ignored_nl on_symbeg UNK on_op on_lbracket on_int on_comma on_int on_rbracket on_comma on_ignored_nl on_symbeg UNK on_op on_lbracket on_int on_comma # This is effectively duplicating the data assigned to the constants in # Puppet::Util::Windows::EventLog but since these are public constants we # ensure their values don't change lightly.
