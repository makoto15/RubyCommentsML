UNK on_symbeg true on_op UNK UNK UNK UNK on_nl on_ignored_nl def self on_period UNK on_nl return false if on_const on_op # We only want to use upstart as our provider if the upstart daemon is running. # This can be checked by running `initctl version --quiet` on a machine that has # upstart installed.
return false if on_const on_op on_const on_op on_const on_period UNK on_nl on_ignored_nl UNK on_ignored_nl UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma # Puppet::Util::Execution.execute does not currently work on jRuby. # Unfortunately, since this confine is invoked whenever we check for # provider suitability and since provider suitability is still checked # on the master, this confine will still be invoked on the master. Thus # to avoid raising an exception, we do an early return if we're running # on jRuby.
UNK on_symbeg UNK on_nl on_ignored_nl def self on_period UNK on_nl self on_period UNK on_lparen self on_period UNK on_rparen end on_nl # upstart developer haven't implemented initctl enable/disable yet: # http://www.linuxplanet.com/linuxplanet/tutorials/7033/2/
end on_nl on_ignored_nl def self on_period UNK on_nl UNK on_op super on_nl if on_const on_period value on_lparen on_symbeg UNK on_rparen # Take exclude list from init provider
UNK on_op UNK on_tstring_content UNK on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl UNK on_nl end on_nl on_ignored_nl on_ignored_nl def self on_period # Puppet cannot deal with services that have instances, so we have to # ignore these services using instances on redhat based systems.
matcher on_op line on_period match on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl name on_op if matcher on_nl on_tstring_beg on_embexpr_beg matcher on_lbracket # needs special handling of services such as network-interface: # initctl list: # network-interface (lo) start/running # network-interface (eth0) start/running # network-interface-security start/running
def UNK on_nl on_ivar on_op initscript on_period UNK on_lparen on_regexp_beg on_tstring_content on_regexp_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl # Where is our override script?
on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period UNK do on_op UNK on_op on_ignored_nl UNK # Search prefers .conf as that is what upstart uses
end on_nl on_ignored_nl def UNK on_nl if on_lparen on_ivar on_lbracket on_symbeg UNK on_rbracket on_op on_symbeg false on_rparen on_op on_ignored_nl on_ivar #this is because upstart is broken with its return codes
if script_text on_period match on_lparen on_const on_rparen on_nl return on_symbeg true on_nl else on_ignored_nl return on_symbeg false on_nl end on_nl # Upstart version < 0.6.7 means no manual stanza.
enabled on_op on_symbeg false on_nl script_text on_period UNK do on_op line on_op on_ignored_nl if line on_period match on_lparen on_const on_rparen # Upstart version < 0.9.0 means no override files # So we check to see if an uncommented start on or manual stanza is the last one in the file # The last one in the file wins.
enabled on_op on_symbeg false on_nl on_ignored_nl script_text on_period UNK do on_op line on_op on_ignored_nl if line on_period match on_lparen on_const # This version has manual stanzas and override files # So we check to see if an uncommented start on or manual stanza is the last one in the # conf file and any override files. The last one in the file wins.
text on_op UNK on_lparen text on_rparen on_nl on_ignored_nl if UNK on_lparen text on_rparen on_op on_symbeg false on_nl UNK on_op on_ignored_nl # We also need to remove any manual stanzas to ensure that it is enabled
parens on_op UNK on_lparen UNK on_lparen line on_rparen on_rparen on_nl on_tstring_beg on_tstring_content on_tstring_end on_op line on_nl else on_ignored_nl line on_nl # If there are more opening parens than closing parens, we need to comment out a multiline 'start on' stanza
