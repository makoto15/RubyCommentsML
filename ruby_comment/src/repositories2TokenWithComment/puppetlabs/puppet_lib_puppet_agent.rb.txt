UNK on_const on_op on_const on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl require on_tstring_beg # A general class for triggering a run of another # class.
UNK on_const on_op on_const on_nl end on_nl on_ignored_nl UNK on_symbeg client_class on_comma on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl def # Special exception class used to signal an agent run has timed out.
def UNK on_lparen UNK on_op on_lbrace on_rbrace on_rparen on_ignored_nl UNK UNK on_nl on_const on_period UNK _ on_lparen on_tstring_beg on_tstring_content on_tstring_end # Perform a run with our client.
on_const on_period UNK on_lparen on_const on_lbracket on_symbeg UNK on_rbracket on_comma on_const on_rparen do on_ignored_nl UNK on_period UNK on_lparen UNK on_rparen # NOTE: Timeout is pretty heinous as the location in which it # throws an error is entirely unpredictable, which means that # it can interrupt code blocks that perform cleanup or enforce # sanity. The only thing a Puppet agent should do after this # error is thrown is die with as much dignity as possible.
def UNK on_lparen UNK on_comma UNK on_op nil on_rparen on_ignored_nl UNK on_ignored_nl UNK on_op client_class on_period UNK on_lparen UNK on_comma # Create and yield a client instance, keeping a reference # to it during the yield.
