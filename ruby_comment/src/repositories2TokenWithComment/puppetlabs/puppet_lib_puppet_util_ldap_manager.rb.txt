UNK on_const on_op on_const on_op on_const on_op on_const on_nl UNK on_symbeg objectclasses on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg # The configuration class for LDAP providers, plus # connection handling for actually interacting with ldap.
def UNK on_nl UNK on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl on_ivar on_op UNK on_nl UNK on_nl # A null-op that just returns the config.
def UNK on_lparen UNK on_rparen on_ignored_nl on_ivar on_op UNK on_nl UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_lbracket UNK # Set the offset from the search base and return the config.
def UNK on_nl on_lbracket UNK on_comma on_const on_lbracket on_symbeg UNK on_rbracket on_rbracket on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl # The basic search base.
def UNK on_lparen name on_comma attributes on_rparen on_ignored_nl attributes on_op attributes on_period UNK on_nl on_ignored_nl attributes on_lbracket on_tstring_beg on_tstring_content on_tstring_end # Convert the name to a dn, then pass the args along to # our connection.
attributes on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op objectclasses on_period UNK on_lbrace on_op UNK on_op UNK on_period to_s on_rbrace on_nl attributes # Add the objectclasses
UNK on_lparen attributes on_rparen on_nl on_ignored_nl connect on_lbrace on_op conn on_op conn on_period UNK dn on_lparen name on_rparen on_comma attributes # Generate any new values we might need.
connect on_lbrace on_op conn on_op conn on_period UNK dn on_lparen name on_rparen on_comma attributes on_rbrace on_nl end on_nl on_ignored_nl def # And create our resource.
def connect on_nl UNK on_const on_comma UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen unless UNK on_nl on_ignored_nl unless on_ivar on_nl if # Open, yield, and close the connection. Cannot be left # open, at this point.
UNK on_const on_comma UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen unless UNK on_nl on_ignored_nl unless on_ivar on_nl if on_const on_lbracket on_symbeg #TRANSLATORS '#connect' is a method name and and should not be translated, 'block' refers to a Ruby code block
def UNK on_lparen name on_rparen on_ignored_nl connect on_lbrace on_op UNK on_op UNK on_period UNK dn on_lparen name on_rparen on_rbrace on_nl # Convert the name to a dn, then pass the args along to # our connection.
def dn on_lparen name on_rparen on_ignored_nl on_lbracket on_tstring_beg UNK UNK UNK on_tstring_content UNK name UNK on_tstring_end on_comma UNK on_rbracket on_period # Calculate the dn for a given resource.
def UNK on_lparen entry on_rparen on_ignored_nl UNK on_const on_comma UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen unless entry on_lbracket on_tstring_beg on_tstring_content # Convert an ldap-style entry hash to a provider-style hash.
UNK on_const on_comma UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen unless entry on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl on_ignored_nl name on_op #TRANSLATOR 'dn' refers to a 'distinguished name' in LDAP (Lightweight Directory Access Protocol) and they should not be translated
name on_op entry on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period UNK on_period UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period # DN is always a single-entry array. Strip off the bits before the # first comma, then the bits after the remaining equal sign. This is the # name.
def UNK on_nl return on_lparen objectclasses on_period UNK on_op on_int on_op on_tstring_beg on_tstring_content UNK objectclasses on_lbracket on_int on_rbracket UNK on_tstring_end # Create our normal search filter.
def UNK on_lparen name on_rparen on_ignored_nl connect do on_op conn on_op on_ignored_nl UNK on_ignored_nl conn on_period UNK on_lparen dn on_lparen # Find the associated entry for a resource. Returns a hash, minus # 'dn', or nil if the entry cannot be found.
return UNK on_lparen result on_rparen on_nl end on_nl UNK on_nl return UNK on_nl end on_nl end on_nl end on_nl on_ignored_nl # Convert to puppet-appropriate attributes
def UNK on_lparen UNK on_rparen on_ignored_nl on_ivar on_op on_const on_op on_const on_op on_const on_op on_const on_period UNK on_lparen UNK on_rparen # Declare a new attribute generator.
def UNK on_lparen UNK on_rparen on_ignored_nl return unless on_ivar on_period UNK on_op on_int on_nl on_ignored_nl on_ivar on_period UNK do on_op # Generate any extra values we need to make the ldap entry work.
UNK if UNK on_lbracket generator on_period name on_rbracket on_nl on_ignored_nl if generator on_period UNK on_nl value on_op UNK on_lbracket generator # Don't override any values that might exist.
def UNK on_lparen on_op UNK on_rparen on_ignored_nl on_ivar on_op UNK on_nl UNK on_nl end on_nl on_ignored_nl def UNK on_lparen attributes # Specify what classes this provider models.
def UNK on_lparen attributes on_rparen on_ignored_nl on_ivar on_op attributes on_nl on_ignored_nl on_ivar on_op attributes on_period UNK on_lparen on_lbrace on_rbrace on_rparen # Specify the attribute map. Assumes the keys are the puppet # attributes, and the values are the ldap attributes, and creates a map # for each direction.
on_ivar on_op attributes on_nl on_ignored_nl on_ivar on_op attributes on_period UNK on_lparen on_lbrace on_rbrace on_rparen on_lbrace on_op UNK on_comma ary on_op # The map with the puppet attributes as the keys
on_ivar on_op attributes on_period UNK on_lparen on_lbrace on_rbrace on_rparen on_lbrace on_op UNK on_comma ary on_op UNK on_lbracket ary on_lbracket on_int # and the ldap attributes as the keys.
def UNK on_lparen attribute on_rparen on_ignored_nl on_ivar on_lbracket attribute on_rbracket on_period to_s on_nl end on_nl on_ignored_nl def UNK on_lparen name # Return the ldap name for a puppet attribute.
def UNK on_lparen name on_comma mods on_rparen on_ignored_nl connect on_lbrace on_op UNK on_op UNK on_period UNK dn on_lparen name on_rparen # Convert the name to a dn, then pass the args along to # our connection.
def UNK on_lparen attribute on_rparen on_ignored_nl on_ivar on_op attribute on_nl UNK on_nl end on_nl on_ignored_nl def UNK on_lparen attribute on_rparen # Specify the rdn that we use to build up our dn.
def UNK on_lparen attribute on_rparen on_ignored_nl on_ivar on_lbracket attribute on_rbracket on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_op UNK # Return the puppet name for an ldap attribute.
def UNK on_lparen UNK on_op UNK on_rparen on_ignored_nl UNK on_op UNK on_nl on_ignored_nl result on_op on_lbracket on_rbracket on_nl connect do # Search for all entries at our base. A potentially expensive search.
def UNK on_lparen name on_comma is on_comma should on_rparen on_ignored_nl if should on_lbracket on_symbeg UNK on_rbracket on_op on_symbeg absent on_nl # Update the ldap entry with the desired state.
if is on_period UNK UNK is on_lbracket on_symbeg UNK on_rbracket on_op on_symbeg absent on_nl on_const on_period UNK UNK on_lparen on_tstring_beg # We're creating a new entry
UNK on_op UNK on_lparen should on_rparen on_nl UNK on_lparen name on_comma UNK on_rparen on_nl return on_nl end on_nl on_ignored_nl on_ignored_nl # Remove any :absent params and :ensure, then convert the names to ldap names.
on_ignored_nl mods on_op on_lbracket on_rbracket on_nl on_lbracket is on_period UNK on_comma should on_period UNK on_rbracket on_period UNK on_period UNK on_period # We're modifying an existing entry. Yuck.
on_lbracket is on_period UNK on_comma should on_period UNK on_rbracket on_period UNK on_period UNK on_period UNK do on_op property on_op on_ignored_nl # For each attribute we're deleting that is present, create a # modify instance for deletion.
UNK if is on_lbracket property on_rbracket on_op should on_lbracket property on_rbracket on_nl on_ignored_nl attributes on_op UNK on_lparen should on_rparen on_nl # They're equal, so do nothing.
if is on_lbracket property on_rbracket on_op on_symbeg absent UNK is on_lbracket property on_rbracket on_period UNK on_nl mods on_op on_const on_op # We're creating it.
if should on_lbracket property on_rbracket on_op on_symbeg absent UNK should on_lbracket property on_rbracket on_period UNK on_nl mods on_op on_const on_op # We're deleting it
mods on_op on_const on_op on_const on_period UNK on_lparen on_const on_op on_const on_comma prop_name on_comma attributes on_lbracket prop_name on_rbracket on_rparen on_nl # We're replacing an existing value
def UNK on_nl UNK UNK objectclasses UNK on_op objectclasses on_period UNK UNK UNK on_nl end on_nl on_ignored_nl UNK on_nl on_ignored_nl # Is this a complete ldap configuration?
def UNK on_lparen attributes on_rparen on_ignored_nl attributes on_period UNK on_lbrace on_op UNK on_comma value on_op value on_op on_symbeg absent UNK # Convert a hash of attributes to ldap-like forms. This mostly means # getting rid of :ensure and making sure everything's an array of strings.
