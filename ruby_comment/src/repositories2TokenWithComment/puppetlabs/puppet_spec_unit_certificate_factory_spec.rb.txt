expect on_lparen UNK on_rparen on_period UNK UNK on_lparen UNK on_rparen on_nl end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl # The two instances are equal in every aspect except that they are # different instances - they are `==`, but not hash `eql?`
on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op UNK on_rbrace on_nl on_rparen on_nl end on_nl # Note that this output is due to a bug in OpenSSL::X509::Extensions # where the values of some extensions are not properly decoded
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl on_const on_lbracket on_symbeg UNK on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end on_nl expect on_lparen csr on_period # See #2848 for why we are doing this: we need to make sure that # subjectAltName is set if the CSR has it, but *not* if it is set when the # certificate is built!
expect on_lparen csr on_period UNK on_rparen on_period to eq on_lparen on_lbracket on_rbracket on_rparen on_nl cert on_op subject on_period build on_lparen # Verify the CSR still has no extReq, just in case...
UNK on_op on_const on_op on_const on_op on_const on_period new on_nl UNK on_period UNK on_lparen cert on_comma UNK on_rparen on_nl UNK # The cert must be signed before being later DER-decoding
expect on_lparen UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_rparen on_period to eq on_tstring_beg on_tstring_content on_tstring_end on_nl expect on_lparen UNK on_lbracket # The expected results should be DER encoded, the Puppet cert wrapper will turn # these into normal strings.
on_lbrace on_symbeg UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_symbeg UNK on_op on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end # Can't check the CA here, since that requires way more infrastructure # that I want to build up at this time. We can verify the critical # values, though, which are non-CA certs. --daniel 2011-10-11
