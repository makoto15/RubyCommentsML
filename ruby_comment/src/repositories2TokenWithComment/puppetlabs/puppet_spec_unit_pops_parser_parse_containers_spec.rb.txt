UNK on_const on_period join on_lparen on_const on_period UNK on_lparen UNK on_rparen on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl UNK on_tstring_beg # relative to this spec file (./) does not work as this file is loaded by rspec
expect on_lbrace parse on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_rbrace on_period to raise_error on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl end on_nl # Not as much weird as confusing that it is possible to name a class 'class'. Can have # a very confusing effect when resolving relative names, getting the global hardwired "Class" # instead of some foo::class etc. # This was allowed in 3.x.
expect on_lbrace parse on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_rbrace on_period to raise_error on_lparen on_const on_op on_const on_rparen on_nl end on_nl # The weirdness here is that a class can inherit 'default' but not declare a class called default. # (It will work with relative names i.e. foo::default though). The whole idea with keywords as # names is flawed to begin with - it generally just a very bad idea.
expect on_lbrace parse on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_rbrace on_period to raise_error on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl end on_nl # A common error is to put quotes around the class name, the parser should provide the error message at the right location # See PUP-7471
expect on_lbrace parse on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_rbrace on_period to raise_error on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl end on_nl # TODO: See previous test marked as :broken=>true, it is actually this test (result) that is wacky, # this because a class is named at parse time (since class evaluation is lazy, the model must have the # full class name for nested classes - only, it gets this wrong when a class is named "class" - or at least # I think it is wrong.) #
expect on_lparen dump on_lparen parse on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_rparen on_rparen on_period to eq on_lparen on_lbracket on_ignored_nl on_tstring_beg on_tstring_content # This is illegal, but handled as part of validation
expect on_lbrace parse on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_rbrace on_period to raise_error on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen on_nl end on_nl # This is weird because Class already exists, and instantiating this define will probably not # work
expect on_lbrace parse on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_rbrace on_period to raise_error on_lparen on_const on_op on_const on_rparen on_nl end on_nl # Check unwanted ability to define 'default'. # The expression below is not allowed (which is good).
