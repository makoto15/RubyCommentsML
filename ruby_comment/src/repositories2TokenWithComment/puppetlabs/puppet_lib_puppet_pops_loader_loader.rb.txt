UNK on_const on_op on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op UNK on_tstring_content UNK on_period UNK on_nl on_const on_op UNK # Loader # === # A Loader is responsible for loading "entities" ("instantiable and executable objects in the puppet language" which # are type, hostclass, definition, function, and bindings. # # The main method for users of a Loader is the `load` or `load_typed methods`, which returns a previously loaded entity # of a given type/name, and searches and loads the entity if not already loaded. # # private entities # --- # TODO: handle loading of entities that are private. Suggest that all calls pass an origin_loader (the loader # where request originated (or symbol :public). A module loader has one (or possibly a list) of what is # considered to represent private loader - i.e. the dependency loader for a module. If an entity is private # it should be stored with this status, and an error should be raised if the origin_loader is not on the list # of accepted "private" loaders. # The private loaders can not be given at creation time (they are parented by the loader in question). Another # alternative is to check if the origin_loader is a child loader, but this requires bidirectional links # between loaders or a search if loader with private entity is a parent of the origin_loader). # # @api public #
on_const on_op UNK on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK # Describes the kinds of things that loaders can load
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op UNK on_period UNK on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_comma # @param [String] name the name of the loader. Must be unique among all loaders maintained by a {Loader} instance
def UNK on_lparen UNK on_comma UNK on_op UNK on_comma UNK on_op on_const on_op on_const on_comma on_op UNK on_rparen on_ignored_nl UNK # Search all places where this loader would find values of a given type and return a list the # found values for which the given block returns true. All found entries will be returned if no # block is given. # # Errors that occur function discovery will either be logged as warnings or collected by the optional # `error_collector` array. When provided, it will receive {Puppet::DataTypes::Error} instances describing # each error in detail and no warnings will be logged. # # @param type [Symbol] the type of values to search for # @param error_collector [Array<Puppet::DataTypes::Error>] an optional array that will receive errors during load # @param name_authority [String] the name authority, defaults to the pcore runtime # @yield [typed_name] optional block to filter the results # @yieldparam [TypedName] typed_name the typed name of a found entry # @yieldreturn [Boolean] `true` to keep the entry, `false` to discard it. # @return [Array<TypedName>] the list of names of discovered values
def UNK on_lparen UNK on_comma name on_rparen on_ignored_nl UNK on_op UNK on_lparen on_const on_period UNK on_lparen UNK on_comma name on_period # Produces the value associated with the given name if already loaded, or available for loading # by this loader, one of its parents, or other loaders visible to this loader. # This is the method an external party should use to "get" the named element. # # An implementor of this method should first check if the given name is already loaded by self, or a parent # loader, and if so return that result. If not, it should call `find` to perform the loading. # # @param type [:Symbol] the type to load # @param name [String, Symbol] the name of the entity to load # @return [Object, nil] the value or nil if not found # # @api public #
def UNK on_lparen typed_name on_rparen on_ignored_nl UNK on_const on_comma UNK on_tstring_content UNK UNK on_period UNK on_period name UNK on_tstring_content UNK # Loads the given typed name, and returns a NamedEntry if found, else returns nil. # This the same a `load`, but returns a NamedEntry with origin/value information. # # @param typed_name [TypedName] - the type, name combination to lookup # @return [NamedEntry, nil] the entry containing the loaded value, or nil if not found # # @api public #
def UNK on_lparen typed_name on_comma UNK on_op UNK on_rparen on_ignored_nl UNK on_const on_comma UNK on_tstring_content UNK UNK on_period UNK on_period # Returns an already loaded entry if one exists, or nil. This does not trigger loading # of the given type/name. # # @param typed_name [TypedName] - the type, name combination to lookup # @param check_dependencies [Boolean] - if dependencies should be checked in addition to here and parent # @return [NamedEntry, nil] the entry containing the loaded value, or nil if not found # @api public #
def on_op on_lparen typed_name on_rparen on_ignored_nl UNK on_op UNK on_lparen typed_name on_rparen on_nl UNK UNK on_nl UNK on_period value on_nl # Produces the value associated with the given name if defined **in this loader**, or nil if not defined. # This lookup does not trigger any loading, or search of the given name. # An implementor of this method may not search or look up in any other loader, and it may not # define the name. # # @param typed_name [TypedName] - the type, name combination to lookup # # @api private #
def UNK on_lparen typed_name on_rparen on_ignored_nl UNK on_const on_comma UNK on_tstring_content UNK UNK on_period UNK on_period name UNK on_tstring_content UNK # Searches for the given name in this loader's context (parents should already have searched their context(s) without # producing a result when this method is called). # An implementation of find typically caches the result. # # @param typed_name [TypedName] the type, name combination to lookup # @return [NamedEntry, nil] the entry for the loaded entry, or nil if not found # # @api private #
def UNK on_nl UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_nl end on_nl on_ignored_nl def UNK on_lparen UNK # Returns the parent of the loader, or nil, if this is the top most loader. This implementation returns nil.
def UNK on_nl UNK on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_comma name on_comma value on_comma UNK on_op UNK # Produces the private loader for loaders that have a one (the visibility given to loaded entities). # For loaders that does not provide a private loader, self is returned. # # @api private
def UNK on_lparen UNK on_comma name on_comma value on_comma UNK on_op UNK on_rparen on_ignored_nl UNK on_const on_period UNK on_nl end # Binds a value to a name. The name should not start with '::', but may contain multiple segments. # # @param type [:Symbol] the type of the entity being set # @param name [String, Symbol] the name of the entity being set # @param origin [URI, #uri, String] the origin of the set entity, a URI, or provider of URI, or URI in string form # @return [NamedEntry, nil] the created entry # # @api private #
def UNK on_lparen typed_name on_rparen on_ignored_nl UNK on_const on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_const on_nl end # Produces a NamedEntry if a value is bound to the given name, or nil if nothing is bound. # # @param typed_name [TypedName] the type, name combination to lookup # @return [NamedEntry, nil] the value bound in an entry # # @api private #
def UNK on_nl on_const on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK # A loader is by default a loader for all kinds of loadables. An implementation may override # if it cannot load all kinds. # # @api private
def UNK on_nl UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_period UNK on_nl end on_nl on_ignored_nl on_ignored_nl UNK # A loader may want to implement its own version with more detailed information.
def UNK on_nl UNK on_period UNK on_nl end on_nl on_ignored_nl on_ignored_nl UNK on_const on_nl UNK on_symbeg typed_name on_nl UNK on_symbeg # Loaders may contain references to the environment they load items within. # Consequently, calling Kernel#inspect may return strings that are large # enough to cause OutOfMemoryErrors on some platforms. # # We do not call alias_method here as that would copy the content of to_s # at this point to inspect (ie children would print out `loader_name` # rather than their version of to_s if they chose to implement it).
UNK on_const on_nl UNK on_symbeg typed_name on_nl UNK on_symbeg value on_nl UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen typed_name # An entry for one entity loaded by the loader. #
