on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const # frozen_string_literal: true
UNK on_const on_op on_const on_nl on_const on_op on_ignored_nl UNK on_tstring_content UNK on_period UNK on_nl on_ignored_nl on_const on_op UNK on_tstring_content UNK # This middleware sets various version related rack environment variables # based on the HTTP Accept header with the pattern: # application/vnd.:vendor-:version+:format # # Example: For request header # Accept: application/vnd.mycompany.a-cool-resource-v1+json # # The following rack env variables are set: # # env['api.type'] => 'application' # env['api.subtype'] => 'vnd.mycompany.a-cool-resource-v1+json' # env['api.vendor] => 'mycompany.a-cool-resource' # env['api.version] => 'v1' # env['api.format] => 'json' # # If version does not match this route, then a 406 is raised with # X-Cascade header to alert Grape::Router to attempt the next matched # route.
env on_lbracket on_const on_op on_const on_op on_const on_rbracket on_op on_const on_period UNK on_lbracket UNK on_rbracket on_nl end on_nl on_ignored_nl def # weird that Grape::Middleware::Formatter also does this
def UNK on_nl UNK version_options on_op version_options on_period UNK on_lparen on_symbeg UNK on_rparen on_nl version_options on_lbracket on_symbeg UNK on_rbracket on_nl # By default those errors contain an `X-Cascade` header set to `pass`, # which allows nesting and stacking of routes # (see Grape::Router for more # information). To prevent # this behavior, and not add the `X-Cascade` # header, one can set the `:cascade` option to `false`.
def UNK on_lparen media_type on_rparen on_ignored_nl UNK on_comma subtype on_op on_const on_op on_const on_op on_const on_period UNK on_lparen media_type on_rparen # @param [String] media_type a content type # @return [Boolean] whether the content type sets a vendor
def UNK on_lparen media_type on_rparen on_ignored_nl UNK on_comma subtype on_op on_const on_op on_const on_op on_const on_period UNK on_lparen media_type on_rparen # @param [String] media_type a content type # @return [Boolean] whether the content type sets an API version
