on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_op on_const on_nl UNK on_const on_op on_const on_op on_const # frozen_string_literal: true
UNK on_const on_nl UNK on_const on_op on_const on_op on_const on_nl UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl UNK on_symbeg # An Endpoint is the proxy scope in which all routing # blocks are executed. In other words, any methods # on the instance level of this class may be called # from inside a `get`, `post`, etc.
def UNK on_lparen method_name on_comma on_op block on_rparen on_ignored_nl if UNK on_lparen method_name on_rparen on_nl UNK on_const on_period new on_lparen # @api private # # Create an UnboundMethod that is appropriate for executing an endpoint # route. # # The unbound method allows explicit calls to +return+ without raising a # +LocalJumpError+. The method will be removed, but a +Proc+ reference to # it will be returned. The returned +Proc+ expects a single argument: the # instance of +Endpoint+ to bind to the method during the call. # # @param [String, Symbol] method_name # @return [Proc] # @raise [NameError] an instance method with the same name already exists
def UNK on_lparen UNK on_comma options on_op on_lbrace on_rbrace on_comma on_op block on_rparen on_ignored_nl UNK on_lparen options on_comma on_symbeg path # Create a new endpoint. # @param new_settings [InheritableSetting] settings to determine the params, # validations, and other properties from. # @param options [Hash] attributes of this endpoint # @option options path [String or Array] the path to this endpoint, within # the current scope. # @option options method [String or Array] which HTTP method(s) can be used # to reach this endpoint. # @option options route_options [Hash] # @note This happens at the time of API definition, so in this context the # endpoint does not know if it will be mounted under a different endpoint. # @yield a block defining what your API should do when this endpoint is hit
def UNK on_lparen namespace_stackable on_rparen on_ignored_nl inheritable_setting on_period route on_lbracket on_symbeg UNK on_rbracket on_op namespace_stackable on_lbracket on_symbeg UNK on_rbracket on_nl # Update our settings from a given set of stackable parameters. Used when # the endpoint's API is mounted under another one.
def endpoints on_nl options on_lbracket on_symbeg UNK on_rbracket on_period endpoints if options on_lbracket on_symbeg UNK on_rbracket on_op options on_lbracket on_symbeg # Return the collection of endpoints within this endpoint. # This is the case when an Grape::API mounts another Grape::API.
on_ivar on_op UNK on_nl on_ignored_nl UNK on_op UNK on_op on_lbracket UNK on_rbracket on_nl on_ignored_nl on_lbracket UNK on_comma UNK on_comma UNK # status verifies body presence when DELETE
UNK on_op UNK on_op on_lbracket UNK on_rbracket on_nl on_ignored_nl on_lbracket UNK on_comma UNK on_comma UNK on_rbracket on_nl UNK on_ignored_nl run_filters # The body commonly is an Array of Strings, the application instance itself, or a File-like object
