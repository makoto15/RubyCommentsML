on_ignored_nl UNK UNK UNK UNK on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const # frozen_string_literal: true
UNK on_const on_op on_const on_nl UNK UNK on_nl UNK on_op UNK UNK on_lbracket on_const on_op on_const on_op on_const on_op on_const # This middleware sets various version related rack environment variables # based on the HTTP Accept-Version header # # Example: For request header # Accept-Version: v1 # # The following rack env variables are set: # # env['api.version'] => 'v1' # # If version does not match this route, then a 406 is raised with # X-Cascade header to alert Grape::Router to attempt the next matched # route.
UNK UNK on_period UNK on_nl UNK on_symbeg UNK on_comma on_label UNK on_comma on_label UNK on_comma on_label UNK UNK UNK on_nl # If no Accept-Version header:
UNK on_symbeg UNK on_comma on_label UNK on_comma on_label UNK on_comma on_label UNK UNK UNK UNK UNK on_period UNK UNK on_op # If the requested version is not supported:
UNK UNK on_nl UNK options on_lbracket on_symbeg UNK on_rbracket on_op options on_lbracket on_symbeg UNK on_rbracket on_period UNK UNK on_symbeg UNK # By default those errors contain an `X-Cascade` header set to `pass`, which allows nesting and stacking # of routes (see Grape::Router) for more information). To prevent # this behavior, and not add the `X-Cascade` header, one can set the `:cascade` option to `false`.
