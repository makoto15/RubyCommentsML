on_ignored_nl UNK UNK UNK UNK on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK # frozen_string_literal: true
UNK on_const on_nl UNK on_op UNK on_nl UNK UNK on_lparen input on_rparen on_ignored_nl UNK input UNK UNK on_lparen input on_rparen # Handles coercion and type checking for parameters that are complex # types given as JSON-encoded strings. It accepts both JSON objects # and arrays of objects, and will coerce the input to a +Hash+ # or +Array+ object respectively. In either case the Grape # validation system will apply nested validation rules to # all returned objects.
UNK UNK on_lparen input on_rparen on_ignored_nl UNK input UNK UNK on_lparen input on_rparen on_nl on_ignored_nl UNK UNK input on_period UNK # Coerce the input into a JSON-like data structure. # # @param input [String] a JSON-encoded parameter value # @return [Hash,Array<Hash>,nil]
UNK UNK input on_period UNK on_op input on_period UNK on_lparen UNK UNK UNK on_rparen on_nl on_const on_period UNK on_lparen input # Allow nulls and blank strings
UNK UNK on_lparen value on_rparen on_ignored_nl value on_period UNK on_lparen on_op on_const on_rparen on_op UNK on_lparen value on_rparen on_nl end # Checks that the input was parsed successfully # and isn't something odd such as an array of primitives. # # @param value [Object] result of {#parse} # @return [true,false]
UNK UNK on_lparen value on_rparen on_ignored_nl value on_period UNK on_lparen on_op on_const on_rparen on_op value on_period UNK UNK on_op UNK # Is the value an array of JSON-like objects? # # @param value [Object] result of {#parse} # @return [true,false]
UNK on_const on_op on_const on_nl UNK on_op UNK on_nl UNK UNK on_lparen input on_rparen on_ignored_nl UNK on_op UNK on_nl on_const # Specialization of the {Json} attribute that is guaranteed # to return an array of objects. Accepts both JSON-encoded # objects and arrays of objects, but wraps single objects # in an Array.
UNK UNK on_lparen input on_rparen on_ignored_nl UNK on_op UNK on_nl on_const on_period UNK on_lparen UNK on_rparen UNK UNK on_period UNK # See {Json#parse}. Wraps single objects in an array. # # @param input [String] JSON-encoded parameter value # @return [Array<Hash>]
UNK UNK on_lparen value on_rparen on_ignored_nl UNK value on_nl end on_nl end on_nl end on_nl end on_nl end on_nl end # See {Json#coerced_collection?}
