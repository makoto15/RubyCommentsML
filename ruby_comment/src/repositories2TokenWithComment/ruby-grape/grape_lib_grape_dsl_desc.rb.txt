on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl def UNK # frozen_string_literal: true
def UNK on_lparen description on_comma options on_op UNK UNK on_comma on_op UNK on_rparen on_ignored_nl UNK UNK on_nl UNK on_op UNK # Add a description to the next namespace or function. # @param description [String] descriptive string for this endpoint # or namespace # @param options [Hash] other properties you can set to describe the # endpoint or namespace. Optional. # @option options :detail [String] additional detail about this endpoint # @option options :summary [String] summary for this endpoint # @option options :params [Hash] param types and info. normally, you set # these via the `params` dsl method. # @option options :entity [Grape::Entity] the entity returned upon a # successful call to this action # @option options :http_codes [Array[Array]] possible HTTP codes this # endpoint may return, with their meanings, in a 2d array # @option options :named [String] a specific name to help find this route # @option options :body_name [String] override the autogenerated body name param # @option options :headers [Hash] HTTP headers this method can accept # @option options :hidden [Boolean] hide the endpoint or not # @option options :deprecated [Boolean] deprecate the endpoint or not # @option options :is_array [Boolean] response entity is array or not # @option options :nickname [String] nickname of the endpoint # @option options :produces [Array[String]] a list of MIME types the endpoint produce # @option options :consumes [Array[String]] a list of MIME types the endpoint consume # @option options :security [Array[Hash]] a list of security schemes # @option options :tags [Array[String]] a list of tags # @yield a block yielding an instance context with methods mapping to # each of the above, except that :entity is also aliased as #success # and :http_codes is aliased as #failure. # # @example # # desc 'create a user' # post '/users' do # # ... # end # # desc 'find a user' do # detail 'locates the user from the given user ID' # failure [ [404, 'Couldn\'t find the given user' ] ] # success User::Entity # end # get '/user/:id' do # # ... # end #
UNK configuration on_period UNK on_lparen on_symbeg UNK on_rparen on_nl configuration on_period UNK on_nl UNK configuration on_period UNK on_lparen on_const on_rparen # When the instance is mounted - the configuration is executed on mount time
UNK configuration on_period UNK on_lparen on_const on_rparen on_nl configuration on_nl end on_nl end on_nl UNK on_op UNK UNK on_nl UNK # Within `given` or `mounted blocks` the configuration is already evaluated
def UNK on_lparen UNK on_rparen on_ignored_nl on_const on_period UNK UNK on_ignored_nl UNK on_const on_op on_const on_op on_const on_period UNK on_lparen # Returns an object which configures itself via an instance-context DSL.
