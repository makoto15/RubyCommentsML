on_ignored_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl on_const on_op #!/usr/bin/env ruby
on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl on_const on_op on_const # This script will build a tgz file containing a copy of Postal with the assets # ready to go. It will then upload the file to a web server where it can be # accessed for users who wish to install or upgrade their postal installations. # # This script will only be used by the Postal build manager so it's likely of # little use to most people.
on_const on_period UNK on_lparen on_const on_rparen on_nl on_ignored_nl puts on_tstring_beg on_tstring_content on_tstring_end on_nl system! on_lparen on_tstring_beg on_tstring_content on_embexpr_beg on_const on_embexpr_end # Prepare our build root
puts on_tstring_beg on_tstring_content on_tstring_end on_nl system! on_lparen on_tstring_beg on_tstring_content on_embexpr_beg on_const on_embexpr_end on_tstring_end on_rparen on_nl system! on_lparen on_tstring_beg on_tstring_content on_embexpr_beg # Get a brand new clean copy of the repository
puts on_tstring_beg on_tstring_content on_tstring_end on_nl system! on_lparen on_tstring_beg on_tstring_content on_embexpr_beg on_const on_embexpr_end on_tstring_content on_embexpr_beg on_const on_embexpr_end on_tstring_content on_embexpr_beg on_const on_embexpr_end # Install bundler dependencies so we can compile assets
puts on_tstring_beg on_tstring_content on_tstring_end on_nl system! on_lparen on_tstring_beg on_tstring_content on_embexpr_beg on_const on_embexpr_end on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl UNK on_op UNK # Install some configuration files
UNK on_op UNK on_tstring_content on_embexpr_beg on_const on_embexpr_end on_tstring_content on_tstring_end on_period UNK on_lparen UNK on_tstring_content UNK on_comma on_int on_rparen on_period UNK # Get the last commit reference for the version file
UNK on_op on_const on_period UNK on_lparen on_tstring_beg on_embexpr_beg on_const on_embexpr_end on_tstring_content on_tstring_end on_rparen on_nl UNK UNK on_op UNK on_tstring_content UNK # Read the version file for the version number so we it put it in the build # package filename and update the version file to include the REVISION and # CHANNEL for this build.
UNK on_const UNK on_tstring_beg on_tstring_content on_tstring_end UNK on_nl puts on_tstring_beg on_tstring_content on_tstring_end on_nl system! on_lparen on_tstring_beg on_tstring_content on_embexpr_beg on_const on_embexpr_end # Compile all the assets
puts on_tstring_beg on_tstring_content on_tstring_end on_nl system! on_lparen on_tstring_beg on_tstring_content on_embexpr_beg on_const on_embexpr_end on_tstring_content on_tstring_end on_rparen on_nl system! on_lparen on_tstring_beg on_tstring_content # Remove files that shouldn't be distributed
puts on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg on_const on_embexpr_end on_tstring_content on_embexpr_beg on_const on_embexpr_end on_tstring_content on_tstring_end on_rparen on_nl # Build a new tgz file
UNK on_op on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl # What's our filename? This is our filename.
UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # Upload the package to the distribution server and symlink it to latest # for the appropriate channel.
