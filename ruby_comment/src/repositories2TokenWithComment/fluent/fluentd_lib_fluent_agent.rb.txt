on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end # # Fluentd # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. #
UNK on_const on_nl UNK on_const on_nl on_ignored_nl def UNK on_lparen on_label on_rparen on_ignored_nl UNK on_lparen on_rparen on_nl on_ignored_nl on_ivar on_op # # Agent is a resource unit who manages emittable plugins # # Next step: `fluentd/root_agent.rb` # Next step: `fluentd/label.rb` #
on_ivar on_op UNK on_nl on_ignored_nl on_ivar on_op UNK on_nl on_ivar on_op on_const on_period UNK on_lparen on_const on_period UNK on_lparen UNK # lifecycle_control_list is the list of plugins in this agent, and ordered # from plugins which DOES emit, then DOESN'T emit # (input -> output w/ router -> filter -> output w/o router) # for start: use this order DESC # (because plugins which appears later in configurations will receive events from plugins which appears earlier) # for stop/before_shutdown/shutdown/after_shutdown/close/terminate: use this order ASC
conf on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period each UNK on_op e on_op on_ignored_nl if # initialize <match> and <filter> elements
outputs on_op if output on_period UNK on_lparen on_symbeg UNK on_rparen on_nl output on_period UNK on_nl UNK on_ignored_nl output on_period outputs # TODO: ruby 2.3 or later: replace `output.respond_to?(:multi_output?) && output.multi_output?` with output&.multi_output?
def UNK on_lparen UNK on_comma UNK on_comma UNK on_comma UNK on_rparen on_ignored_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_comma # For handling invalid record
