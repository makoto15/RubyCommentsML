on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content # # Fluentd # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. #
on_const on_op on_int on_op on_int on_op on_int on_op on_int on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_embexpr_beg on_const on_op on_const on_op on_const # 256MB
on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_embexpr_beg on_const on_op on_const on_op on_const on_op on_const on_op on_const on_embexpr_end on_tstring_end on_nl on_ignored_nl UNK # 64GB
else on_ignored_nl UNK on_const on_op on_const on_comma on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl end on_nl on_ignored_nl UNK on_op on_const on_period # plugin_root_dir path contains worker id
if UNK on_op on_op UNK on_nl on_ivar on_op on_const on_period UNK on_lparen on_ivar on_comma on_tstring_beg on_tstring_content on_embexpr_beg on_const on_embexpr_end on_tstring_end # directory
on_ivar on_op on_const on_period UNK on_lparen on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_ivar on_rparen on_comma on_tstring_beg on_tstring_content on_embexpr_beg # worker 0 always checks unflushed buffer chunks to be resumed (might be created while non-multi-worker configuration)
if on_const on_period UNK on_lparen on_ivar on_rparen on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_op on_const on_period UNK # specified path is file path
on_ivar on_op on_ivar on_op on_tstring_beg on_tstring_content on_embexpr_beg on_const on_embexpr_end on_tstring_end on_nl end on_nl on_ivar on_op UNK on_nl end on_nl on_ignored_nl # existing file will be ignored
def UNK on_nl UNK on_ivar on_nl log on_period UNK on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ivar on_nl end on_nl on_ignored_nl # This method is called only when multi worker is configured
mode on_op on_const on_op on_const on_op on_const on_op on_const on_period UNK on_lparen path on_rparen on_nl if mode on_op on_symbeg UNK # this metadata will be updated in FileSingleChunk.new
UNK on_op on_ivar on_op UNK on_period UNK on_nl chunk on_op on_const on_op on_const on_op on_const on_op on_const on_period UNK on_lparen # FileChunk generates real path with unique_id
on_const on_period UNK on_lparen path on_rparen UNK nil on_nl end on_nl on_ignored_nl UNK on_nl on_ignored_nl def UNK on_lparen UNK on_rparen # After support 'backup_dir' feature, these files are moved to backup_dir instead of unlink.
UNK on_period UNK on_lparen UNK on_tstring_content UNK on_rparen UNK on_op UNK on_op on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_end UNK on_nl # '{' '}' are special character in Dir.glob
