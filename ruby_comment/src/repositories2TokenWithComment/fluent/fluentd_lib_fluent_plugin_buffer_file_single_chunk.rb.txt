on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end # # Fluentd # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. #
on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_op on_tstring_beg on_tstring_content on_embexpr_beg on_const on_embexpr_end on_tstring_end on_nl on_const on_op UNK on_tstring_content ## buffer path user specified : /path/to/directory ## buffer chunk path : /path/to/directory/fsb.key.b513b61c9791029c2513b61c9791029c2.buf ## state: b/q - 'b'(on stage), 'q'(enqueued)
on_ignored_nl UNK on_symbeg path on_comma on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen metadata on_comma path on_comma UNK on_comma key on_comma # //n switch means explicit 'ASCII-8BIT' pattern
raise on_tstring_beg on_tstring_content on_embexpr_beg on_ivar on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_tstring_end on_nl else on_ignored_nl raise # In this point, restore buffer state is hard because previous `file_rename` failed by resource problem. # Retry is one possible approach but it may cause livelock under limited resources or high load environment. # So we ignore such errors for now and log better message instead. # "Too many open files" should be fixed by proper buffer configuration and system setting.
on_symbeg UNK on_nl end on_nl end on_nl on_ignored_nl def self on_period UNK on_lparen path on_rparen on_ignored_nl UNK on_op on_const on_period # files which matches to glob of buffer file pattern # it includes files which are created by out_file
UNK on_op UNK unique_id on_op UNK on_period UNK on_lparen UNK on_tstring_content UNK on_rparen on_period UNK UNK on_op UNK on_op UNK # remove 'fsb.' and '.'
unique_id on_op UNK on_period UNK on_lparen UNK on_tstring_content UNK on_rparen on_period UNK UNK on_op UNK on_op UNK on_period UNK on_lparen # remove '.' and '.buf'
path on_op on_tstring_beg on_tstring_content on_embexpr_beg chunk_id on_embexpr_end on_tstring_content on_tstring_end on_nl end on_nl end on_nl on_ignored_nl def UNK on_nl if res # for unexpected cases (ex: users rename files while opened by fluentd)
raise on_const on_comma on_tstring_beg on_tstring_content on_embexpr_beg path on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_end on_nl end on_nl on_ignored_nl on_ivar on_op on_symbeg # Here assumes "Too many open files" like recoverable error so raising BufferOverflowError. # If other cases are possible, we will change erorr handling with proper classes.
on_ivar on_op on_int on_nl on_ivar on_op on_int on_nl end on_nl on_ignored_nl def UNK on_lparen path on_rparen on_ignored_nl on_ivar on_op path # must be 0
