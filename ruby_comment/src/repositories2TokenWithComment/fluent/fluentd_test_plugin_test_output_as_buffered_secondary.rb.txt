now on_op first_failure on_op on_int on_op on_float on_op on_int on_const on_period freeze on_lparen now on_rparen on_nl on_ignored_nl unless on_ivar on_period # retry_timeout == 60(sec), retry_secondary_threshold == 0.8
on_const on_period freeze on_lparen now on_rparen on_nl on_ignored_nl unless on_ivar on_period retry on_period UNK on_nl on_ivar on_period enqueue_thread_wait on_nl on_ivar # to step from primary to secondary
now on_op first_failure on_op on_int on_op on_float on_op on_int on_nl on_const on_period freeze on_lparen now on_rparen on_nl end on_nl on_ignored_nl # next step is on secondary
now on_op first_failure on_op on_int on_op on_float on_op on_int on_const on_period freeze on_lparen now on_rparen on_nl on_ignored_nl unless on_ivar on_period # retry_timeout == 60(sec), retry_secondary_threshold == 0.8
on_const on_period freeze on_lparen now on_rparen on_nl on_ignored_nl unless on_ivar on_period retry on_period UNK on_nl on_ivar on_period enqueue_thread_wait on_nl on_ivar # to step from primary to secondary
now on_op first_failure on_op on_int on_op on_float on_op on_int on_nl on_const on_period freeze on_lparen now on_rparen on_nl end on_nl on_ignored_nl # next step is on secondary
now on_op first_failure on_op on_int on_op on_float on_op on_int on_const on_period freeze on_lparen now on_rparen on_nl on_ignored_nl unless on_ivar on_period # retry_timeout == 60(sec), retry_secondary_threshold == 0.8
on_const on_period freeze on_lparen now on_rparen on_nl on_ignored_nl unless on_ivar on_period retry on_period UNK on_nl on_ivar on_period enqueue_thread_wait on_nl on_ivar # to step from primary to secondary
now on_op first_failure on_op on_int on_op on_float on_op on_int on_nl on_const on_period freeze on_lparen now on_rparen on_nl end on_nl on_ignored_nl # next step is on secondary
now on_op first_failure on_op on_int on_op on_float on_op on_int on_const on_period freeze on_lparen now on_rparen on_nl on_ignored_nl unless on_ivar on_period # retry_timeout == 60(sec), retry_secondary_threshold == 0.8
on_const on_period freeze on_lparen now on_rparen on_nl on_ignored_nl unless on_ivar on_period retry on_period UNK on_nl on_ivar on_period enqueue_thread_wait on_nl on_ivar # to step from primary to secondary
now on_op first_failure on_op on_int on_op on_float on_op on_int on_nl on_const on_period freeze on_lparen now on_rparen on_nl end on_nl on_ignored_nl # next step is on secondary
on_ignored_nl now on_op first_failure on_op on_int on_op on_float on_op on_int on_nl on_const on_period freeze on_lparen now on_rparen on_nl on_ivar on_period # retry_timeout == 60(sec), retry_secondary_threshold == 0.8
now on_op first_failure on_op on_int on_op on_float on_op on_int on_op on_lbracket i on_comma on_int on_rbracket on_period UNK on_nl on_const on_period # large enough # In https://github.com/fluent/fluentd/blob/c90c024576b3d35f356a55fd33d1232947114a9a/lib/fluent/plugin_helper/retry_state.rb # @timeout_at is 2016-04-13 18:34:31, @next_time must be less than 2016-04-13 18:34:30 # # first_failure + 60 * 0.8 + 2 # => 2016-04-13 18:34:21 # @next_time is not added by 1, but by randomize(@retry_wait) https://github.com/fluent/fluentd/blob/c90c024576b3d35f356a55fd33d1232947114a9a/lib/fluent/plugin_helper/retry_state.rb#L196 # current_time(=Time.now) + randomize(@retry_wait) < @timeout_at # (2016-04-13 18:34:21 + 6) + 3 < 2016-04-13 18:34:31 # So, current_time must be at most 6
on_ignored_nl now on_op first_failure on_op on_int on_op on_float on_op on_int on_nl on_ignored_nl on_const on_period freeze on_lparen now on_rparen on_nl on_ivar # retry_timeout == 60(sec), retry_secondary_threshold == 0.8
now on_op on_ivar on_period UNK on_nl on_const on_period freeze on_lparen now on_rparen on_nl on_ivar on_period enqueue_thread_wait on_nl on_ivar on_period flush_thread_wakeup # large enough
on_ignored_nl assert on_lbrace now on_op first_failure on_op on_int on_op on_float on_rbrace on_nl on_ignored_nl UNK on_ivar on_period retry on_nl on_ignored_nl assert_equal # retry_timeout == 60(sec), retry_secondary_threshold == 0.8
now on_op on_ivar on_period UNK on_nl on_const on_period freeze on_lparen now on_rparen on_nl on_ivar on_period enqueue_thread_wait on_nl on_ivar on_period flush_thread_wakeup # large enough
on_const on_period freeze on_lparen now on_rparen on_nl on_ivar on_period enqueue_thread_wait on_nl on_ivar on_period flush_thread_wakeup on_nl waiting on_lparen on_int on_rparen on_lbrace # p({i: i, now: now, diff: (now - Time.now)}) # {:i=>0, :now=>2016-04-13 18:33:32 -0700, :diff=>1.0} # {:i=>1, :now=>2016-04-13 18:33:34 -0700, :diff=>2.0} # {:i=>2, :now=>2016-04-13 18:33:38 -0700, :diff=>4.0} # {:i=>3, :now=>2016-04-13 18:33:46 -0700, :diff=>8.0} # {:i=>4, :now=>2016-04-13 18:34:02 -0700, :diff=>16.0} # {:i=>5, :now=>2016-04-13 18:34:19 -0700, :diff=>17.0}
on_ignored_nl assert on_lbrace now on_op first_failure on_op on_int on_op on_float on_rbrace on_nl assert on_ivar on_period retry on_nl logs on_op on_ivar # retry_timeout == 60(sec), retry_secondary_threshold == 0.8
on_ignored_nl on_int on_period UNK do on_op i on_op now on_op on_ivar on_period UNK on_nl on_ignored_nl on_const on_period freeze on_lparen now # <= retry_wait (1s) * base (2) ** 1
now on_op on_ivar on_period UNK on_nl on_ignored_nl on_const on_period freeze on_lparen now on_rparen on_nl on_ivar on_period enqueue_thread_wait on_nl on_ivar on_period # large enough again
on_ignored_nl on_const on_period freeze on_lparen now on_rparen on_nl on_ivar on_period enqueue_thread_wait on_nl on_ivar on_period flush_thread_wakeup on_nl waiting on_lparen on_int on_rparen # p({i: i, now: now, diff: (now - Time.now)}) # {:i=>0, :now=>2016-04-13 18:34:20 -0700, :diff=>1.0} # {:i=>1, :now=>2016-04-13 18:34:24 -0700, :diff=>4.0} # {:i=>2, :now=>2016-04-13 18:34:31 -0700, :diff=>7.0}
