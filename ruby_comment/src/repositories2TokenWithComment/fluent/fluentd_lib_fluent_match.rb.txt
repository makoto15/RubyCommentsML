on_ignored_nl UNK on_const on_nl UNK on_const on_nl def UNK on_period UNK on_lparen str on_rparen on_ignored_nl if str on_op on_tstring_beg on_tstring_content # # Fluentd # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. #
if dot on_nl regex on_period last on_op on_tstring_beg on_tstring_content on_tstring_end on_nl dot on_op false on_nl end on_nl if UNK on_lbracket # recursive any
regex on_period last on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl on_ignored_nl elsif c on_op on_tstring_beg on_tstring_content on_tstring_end on_nl stack on_period UNK # any
on_ignored_nl elsif c on_op on_tstring_beg on_tstring_content on_tstring_end on_nl stack on_period UNK on_lbracket on_rbracket on_nl regex on_period UNK on_tstring_beg on_tstring_end on_nl # TODO #elsif c == "[" # # character class # chars = '' # while i < pat.length # c = pat[i,1] # if c == "]" # break # else # chars << c # end # i += 1 # end # regex.last << '['+Regexp.escape(chars).gsub("\\-",'-')+']'
stack on_period UNK on_lbracket on_rbracket on_nl regex on_period UNK on_tstring_beg on_tstring_end on_nl on_ignored_nl elsif c on_op on_tstring_beg on_tstring_content on_tstring_end on_op # or
on_ivar on_op false on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_comma UNK on_rparen on_ignored_nl UNK UNK on_ivar on_nl c # for <label @FLUENT_LOG>
c on_op on_lparen on_ivar on_op on_int on_rparen on_nl if c on_op on_int on_nl if on_const on_period UNK on_lparen c on_rparen # TODO use time instead of num of records
