on_ignored_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content # # Fluentd # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. #
on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl on_const on_op on_int on_nl on_ignored_nl desc on_tstring_beg on_tstring_content on_tstring_end on_nl config_param on_symbeg UNK on_comma # See the wiki page below for protocol specification # https://github.com/fluent/fluentd/wiki/Forward-Protocol-Specification-v1
desc on_tstring_beg on_tstring_content on_tstring_end on_nl config_param on_symbeg UNK on_comma on_symbeg UNK on_comma on_label on_int on_nl config_param on_symbeg UNK on_comma on_symbeg # SO_LINGER 0 to send RST rather than FIN to avoid lots of connections sitting in TIME_WAIT at src
config_param on_symbeg UNK on_comma on_symbeg time on_comma on_label UNK on_nl desc on_tstring_beg on_tstring_content on_tstring_end on_nl config_param on_symbeg UNK on_comma on_symbeg # This option is for Cool.io's loop wait timeout to avoid loop stuck at shutdown. Almost users don't need to change this value.
UNK on_symbeg UNK on_comma on_label on_symbeg users on_comma on_label false on_comma on_label true do on_ignored_nl desc on_tstring_beg on_tstring_content on_tstring_end on_nl ### User based authentication
UNK on_symbeg client on_comma on_label on_symbeg UNK on_comma on_label false on_comma on_label true do on_ignored_nl desc on_tstring_beg on_tstring_content on_tstring_end on_nl ### Client ip/network authentication & per_host shared key
if on_ivar on_period nil? on_nl on_ivar on_op true on_nl UNK on_op on_ivar raise on_const on_op on_const on_comma on_tstring_beg on_tstring_content on_tstring_end # TODO: add test
raise on_const on_op on_const on_comma on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl end on_nl on_ivar on_op on_ivar on_op on_ivar on_nl on_ignored_nl # user specifies "false" in config
state on_op on_symbeg UNK on_nl nonce on_op UNK on_nl user_auth_salt on_op UNK on_nl UNK on_period call on_lparen on_symbeg UNK on_period # security enabled session MUST use MessagePack as serialization format
unless UNK on_nl UNK on_op data on_lbracket on_int on_rbracket on_nl if UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_op UNK on_op on_tstring_beg # only for first call of callback
UNK on_op on_const on_op on_const on_period new on_nl UNK on_period UNK on_op UNK on_lparen UNK on_rparen UNK on_ignored_nl UNK on_period # json
UNK on_op on_const on_op on_const on_period UNK on_nl serializer on_op on_symbeg UNK on_period UNK on_nl UNK on_op UNK on_lparen UNK # msgpack
return on_nl end on_nl on_ignored_nl unless msg on_period UNK on_lparen on_const on_rparen on_nl log on_period warn on_tstring_beg on_tstring_content on_tstring_end on_comma # for future TCP heartbeat_request
unless msg on_period UNK on_lparen on_const on_rparen on_nl log on_period warn on_tstring_beg on_tstring_content on_tstring_end on_comma on_label conn on_period remote_host on_comma # TODO: raise an exception if broken chunk is generated by recoverable situation
option on_op msg on_lbracket on_int on_rbracket on_nl UNK on_op on_lparen option on_op option on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_rparen on_op # PackedForward
es on_op if on_ivar on_nl UNK on_lparen tag on_comma UNK on_comma conn on_period remote_host on_rparen on_nl else on_ignored_nl es on_op # Forward
es on_period UNK on_lparen time on_comma record on_rparen on_nl on_rbrace on_nl es on_nl end on_nl if on_ivar on_nl es on_op # `to_i == 0` for empty EventTime
time on_op msg on_lbracket on_int on_rbracket on_nl record on_op msg on_lbracket on_int on_rbracket on_nl if on_ivar on_op UNK on_lparen tag # Message
end on_nl return if record on_period nil? on_nl time on_op on_const on_op on_const on_period UNK if time on_period UNK on_op # retry never succeeded so return ack and drop incoming event.
option on_nl end on_nl on_ignored_nl def UNK on_lparen tag on_comma time on_comma record on_rparen on_ignored_nl on_op on_lparen on_lparen time on_period # return option for response
on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_lbrace on_tstring_beg on_tstring_content on_tstring_end on_op nonce on_comma on_tstring_beg on_tstring_content on_tstring_end on_op on_lparen on_ivar on_op user_auth_salt # ['HELO', options(hash)]
unless UNK on_period UNK on_op on_int on_op UNK on_lbracket on_int on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end on_nl return false on_comma on_tstring_beg # ['PING', self_hostname, shared_key_salt, sha512_hex(shared_key_salt + self_hostname + nonce + shared_key), username || '', sha512_hex(auth_salt + username + password) || '']
unless UNK on_nl return on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma false on_comma reason_or_salt on_comma on_tstring_beg on_tstring_end on_comma on_tstring_beg on_tstring_end on_rbracket on_nl # ['PONG', bool(authentication result), 'reason if authentication failed', self_hostname, sha512_hex(salt + self_hostname + nonce + sharedkey)]
