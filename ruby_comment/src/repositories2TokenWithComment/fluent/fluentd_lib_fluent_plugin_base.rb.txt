on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl # # Fluentd # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. #
end on_nl on_ignored_nl def UNK on_nl UNK on_ivar if on_ivar on_nl on_ivar on_op on_lparen on_const UNK on_tstring_beg on_tstring_content on_tstring_end UNK # override this in plugin_id.rb
if on_ivar on_period UNK on_lparen on_const on_op on_const on_rparen on_op UNK on_period UNK on_lparen on_symbeg UNK on_rparen on_ivar on_period UNK # By initialization order, plugin logger is created before set log_event_enabled. # It causes '@id' specified plugin, it uses plugin logger instead of global logger, ignores `<label @FLUENT_LOG>` setting. # This is adhoc approach but impact is minimal.
on_ivar on_period UNK on_op UNK on_period UNK on_nl end on_nl on_ivar on_period UNK on_op true on_nl self on_nl end on_nl # log_event_enabled check for tests
if UNK on_period UNK on_op UNK on_tstring_content UNK UNK true on_nl end on_nl end on_nl false on_nl end on_nl on_ignored_nl # Thread::Backtrace::Location#path returns base filename or absolute path. # #absolute_path returns absolute_path always. # https://bugs.ruby-lang.org/issues/12159
UNK true on_nl end on_nl end on_nl false on_nl end on_nl on_ignored_nl def UNK on_nl on_tstring_beg on_tstring_content on_tstring_end on_op UNK # location.path =~ /test_.+\.rb$/
on_tstring_beg on_tstring_content on_tstring_end on_op UNK self on_period UNK on_period UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_op on_lparen UNK on_op UNK on_rparen # Plugin instances are sometimes too big to dump because it may have too many thins (buffer,storage, ...) # Original commit comment says that: # To emulate normal inspect behavior `ruby -e'o=Object.new;p o;p (o.__id__<<1).to_s(16)'`. # https://github.com/ruby/ruby/blob/trunk/gc.c#L788
self on_period UNK on_period UNK on_period UNK on_nl end on_nl end on_nl end on_nl end on_nl EMP EMP EMP EMP # Engine can't capture all class variables. so it's forbbiden to use class variables in each plugins if enabling reload.
