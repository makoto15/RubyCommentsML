def UNK on_nl d1 on_op create_driver on_lparen on_const on_rparen on_nl time on_op event_time on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl d1 # CONFIG = %[ # remove_prefix test # add_prefix parsed # key_name message # format /^(?<x>.)(?<y>.) (?<time>.+)$/ # time_format %Y%m%d%H%M%S # reserve_data true # ]
d2 on_period run on_lparen on_label on_ivar on_rparen do on_ignored_nl d2 on_period feed on_lparen time on_comma on_lbrace on_tstring_beg on_tstring_content on_tstring_end on_op # EventTime emit test
d on_op create_driver on_lparen on_const on_rparen on_nl time on_op on_ivar on_period to_i on_nl d on_period run do on_ignored_nl d on_period # convert types #d = create_driver(CONFIG_LTSV + %[
def UNK on_nl time on_op on_const on_period now on_period to_i on_nl d on_op create_driver on_lparen on_const on_rparen on_nl assert_nothing_raised on_lbrace # 'time' is implicit @time_key
time on_op on_const on_period now on_period to_i on_nl d on_op create_driver on_lparen on_const on_rparen on_nl assert_nothing_raised on_lbrace on_ignored_nl d on_period # should not raise errors
on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_op on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl def UNK on_nl UNK on_op # REGEXP = /^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$/
on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl def UNK on_nl d on_op create_driver on_lparen # emit_error_event test
