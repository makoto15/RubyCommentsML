on_ignored_nl UNK UNK on_nl UNK UNK on_nl UNK UNK on_nl on_ignored_nl UNK self on_period UNK on_lparen klass on_rparen on_ignored_nl on_cvar # # Fluentd # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. #
on_ignored_nl UNK self on_period UNK on_lparen klass on_rparen on_ignored_nl on_cvar on_op UNK UNK on_nl on_cvar on_op UNK UNK on_nl on_cvar # This mixin is to prepend to 3rd party plugins of v0.12 APIs. # In past, there were not strong rule to call super in #start, #before_shutdown and #shutdown. # But v0.14 API requires to call super in these methods to setup/teardown plugin helpers and others. # This mixin prepends method calls to call super forcedly if checker returns false (it shows Fluent::Plugin::Base#methods wasn't called)
UNK on_op UNK on_lparen ancestors on_comma UNK on_rparen UNK on_ignored_nl UNK on_op ancestors on_lbracket UNK on_comma ancestors on_period UNK on_op # ancestors[0]: this module # ancestors[1]: prepended class (plugin itself)
on_cvar on_lbracket klass on_rbracket on_op UNK on_period call on_lparen klass on_period ancestors on_comma UNK UNK on_rparen on_nl on_cvar on_lbracket klass # this returns Fluent::Compat::*#start (or helpers on it)
UNK on_period UNK UNK UNK UNK on_comma UNK self on_period class on_nl end on_nl end on_nl on_ignored_nl UNK UNK on_nl # #super will reset logdev (especially in test), so this warn should be after calling it
