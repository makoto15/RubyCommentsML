on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl require on_tstring_beg on_tstring_content # # Fluentd # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. #
UNK nil on_comma nil on_nl end on_nl end on_nl on_ignored_nl UNK on_const on_op on_const on_nl on_const on_op on_const on_period UNK # this plugin is dummy implementation not to raise error
desc on_tstring_beg on_tstring_content on_tstring_end on_nl config_param on_symbeg UNK on_comma on_symbeg time on_comma on_label on_int config_param on_symbeg UNK on_comma on_symbeg UNK # TODO default
config_param on_symbeg UNK on_comma on_symbeg UNK on_comma on_label nil on_nl desc on_tstring_beg on_tstring_content on_tstring_end on_nl config_param on_symbeg UNK on_comma on_symbeg # TODO default
UNK on_op UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_comma # remove /
if record on_period nil? on_nl UNK on_period UNK on_lbrace on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg params on_period UNK on_embexpr_end # Skip nil record
UNK on_ignored_nl if record on_period UNK on_lparen on_const on_rparen on_nl UNK on_op on_const on_op on_const on_period new on_nl record on_period # TODO server error
if record on_period UNK on_lparen on_const on_rparen on_nl UNK on_op on_const on_op on_const on_period new on_nl record on_period UNK do # Support batched requests
v on_op v on_period UNK if v on_period UNK on_lparen on_const on_rparen on_nl on_ivar on_op v on_period UNK on_lparen on_tstring_beg # For multiple X-Forwarded-For headers. Use first header value.
def UNK on_nl if on_ivar on_period nil? on_nl return send_response_and_close on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_lbrace on_rbrace on_comma on_tstring_beg on_tstring_end # Web browsers can send an OPTIONS request before performing POST # to check if cross-origin requests are supported.
if on_ivar on_period nil? on_nl return send_response_and_close on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_lbrace on_rbrace on_comma on_tstring_beg on_tstring_end on_rparen on_nl end # Is CORS enabled in the first place?
if on_ivar on_op on_tstring_beg on_tstring_content on_tstring_end on_nl return send_response_and_close on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_lbrace on_rbrace on_comma on_tstring_beg on_tstring_end on_rparen # in_http does not support HTTP methods except POST
if on_ivar on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl header on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end # Check the origin and send back a CORS response
UNK on_ivar on_period nil? on_nl UNK on_ivar on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen UNK UNK on_nl send_response_and_close on_lparen on_tstring_beg # CORS check # ========== # For every incoming request, we check if we have some CORS # restrictions and white listed origins through @cors_allow_origins.
UNK on_ignored_nl if on_ivar on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ivar on_op on_const on_op on_const on_period new on_lparen on_const on_period new # Content Encoding # ================= # Decode payload according to the "Content-Encoding" header. # For now, we only support 'gzip' and 'deflate'.
