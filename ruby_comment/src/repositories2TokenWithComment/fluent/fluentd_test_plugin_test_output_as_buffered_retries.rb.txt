assert_equal on_int on_comma on_lparen on_ivar on_period next_flush_time on_op now on_rparen on_nl end on_nl on_ignored_nl test on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl # exponential backoff interval: 1 * 2 ** 10 == 1024 # but it should be limited by retry_max_interval=60
now on_op on_ivar on_period next_flush_time on_nl on_ignored_nl on_const on_period freeze on_lparen now on_rparen on_nl on_ivar on_period enqueue_thread_wait on_nl on_ivar on_period # large enough
on_ignored_nl on_const on_period freeze on_lparen now on_rparen on_nl on_ivar on_period enqueue_thread_wait on_nl on_ivar on_period flush_thread_wakeup on_nl waiting on_lparen on_int on_rparen # p({i: i, now: now, diff: (now - Time.now)}) # * if loop count is 12: # {:i=>0, :now=>2016-04-13 18:33:32 -0700, :diff=>1.0} # {:i=>1, :now=>2016-04-13 18:33:34 -0700, :diff=>2.0} # {:i=>2, :now=>2016-04-13 18:33:38 -0700, :diff=>4.0} # {:i=>3, :now=>2016-04-13 18:33:46 -0700, :diff=>8.0} # {:i=>4, :now=>2016-04-13 18:34:02 -0700, :diff=>16.0} # {:i=>5, :now=>2016-04-13 18:34:34 -0700, :diff=>32.0} # {:i=>6, :now=>2016-04-13 18:35:38 -0700, :diff=>64.0} # {:i=>7, :now=>2016-04-13 18:37:46 -0700, :diff=>128.0} # {:i=>8, :now=>2016-04-13 18:42:02 -0700, :diff=>256.0} # {:i=>9, :now=>2016-04-13 18:50:34 -0700, :diff=>512.0} # {:i=>10, :now=>2016-04-13 19:07:38 -0700, :diff=>1024.0} # {:i=>11, :now=>2016-04-13 19:33:31 -0700, :diff=>1553.0} # clear_queue!
now on_op on_ivar on_period next_flush_time on_nl on_ignored_nl on_const on_period freeze on_lparen now on_rparen on_nl on_ivar on_period enqueue_thread_wait on_nl on_ivar on_period # large times enough
now on_op on_ivar on_period next_flush_time on_nl on_ignored_nl on_const on_period freeze on_lparen now on_rparen on_nl on_ivar on_period enqueue_thread_wait on_nl on_ivar on_period # large times enough
on_ignored_nl UNK if on_ivar on_period buffer on_period queue on_period size on_op on_int on_nl on_ignored_nl prev_write_count on_op on_ivar on_period write_count on_nl # all new data is stored into staged chunk
