on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_tstring_beg on_tstring_content # # Fluentd # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. #
on_const on_op UNK on_const on_op UNK on_ignored_nl on_const on_op on_lbracket on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg stderr on_comma on_symbeg # sec
on_const on_op UNK on_ignored_nl on_const on_op on_lbracket on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg stderr on_comma on_symbeg read_with_stderr on_rbracket on_nl # sec
on_ignored_nl on_const on_op on_lbracket on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg stderr on_comma on_symbeg read_with_stderr on_rbracket on_nl on_const on_op on_lbracket # sec
on_ignored_nl UNK on_symbeg UNK on_ignored_nl def UNK on_nl on_op on_const on_period UNK on_lbracket on_symbeg UNK on_rbracket on_op false on_nl end # stop : mark callback thread as stopped # shutdown : close write IO to child processes (STDIN of child processes), send TERM (KILL for Windows) to all child processes # close : send KILL to all child processes # terminate: [-]
on_ignored_nl def UNK on_nl on_op on_const on_period UNK on_lbracket on_symbeg UNK on_rbracket on_op false on_nl end on_nl on_ignored_nl def UNK # for tests
on_op on_const on_period UNK on_lbracket on_symbeg UNK on_rbracket on_op false on_nl end on_nl on_ignored_nl def UNK on_nl on_op on_const on_period # checker for code in callback of child_process_execute
def UNK on_lparen on_ignored_nl title on_comma command on_comma on_ignored_nl on_label nil on_comma on_label nil on_comma on_label nil on_comma on_label false # on_exit_callback = ->(status){ ... } # status is an instance of Process::Status # On Windows, exitstatus=0 and termsig=nil even when child process was killed.
end on_nl on_ignored_nl def UNK on_nl UNK on_nl on_ivar on_op on_const on_nl on_ivar on_op on_const on_nl on_ivar on_op on_const on_period # nil if interval
on_ivar on_op on_const on_nl on_ivar on_op on_const on_nl on_ivar on_op on_const on_period UNK on_nl on_ivar on_op on_lbrace on_rbrace end on_nl # plugins MAY configure this parameter
end on_nl on_ignored_nl def UNK on_nl on_ivar on_period synchronize on_lbrace on_ivar on_period UNK on_rbrace on_period each do on_op pid on_op # pid => ProcessInfo
UNK on_op process_info on_period UNK on_op on_ivar on_nl now on_op on_const on_op on_const on_period now on_nl UNK if now on_op # for illegular case (e.g., created after shutdown)
end on_nl end on_nl on_ignored_nl on_const on_op on_const on_period UNK on_lparen on_ignored_nl on_symbeg title on_comma on_ignored_nl on_symbeg thread on_comma on_symbeg # ignore
on_ignored_nl UNK on_op on_lbracket on_rbracket on_nl mode on_period each do on_op m on_op on_ignored_nl UNK on_op UNK m on_nl UNK # wait_thread => Process::Waiter
m on_period UNK on_nl UNK on_ignored_nl on_ivar on_lbracket pid on_rbracket on_period UNK on_op true on_nl block on_period UNK on_lparen on_op # run after plugin thread get pid, thread instance and i/o
log on_period UNK on_tstring_beg on_tstring_content on_tstring_end on_comma on_label title on_comma on_label pid on_comma on_label command on_comma on_label arguments on_nl else # "closed stream" is of ruby 2.1
on_ivar on_lbracket pid on_rbracket on_period exit_status on_op wait_thread on_period UNK on_nl else on_ignored_nl log on_period UNK on_tstring_beg on_tstring_content on_tstring_end on_comma # Thread#join returns nil when limit expires # wait_thread successfully exits
end on_nl process_info on_op on_ivar on_period synchronize on_lbrace on_ivar on_period UNK on_lparen pid on_rparen on_rbrace on_nl on_ignored_nl UNK on_op process_info # with join
