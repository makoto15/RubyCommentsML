on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content # # Fluentd # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. #
on_ivar on_period mount_proc on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_lbrace on_op req on_comma res on_op on_ignored_nl on_gvar on_period debug on_tstring_beg on_tstring_content # built-in RPC for signals
UNK on_nl else on_ignored_nl on_const on_period kill on_symbeg on_const on_comma on_gvar on_nl end on_nl nil on_nl on_rbrace on_nl on_ivar on_period # restart worker with auto restarting by killing
conf on_op on_const on_op on_const on_period UNK on_lparen on_ignored_nl on_label config on_lbracket on_symbeg UNK on_rbracket on_comma on_ignored_nl on_label config on_lbracket # Validate that loading config is valid at first
UNK on_period UNK on_nl on_ignored_nl UNK on_nl UNK on_lparen on_symbeg on_const on_rparen on_nl on_ivar on_op conf on_period to_s on_nl rescue # Error is handled by myself
on_const on_period new do on_ignored_nl log on_period UNK on_nl end on_nl end on_nl end on_nl on_ignored_nl def UNK on_lparen UNK # Creating new thread due to mutex can't lock # in main thread during trap context
on_const on_period kill on_lparen UNK on_comma pid on_rparen on_nl end on_nl end on_nl end on_nl on_ignored_nl UNK on_const on_nl def # don't rescue Errno::ESRCH here (invalid status)
if on_const on_period UNK on_op on_const on_period UNK on_lparen UNK on_rparen on_op on_int UNK UNK on_op UNK on_nl UNK params # reuse previous config if last load time is within 5 seconds and mtime of the config file is not changed
UNK on_period init on_lparen on_symbeg UNK on_comma on_int on_rparen on_nl UNK on_period UNK on_lparen on_label params on_lbracket on_tstring_beg on_tstring_content on_tstring_end # this #init sets initialized logger to $log
UNK on_op params on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl UNK on_op on_op on_op params on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl # ServerEngine's "daemonize" option is boolean, and path of pid file is brought by "pid_path"
UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op nil on_nl params on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_lbracket on_symbeg UNK on_rbracket on_lbracket # prevent pre_conf from being too big by reloading many times.
UNK on_lbracket on_symbeg log_level on_rbracket on_op on_ivar on_op on_int on_nl logger on_op on_const on_op on_const on_period new on_lparen on_ivar on_comma # subtract 1 to match serverengine daemon logger side logging severity.
end on_nl on_ignored_nl on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg on_ivar on_period process_name on_embexpr_end on_tstring_end on_rparen if on_ivar on_nl on_ignored_nl # ignore LoadError and others (related with signals): it may raise these errors in Windows
on_gvar on_period info on_tstring_beg on_tstring_content on_embexpr_beg on_const on_op on_const on_embexpr_end on_tstring_content on_tstring_end on_comma on_label on_const on_period pid on_comma on_label on_const # This is the only log messsage for @standalone_worker
on_const on_op on_const on_period UNK on_period UNK on_lbrace on_op UNK on_op UNK on_period name on_op UNK on_tstring_content UNK on_rbrace on_period # plugins / configuration dumps
on_gvar on_period info on_tstring_beg on_tstring_content on_embexpr_beg name on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_end on_nl UNK on_int on_nl end on_nl on_ignored_nl # input:tail
on_ignored_nl trap on_symbeg on_const do on_ignored_nl on_gvar on_period debug on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl if on_ivar on_nl on_ivar on_op true # Fluentd worker process (worker of ServerEngine) don't use code in serverengine to set signal handlers, # because it does almost nothing. # This method is the only method to set signal handlers in Fluentd worker process.
trap on_symbeg on_const do on_ignored_nl on_gvar on_period debug on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl if on_ivar on_nl on_ivar on_op true on_nl # When user use Ctrl + C not SIGINT, SIGINT is sent to all process in same process group. # ServerEngine server process will send SIGTERM to child(spawned) processes by that SIGINT, so # worker process SHOULD NOT do anything with SIGINT, SHOULD just ignore.
if on_ivar on_nl on_ivar on_op true on_nl on_gvar on_period debug on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_op on_const on_period UNK on_nl # When Fluentd is launched without supervisor, worker should handle ctrl-c by itself
on_const on_period new do on_ignored_nl begin on_ignored_nl on_gvar on_period debug on_tstring_beg on_tstring_content on_tstring_end on_nl on_gvar on_period info on_tstring_beg on_tstring_content on_tstring_end # Creating new thread due to mutex can't lock # in main thread during trap context
on_gvar on_period error on_lparen on_tstring_beg on_tstring_content on_embexpr_beg e on_embexpr_end on_tstring_end on_rparen on_nl UNK on_nl end on_nl on_ignored_nl on_ivar on_op conf # it is guranteed that config file is valid by supervisor side. but it's not atomic becuase of using signals to commnicate between worker and super # So need this rescue code
UNK do on_op log on_op on_ignored_nl if e on_period UNK on_lparen on_symbeg path on_rparen on_nl log on_period error e on_period # LoadError, NotImplementedError, SyntaxError
UNK on_nl end on_nl on_ignored_nl opt on_lbracket param on_rbracket on_op on_ivar on_lbracket param on_rbracket on_nl end on_nl end on_nl UNK # info level can't be specified via command line option. # log_level is info here, it is default value and <system>'s log_level should be applied if exists.
UNK on_comma e on_comma UNK on_op on_const on_period UNK on_lparen on_op fluentd_spawn_cmd on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl if UNK # Adding `-h` so that it can avoid ruby's command blocking # e.g. `ruby -Eascii-8bit:ascii-8bit` will block. but `ruby -Eascii-8bit:ascii-8bit -h` won't.
