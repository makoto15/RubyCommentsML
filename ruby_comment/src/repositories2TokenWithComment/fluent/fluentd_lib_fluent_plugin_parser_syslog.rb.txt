on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK # # Fluentd # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. #
on_const on_op on_regexp_beg on_tstring_content on_regexp_end on_nl on_const on_op on_regexp_beg on_tstring_content on_regexp_end on_nl on_const on_op UNK on_period UNK on_nl UNK on_tstring_content # TODO: Remove them since these regexps are no longer needed. but keep them for compatibility for now # From existence TextParser pattern
on_const on_op on_regexp_beg on_tstring_content on_regexp_end on_nl on_const on_op UNK on_period UNK on_nl UNK on_tstring_content UNK on_const on_op on_const on_period UNK # From in_syslog default pattern
def UNK on_nl on_lbrace on_tstring_beg on_tstring_content on_tstring_end on_op on_ivar on_comma on_tstring_beg on_tstring_content on_tstring_end on_op on_ivar on_rbrace on_nl end on_nl on_ignored_nl # this method is for tests
end on_nl on_ignored_nl def UNK on_lparen text on_comma on_op block on_rparen on_ignored_nl if on_const on_period UNK on_lparen text on_rparen on_nl # This is overwritten in configure
idx on_op UNK on_op on_int on_nl else on_ignored_nl yield on_lparen nil on_comma nil on_rparen on_nl return on_nl end on_nl end # trim `<` and ``>
def UNK on_lparen time on_comma text on_comma idx on_comma record on_comma UNK on_comma on_op block on_rparen on_ignored_nl m on_op on_ivar # @param time [EventTime] # @param idx [Integer] note: this argument is needed to avoid string creation # @param record [Hash] # @param capture_list [Array] for performance
UNK on_op on_int UNK on_op text on_lbracket cursor on_op UNK on_rbracket on_nl if UNK on_op on_const on_nl time_str on_op text # header part
UNK on_op text on_lbracket cursor on_op UNK on_rbracket on_nl if UNK on_op on_const on_nl time_str on_op text on_period slice on_lparen # skip Mmm dd hh:mm:ss
UNK UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_nl i on_op text on_period index on_lparen on_const on_comma UNK on_rparen on_nl # time + ' '
i on_op text on_period index on_lparen on_const on_comma UNK on_rparen on_nl time_str on_op text on_period slice on_lparen cursor on_comma i # support subsecond time
UNK on_op if i on_period UNK text on_period slice on_lparen cursor on_comma text on_period UNK on_rparen on_nl else on_ignored_nl if # message part
text on_period slice on_lparen cursor on_comma text on_period UNK on_rparen on_nl else on_ignored_nl if text on_lbracket i on_op on_int on_rbracket # for 'only non-space content case'
else on_ignored_nl record on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op text on_period slice on_lparen cursor on_comma i on_op cursor on_op on_int # remove '[' / ']:'
else on_ignored_nl record on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op text on_period slice on_lparen cursor on_comma i on_op cursor on_rparen on_nl # remove '[' / ']'
