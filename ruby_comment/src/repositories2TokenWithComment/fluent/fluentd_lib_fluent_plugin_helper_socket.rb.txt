on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl if on_const on_period UNK # # Fluentd # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. #
on_ignored_nl UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl UNK on_symbeg UNK on_ignored_nl on_ignored_nl def UNK on_lparen UNK on_comma host # stop : [-] # shutdown : [-] # close : [-] # terminate: [-]
on_ignored_nl on_ignored_nl def UNK on_lparen UNK on_comma host on_comma port on_comma on_op kwargs on_comma on_op block on_rparen on_ignored_nl UNK UNK # for tests
on_ignored_nl def UNK on_lparen UNK on_comma host on_comma port on_comma on_op kwargs on_comma on_op block on_rparen on_ignored_nl UNK UNK on_nl # TODO: implement connection pool for specified host
on_const on_op on_const on_period UNK on_lparen UNK on_period UNK on_rparen on_nl else on_ignored_nl on_const on_op on_const on_period new on_lparen host # avoid GC triggered close
on_ignored_nl UNK on_const on_nl UNK on_const on_op on_op on_const on_nl def UNK on_semicolon peeraddr on_lbracket on_int on_rbracket on_semicolon end on_nl # socket_create_socks ?
end on_nl on_ignored_nl end on_nl end on_nl end on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # @_sockets = [] # for keepalived sockets / connection pool
end on_nl end on_nl end on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # def close # @_sockets.each do |sock| # sock.close # end # super # end
