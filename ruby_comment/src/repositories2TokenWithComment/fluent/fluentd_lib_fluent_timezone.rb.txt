on_ignored_nl UNK UNK on_tstring_content UNK on_nl on_ignored_nl UNK UNK on_tstring_content UNK on_nl on_ignored_nl UNK on_const on_nl UNK on_const UNK on_ignored_nl # # Fluentd # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. #
UNK on_const on_nl UNK on_const UNK on_ignored_nl UNK to_time on_nl on_const on_period UNK on_lparen UNK on_rparen on_nl end on_nl end # For v0.12. Will be removed after v2
on_const on_op UNK on_tstring_content UNK on_nl on_ignored_nl on_const on_op UNK on_tstring_content UNK on_nl on_ignored_nl UNK UNK on_period UNK on_lparen timezone # [+-]HH:MM, [+-]HHMM, [+-]HH
on_const on_op UNK on_tstring_content UNK on_nl on_ignored_nl UNK UNK on_period UNK on_lparen timezone on_rparen on_ignored_nl if timezone on_period UNK on_nl # Region/Zone, Region/Zone/Zone
UNK UNK on_period UNK on_lparen timezone on_rparen on_ignored_nl if timezone on_period UNK on_nl return UNK on_nl end on_nl on_ignored_nl if # Validate the format of the specified timezone. # # Valid formats are as follows. Note that timezone abbreviations # such as PST and JST are not supported intentionally. # # 1. [+-]HH:MM (e.g. "+09:00") # 2. [+-]HHMM (e.g. "+0900") # 3. [+-]HH (e.g. "+09") # 4. Region/Zone (e.g. "Asia/Tokyo") # 5. Region/Zone/Zone (e.g. "America/Argentina/Buenos_Aires") # # In the 4th and 5th cases, it is checked whether the specified # timezone exists in the timezone database. # # When the given timezone is valid, true is returned. Otherwise, # false is returned. When nil is given, false is returned.
if timezone on_period UNK on_nl return UNK on_nl end on_nl on_ignored_nl if on_const on_op timezone on_nl return UNK on_nl end # If the specified timezone is nil.
return UNK on_nl end on_nl on_ignored_nl if on_const on_op timezone on_nl return UNK on_nl end on_nl on_ignored_nl if on_const on_op # Invalid.
if on_const on_op timezone on_nl return UNK on_nl end on_nl on_ignored_nl if on_const on_op timezone on_nl UNK on_ignored_nl on_const on_op # [+-]HH:MM, [+-]HHMM, [+-]HH
return UNK on_nl end on_nl on_ignored_nl if on_const on_op timezone on_nl UNK on_ignored_nl on_const on_op on_const on_period UNK on_lparen timezone # Valid. It can be parsed by Time.zone_offset method.
if on_const on_op timezone on_nl UNK on_ignored_nl on_const on_op on_const on_period UNK on_lparen timezone on_rparen on_nl UNK on_nl return UNK # Region/Zone, Region/Zone/Zone
on_const on_op on_const on_period UNK on_lparen timezone on_rparen on_nl UNK on_nl return UNK on_nl UNK on_ignored_nl return UNK on_nl end # Get a Timezone instance for the specified timezone.
return UNK on_nl UNK on_ignored_nl return UNK on_nl end on_nl UNK on_ignored_nl return UNK on_nl end on_nl end on_nl on_ignored_nl # Invalid. The string does not exist in the timezone database.
return UNK on_nl end on_nl UNK on_ignored_nl return UNK on_nl end on_nl end on_nl on_ignored_nl UNK UNK on_period UNK on_lparen # Valid. The string was found in the timezone database.
return UNK on_nl end on_nl end on_nl on_ignored_nl UNK UNK on_period UNK on_lparen timezone on_rparen on_ignored_nl UNK UNK on_lparen timezone # Invalid. Timezone abbreviations are not supported.
UNK UNK on_period UNK on_lparen timezone on_rparen on_ignored_nl UNK UNK on_lparen timezone on_rparen on_nl UNK on_const UNK UNK on_tstring_content UNK # Validate the format of the specified timezone. # # The implementation of this method calls validate(timezone) method # to check whether the given timezone is valid. When invalid, this # method raises a ConfigError.
UNK UNK on_period UNK on_lparen timezone on_op UNK UNK format on_op UNK on_rparen on_ignored_nl if timezone on_period UNK on_nl return # Create a formatter for a timezone and optionally a format. # # An Proc object is returned. If the given timezone is invalid, # nil is returned.
if on_const on_op timezone on_nl UNK on_op on_const on_period UNK on_lparen timezone on_rparen on_nl on_ignored_nl UNK on_ignored_nl when format on_period # [+-]HH:MM, [+-]HHMM, [+-]HH
if on_const on_op timezone on_nl UNK on_ignored_nl tz on_op on_const on_op on_const on_period UNK on_lparen timezone on_rparen on_nl UNK on_nl # Region/Zone, Region/Zone/Zone
