on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl require on_tstring_beg on_tstring_content # # Fluentd # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. #
UNK on_period UNK on_period UNK on_lbrace on_op UNK on_op UNK on_period UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_rbrace on_period each do # <record></record> directive
UNK on_lbracket k on_rbracket on_op UNK on_lparen v on_rparen on_nl end on_nl end on_nl on_ignored_nl if on_ivar on_nl UNK on_const # to suppress unread configuration warning
require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_period UNK on_lparen UNK # require utilities which would be used in ruby placeholders
end on_nl on_ignored_nl def UNK on_lparen record on_comma placeholder_values on_rparen on_ignored_nl placeholders on_op on_ivar on_period UNK on_lparen placeholder_values on_rparen on_nl # emit as string
UNK on_const on_nl UNK on_symbeg placeholders on_comma on_symbeg log on_nl on_ignored_nl def UNK on_lparen params on_rparen on_ignored_nl on_ivar on_op params # THIS CLASS MUST BE THREAD-SAFE
size on_op value on_period size on_nl value on_period UNK do on_op v on_comma UNK on_op on_ignored_nl placeholders on_period UNK on_lparen # tag_parts, etc
end on_nl UNK value on_period UNK on_lparen on_const on_rparen value on_period each do on_op k on_comma v on_op on_ignored_nl placeholders # support [-1]
value on_period each do on_op k on_comma v on_op on_ignored_nl placeholders on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content # record, etc
end on_nl UNK placeholders on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_tstring_end on_comma value on_rparen on_nl end on_nl # record["foo"]
placeholders on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_tstring_end on_comma value on_rparen on_nl end on_nl end on_nl on_ignored_nl # string, interger, float, and others?
def expand on_lparen str on_comma placeholders on_comma force_stringify on_op false on_rparen on_ignored_nl if on_ivar on_op on_op force_stringify on_nl UNK on_op # Expand string with placeholders # # @param [String] str # @param [Boolean] force_stringify the value must be string, used for hash key
UNK on_const on_nl UNK on_symbeg log on_nl on_ignored_nl def UNK on_lparen params on_rparen on_ignored_nl on_ivar on_op params on_lbracket on_symbeg log # THIS CLASS MUST BE THREAD-SAFE
def preprocess_map on_lparen value on_comma force_stringify on_op false on_rparen on_ignored_nl new_value on_op UNK on_nl if value on_period is_a? on_lparen on_const # Preprocess record map to convert into ruby string expansion # # @param [Hash|String|Array] value record map config # @param [Boolean] force_stringify the value must be string, used for hash key
end on_nl end on_nl UNK new_value on_nl new_value on_op on_tstring_beg on_tstring_content on_embexpr_beg value on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma # ${..} => ..
end on_nl UNK value on_period is_a? on_lparen on_const on_rparen on_nl new_value on_op on_lbrace on_rbrace on_nl value on_period UNK do on_op # xx${..}xx => %Q[xx#{..}xx]
def expand on_lparen str on_comma placeholders on_comma force_stringify on_op false on_rparen on_ignored_nl on_ivar on_period expand on_lparen on_ignored_nl str on_comma on_ignored_nl # Expand string with placeholders # # @param [String] str
