on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end # # Fluentd # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. #
UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl def UNK on_nl on_ivar on_op UNK on_nl on_ivar on_op false on_nl on_ivar # For compat. remove it in fluentd v2
on_const on_op on_const on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_ignored_nl on_gvar on_period info on_tstring_beg on_tstring_content on_tstring_end # TODO thread update
def UNK on_lparen conf on_comma on_label false on_rparen on_ignored_nl UNK on_op on_const on_period UNK on_lparen on_label UNK on_comma on_label on_ivar # @param conf [Fluent::Config] # @param supervisor [Bool] # @reutrn nil
UNK on_op on_const on_period UNK on_lparen on_label UNK on_comma on_label on_ivar on_rparen on_nl UNK on_op on_const on_op on_const on_period UNK # configure first to reduce down time while restarting
UNK on_comma on_ivar on_op on_ivar on_comma UNK on_nl UNK on_ignored_nl on_ivar on_period UNK on_lparen conf on_rparen on_nl UNK on_nl on_ivar # Assign @root_agent to new root_agent # for https://github.com/fluent/fluentd/blob/fcef949ce40472547fde295ddd2cfe297e1eddd6/lib/fluent/plugin_helper/event_emitter.rb#L50
if UNK on_nl UNK on_period UNK UNK on_nl end on_nl on_ignored_nl UNK on_lparen UNK on_rparen on_nl on_ignored_nl on_gvar on_period info # supervisor doesn't handle actual data. so the following code is unnecessary.
UNK on_nl end on_nl on_ignored_nl UNK on_lparen UNK on_rparen on_nl on_ignored_nl on_gvar on_period info on_tstring_beg on_tstring_content on_tstring_end on_comma on_label worker_id # to close thread created in #configure
on_ivar on_op on_lparen on_const UNK on_tstring_beg on_tstring_content on_tstring_end UNK on_op UNK on_rparen on_period UNK on_nl on_ivar on_nl end on_nl on_ignored_nl # if ENV doesn't have SERVERENGINE_WORKER_ID, it is a worker under --no-supervisor or in tests # so it's (almost) a single worker, worker_id=0
