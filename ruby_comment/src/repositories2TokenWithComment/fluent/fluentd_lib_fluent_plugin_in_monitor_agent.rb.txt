on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl require on_tstring_beg on_tstring_content # # Fluentd # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. #
if obj on_op on_ivar on_period UNK on_lparen UNK on_comma opts on_rparen on_nl list on_op on_lbracket obj on_rbracket on_nl else on_ignored_nl # ?tag= to search an output plugin by match pattern
if obj on_op on_ivar on_period UNK on_lparen plugin_id on_comma opts on_rparen on_nl list on_op on_lbracket obj on_rbracket on_nl else on_ignored_nl # ?@id= to search a plugin by 'id <plugin_id>' config param
list on_op on_ivar on_period UNK on_lparen UNK on_comma opts on_rparen on_nl else on_ignored_nl list on_op on_ivar on_period UNK on_lparen opts # ?@type= to search plugins by 'type <type>' config param
list on_op on_ivar on_period UNK on_lparen opts on_rparen on_nl end on_nl on_ignored_nl list on_nl end on_nl on_ignored_nl def UNK on_lparen # otherwise show all plugins
if req on_period UNK on_nl qs on_period UNK on_lparen on_const on_period UNK on_lparen req on_period UNK on_rparen on_rparen on_nl end # parse ?=query string
opts on_op on_lbrace on_label qs on_rbrace on_nl if qs on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_rbracket on_period first on_nl opts # if ?debug=1 is set, set :with_debug_info for get_monitor_info # and :pretty_json for render_json_error
on_const on_op on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op UNK on_lparen on_rparen UNK is_a? on_lparen on_op on_const on_op on_const on_op on_const # They are deprecated but remain for compatibility
array on_period UNK on_const on_op on_const on_period UNK on_period UNK on_nl on_ignored_nl array on_period UNK on_const on_op on_const on_period UNK # get all input plugins
array on_period UNK on_const on_op on_const on_period UNK on_period UNK on_nl on_ignored_nl array on_period UNK on_const on_op on_const on_period UNK # get all output plugins
array on_period UNK on_const on_op on_const on_period UNK on_period UNK on_nl on_ignored_nl on_const on_op on_const on_period UNK on_period UNK on_period # get all filter plugins
array on_period UNK UNK on_period UNK on_nl array on_period UNK UNK on_period UNK on_nl on_rbrace on_nl on_ignored_nl array on_nl end # TODO: Add label name to outputs / filters for identifing plugins
def UNK on_lparen UNK on_comma opts on_op on_lbrace on_rbrace on_rparen on_ignored_nl UNK on_op on_const on_op on_const on_period UNK on_period UNK # try to match the tag and get the info from the matched output plugin # TODO: Support output in label
def UNK on_lparen plugin_id on_comma opts on_op on_lbrace on_rbrace on_rparen on_ignored_nl UNK on_op UNK on_period UNK on_lbrace on_op pe on_op # search a plugin by plugin_id
def UNK on_lparen UNK on_comma opts on_op on_lbrace on_rbrace on_rparen on_ignored_nl array on_op UNK on_period UNK on_lbrace on_op pe on_op # This method returns an array because # multiple plugins could have the same type
def UNK on_lparen pe on_comma opts on_op on_lbrace on_rbrace on_rparen on_ignored_nl obj on_op on_lbrace on_rbrace on_nl on_ignored_nl obj on_lbracket on_tstring_beg # get monitor info from the plugin `pe` and return a hash object
obj on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op pe on_period plugin_id on_nl obj on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op UNK on_lparen # Common plugin information
on_const on_period UNK on_lbrace on_op key on_comma UNK on_op on_ignored_nl UNK on_ignored_nl UNK on_lparen on_symbeg UNK on_rparen UNK on_ignored_nl obj # run MONITOR_INFO in plugins' instance context and store the info to obj
if opts on_lbracket on_symbeg UNK on_rbracket on_nl iv on_op on_lbrace on_rbrace on_nl pe on_period UNK UNK on_ignored_nl UNK on_period each # include all instance variables if :with_debug_info is set
iv on_lbracket key on_rbracket on_op UNK on_lparen UNK on_rparen on_nl on_rbrace on_nl end on_nl obj on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket # removes first '@'
