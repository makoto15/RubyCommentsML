on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl require on_tstring_beg on_tstring_content # # Fluentd # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. #
require on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_op on_const on_nl UNK on_const on_op on_const on_nl on_const on_op on_const on_period # TODO remove ...
on_ignored_nl UNK on_const on_nl def metadata on_lparen on_label nil on_comma on_label nil on_comma on_label nil on_rparen on_ignored_nl metadata on_op UNK # for tests
if chunk on_period metadata on_op on_ivar on_nl UNK on_op on_ivar on_period UNK on_lparen on_ivar on_comma chunk on_rparen on_nl on_const on_period # "symlink" feature is to link from symlink_path to the latest file chunk. Records with latest # timekey will be appended into that file chunk. On the other side, resumed file chunks might NOT # have timekey, especially in the cases that resumed file chunks are generated by Fluentd v0.12. # These chunks will be enqueued immediately, and will be flushed soon.
if on_op UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_op on_lparen conf on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op # Fluent::PluginId#configure is not called yet, so we can't use #plugin_root_dir here.
UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op conf on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl # v0.14 file buffer handles path as directory if '*' is missing # 'dummy_path' is not to raise configuration error for 'path' in file buffer plugin, # but raise it in this plugin.
UNK on_lparen on_symbeg path on_comma on_ivar on_rparen on_period UNK UNK on_op UNK on_op UNK on_period UNK on_op on_symbeg UNK UNK # When this plugin is configured as secondary & primary plugin has tag key, but this plugin may not have it. # Increment placeholder can make another output file per chunk tag/keys even if original path doesn't include it.
when on_int on_op on_int then on_tstring_beg on_tstring_content on_tstring_end on_nl when on_int on_op on_int then on_tstring_beg on_tstring_content on_tstring_end on_nl else on_tstring_beg # 60 exclusive
def UNK on_lparen original on_comma timekey on_comma UNK on_comma compress on_comma on_label on_tstring_beg on_tstring_end on_comma on_label nil on_rparen on_ignored_nl comp_suffix # /path/to/dir/file.* -> /path/to/dir/file.%Y%m%d # /path/to/dir/file.*.data -> /path/to/dir/file.%Y%m%d.data # /path/to/dir/file -> /path/to/dir/file.%Y%m%d.log # %Y%m%d -> %Y%m%d_** (non append) # + .gz (gzipped) ## TODO: remove time_slice_format when end of support of compat_parameters
raise on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_end UNK UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_op on_int # for non-append
UNK if on_const on_period UNK on_lparen path on_rparen on_nl end on_nl on_ignored_nl UNK on_nl end on_nl UNK path on_nl UNK # ensure that other worker doesn't create a file (and release lock) # between previous File.exist? and Dir.mkdir
