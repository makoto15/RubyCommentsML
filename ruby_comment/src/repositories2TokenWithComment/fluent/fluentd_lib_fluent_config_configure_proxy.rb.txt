on_ignored_nl UNK on_const on_nl UNK on_const on_nl class on_const on_nl UNK on_symbeg name on_comma on_symbeg final on_comma on_symbeg param_name on_comma # # Fluentd # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. #
on_ignored_nl def UNK on_lparen name on_comma on_label UNK on_comma on_label nil on_comma on_label nil on_comma on_label nil on_comma on_label nil # config_param :desc, :string, default: '....' # config_set_default :buffer_type, :memory # # config_section :default, required: true, multi: false do # config_argument :arg, :string # config_param :required, :bool, default: false # config_param :name, :string # config_param :power, :integer # end # # config_section :child, param_name: 'children', required: false, multi: true, alias: 'node' do # config_param :name, :string # config_param :power, :integer, default: nil # config_section :item do # config_param :name # end # end
on_ivar on_op UNK on_nl on_ignored_nl on_ivar on_op param_name on_op param_name on_period to_sym on_nl on_ivar on_op init on_nl on_ivar on_op required # For ConfigureProxy of root section, "@name" should be a class name of plugins. # Otherwise (like subsections), "@name" should be a name of section, like "buffer", "store". # For subsections, name will be used as parameter names (unless param_name exists), so overriding proxy's name # should override "@name".
on_ivar on_op nil on_nl on_ignored_nl on_ivar on_op nil on_ivar on_op on_lbrace on_rbrace on_nl on_ivar on_op on_lbrace on_rbrace on_nl on_ivar on_op # specify section name for viewpoint of owner(parent) plugin # for buffer plugins: all params are in <buffer> section of owner # others: <storage>, <format> (formatter/parser), ...
on_ivar on_op on_lbrace on_rbrace on_nl on_ivar on_op on_lbrace on_rbrace on_nl on_ivar on_op on_lbrace on_rbrace on_nl on_ivar on_op on_lbrace on_rbrace on_nl # nil: ignore argument
UNK UNK on_lparen other on_rparen if self on_period UNK on_nl on_ignored_nl on_lbracket on_symbeg param_name on_comma on_symbeg required on_comma on_symbeg multi # self is base class, other is subclass
options on_lbracket on_symbeg param_name on_rbracket on_op on_ivar on_nl on_ignored_nl options on_lbracket on_symbeg init on_rbracket on_op on_ivar on_period nil? on_op other # param_name affects instance variable name, which is just "internal" of each plugins. # so it must not be changed. base class's name (or param_name) is always used.
options on_lbracket on_symbeg init on_rbracket on_op on_ivar on_period nil? on_op other on_period init on_op self on_period init on_nl options on_lbracket # subclass cannot overwrite base class's definition
merged on_period configured_in_section on_op self on_period configured_in_section on_op other on_period configured_in_section on_nl on_ignored_nl merged on_period argument on_op other on_period argument # configured_in MUST be kept
on_ignored_nl if other on_period final on_op UNK on_op UNK on_lparen other on_comma on_symbeg final on_rparen on_nl raise on_const on_comma on_tstring_beg # list what subclass can do for finalized section # * append params/defaults/sections which are missing in superclass # * change default values of superclass # * overwrite init to make it enable to instantiate section objects with added default values
self on_period defaults on_op self on_period defaults on_period merge on_lparen other on_period defaults on_rparen on_nl self on_period sections on_period UNK # other is owner plugin's corresponding proxy
else on_ignored_nl raise on_tstring_beg on_tstring_content on_embexpr_beg type on_embexpr_end on_tstring_content on_embexpr_beg key on_embexpr_end on_tstring_end on_nl end on_nl end on_nl end on_nl # ignore
when on_symbeg UNK on_nl raise on_const on_comma on_tstring_beg on_tstring_content on_embexpr_beg type on_embexpr_end on_tstring_content on_embexpr_beg name on_embexpr_end on_tstring_end if type on_op # valid for all types
raise on_const on_comma on_tstring_beg on_embexpr_beg name on_embexpr_end on_tstring_content on_embexpr_beg type on_embexpr_end on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl option_value_type! on_lparen name # override error message
option_value_type! on_lparen name on_comma opts on_comma on_symbeg desc on_comma on_const on_rparen on_nl option_value_type! on_lparen name on_comma opts on_comma on_symbeg alias # options for config_param
option_value_type! on_lparen name on_comma opts on_comma on_symbeg UNK on_comma on_label on_symbeg UNK on_rparen on_nl on_ignored_nl if opts on_period has_key? on_lparen # hash, array
on_ivar on_period each do on_op name on_comma value on_op on_ignored_nl if on_ivar on_period key? on_lparen name on_rparen on_op on_lparen on_ivar # Overwrite by config_set_default
on_ivar on_period each do on_op name on_comma value on_op on_ignored_nl if on_ivar on_period key? on_lparen name on_rparen on_nl dumped_config on_lbracket # Overwrite by config_set_desc
