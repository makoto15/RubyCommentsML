on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end # # Fluentd # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. #
on_ignored_nl desc on_tstring_beg on_tstring_content on_tstring_end on_nl config_param on_symbeg UNK on_comma on_symbeg time on_comma on_label on_int on_nl desc on_tstring_beg on_tstring_content on_tstring_end # TODO: TLS session cache/tickets
on_ignored_nl desc on_tstring_beg on_tstring_content on_tstring_end on_nl config_param on_symbeg UNK on_comma on_symbeg UNK on_comma on_label on_lbracket on_symbeg UNK on_comma on_symbeg UNK # TODO: add linger_timeout, recv_timeout
on_ignored_nl desc on_tstring_beg on_tstring_content on_tstring_end on_nl config_param on_symbeg UNK on_comma on_symbeg time on_comma on_label on_int on_nl on_ignored_nl desc on_tstring_beg on_tstring_content # require in_forward to respond with ack
desc on_tstring_beg on_tstring_content on_tstring_end on_nl config_param on_symbeg UNK on_comma on_symbeg time on_comma on_label on_int on_nl on_ignored_nl desc on_tstring_beg on_tstring_content on_tstring_end ## The reason of default value of :ack_response_timeout: # Linux default tcp_syn_retries is 5 (in many environment) # 3 + 6 + 12 + 24 + 48 + 96 -> 189 (sec)
desc on_tstring_beg on_tstring_content on_tstring_end on_nl config_param on_symbeg UNK on_comma on_symbeg UNK on_comma on_label on_int on_ignored_nl desc on_tstring_beg on_tstring_content on_tstring_end on_nl # 50ms
on_ignored_nl desc on_tstring_beg on_tstring_content on_tstring_end on_nl config_param on_symbeg UNK on_comma on_symbeg time on_comma on_label nil desc on_tstring_beg on_tstring_content on_tstring_end on_nl # 512bytes
desc on_tstring_beg on_tstring_content on_tstring_end on_nl config_param on_symbeg UNK on_comma on_symbeg bool on_comma on_label false on_ignored_nl desc on_tstring_beg on_tstring_content on_tstring_end on_nl # 0 means disable cache
on_ignored_nl desc on_tstring_beg on_tstring_content on_tstring_end on_nl config_param on_symbeg UNK on_comma on_symbeg bool on_comma on_label false on_nl on_ignored_nl desc on_tstring_beg on_tstring_content # heartbeat_type 'udp' is not available for this
on_ivar on_op nil on_nl on_ivar on_op nil on_nl on_ignored_nl on_ivar on_op nil on_nl on_ivar on_op on_int end on_nl on_ignored_nl def #=> [Node]
end on_nl on_ignored_nl def UNK on_lparen conf on_rparen on_ignored_nl UNK on_lparen conf on_comma on_symbeg UNK on_comma on_label on_tstring_beg on_tstring_content on_tstring_end # TODO
if on_ivar on_op on_op on_ivar on_period empty? on_nl on_ivar on_op on_ivar on_nl end on_nl if on_ivar on_op on_op on_ivar on_period # socket helper adds CA cert or signed certificate to same cert store internally so unify it in this place.
conf on_period UNK on_lparen on_label on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period each do on_op UNK on_op on_ignored_nl UNK on_period name on_op # rewrite for using server as sd_static
UNK on_op on_const on_op on_const on_op on_const on_period new on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_lbrace on_rbrace on_comma on_lbrace on_rbrace on_comma # To copy `services` element only
on_ivar on_op server on_nl unless on_ivar on_op on_symbeg UNK on_nl UNK on_ignored_nl server on_period UNK on_nl rescue on_op e on_nl # it's only for test
if on_ivar on_op on_ivar on_nl log on_period UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ivar on_op on_ivar on_op on_int end on_nl on_ignored_nl # Output#start sets @delayed_commit_timeout by @buffer_config.delayed_commit_timeout # But it should be overwritten by ack_response_timeout to rollback chunks after timeout
end on_nl on_ignored_nl UNK on_lparen on_symbeg UNK on_comma on_op method on_lparen on_symbeg UNK on_rparen on_rparen on_nl end on_nl on_ignored_nl if # minimum ack_reader IO.select interval is 1s
on_ivar on_period UNK rescue nil on_nl end on_nl on_ignored_nl super on_nl end on_nl on_ignored_nl def UNK on_nl super on_nl on_ignored_nl # close socket and ignore errors: this socket will not be used anyway.
on_label on_const on_period UNK on_op nil on_op on_ivar on_comma on_ignored_nl on_label on_ivar on_comma on_ignored_nl on_label on_ivar on_comma on_ignored_nl on_label on_ivar # Enabling SO_LINGER causes tcp port exhaustion on Windows. # This is because dynamic ports are only 16384 (from 49152 to 65535) and # expiring SO_LINGER enabled ports should wait 4 minutes # where set by TcpTimeDelay. Its default value is 4 minutes. # So, we should disable SO_LINGER on Windows to prevent flood of waiting ports.
on_const on_op on_lbracket on_int on_rbracket on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_nl def UNK on_nl on_const on_nl # MessagePack FixArray length is 3
if node on_period UNK on_nl discovery_manager on_period UNK on_nl end on_nl else on_ignored_nl log on_period warn on_lparen on_tstring_beg on_tstring_content on_embexpr_beg # log.trace "heartbeat arrived", name: node.name, host: node.host, port: node.port
def UNK on_lparen sender on_comma server on_comma on_label on_comma on_label on_comma on_label on_rparen on_ignored_nl on_ivar on_op sender on_nl on_ivar on_op # @param connection_manager [Fluent::Plugin::ForwardOutput::ConnectionManager] # @param ack_handler [Fluent::Plugin::ForwardOutput::AckHandler]
UNK on_op on_op on_lparen on_const on_period new on_lparen on_ivar on_rparen rescue false on_rparen on_nl on_ivar on_op UNK on_ignored_nl when UNK # @hostname is used for certificate verification & TLS SNI
UNK on_symbeg UNK on_ignored_nl def UNK on_nl UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_nl end on_nl on_ignored_nl # used by on_udp_heatbeat_response_recv
on_ignored_nl def UNK on_nl UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_nl end on_nl on_ignored_nl def disable! on_nl # for test
UNK on_op sock on_period UNK on_lparen on_ivar on_period UNK on_rparen on_nl if UNK on_period empty? on_nl UNK on_ivar on_period UNK # TODO: On Ruby 2.2 or earlier, read_nonblock doesn't work expectedly. # We need rewrite around here using new socket/server plugin helper.
UNK on_ivar on_period UNK unless ri on_period UNK on_op on_symbeg UNK on_nl rescue on_const on_op e on_nl on_ivar on_period warn # If the exception is Errno::EWOULDBLOCK or Errno::EAGAIN, it is extended by IO::WaitReadable. # So IO::WaitReadable can be used to rescue the exceptions for retrying read_nonblock. # https//docs.ruby-lang.org/en/2.3.0/IO.html#method-i-read_nonblock
on_ignored_nl tag on_op tag on_period UNK on_period UNK on_lparen on_const on_op on_const on_rparen on_nl on_ignored_nl sock on_period UNK on_ivar on_period # https://github.com/fluent/fluentd/wiki/Forward-Protocol-Specification-v1#packedforward-mode # out_forward always uses str32 type for entries. # str16 can store only 64kbytes, and it should be much smaller than buffer chunk size.
sock on_period UNK tag on_period UNK chunk on_period UNK on_lparen on_label on_ivar on_rparen do on_op UNK on_op on_ignored_nl UNK on_op # array, size=3
chunk on_period UNK on_lparen on_label on_ivar on_rparen do on_op UNK on_op on_ignored_nl UNK on_op on_lbracket on_int on_comma UNK on_period UNK # 1. tag: String (str)
on_const on_period UNK on_lparen UNK on_comma sock on_rparen end on_nl sock on_period UNK UNK on_period UNK on_ignored_nl end on_nl on_ignored_nl # 2. entries: String (str32)
end on_nl sock on_period UNK UNK on_period UNK on_ignored_nl end on_nl on_ignored_nl def UNK on_lparen tag on_comma chunk on_rparen on_ignored_nl # writeRawBody(packed_es)
on_ignored_nl end on_nl on_ignored_nl def UNK on_lparen tag on_comma chunk on_rparen on_ignored_nl UNK on_op on_ivar on_op on_ivar on_period UNK on_lparen # 3. option: Hash(map)
end on_nl on_ignored_nl def UNK on_lparen tag on_comma chunk on_rparen on_ignored_nl UNK on_op on_ivar on_op on_ivar on_period UNK on_lparen chunk # TODO: use bin32 for non-utf8 content(entries) when old msgpack-ruby (0.5.x or earlier) not supported
def UNK on_nl UNK on_ignored_nl UNK on_op UNK on_nl on_ivar on_op true on_nl rescue on_op on_const on_op e on_nl if # FORWARD_TCP_HEARTBEAT_DATA = FORWARD_HEADER + ''.to_msgpack + [].to_msgpack # # @return [Boolean] return true if it needs to rebuild nodes
on_ignored_nl UNK on_lparen true on_rparen on_nl end on_nl when on_symbeg UNK on_nl on_ivar on_period UNK on_tstring_beg on_tstring_content on_tstring_end on_comma on_int ## don't send any data to not cause a compatibility problem # sock.write FORWARD_TCP_HEARTBEAT_DATA
UNK on_lparen true on_rparen on_nl end on_nl when on_symbeg UNK on_nl on_ivar on_period UNK on_tstring_beg on_tstring_content on_tstring_end on_comma on_int on_comma # successful tcp connection establishment is considered as valid heartbeat. # When heartbeat is succeeded after detached, return true. It rebuilds weight array.
false on_nl when on_symbeg UNK raise on_tstring_beg on_tstring_content on_tstring_end on_nl else on_ignored_nl raise on_tstring_beg on_tstring_content on_embexpr_beg on_ivar on_period UNK on_embexpr_end # response is going to receive at on_udp_heatbeat_response_recv
raise on_tstring_beg on_tstring_content on_tstring_end on_nl else on_ignored_nl raise on_tstring_beg on_tstring_content on_embexpr_beg on_ivar on_period UNK on_embexpr_end on_tstring_content on_tstring_end on_nl end on_nl # :none doesn't use this class
UNK on_nl on_ignored_nl when nil on_nl on_ivar on_op UNK on_nl on_ignored_nl else on_ignored_nl now on_op on_const on_op on_const on_period now # cache is disabled
on_ivar on_op UNK on_nl on_ignored_nl else on_ignored_nl now on_op on_const on_op on_const on_period now on_nl UNK on_op on_ivar on_nl if # persistent cache
UNK on_lbracket on_int on_rbracket on_nl end on_nl UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_nl now on_op on_const on_period now # used by on_udp_heatbeat_response_recv
on_ivar on_period UNK on_nl return true on_nl end on_nl on_ignored_nl if on_ivar on_period UNK on_nl UNK on_op on_ivar on_period UNK # expire cached host
on_ivar on_period UNK on_nl return true on_nl end on_nl end on_nl false on_nl end on_nl on_ignored_nl def UNK on_lparen UNK # expire cached host
UNK on_const on_op on_const on_nl def UNK on_nl true on_nl end on_nl on_ignored_nl def UNK on_nl false on_nl end on_nl # Override Node to disable heartbeat
