on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl def UNK UNK end on_nl on_ignored_nl def # # Fluentd # # Licensed under the Apache License, Version 2.0 (the "License"); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an "AS IS" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. #
UNK on_const on_nl def UNK UNK end on_nl on_ignored_nl def UNK UNK end on_nl on_ignored_nl def UNK UNK end on_nl # DO NOT write any logic here
UNK on_const on_op on_const on_nl def UNK on_period UNK on_lparen UNK on_rparen on_ignored_nl log_event_router on_op UNK on_nl on_ignored_nl UNK on_ignored_nl # This class is for handling fluentd's inner log # e.g. <label @FLUNT_LOG> section and <match fluent.**> section
def UNK on_period UNK on_lparen UNK on_rparen on_ignored_nl log_event_router on_op UNK on_nl on_ignored_nl UNK on_ignored_nl UNK on_op UNK on_period UNK # @param root_agent [Fluent::RootAgent]
log_event_router on_period UNK on_nl on_ignored_nl log_event_router on_op log_event_router on_nl on_ignored_nl unmatched_tags on_op on_const on_op on_const on_period event_tags on_period UNK UNK # suppress mismatched tags only for <label @FLUENT_LOG> label. # it's not suppressed in default event router for non-log-event events
UNK on_op UNK on_period UNK on_nl event_tags on_op on_const on_op on_const on_period event_tags on_nl UNK event_tags on_period UNK UNK on_op # ArgumentError "#{label_name} label not found" # use default event router if <label @FLUENT_LOG> is missing in configuration
def UNK on_lparen UNK on_rparen on_ignored_nl on_ivar on_op UNK on_nl on_ivar on_op UNK on_nl on_ivar on_op UNK on_nl on_ivar on_op # @param event_router [Fluent::EventRouter]
on_gvar on_period UNK on_tstring_beg on_tstring_content on_tstring_end on_comma UNK UNK on_comma UNK UNK on_comma UNK UNK on_nl end on_nl end on_nl # This $log.error doesn't emit log events, because of `$log.disable_events(Thread.current)` above
on_ivar on_op on_ivar on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_period UNK on_lparen on_const on_rparen on_nl on_ivar # there is no problem calling Thread#join multiple times.
on_ivar on_period UNK on_lparen on_const on_rparen on_nl on_ivar on_op on_ivar on_period UNK on_nl end on_nl on_ignored_nl def UNK on_lparen UNK # to make sure to emit all log events into router, before shutting down
