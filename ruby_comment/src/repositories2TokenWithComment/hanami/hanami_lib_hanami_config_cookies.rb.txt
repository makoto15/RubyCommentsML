UNK UNK on_nl UNK UNK on_nl UNK UNK UNK UNK on_nl UNK UNK UNK UNK UNK UNK UNK on_op UNK # @api private
UNK UNK on_nl UNK UNK UNK UNK on_nl UNK UNK UNK UNK UNK UNK UNK on_op UNK UNK UNK UNK # Cookies configuration # # @since 0.3.0 # @api private
UNK UNK UNK on_nl UNK UNK UNK UNK UNK UNK UNK on_op UNK UNK UNK UNK on_ivar on_op UNK on_nl # Return the routes for this application # # @return [Hash] options for cookies # # @since 0.3.0 # @api private
UNK UNK UNK UNK UNK UNK on_op UNK UNK UNK UNK on_ivar on_op UNK on_nl on_ivar on_op UNK UNK UNK # Cookies configuration # # httponly option enabled by default. # Prevent attackers to steal cookies via JavaScript, # Eg. alert(document.cookie) will fail # # @param options [Hash, TrueClass, FalseClass] optional cookies options # @param configuration [Hanami::Configuration] the application configuration # # @since 0.3.0 # @api private # # @see https://github.com/rack/rack/blob/master/lib/rack/utils.rb #set_cookie_header! # @see https://www.owasp.org/index.php/HttpOnly # # @example Enable cookies with boolean # module Web # class Application < Hanami::Application # configure do # # ... # cookies true # end # end # end # # @example Enable cookies with options # module Web # class Application < Hanami::Application # configure do # # ... # cookies max_age: 300 # end # end # end
UNK UNK on_nl on_ivar UNK UNK UNK UNK UNK UNK on_op on_op on_ivar UNK UNK on_op on_op on_op on_ivar on_nl # Return if cookies are enabled # # @return [TrueClass, FalseClass] enabled cookies # # @since 0.3.0 # @api private
