UNK on_const on_nl UNK on_const UNK on_const on_nl on_ignored_nl UNK UNK on_period UNK on_nl UNK on_period UNK on_nl end on_nl # Install Rake tasks in projects # # @since 0.6.0 # @api private
UNK UNK on_period UNK on_nl UNK on_period UNK on_nl end on_nl on_ignored_nl UNK UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl # @since 0.6.0 # @api private
UNK UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK UNK UNK UNK on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_const UNK # @since 0.6.0 # @api private # # rubocop:disable Metrics/MethodLength
UNK UNK UNK UNK on_ignored_nl UNK UNK UNK UNK on_ignored_nl UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl end # Ruby ecosystem compatibility # # Most of the SaaS automatic tasks are designed after Ruby on Rails. # They expect the following Rake tasks to be present: # # * db:migrate # * assets:precompile # # See https://github.com/heroku/heroku-buildpack-ruby/issues/442 # # === # # These Rake tasks aren't listed when someone runs `rake -T`, because we # want to encourage developers to use `hanami` commands. # # In order to migrate the database or precompile assets a developer should # use: # # * hanami db migrate # * hanami assets precompile # # This is the preferred way to run Hanami command line tasks. # Please use them when you're in control of your deployment environment. # # If you're not in control and your deployment requires these "standard" # Rake tasks, they are here to solve this only specific problem.
UNK UNK on_lparen UNK on_rparen on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_const UNK on_const on_period UNK on_lparen on_const UNK on_const # @since 1.1.0 # @api private
end on_nl end on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # rubocop:enable Metrics/MethodLength
