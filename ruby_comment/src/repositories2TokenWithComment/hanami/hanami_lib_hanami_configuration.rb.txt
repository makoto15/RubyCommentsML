UNK on_const on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl def UNK on_lparen on_op blk on_rparen # @api private
def UNK on_lparen on_op blk on_rparen on_ignored_nl UNK on_op on_const on_op on_const on_period UNK on_nl UNK on_lparen on_op blk on_rparen # @api private
def UNK on_lparen UNK on_comma UNK on_rparen on_ignored_nl UNK UNK UNK UNK on_op on_const on_period UNK on_lparen UNK on_comma UNK # Mount a Hanami::Application or a Rack app # # @param app [#call] an application compatible with Rack SPEC # @param options [Hash] a set of options # @option :at [String] options the mount point # @option :host [String] options the mount point # # @since 0.9.0 # # @example # # config/environment.rb # # ... # Hanami.configure do # mount Beta::Application, at: '/', host: 'beta.bookshelf.com' # mount Admin::Application, at: '/api' # mount Web::Application, at: '/' # # # ... # end
def UNK on_lparen on_op blk on_rparen on_ignored_nl if UNK on_nl settings on_period UNK on_lparen on_symbeg UNK on_comma blk on_rparen on_nl # Configure database # # @param blk [Proc] the database configuration # # @see Hanami::Model.configure # # @example # # config/environment.rb # # ... # Hanami.configure do # model do # adapter :sql, ENV['DATABASE_URL'] # # migrations 'db/migrations' # schema 'db/schema.sql' # end # # # ... # end
def UNK on_lparen on_op blk on_rparen on_ignored_nl UNK on_period UNK on_lparen blk on_rparen if UNK on_nl end on_nl on_ignored_nl def # Configure mailer # # @param blk [Proc] the mailer configuration # # @see Hanami::Mailer.configure # # @example # # config/environment.rb # # ... # Hanami.configure do # mailer do # root 'lib/bookshelf/mailers' # # # See https://guides.hanamirb.org/mailers/delivery # delivery :test # end # # # ... # end
def UNK on_nl settings on_period UNK on_lparen on_symbeg UNK on_comma UNK UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl # @since next # @api private
def UNK on_nl settings on_period UNK on_lparen on_symbeg UNK on_comma UNK UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl # @since 0.9.0 # @api private
def UNK on_nl settings on_period UNK on_lparen on_symbeg UNK on_comma on_const on_op on_const on_period UNK on_rparen on_nl end on_nl on_ignored_nl # @since 1.2.0 # # @example # # config/environment.rb # # ... # Hanami.configure do # middleware.use MyRackMiddleware # end
def UNK on_lparen UNK on_op UNK on_rparen on_ignored_nl if UNK on_period UNK on_nl settings on_period UNK on_lparen on_symbeg UNK on_comma # Setup Early Hints feature # # @since 1.2.0 # # @example Enable for all the environments # # config/environment.rb # Hanami.configure do # early_hints true # end # # @example Enable only for production # # config/environment.rb # Hanami.configure do # environment :production do # early_hints true # end # end
def UNK on_nl UNK on_period UNK UNK on_op UNK on_comma UNK on_op on_ignored_nl UNK on_lparen UNK on_rparen if UNK on_op # @since 0.9.0 # @api private
def UNK on_lparen on_op UNK on_rparen on_ignored_nl if UNK on_period UNK on_nl settings on_period UNK on_lparen on_symbeg UNK on_comma UNK # Configure logger # # @since 1.0.0 # # @param options [Array] a set of options # # @see Hanami.logger # @see Hanami::Logger # # @see https://guides.hanamirb.org/projects/logging # # @example Basic Usage # # config/environment.rb # # ... # Hanami.configure do # # ... # environment :development do # logger level: :debug # end # end # # @example Daily Rotation # # config/environment.rb # # ... # Hanami.configure do # # ... # environment :development do # logger 'daily', level: :debug # end # end
def UNK on_lparen UNK on_rparen on_ignored_nl UNK if on_const UNK on_tstring_beg on_tstring_content on_tstring_end UNK on_op UNK on_period UNK on_nl end # Configure settings for the current environment # @since 1.0.0 # # @param name [Symbol] the name of the Hanami environment # # @see Hanami.env # # @example Configure Logging for Different Environments # # config/environment.rb # # ... # Hanami.configure do # # ... # environment :development do # logger level: :debug # end # # environment :production do # logger level: :info, formatter: :json # end # end
UNK on_symbeg settings on_nl end on_nl end on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # @api private
