UNK on_const on_nl UNK on_const on_nl def UNK on_lparen name on_comma on_op blk on_rparen on_ignored_nl UNK on_op name on_nl UNK # @since 0.9.0 # @api private
UNK on_const on_nl def UNK on_lparen name on_comma on_op blk on_rparen on_ignored_nl UNK on_op name on_nl UNK on_op UNK UNK # Base component # # @since 0.9.0 # @api private # # @see Hanami::Components
def UNK on_lparen name on_comma on_op blk on_rparen on_ignored_nl UNK on_op name on_nl UNK on_op UNK UNK on_nl UNK on_op # Instantiate a new component # # @param name [String] the component name # @param blk [Proc] the logic of the component # # @return [Hanami::Components::Component] # # @since 0.9.0 # @api private
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_nl UNK on_period UNK on_lparen UNK on_rparen on_nl on_ignored_nl UNK UNK on_period UNK # Run or resolve the component # # @param configuration [Hanami::Configuration] the Hanami configuration for the project # # @since 0.9.0 # @api private
on_const on_op UNK UNK UNK UNK UNK UNK UNK on_nl on_ignored_nl UNK UNK name on_nl on_ignored_nl UNK UNK UNK on_nl # @since 1.3.0 # @api private # # @see Hanami::Component#logger_interface?
UNK UNK name on_nl on_ignored_nl UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK on_nl on_ignored_nl # Component name # # @return [String] # # @since 0.9.0 # @api private
UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK on_nl on_ignored_nl # Component requirements # # @return [Array<String>] # # @since 0.9.0 # @api private
UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK on_nl on_ignored_nl def UNK on_lparen on_op UNK # Prepare logic # # @since 0.9.0 # @api private
UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK on_nl on_ignored_nl def UNK on_lparen on_op UNK on_rparen on_ignored_nl UNK on_period UNK # Resolve logic # # @since 0.9.0 # @api private
UNK UNK UNK on_nl on_ignored_nl def UNK on_lparen on_op UNK on_rparen on_ignored_nl UNK on_period UNK on_op on_const on_lparen UNK on_rparen # Run logic # # @since 0.9.0 # @api private
def UNK on_lparen on_op UNK on_rparen on_ignored_nl UNK on_period UNK on_op on_const on_lparen UNK on_rparen on_period UNK on_nl end on_nl # Declare component requirement(s) # # @param components [Array<String>] the name of the other components to # depend on
def UNK on_lparen on_op blk on_rparen on_ignored_nl UNK on_period UNK on_op blk on_nl end on_nl on_ignored_nl def UNK on_lparen on_op # Declare prepare logic # # @param blk [Proc] prepare logic # # @since 0.9.0 # @api private
def UNK on_lparen on_op blk on_rparen on_ignored_nl UNK on_period UNK on_op blk on_nl end on_nl on_ignored_nl def UNK on_lparen on_op # Declare resolve logic # # @param blk [Proc] resolve logic # # @since 0.9.0 # @api private
def UNK on_lparen on_op blk on_rparen on_ignored_nl UNK on_period UNK on_op blk on_nl end on_nl on_ignored_nl def UNK on_lparen UNK # Declare run logic # # @param blk [Proc] run logic # # @since 0.9.0 # @api private
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_const on_lparen UNK on_rparen on_period UNK on_nl end on_nl on_ignored_nl def UNK # Set requirements # # @param names [Array<String>] the requirements # # @since 0.9.0 # @api private
def UNK on_nl on_const on_period UNK on_lparen UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen name on_rparen on_ignored_nl on_const # Resolve the requirements before to execute the logic of this component # # @since 0.9.0 # @api private # # @see Hanami::Components.resolve
def UNK on_lparen name on_rparen on_ignored_nl on_const on_period UNK on_lparen name on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen name # Get a registered component by name # # @param name [String] the component name # # @since 0.9.0 # @api private # # @see Hanami::Components.component
def UNK on_lparen name on_comma UNK on_op UNK on_comma on_op blk on_rparen on_ignored_nl on_const on_period UNK on_lparen name on_comma UNK # Mark a component as resolved by providing a value or a block. # # @param name [String] the name of the component to mark as resolved # @param value [Object] the optional value of the component # @param blk [Proc] the optional block which returning value is associated with the component. # # @since 0.9.0 # @api private # # @see Hanami::Components.resolved
def UNK on_lparen UNK on_rparen on_ignored_nl on_const on_period UNK UNK on_op UNK on_op UNK on_period UNK on_lparen UNK on_rparen UNK # Check that instance has logger interfaces (#info, #warn and #debug) # # @since 1.3.0 # @api private
