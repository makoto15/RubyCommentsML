UNK on_const on_nl def UNK on_lparen configuration on_rparen on_ignored_nl UNK on_op UNK UNK on_nl UNK on_op configuration on_nl UNK on_op # Rack middleware stack for an application # # @since 0.1.0 # @api private
def UNK on_lparen configuration on_rparen on_ignored_nl UNK on_op UNK UNK on_nl UNK on_op configuration on_nl UNK on_op on_const on_op on_const # Instantiate a middleware stack # # @param configuration [Hanami::ApplicationConfiguration] the application's configuration # # @return [Hanami::MiddlewareStack] the new stack # # @since 0.1.0 # @api private # # @see Hanami::ApplicationConfiguration
def UNK on_nl UNK on_nl stack on_period UNK UNK on_op UNK on_comma args on_comma UNK on_op UNK on_period UNK on_lparen # Load the middleware stack # # @return [Hanami::MiddlewareStack] the loaded middleware stack # # @since 0.2.0 # @api private # # @see http://rdoc.info/gems/rack/Rack/Builder
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK on_lparen UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen middleware # Process a request. # This method makes the middleware stack compatible with the Rack protocol. # # @param env [Hash] a Rack env # # @return [Array] a serialized Rack response # # @since 0.1.0 # @api private
def UNK on_lparen middleware on_comma on_op args on_comma on_op UNK on_rparen on_ignored_nl stack on_period UNK UNK middleware on_comma args on_comma # Append a middleware to the stack. # # @param middleware [Object] a Rack middleware # @param args [Array] optional arguments to pass to the Rack middleware # @param blk [Proc] an optional block to pass to the Rack middleware # # @return [Array] the middleware that was added # # @since 0.2.0 # # @see Hanami::MiddlewareStack#prepend # # @example # # apps/web/application.rb # module Web # class Application < Hanami::Application # configure do # # ... # use MyRackMiddleware, foo: 'bar' # end # end # end
def UNK on_lparen middleware on_comma on_op args on_comma on_op UNK on_rparen on_ignored_nl stack on_period UNK UNK middleware on_comma args on_comma # Prepend a middleware to the stack. # # @param middleware [Object] a Rack middleware # @param args [Array] optional arguments to pass to the Rack middleware # @param blk [Proc] an optional block to pass to the Rack middleware # # @return [Array] the middleware that was added # # @since 0.6.0 # # @see Hanami::MiddlewareStack#use # # @example # # apps/web/application.rb # module Web # class Application < Hanami::Application # configure do # # ... # prepend MyRackMiddleware, foo: 'bar' # end # end # end
UNK UNK stack on_nl on_ignored_nl UNK UNK UNK on_nl on_ignored_nl UNK UNK configuration on_nl on_ignored_nl def UNK on_lparen middleware on_rparen # @api private # @since 0.9.0
UNK UNK UNK on_nl on_ignored_nl UNK UNK configuration on_nl on_ignored_nl def UNK on_lparen middleware on_rparen on_ignored_nl UNK middleware on_nl UNK # @api private # @since 0.9.0
UNK UNK configuration on_nl on_ignored_nl def UNK on_lparen middleware on_rparen on_ignored_nl UNK middleware on_nl UNK on_const on_nl on_const on_op on_const # @api private # @since 0.9.0
def UNK on_lparen middleware on_rparen on_ignored_nl UNK middleware on_nl UNK on_const on_nl on_const on_op on_const on_period UNK on_lparen middleware on_rparen # @api private # @since 0.2.0
def UNK on_nl on_const UNK UNK UNK configuration on_period UNK UNK UNK UNK UNK on_nl end on_nl on_ignored_nl def UNK # @api private # @since 0.9.0
def UNK on_nl UNK on_op UNK on_ignored_nl UNK on_nl UNK on_nl on_ignored_nl UNK on_nl end on_nl end on_nl on_ignored_nl def # @api private # @since 0.2.0
def UNK on_nl UNK on_const on_period UNK on_lparen UNK UNK on_rparen on_op UNK on_period UNK on_nl UNK UNK UNK UNK # Default welcome page # # @api private # @since 0.2.0
def UNK on_nl UNK configuration on_period UNK on_period UNK on_nl UNK on_lparen on_op configuration on_period UNK on_period middleware on_rparen on_nl # Add session middleware # # @api private # @since 0.2.0
