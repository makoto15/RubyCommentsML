on_ignored_nl UNK UNK on_tstring_content on_tstring_end on_nl UNK UNK on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const # frozen_string_literal: true
UNK on_symbeg UNK on_nl on_ignored_nl def UNK UNK name UNK on_ignored_nl name on_comma UNK on_op on_op name UNK name on_period ## # # Return the proc that Capybara will call to run the Rack application. # The block returned receives a rack app, port, and host/ip and should run a Rack handler # By default, Capybara will try to use puma. #
def UNK UNK name UNK on_ignored_nl name on_comma UNK on_op on_op name UNK name on_period UNK on_const on_nl on_ivar on_op ## # # Set the server to use. # # Capybara.server = :webrick # Capybara.server = :puma, { Silent: true } # # @overload server=(name) # @param [Symbol] name Name of the server type to use # @overload server=([name, options]) # @param [Symbol] name Name of the server type to use # @param [Hash] options Options to pass to the server block # @see register_server #
def UNK on_nl on_ivar on_op on_symbeg UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_op on_symbeg UNK on_nl end ## # # @return [Symbol] The name of the driver to use by default #
def UNK on_nl on_ivar on_op on_symbeg UNK on_nl end on_nl on_ignored_nl def UNK UNK method on_comma UNK on_comma UNK on_op ## # # @return [Symbol] The name of the driver used when JavaScript is needed #
