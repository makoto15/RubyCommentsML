on_ignored_nl on_ignored_nl UNK on_op UNK on_period UNK UNK on_op UNK on_comma on_label UNK on_symbeg UNK UNK do on_ignored_nl UNK on_lparen # frozen_string_literal: true
on_ignored_nl UNK on_op UNK on_period UNK UNK on_op UNK on_comma on_label UNK on_symbeg UNK UNK do on_ignored_nl UNK on_lparen on_symbeg # Note: This file uses `sleep` to sync up parts of the tests. This is only implemented like this # because of the methods being tested. In tests using Capybara this type of behavior should be implemented # using Capybara provided assertions with builtin waiting behavior.
on_ignored_nl UNK on_comma UNK on_op on_ivar on_period current_window on_period size on_nl on_ignored_nl expect on_lparen UNK on_rparen on_period to UNK on_op # The timing on maximize is finicky on Travis -- wait a bit for maximize to occur
expect on_lparen UNK on_rparen on_period to UNK on_op UNK on_nl expect on_lparen UNK on_rparen on_period to UNK on_op UNK on_nl # maximize behavior is window manage dependant, so just make sure it increases in size
on_ignored_nl expect on_lparen on_ivar on_period current_window on_rparen on_period to eq on_lparen orig_window on_rparen on_nl on_ignored_nl UNK on_comma UNK on_op other_window # The timing on maximize is finicky on Travis -- wait a bit for maximize to occur
on_ignored_nl UNK on_comma UNK on_op other_window on_period size on_nl expect on_lparen UNK on_rparen on_period to UNK on_op on_int on_nl expect # Maximizing the browser affects all tabs so this may not be valid in real browsers # expect(@session.current_window.size).to eq(initial_size)
