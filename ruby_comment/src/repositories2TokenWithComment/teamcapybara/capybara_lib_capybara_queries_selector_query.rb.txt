on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl class on_const on_op on_const on_op on_const on_nl # frozen_string_literal: true
end on_nl end on_nl on_ignored_nl desc on_op selector on_period UNK on_lparen on_label show_for on_lbracket on_symbeg node on_rbracket on_comma on_op options # rubocop:disable Style/RescueModifier
def UNK on_lparen node on_comma exact on_op nil on_rparen on_ignored_nl applied_filters on_period UNK on_nl on_ivar on_period UNK on_nl on_ivar on_op # @api private
def UNK on_nl return on_ivar on_period UNK on_symbeg UNK if on_ivar on_period UNK on_period UNK on_nl on_ignored_nl on_ivar on_period UNK # @api private
on_ivar on_op position on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket rescue position on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl on_ivar on_op position on_lbracket # rubocop:disable Style/RescueModifier
end on_nl on_ignored_nl def distance on_lparen other on_rparen on_ignored_nl distance on_op on_const on_op on_const on_nl on_ignored_nl UNK on_period UNK do # rubocop:enable Style/RescueModifier
u on_op UNK on_op UNK on_nl v on_op UNK on_op UNK on_nl UNK on_op UNK on_op UNK on_nl on_ignored_nl a # See http://geomalgorithms.com/a07-_distance.html # rubocop:disable Naming/VariableName
if UNK on_op on_const on_op on_const sn on_op on_float sd on_op on_float tn on_op e on_nl td on_op c on_nl # compute the line parameters of the two closest points
sn on_op on_float sd on_op on_float tn on_op e on_nl td on_op c on_nl else sn on_op on_lparen b on_op # the lines are almost parallel
sd on_op on_float tn on_op e on_nl td on_op c on_nl else sn on_op on_lparen b on_op e on_rparen on_op # force using point P0 on segment S1
tn on_op e on_nl td on_op c on_nl else sn on_op on_lparen b on_op e on_rparen on_op on_lparen c on_op # to prevent possible division by 0.0 later
sn on_op on_lparen b on_op e on_rparen on_op on_lparen c on_op d on_rparen on_nl tn on_op on_lparen a on_op e # get the closest points on the infinite lines
sn on_op on_int on_nl tn on_op e on_nl td on_op c on_nl elsif sn on_op sd sn on_op sd on_nl # sc < 0 => the s=0 edge is visible
sn on_op sd on_nl tn on_op e on_op b on_nl td on_op c on_nl end on_nl end on_nl on_ignored_nl if # sc > 1 => the s=1 edge is visible
tn on_op on_int on_nl if on_lparen on_op d on_rparen on_period UNK on_nl sn on_op on_float on_nl elsif on_op d on_op # tc < 0 => the t=0 edge is visible
if on_lparen on_op d on_rparen on_period UNK on_nl sn on_op on_float on_nl elsif on_op d on_op a on_nl sn on_op # recompute sc for this edge
tn on_op td on_nl if on_lparen on_op d on_op b on_rparen on_period UNK on_nl sn on_op on_float on_nl elsif on_lparen # tc > 1 => the t=1 edge is visible
if on_lparen on_op d on_op b on_rparen on_period UNK on_nl sn on_op on_float on_nl elsif on_lparen on_op d on_op b # recompute sc for this edge
UNK on_op sn on_period UNK on_op on_const on_op on_const on_op on_float on_op sn on_op sd on_nl UNK on_op tn on_period # finally do the division to get sc and tc
UNK on_op UNK on_op on_lparen u on_op UNK on_rparen on_op on_lparen v on_op UNK on_rparen on_nl on_ignored_nl on_const on_period UNK # difference of the two closest points
end on_nl end on_nl on_ignored_nl UNK on_symbeg on_const on_nl end on_nl end on_nl end on_nl EMP EMP EMP EMP EMP # rubocop:enable Naming/VariableName
