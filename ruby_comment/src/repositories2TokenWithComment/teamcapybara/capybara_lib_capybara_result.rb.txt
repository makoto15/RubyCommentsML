on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl on_ignored_nl # frozen_string_literal: true
UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl on_ignored_nl def UNK on_lparen UNK on_comma UNK on_rparen on_ignored_nl on_ivar on_op ## # A {Capybara::Result} represents a collection of {Capybara::Node::Element} on the page. It is possible to interact with this # collection similar to an Array because it implements Enumerable and offers the following Array methods through delegation: # # * \[\] # * each() # * at() # * size() # * count() # * length() # * first() # * last() # * empty?() # * values_at() # * sample() # # @see Capybara::Node::Element #
max on_op idx on_period end on_nl max on_op UNK if max on_op UNK on_nl max on_op on_int if max on_op # idx.max is broken with beginless ranges # idx.end && idx.max # endless range will have end == nil
if count on_op on_lparen count on_op on_const on_lparen count on_rparen on_rparen on_nl return load_up_to on_lparen count on_op on_int on_rparen on_op # Only check filters for as many elements as necessary to determine result
message on_op on_tstring_beg on_tstring_content on_tstring_end on_op UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl message on_op on_ivar on_period UNK on_lparen on_tstring_beg on_tstring_content # rubocop:disable Style/RescueModifier
def UNK on_nl on_ivar on_op UNK on_nl UNK on_nl end on_nl on_ignored_nl UNK on_nl on_ignored_nl def UNK on_lparen UNK on_rparen ## # @api private #
def UNK on_lparen on_op block on_rparen on_ignored_nl on_ivar on_period UNK on_lparen on_op block on_rparen on_period UNK end on_nl UNK on_ignored_nl # JRuby < 9.2.8.0 has an issue with lazy enumerators which # causes a concurrency issue with network requests here # https://github.com/jruby/jruby/issues/4212
end on_nl UNK on_ignored_nl def UNK on_lparen on_op block on_rparen on_ignored_nl on_ivar on_period UNK on_period UNK on_lparen on_op block on_rparen # non-lazy evaluation
