UNK on_op on_lbracket UNK on_comma UNK on_rbracket on_period UNK on_lbrace on_op s on_op on_lparen s on_period UNK on_op on_lbrace on_rbrace # add percentages
def UNK on_nl UNK on_op UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op # only cache if true
def UNK on_nl UNK on_op UNK on_op on_op UNK on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_lparen # https://stackoverflow.com/questions/20582500/how-to-check-if-a-table-exists-in-a-given-schema
UNK on_op UNK on_op on_op UNK on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end # TODO use schema from config # make sure primary database is PostgreSQL first
def UNK on_lparen on_label UNK on_rparen on_ignored_nl UNK if UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op UNK on_lbracket on_tstring_beg on_tstring_content # resetting query stats will reset across the entire Postgres instance # this is problematic if multiple PgHero databases use the same Postgres instance # # to get around this, we capture queries for every Postgres database before we # reset query stats for the Postgres instance with the `capture_query_stats` option
UNK on_op on_lbrace UNK on_op UNK on_rbrace on_nl on_const on_period UNK on_period UNK on_lbrace on_op UNK on_comma UNK on_op UNK # get all databases that use same query stats and build mapping
def UNK on_lparen on_label nil on_comma on_label nil on_comma on_label nil on_comma on_label nil on_rparen on_ignored_nl if UNK on_nl UNK # http://www.craigkerstiens.com/2013/01/10/more-on-postgres-performance/
UNK on_lparen query on_comma on_label on_lbracket on_symbeg query on_rbracket on_rparen on_nl UNK on_ignored_nl UNK on_const on_comma on_tstring_beg on_tstring_content on_tstring_end on_nl # we may be able to skip query_columns # in more recent versions of Postgres # as pg_stat_statements should be already normalized
UNK on_lparen query on_comma on_label on_lbracket on_symbeg query on_comma on_symbeg UNK on_rbracket on_rparen on_nl UNK on_ignored_nl UNK on_const on_comma on_tstring_beg # we can skip query_columns if all stored data is normalized # for now, assume it's not
def UNK on_lparen query on_rparen on_ignored_nl UNK on_lparen query on_period UNK on_period UNK on_lparen UNK on_tstring_content UNK on_comma on_tstring_beg on_tstring_content # removes comments # combines ?, ?, ? => ?
