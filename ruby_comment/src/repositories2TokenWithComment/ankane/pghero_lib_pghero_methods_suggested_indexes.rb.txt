def UNK on_lparen on_label nil on_comma on_label nil on_comma on_label nil on_rparen on_ignored_nl UNK on_op on_lbrace on_rbrace on_nl on_ignored_nl if # TODO clean this mess
UNK on_op on_lparen UNK on_op UNK on_period UNK on_lparen on_label UNK on_comma on_label on_int on_period UNK on_period UNK on_rparen on_rparen # get most time-consuming queries
UNK on_op UNK on_lparen UNK on_rparen on_nl on_ignored_nl if UNK on_period UNK on_nl UNK on_op on_const on_period UNK on_lbrace on_op # get best indexes for queries
UNK on_op on_lbrace on_rbrace on_nl UNK on_period each do on_op statement on_op on_ignored_nl UNK on_lbracket statement on_rbracket on_op UNK on_lparen # see if this is a query we understand and can use
UNK on_op UNK on_period UNK on_period map on_lbrace on_op UNK on_op UNK on_lbracket on_symbeg table on_rbracket on_rbrace on_period UNK on_nl # get stats about columns for relevant tables
UNK on_op UNK on_period UNK on_lbracket on_symbeg UNK on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end on_nl if UNK on_period UNK on_nl UNK # TODO get schema from query structure, then try search path
UNK on_period each do on_op statement on_comma structure on_op on_ignored_nl index on_op on_lbrace on_label UNK on_rbrace on_nl on_ignored_nl if structure # find best index based on query structure and column stats
if total_rows on_op on_int on_nl on_ignored_nl if on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period UNK on_lparen where # no index needed if less than 500 rows
rows_left on_op total_rows on_nl final_where on_op on_lbracket on_rbracket on_nl prev_rows_left on_op on_lbracket rows_left on_rbracket on_nl where on_period UNK on_lbrace on_op # if most values are unique, no need to index others
prev_rows_left on_period UNK on_nl on_lparen prev_rows_left on_period UNK on_op on_int on_rparen on_period UNK do on_op i on_op on_ignored_nl if prev_rows_left # if the last indexes don't give us much, don't include
tree on_op tree on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket if tree on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket # pg_query 1.0.0
def row_estimates on_lparen stats on_comma total_rows on_comma rows_left on_comma op on_rparen on_ignored_nl UNK op on_nl when on_tstring_beg on_tstring_content on_tstring_end on_nl # TODO better row estimation # https://www.postgresql.org/docs/current/static/row-estimation-examples.html
when on_tstring_beg on_tstring_content on_tstring_end on_nl rows_left on_op UNK on_nl else on_ignored_nl UNK on_nl end on_nl end on_nl end on_nl on_ignored_nl # TODO better approximation
def UNK on_lparen tree on_rparen on_ignored_nl UNK on_op tree on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl on_ignored_nl if tree on_lbracket on_tstring_beg # TODO capture values
