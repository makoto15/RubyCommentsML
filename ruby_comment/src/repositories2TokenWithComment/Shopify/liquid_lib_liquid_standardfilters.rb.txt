on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl on_const on_op # frozen_string_literal: true
def UNK on_lparen input on_rparen on_ignored_nl input on_period respond_to? on_lparen on_symbeg UNK on_rparen on_op input on_period UNK on_op on_int on_nl # Return the size of an array or of an string
def UNK on_lparen input on_rparen on_ignored_nl input on_period to_s on_period UNK on_nl end on_nl on_ignored_nl def UNK on_lparen input on_rparen # convert an input string to DOWNCASE
def UNK on_lparen input on_rparen on_ignored_nl input on_period to_s on_period UNK on_nl end on_nl on_ignored_nl def UNK on_lparen input on_rparen # convert an input string to UPCASE
def UNK on_lparen input on_rparen on_ignored_nl input on_period to_s on_period UNK on_nl end on_nl on_ignored_nl def UNK on_lparen input on_rparen # capitalize words in the input centence
def UNK on_lparen input on_comma length on_op on_int on_comma UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen on_ignored_nl return if input on_period # Truncate a string down to x characters
def UNK on_lparen input on_comma UNK on_rparen on_ignored_nl input on_period to_s on_period UNK on_lparen UNK on_period to_s on_rparen on_nl end # Split input string into an array of substrings separated by given pattern. # # Example: # <div class="summary">{{ post | split '//' | first }}</div> #
def UNK on_lparen input on_rparen on_ignored_nl input on_period to_s on_period gsub on_lparen on_regexp_beg on_tstring_content on_regexp_end on_comma on_tstring_beg on_tstring_end on_rparen on_nl # Remove all newlines from the string
def UNK on_lparen input on_comma UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen on_ignored_nl on_const on_period new on_lparen input on_comma context on_rparen # Join elements of the array with certain character between them
def UNK on_lparen input on_comma property on_op nil on_rparen on_ignored_nl ary on_op on_const on_period new on_lparen input on_comma context on_rparen # Sort elements of the array # provide optional property with which to sort an array of hashes or drops
def UNK on_lparen input on_comma property on_op nil on_rparen on_ignored_nl ary on_op on_const on_period new on_lparen input on_comma context on_rparen # Sort elements of an array ignoring case if strings # provide optional property with which to sort an array of hashes or drops
def UNK on_lparen input on_comma property on_comma UNK on_op nil on_rparen on_ignored_nl ary on_op on_const on_period new on_lparen input on_comma # Filter the elements of an array to those with a certain property value. # By default the target is any truthy value.
def UNK on_lparen input on_comma property on_op nil on_rparen on_ignored_nl ary on_op on_const on_period new on_lparen input on_comma context on_rparen # Remove duplicate elements from an array # provide optional property with which to determine uniqueness
on_lbracket on_rbracket on_nl elsif ary on_period first on_period respond_to? on_lparen on_symbeg on_op on_rparen on_nl begin on_ignored_nl ary on_period UNK on_lbrace # The next two cases assume a non-empty array.
def UNK on_lparen input on_rparen on_ignored_nl ary on_op on_const on_period new on_lparen input on_comma context on_rparen on_nl ary on_period UNK # Reverse the elements of an array
def UNK on_lparen input on_comma property on_rparen on_ignored_nl on_const on_period new on_lparen input on_comma context on_rparen on_period UNK UNK on_op # map/collect on a given property
def UNK on_lparen input on_comma property on_op nil on_rparen on_ignored_nl ary on_op on_const on_period new on_lparen input on_comma context on_rparen # Remove nils within an array # provide optional property with which to check for nil
on_lbracket on_rbracket on_nl elsif ary on_period first on_period respond_to? on_lparen on_symbeg on_op on_rparen on_nl begin on_ignored_nl ary on_period UNK on_lbrace # The next two cases assume a non-empty array.
def UNK on_lparen input on_comma string on_comma UNK on_op on_tstring_beg on_tstring_end on_rparen on_ignored_nl input on_period to_s on_period gsub on_lparen string # Replace occurrences of a string with another
def UNK on_lparen input on_comma string on_comma UNK on_op on_tstring_beg on_tstring_end on_rparen on_ignored_nl input on_period to_s on_period UNK on_lparen string # Replace the first occurrences of a string with another
def UNK on_lparen input on_comma string on_rparen on_ignored_nl input on_period to_s on_period gsub on_lparen string on_period to_s on_comma on_tstring_beg on_tstring_end # remove a substring
def UNK on_lparen input on_comma string on_rparen on_ignored_nl input on_period to_s on_period UNK on_lparen string on_period to_s on_comma on_tstring_beg on_tstring_end # remove the first occurrences of a substring
def UNK on_lparen input on_comma string on_rparen on_ignored_nl input on_period to_s on_op string on_period to_s on_nl end on_nl on_ignored_nl def # add one string to another
def UNK on_lparen input on_comma string on_rparen on_ignored_nl string on_period to_s on_op input on_period to_s on_nl end on_nl on_ignored_nl def # prepend a string to another
def UNK on_lparen input on_rparen on_ignored_nl input on_period to_s on_period gsub on_lparen on_regexp_beg on_tstring_content on_regexp_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen # Add <br /> tags in front of all newlines in input string
def UNK on_lparen input on_comma UNK on_rparen on_ignored_nl return input if UNK on_period to_s on_period empty? on_nl on_ignored_nl return input # Reformat a date using Ruby's core Time#strftime( string ) -> string # # %a - The abbreviated weekday name (``Sun'') # %A - The full weekday name (``Sunday'') # %b - The abbreviated month name (``Jan'') # %B - The full month name (``January'') # %c - The preferred local date and time representation # %d - Day of the month (01..31) # %H - Hour of the day, 24-hour clock (00..23) # %I - Hour of the day, 12-hour clock (01..12) # %j - Day of the year (001..366) # %m - Month of the year (01..12) # %M - Minute of the hour (00..59) # %p - Meridian indicator (``AM'' or ``PM'') # %s - Number of seconds since 1970-01-01 00:00:00 UTC. # %S - Second of the minute (00..60) # %U - Week number of the current year, # starting with the first Sunday as the first # day of the first week (00..53) # %W - Week number of the current year, # starting with the first Monday as the first # day of the first week (00..53) # %w - Day of the week (Sunday is 0, 0..6) # %x - Preferred representation for the date alone, no time # %X - Preferred representation for the time alone, no date # %y - Year without a century (00..99) # %Y - Year with century # %Z - Time zone name # %% - Literal ``%'' character # # See also: http://www.ruby-doc.org/core/Time.html#method-i-strftime
def first on_lparen array on_rparen on_ignored_nl array on_period first if array on_period respond_to? on_lparen on_symbeg first on_rparen on_nl end on_nl # Get the first element of the passed in array # # Example: # {{ product.images | first | to_img }} #
def UNK on_lparen array on_rparen on_ignored_nl array on_period UNK if array on_period respond_to? on_lparen on_symbeg UNK on_rparen on_nl end on_nl # Get the last element of the passed in array # # Example: # {{ product.images | last | to_img }} #
def UNK on_lparen input on_rparen on_ignored_nl result on_op on_const on_period to_number on_lparen input on_rparen on_period UNK on_nl result on_period is_a? # absolute value
def UNK on_lparen input on_comma operand on_rparen on_ignored_nl apply_operation on_lparen input on_comma operand on_comma on_symbeg on_op on_rparen on_nl end on_nl # addition
def UNK on_lparen input on_comma operand on_rparen on_ignored_nl apply_operation on_lparen input on_comma operand on_comma on_symbeg on_op on_rparen on_nl end on_nl # subtraction
def UNK on_lparen input on_comma operand on_rparen on_ignored_nl apply_operation on_lparen input on_comma operand on_comma on_symbeg on_op on_rparen on_nl end on_nl # multiplication
def UNK on_lparen input on_comma operand on_rparen on_ignored_nl apply_operation on_lparen input on_comma operand on_comma on_symbeg on_op on_rparen on_nl rescue on_op # division
def UNK on_lparen input on_comma UNK on_op on_tstring_beg on_tstring_end on_comma UNK on_op on_lbrace on_rbrace on_rparen on_ignored_nl UNK on_op on_lbrace on_rbrace # Set a default value when the input is nil, false or empty # # Example: # {{ product.title | default: "No Title" }} # # Use `allow_false` when an input should only be tested against nil or empty and not false. # # Example: # {{ product.title | default: "No Title", allow_false: true }} #
