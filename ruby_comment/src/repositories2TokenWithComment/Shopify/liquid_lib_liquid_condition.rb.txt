on_ignored_nl UNK on_const on_nl UNK on_const UNK on_op UNK on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op UNK on_lparen cond on_comma left on_comma # frozen_string_literal: true
UNK on_const UNK on_op UNK on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op UNK on_lparen cond on_comma left on_comma right on_rparen UNK cond # Container for liquid nodes which conveniently wraps decision making logic # # Example: # # c = Condition.new(1, '==', 1) # c.evaluate #=> true #
UNK on_op UNK on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op UNK on_lparen cond on_comma left on_comma right on_rparen UNK cond on_period send #:nodoc:
UNK context on_period UNK on_lparen left on_rparen if UNK on_period UNK on_nl on_ignored_nl left on_op context on_period UNK on_lparen left # If the operator is empty this means that the decision statement is just # a single variable. We can just poll this variable from the context and # return this as the result.
