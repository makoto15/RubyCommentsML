on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period UNK on_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period UNK on_nl on_ignored_nl def UNK on_nl # Event that gets triggered on load of Active Admin
def UNK on_nl UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_nl UNK on_nl end on_nl on_ignored_nl def UNK # Runs before the app's AA initializer
def UNK on_nl UNK on_nl UNK on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_comma options on_op on_lbrace on_rbrace on_comma # Runs after the app's AA initializer
def UNK on_lparen UNK on_comma options on_op on_lbrace on_rbrace on_comma on_op block on_rparen on_ignored_nl UNK on_op options on_period UNK on_lparen # Registers a brand new configuration for the given resource.
def namespace on_lparen name on_rparen on_ignored_nl name on_op on_symbeg UNK on_nl on_ignored_nl namespace on_op UNK on_lbracket name on_period UNK on_rbracket # Creates a namespace for the given name # # Yields the namespace if a block is given # # @return [Namespace] the new or existing namespace
def UNK on_lparen name on_comma options on_op on_lbrace on_rbrace on_comma on_op block on_rparen on_ignored_nl UNK on_op options on_period UNK on_lparen # Register a page # # @param name [String] The page name # @option [Hash] Accepts option :namespace. # @&block The registration block. #
def UNK on_nl UNK on_op UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_period UNK on_op on_symbeg UNK on_nl # Whether all configuration files have been loaded
def UNK on_nl UNK on_period UNK on_op on_symbeg UNK on_nl UNK on_op UNK on_nl end on_nl on_ignored_nl def UNK on_nl # Removes all defined controllers from memory. Useful in # development, where they are reloaded on each request.
def UNK on_nl UNK UNK on_nl on_const on_op on_const on_period UNK on_const on_comma UNK UNK on_period UNK on_lbrace on_op UNK # Loads all ruby files that are within the load_paths setting. # To reload everything simply call `ActiveAdmin.unload!`
UNK on_period UNK on_lbrace on_op UNK on_op UNK UNK on_rbrace namespace on_lparen UNK on_rparen on_const on_op on_const on_period UNK on_const # before_load hook
namespace on_lparen UNK on_rparen on_const on_op on_const on_period UNK on_const on_comma UNK UNK on_op UNK on_nl end on_nl end on_nl # load files
on_const on_op on_const on_period UNK on_const on_comma UNK UNK on_op UNK on_nl end on_nl end on_nl on_ignored_nl def UNK on_lparen # init AA resources
UNK on_op UNK on_nl end on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl on_const on_period UNK on_lbrace UNK # after_load hook
def UNK on_nl UNK on_period UNK on_period UNK on_period UNK on_period UNK on_lbrace on_op UNK on_op on_const on_lbracket on_tstring_beg UNK # Returns ALL the files to be loaded
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_nl on_const on_period UNK on_lparen UNK UNK on_comma UNK UNK on_rparen on_period UNK # Creates all the necessary routes for the ActiveAdmin configurations # # Use this within the routes.rb file: # # Application.routes.draw do |map| # ActiveAdmin.routes(self) # end # # @param rails_router [ActionDispatch::Routing::Mapper]
on_const on_op on_const on_op on_const on_period UNK on_period on_ignored_nl UNK on_lbrace on_op UNK on_op UNK on_period UNK on_lparen UNK on_tstring_content # Adds before, around and after filters to all controllers. # Example usage: # ActiveAdmin.before_filter :authenticate_admin! #
def UNK on_nl on_const on_op on_const on_period UNK on_op UNK on_nl on_const on_period UNK on_period UNK on_period UNK on_op UNK # Since app/admin is alphabetically before app/models, we have to remove it # from the host app's +autoload_paths+ to prevent missing constant errors. # # As well, we have to remove it from +eager_load_paths+ to prevent the # files from being loaded twice in production.
def UNK on_nl on_const on_period UNK on_period UNK on_period UNK do on_op UNK on_op on_ignored_nl UNK on_op UNK UNK on_const # Hook into the Rails code reloading mechanism so that things are reloaded # properly in development mode. # # If any of the app files (e.g. models) has changed, we need to reload all # the admin files. If the admin files themselves has changed, we need to # regenerate the routes as well.
on_const on_op on_const on_period UNK on_lparen UNK UNK on_comma on_op UNK on_rparen on_nl UNK on_ignored_nl on_const on_op on_const on_period UNK # Rails is about to unload all the app files (e.g. models), so we # should first unload the classes generated by Active Admin, otherwise # they will contain references to the stale (unloaded) classes.
on_const on_op on_const on_period UNK on_lparen on_op UNK on_rparen on_nl end on_nl on_ignored_nl UNK on_op on_lbrace on_rbrace on_nl on_ignored_nl UNK # If the user has configured the app to always reload app files after # each request, so we should unload the generated classes too.
UNK on_const on_period UNK on_period UNK on_nl UNK on_period UNK on_nl on_const on_period UNK on_period UNK on_nl end on_nl end # Rails might have reloaded the routes for other reasons (e.g. # routes.rb has changed), in which case Active Admin would have been # loaded via the `ActiveAdmin.routes` call in `routes.rb`. # # Otherwise, we should check if any of the admin files are changed # and force the routes to reload if necessary. This would again causes # Active Admin to load via `ActiveAdmin.routes`. # # Finally, if Active Admin is still not loaded at this point, then we # would need to load it manually.
