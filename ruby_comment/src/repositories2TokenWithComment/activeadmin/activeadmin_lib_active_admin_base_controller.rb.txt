UNK on_const on_op on_op on_const on_op on_const on_nl UNK on_op on_const on_op on_const on_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK # BaseController for ActiveAdmin. # It implements ActiveAdmin controllers core features.
UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl on_ignored_nl UNK # Ensure that this method is available for the DSL
UNK on_symbeg UNK on_nl end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl on_ignored_nl UNK on_nl on_ignored_nl def UNK on_nl # Reference to the Resource object which initialized # this controller
def UNK on_nl UNK on_const on_op on_const UNK UNK on_period UNK UNK UNK UNK on_symbeg UNK UNK UNK on_nl end # By default Rails will render un-implemented actions when the view exists. Because Active # Admin allows you to not render any of the actions by using the #actions method, we need # to check if they are implemented.
def UNK on_nl UNK UNK active_admin_namespace on_period UNK UNK UNK active_admin_namespace on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl # Calls the authentication method as defined in ActiveAdmin.authentication_method
def UNK on_nl on_const on_period UNK UNK UNK UNK on_symbeg UNK UNK on_period UNK UNK on_op UNK on_op UNK UNK # Determine which layout to use. # # 1. If we're rendering a standard Active Admin action, we want layout(false) # because these actions are subclasses of the Base page (which implements # all the required layout code) # 2. If we're rendering a custom action, we'll use the active_admin layout so # that users can render any template inside Active Admin.
