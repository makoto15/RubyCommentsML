UNK on_const on_nl on_ignored_nl def UNK on_period UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK do on_ignored_nl UNK on_const on_nl # This module overrides most of the data access methods in Inherited # Resources to provide Active Admin with it's data. # # The module also deals with authorization and resource callbacks. #
def collection on_nl UNK on_op UNK on_ignored_nl collection on_op UNK on_nl UNK on_const on_op on_const on_comma active_admin_config on_period UNK on_nl # Retrieve, memoize and authorize the current collection from the db. This # method delegates the finding of the collection to #find_collection. # # Once #collection has been called, the collection is available using # either the @collection instance variable or an instance variable named # after the resource that the collection is for. eg: Post => @post. # # @return [ActiveRecord::Relation] The collection for the index
def UNK on_lparen UNK on_op UNK UNK on_rparen on_ignored_nl collection on_op UNK on_nl UNK on_lparen UNK on_rparen on_period UNK do # Does the actual work of retrieving the current collection from the db. # This is a great method to override if you would like to perform # some additional db # work before your controller returns and # authorizes the collection. # # @return [ActiveRecord::Relation] The collection for the index
def UNK on_nl UNK on_nl end on_nl on_ignored_nl def resource on_nl UNK on_op UNK on_ignored_nl resource on_op UNK on_nl resource # Override this method in your controllers to modify the start point # of our searches and index. # # This method should return an ActiveRecord::Relation object so that # the searching and filtering can be applied on top # # Note, unless you are doing something special, you should use the # scope_to method from the Scoping module instead of overriding this # method.
def resource on_nl UNK on_op UNK on_ignored_nl resource on_op UNK on_nl resource on_op UNK on_lparen resource on_rparen on_nl UNK resource # Retrieve, memoize and authorize a resource based on params[:id]. The # actual work of finding the resource is done in #find_resource. # # This method is used on all the member actions: # # * show # * edit # * update # * destroy # # @return [ActiveRecord::Base] An active record object
def UNK on_nl UNK on_period UNK UNK on_comma params on_lbracket on_symbeg UNK on_rbracket on_nl end on_nl on_ignored_nl def UNK on_nl # Does the actual work of finding a resource in the database. This # method uses the finder method as defined in InheritedResources. # # @return [ActiveRecord::Base] An active record object.
def UNK on_nl UNK on_op UNK on_ignored_nl resource on_op UNK on_nl resource on_op UNK on_lparen resource on_rparen on_nl resource on_op # Builds, memoize and authorize a new instance of the resource. The # actual work of building the new instance is delegated to the # #build_new_resource method. # # This method is used to instantiate and authorize new resources in the # new and create controller actions. # # @return [ActiveRecord::Base] An un-saved active record base object
def UNK on_nl UNK on_period UNK on_lparen on_ignored_nl UNK on_comma on_ignored_nl on_op UNK on_period UNK UNK on_op params on_op params # Builds a new resource. This method uses the method_for_build provided # by Inherited Resources. # # @return [ActiveRecord::Base] An un-saved active record base object
def UNK on_lparen object on_rparen on_ignored_nl UNK object do on_ignored_nl UNK on_lparen object on_rparen on_nl end on_nl end on_nl on_ignored_nl # Calls all the appropriate callbacks and then creates the new resource. # # @param [ActiveRecord::Base] object The new resource to create # # @return [void]
def UNK on_lparen object on_rparen on_ignored_nl UNK object do on_ignored_nl object on_period UNK on_nl end on_nl end on_nl on_ignored_nl def # Calls all the appropriate callbacks and then saves the new resource. # # @param [ActiveRecord::Base] object The new resource to save # # @return [void]
def UNK on_lparen object on_comma attributes on_rparen on_ignored_nl object on_op UNK on_lparen object on_comma attributes on_rparen on_nl on_ignored_nl UNK object # Update an object with the given attributes. Also calls the appropriate # callbacks for update action. # # @param [ActiveRecord::Base] object The instance to update # # @param [Array] attributes An array with the attributes in the first position # and the Active Record "role" in the second. The role # may be set to nil. # # @return [void]
def UNK on_lparen object on_rparen on_ignored_nl UNK object do on_ignored_nl object on_period UNK on_nl end on_nl end on_nl on_ignored_nl on_ignored_nl # Destroys an object from the database and calls appropriate callbacks. # # @return [void]
on_ignored_nl def UNK on_lparen collection on_rparen on_ignored_nl UNK on_op UNK on_lparen params on_lbracket on_symbeg UNK on_rbracket on_rparen on_nl UNK on_period # # Collection Helper Methods #
def UNK on_lparen collection on_rparen on_ignored_nl UNK on_op UNK on_lparen params on_lbracket on_symbeg UNK on_rbracket on_rparen on_nl UNK on_period UNK # Gives the authorization library a change to pre-scope the collection. # # In the case of the CanCan adapter, it calls `#accessible_by` on # the collection. # # @param [ActiveRecord::Relation] collection The collection to scope # # @return [ActiveRecord::Relation] a scoped collection of query
end on_nl end on_nl on_ignored_nl def UNK on_lparen chain on_rparen on_ignored_nl on_ivar on_op chain on_period UNK on_lparen params on_lbracket on_symbeg # just return the chain
def UNK on_lparen chain on_rparen on_ignored_nl on_ivar on_op chain on_period UNK on_lparen params on_lbracket on_symbeg UNK on_rbracket on_op UNK UNK # Applies any Ransack search methods to the currently scoped collection. # Both `search` and `ransack` are provided, but we use `ransack` to prevent conflicts.
UNK chain if chain on_period UNK on_lparen on_symbeg UNK on_rparen on_nl UNK on_op on_const on_period UNK on_period UNK on_nl UNK # skip pagination if already was paginated by scope
def UNK on_lparen resource on_comma attributes on_rparen on_ignored_nl if resource on_period UNK on_lparen on_symbeg UNK on_rparen on_nl resource on_period UNK # @param resource [ActiveRecord::Base] # @param attributes [Array<Hash] # @return [ActiveRecord::Base] resource #
def UNK on_lparen resource on_rparen on_ignored_nl UNK on_lparen resource on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl if UNK on_nl # @param resource [ActiveRecord::Base] # @return [ActiveRecord::Base] resource #
def UNK on_nl if UNK on_nl UNK on_lparen UNK params on_lbracket on_symbeg UNK on_rbracket on_rparen on_nl else on_ignored_nl UNK on_nl # @return [String]
def UNK on_nl params on_lbracket on_symbeg UNK on_rbracket on_period UNK on_nl end on_nl end on_nl end on_nl end on_nl EMP # @return [Boolean] true if user requested to create one more # resource after creating this one.
