UNK on_const on_nl on_ignored_nl def UNK on_nl UNK UNK on_lparen self on_rparen UNK UNK on_nl end on_nl on_ignored_nl UNK on_const # Each Namespace builds up it's own menu as the global navigation # # To build a new menu: # # menu = Menu.new do |m| # m.add label: 'Dashboard', url: '/' # m.add label: 'Users', url: '/users' # end # # If you're interested in configuring a menu item, take a look at the # options available in `ActiveAdmin::MenuItem` #
UNK on_lparen self on_rparen UNK UNK on_nl end on_nl on_ignored_nl UNK on_const on_nl def UNK on_nl on_ivar on_op UNK UNK # MenuNode
def UNK on_lparen options on_rparen on_ignored_nl UNK on_op on_const on_period UNK on_lparen options on_period UNK on_lparen UNK UNK on_rparen on_rparen # Recursively builds any given menu items. There are two syntaxes supported, # as shown in the below examples. Both create an identical menu structure. # # Example 1: # menu = Menu.new # menu.add label: 'Dashboard' do |dash| # dash.add label: 'My Child Dashboard' # end # # Example 2: # menu = Menu.new # menu.add label: 'Dashboard' # menu.add parent: 'Dashboard', label: 'My Child Dashboard' #
def UNK on_lparen item on_rparen on_ignored_nl on_ivar on_period UNK on_period UNK on_lparen item on_rparen on_op on_ivar on_period UNK on_period UNK # Whether any children match the given item.
def UNK on_lparen item on_rparen on_ignored_nl self on_op item on_op UNK on_lparen item on_rparen on_nl end on_nl on_ignored_nl def UNK # Used in the UI to visually distinguish which menu item is selected.
def UNK on_lparen options on_rparen on_ignored_nl item on_op on_const on_op on_const on_period UNK on_lparen options on_rparen on_nl item on_period UNK # The method that actually adds new menu items. Called by the public method. # If this ID is already taken, transfer the children of the existing item to the new item.
