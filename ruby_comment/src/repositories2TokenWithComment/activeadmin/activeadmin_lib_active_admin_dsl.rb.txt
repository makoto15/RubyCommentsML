UNK UNK on_nl on_ignored_nl def UNK on_lparen config on_rparen on_ignored_nl UNK on_op config on_nl end on_nl on_ignored_nl def UNK on_lparen # The Active Admin DSL. This class is where all the registration blocks # are evaluated. This is the central place for the API given to # users of Active Admin. #
def UNK on_lparen on_op block on_rparen on_ignored_nl UNK on_op block UNK UNK on_nl end on_nl on_ignored_nl def config on_nl UNK # Runs the registration block inside this object
def config on_nl UNK on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK on_lparen UNK on_rparen # The instance of ActiveAdmin::Resource that's being registered # currently. You can use this within your registration blocks to # modify options: # # eg: # # ActiveAdmin.register Post do # config.sort_order = "id_desc" # end #
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK on_lparen UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen on_op # Include a module with this resource. The modules's `included` method # is called with the instance of the `ActiveAdmin::DSL` passed into it. # # eg: # # module HelpSidebar # # def self.included(dsl) # dsl.sidebar "Help" do # "Call us for Help" # end # end # # end # # ActiveAdmin.register Post do # include HelpSidebar # end # # @param [Module] mod A module to include # # @return [Nil]
def UNK on_lparen on_op block on_rparen on_ignored_nl UNK on_period UNK on_period UNK on_lparen on_op block on_rparen UNK UNK on_nl UNK # Returns the controller for this resource. If you pass a # block, it will be evaluated in the controller. # # Example: # # ActiveAdmin.register Post do # # controller do # def some_method_on_controller # # Method gets added to Admin::PostsController # end # end # # end #
def UNK on_lparen UNK on_comma options on_op UNK UNK on_comma on_op block on_rparen on_ignored_nl config on_period UNK on_lparen UNK on_comma # Add a new action item to the resource # # @param [Symbol] name # @param [Hash] options valid keys include: # :only: A single or array of controller actions to display # this action item on. # :except: A single or array of controller actions not to # display this action item on.
def UNK on_lparen title on_comma options on_op UNK UNK on_comma on_op block on_rparen on_ignored_nl UNK title on_period UNK UNK on_nl # Add a new batch action item to the resource # Provide a symbol/string to register the action, options, & block to execute on request # # To unregister an existing action, just provide the symbol & pass false as the second param # # @param [Symbol or String] title # @param [Hash] options valid keys include: # => :if is a proc that will be called to determine if the BatchAction should be displayed # => :sort_order is used to sort the batch actions ascending # => :confirm is a string which the user will have to accept in order to process the action #
UNK title on_period UNK UNK on_nl UNK on_op title on_period UNK on_period UNK on_lparen UNK UNK UNK on_comma UNK UNK # Create symbol & title information
UNK options on_op UNK on_nl config on_period UNK on_lparen UNK on_comma title on_comma options on_comma on_op block on_rparen on_nl UNK # Either add/remove the batch action
def UNK on_lparen options on_op UNK UNK on_rparen on_ignored_nl config on_period UNK on_op options on_nl end on_nl on_ignored_nl def UNK # Set the options that are available for the item that will be placed in the global # navigation of the menu.
def UNK on_lparen UNK on_op UNK on_comma on_op block on_rparen on_ignored_nl config on_period UNK on_op UNK on_op block on_nl end # Set the name of the navigation menu to display. This is mainly used in conjunction with the # `#belongs_to` functionality. # # @param [Symbol] menu_name The name of the menu to display as the global navigation # when viewing this resource. Defaults to a menu named `:default`. # # Pass a block returning the name of a menu you want rendered for the request, being # executed in the context of the controller #
def UNK on_lparen on_op block on_rparen on_ignored_nl config on_period UNK on_op block on_nl end on_nl on_ignored_nl def UNK on_lparen UNK # Rewrite breadcrumb links. # Block will be executed inside controller. # Block must return an array if you want to rewrite breadcrumb links. # # Example: # ActiveAdmin.register Post do # # breadcrumb do # [ # link_to('my piece', '/my/link/to/piece') # ] # end # end #
