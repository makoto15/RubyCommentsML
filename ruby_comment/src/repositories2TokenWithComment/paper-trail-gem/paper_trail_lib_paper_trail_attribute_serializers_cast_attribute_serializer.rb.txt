on_ignored_nl UNK UNK UNK UNK on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK UNK on_lparen UNK # frozen_string_literal: true
UNK on_const on_nl UNK on_const on_nl UNK UNK on_lparen UNK on_rparen on_ignored_nl on_ivar on_op UNK on_nl end on_nl on_ignored_nl UNK # :nodoc:
UNK on_const on_nl UNK UNK on_lparen UNK on_rparen on_ignored_nl on_ivar on_op UNK on_nl end on_nl on_ignored_nl UNK on_nl on_ignored_nl UNK # The `CastAttributeSerializer` (de)serializes model attribute values. For # example, the string "1.99" serializes into the integer `1` when assigned # to an attribute of type `ActiveRecord::Type::Integer`. # # This implementation depends on the `type_for_attribute` method, which was # introduced in rails 4.2. As of PT 8, we no longer support rails < 4.2.
UNK UNK on_nl on_ivar on_op on_lparen on_ivar on_period UNK on_lparen UNK UNK on_rparen on_op on_ivar on_period UNK on_op UNK UNK # Returns a hash mapping attributes to hashes that map strings to # integers. Example: # # ``` # { "status" => { "draft"=>0, "published"=>1, "archived"=>2 } } # ``` # # ActiveRecord::Enum was added in AR 4.1 # http://edgeguides.rubyonrails.org/4_1_release_notes.html#active-record-enums
UNK on_const on_nl UNK UNK on_lparen UNK UNK val on_rparen on_ignored_nl on_const on_period UNK on_lparen on_ivar UNK UNK on_rparen on_period # Uses AR 5's `serialize` and `deserialize`.
val on_nl UNK on_ignored_nl on_const on_period UNK on_lparen on_ivar UNK UNK on_rparen on_period UNK on_lparen val on_rparen on_nl end on_nl # Because PT 4 used to save the string version of enums to `object_changes`
