on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl def UNK on_period UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period # frozen_string_literal: true
UNK on_const on_nl def UNK on_period UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK on_lparen on_ignored_nl UNK UNK UNK on_ignored_nl # Extensions to rails controllers. Provides convenient ways to pass certain # information to the model layer, with `controller_info` and `whodunnit`. # Also includes a convenient on/off switch, # `paper_trail_enabled_for_controller`.
def UNK on_nl UNK UNK UNK on_lparen UNK on_rparen on_nl UNK on_period UNK on_lparen UNK UNK on_rparen on_op UNK on_nl # Returns the user who is responsible for any changes that occur. # By default this calls `current_user` and returns the result. # # Override this method in your controller to call a different # method, e.g. `current_person`, or anything you like. # # @api public
def UNK on_nl UNK UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_op on_const on_period UNK on_nl end on_nl on_ignored_nl # Returns any information about the controller or request that you # want PaperTrail to store alongside any changes that occur. By # default this returns an empty hash. # # Override this method in your controller to return a hash of any # information you need. The hash's keys must correspond to columns # in your `versions` table, so don't forget to add any new columns # you need. # # For example: # # {:ip => request.remote_ip, :user_agent => request.user_agent} # # The columns `ip` and `user_agent` must exist in your `versions` # table. # # Use the `:meta` option to # `PaperTrail::Model::ClassMethods.has_paper_trail` to store any extra # model-level data you need. # # @api public
def UNK on_nl on_op on_const on_period UNK on_nl end on_nl on_ignored_nl UNK on_nl on_ignored_nl def UNK on_nl on_op on_const on_period # Returns `true` (default) or `false` depending on whether PaperTrail # should be active for the current request. # # Override this method in your controller to specify when PaperTrail # should be off. # # ``` # def paper_trail_enabled_for_controller # # Don't omit `super` without a good reason. # super && request.user_agent != 'Disable User-Agent' # end # ``` # # @api public
def UNK on_nl on_op on_const on_period UNK on_period UNK on_op UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_op # Tells PaperTrail whether versions should be saved in the current # request. # # @api public
def UNK on_nl UNK on_op on_const on_period UNK on_period UNK on_nl on_op on_const on_period UNK on_period UNK on_op UNK on_nl # Tells PaperTrail who is responsible for any changes that occur. # # @api public
def UNK on_nl UNK on_op on_const on_period UNK on_period UNK on_nl on_op on_const on_period UNK on_period UNK on_op UNK on_nl # Tells PaperTrail any information from the controller you want to store # alongside any changes that occur. # # @api public
