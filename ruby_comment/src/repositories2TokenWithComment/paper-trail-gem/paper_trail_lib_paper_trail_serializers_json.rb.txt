on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK UNK on_ignored_nl UNK UNK on_lparen UNK on_rparen on_ignored_nl on_const # frozen_string_literal: true
UNK on_const on_nl UNK UNK on_ignored_nl UNK UNK on_lparen UNK on_rparen on_ignored_nl on_const UNK on_const on_period UNK UNK on_nl end # An alternate serializer for, e.g. `versions.object`.
on_ignored_nl UNK UNK on_lparen UNK on_rparen on_ignored_nl on_const UNK on_const on_period UNK UNK on_nl end on_nl on_ignored_nl UNK UNK on_lparen # makes all instance methods become module methods as well
UNK UNK on_lparen UNK UNK UNK UNK UNK on_rparen on_ignored_nl UNK UNK UNK on_period UNK on_nl on_ignored_nl UNK UNK on_period # Returns a SQL LIKE condition to be used to match the given field and # value in the serialized object.
UNK UNK UNK on_period UNK on_nl on_ignored_nl UNK UNK on_period UNK on_const on_nl UNK on_period UNK on_lparen UNK on_tstring_content on_embexpr_beg # Convert to JSON to handle strings and nulls correctly.
UNK UNK on_period UNK on_const on_nl UNK on_period UNK on_lparen UNK on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content # If the value is a number, we need to ensure that we find the next # character too, which is either `,` or `}`, to ensure that searching # for the value 12 doesn't yield false positives when the value is # 123.
