on_const on_op on_const on_op on_const on_op on_const on_nl on_ignored_nl UNK on_op self on_nl def UNK on_lparen UNK on_comma UNK on_op # default mime type data for Page::Image#mime_type. # You can use another Apache-compatible mimetab. # mimetab = WEBrick::HTTPUtils.load_mime_types('/etc/mime.types') # Mechanize::Util::DefaultMimeTypes.replace(mimetab)
def UNK on_lparen UNK on_comma UNK on_op UNK on_rparen on_ignored_nl UNK on_lparen UNK on_rparen on_period UNK on_lparen UNK on_rparen on_lbrace # Builds a query string from a given enumerable object # +parameters+. This method uses Mechanize::Util.each_parameter # as preprocessor, which see.
on_lparen s on_period UNK on_op on_tstring_beg on_tstring_end on_op s on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_lbracket on_const on_period UNK on_lparen # WEBrick::HTTP.escape* has some problems about m17n on ruby-1.9.*.
def UNK on_lparen UNK on_comma on_op UNK on_rparen on_ignored_nl UNK UNK on_lparen UNK on_comma UNK on_rparen if UNK on_period UNK # Parses an enumerable object +parameters+ and iterates over the # key-value pairs it contains. # # +parameters+ may be a hash, or any enumerable object which # iterates over [key, value] pairs, typically an array of arrays. # # If a key is paired with an array-like object, the pair is # expanded into multiple occurrences of the key, one for each # element of the array. e.g. { a: [1, 2] } => [:a, 1], [:a, 2] # # If a key is paired with a hash-like object, the pair is expanded # into hash-like multiple pairs, one for each pair of the hash. # e.g. { a: { x: 1, y: 2 } } => ['a[x]', 1], ['a[y]', 2] # # An array-like value is allowed to be specified as hash value. # e.g. { a: { q: [1, 2] } } => ['a[q]', 1], ['a[q]', 2] # # For a non-array-like, non-hash-like value, the key-value pair is # yielded as is.
def self on_period UNK on_lparen s on_comma UNK on_comma UNK on_op UNK on_comma UNK on_op UNK on_rparen on_ignored_nl UNK s # Converts string +s+ from +code+ to UTF-8.
on_const on_period UNK on_lparen src on_rparen on_op on_const on_op on_const on_nl end on_nl UNK on_ignored_nl on_const on_op on_lbrace on_ignored_nl on_const # NKF.guess of JRuby may return nil
on_const on_op on_lbrace on_ignored_nl on_const on_op on_const on_op on_const on_op on_const on_comma on_ignored_nl on_const on_op on_const on_op on_const on_op on_const # Old NKF from 1.8, still bundled with Rubinius
