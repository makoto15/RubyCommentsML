on_ignored_nl UNK on_const on_op on_const on_op on_const on_op on_const on_op on_const on_op on_const on_nl UNK on_const on_op on_const on_nl on_ignored_nl ## # This class represents a select list where multiple values can be selected. # MultiSelectList#value= accepts an array, and those values are used as # values for the select list. For example, to select multiple values, # simply do this: # # list.value = ['one', 'two'] # # Single values are still supported, so these two are the same: # # list.value = ['one'] # list.value = 'one'
on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_nl value on_op value on_period UNK UNK on_op UNK on_op ## # :method: option_with # # Find one option on this select list with +criteria+ # # Example: # # select_list.option_with(:value => '1').value = 'foo'
on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_nl value on_op value on_period UNK UNK on_op UNK on_op UNK ## # :mehtod: option_with!(criteria) # # Same as +option_with+ but raises an ElementNotFoundError if no button # matches +criteria+
on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_nl value on_op value on_period UNK UNK on_op UNK on_op UNK UNK ## # :method: options_with # # Find all options on this select list with +criteria+ # # Example: # # select_list.options_with(:value => /1|2/).each do |field| # field.value = '20' # end
def UNK on_nl on_ivar on_op UNK UNK on_nl UNK on_period UNK on_lparen on_op on_symbeg UNK on_rparen on_nl end on_nl on_ignored_nl # Select no options
def UNK on_nl on_ivar on_op UNK UNK on_nl UNK on_period UNK on_lparen on_op on_symbeg UNK on_rparen on_nl end on_nl on_ignored_nl # Select all options
def UNK on_nl on_ivar on_period UNK on_lparen on_op on_symbeg UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen # Get a list of all selected options
