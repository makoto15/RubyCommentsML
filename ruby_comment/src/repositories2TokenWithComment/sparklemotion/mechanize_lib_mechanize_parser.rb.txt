on_ignored_nl UNK on_const on_op on_const on_nl on_ignored_nl UNK on_const on_nl on_ignored_nl UNK on_op on_const on_period UNK UNK on_words_sep on_tstring_content on_words_sep ## # The parser module provides standard methods for accessing the headers and # content of a response that are shared across pluggable parsers.
on_ignored_nl on_const on_op UNK on_tstring_content UNK UNK UNK UNK on_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl on_ignored_nl UNK on_symbeg ## # Special filenames that must be escaped
on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK header UNK on_nl on_ignored_nl on_ignored_nl UNK on_symbeg ## # The URI this file was retrieved from
on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK header UNK on_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl on_ignored_nl UNK on_symbeg ## # The Mechanize::Headers for this file
on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl on_ignored_nl UNK on_symbeg header on_comma on_symbeg on_op on_comma on_symbeg on_op on_nl on_ignored_nl on_ignored_nl UNK ## # The HTTP response code
on_ignored_nl UNK on_symbeg header on_comma on_symbeg on_op on_comma on_symbeg on_op on_nl on_ignored_nl on_ignored_nl UNK on_symbeg header on_comma on_symbeg on_op on_comma ## # :method: [] # # :call-seq: # [](header) # # Access HTTP +header+ by name
on_ignored_nl UNK on_symbeg header on_comma on_symbeg on_op on_comma on_symbeg on_op on_nl on_ignored_nl on_ignored_nl UNK on_symbeg header on_comma on_symbeg UNK on_comma ## # :method: []= # # :call-seq: # []=(header, value) # # Set HTTP +header+ to +value+
on_ignored_nl UNK on_symbeg header on_comma on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl on_ignored_nl UNK on_symbeg header on_comma on_symbeg UNK on_comma ## # :method: key? # # :call-seq: # key?(header) # # Is the named +header+ present?
on_ignored_nl UNK on_symbeg header on_comma on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl on_ignored_nl UNK on_symbeg header on_comma on_symbeg UNK on_comma ## # :method: each # # Enumerate HTTP headers
on_ignored_nl UNK on_symbeg header on_comma on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl on_ignored_nl UNK UNK UNK on_op on_ivar on_nl UNK ## # :method: each # # Enumerate HTTP headers in capitalized (canonical) form
on_ignored_nl UNK UNK UNK on_op on_ivar on_nl UNK on_op UNK on_nl on_ignored_nl if on_ivar UNK on_ignored_nl UNK on_op on_ivar on_nl ## # Extracts the filename from a Content-Disposition header in the #response # or from the URI. If +full_path+ is true the filename will include the # host name and path to the resource, otherwise a filename in the current # directory is given.
if UNK UNK on_op on_ivar UNK on_tstring_beg on_tstring_content on_tstring_end UNK UNK on_nl UNK on_op on_ignored_nl on_const on_op on_const on_op on_const # Set the filename
on_ignored_nl UNK UNK UNK on_nl on_ivar on_op on_const on_op on_const on_period UNK on_nl on_ignored_nl UNK on_period UNK UNK on_op UNK ## # Creates a Mechanize::Header from the Net::HTTPResponse +response+. # # This allows the Net::HTTPResponse to be garbage collected sooner.
on_ignored_nl UNK UNK filename on_nl UNK on_op filename on_op on_ivar on_nl on_ignored_nl UNK on_op UNK on_nl on_ignored_nl UNK on_const on_period ## # Finds a free filename based on +filename+, but is not race-free
