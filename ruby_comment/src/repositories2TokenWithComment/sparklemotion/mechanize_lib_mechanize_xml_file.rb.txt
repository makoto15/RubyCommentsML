on_ignored_nl UNK on_const on_op on_const on_op on_const on_op on_const on_nl UNK on_const on_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl ## # This class encapsulates an XML file. If Mechanize finds a content-type # of 'text/xml' or 'application/xml' this class will be instantiated and # returned. This class also opens up the +search+ and +at+ methods available # on the underlying Nokogiri::XML::Document object. # # Example: # # require 'mechanize' # # agent = Mechanize.new # xml = agent.get('http://example.org/some-xml-file.xml') # xml.class #=> Mechanize::XmlFile # xml.search('//foo[@attr="bar"]/etc')
on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK UNK UNK UNK on_op UNK on_comma UNK on_op UNK on_comma UNK on_op UNK # The underlying Nokogiri::XML::Document object
on_ignored_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_comma ## # :method: search # # Search for +paths+ in the page using Nokogiri's #search. The +paths+ can # be XPath or CSS and an optional Hash of namespaces may be appended. # # See Nokogiri::XML::Node#search for further details.
on_ignored_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_nl UNK EMP EMP EMP EMP EMP EMP EMP EMP ## # :method: at # # Search through the page for +path+ under +namespace+ using Nokogiri's #at. # The +path+ may be either a CSS or XPath expression. # # See also Nokogiri::XML::Node#at
