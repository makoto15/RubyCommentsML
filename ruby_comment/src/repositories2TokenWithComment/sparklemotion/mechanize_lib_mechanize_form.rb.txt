on_ignored_nl class on_const on_op on_const on_nl UNK on_const on_nl UNK on_const on_op on_const on_nl on_ignored_nl UNK on_symbeg method on_comma on_symbeg # This class encapsulates a form parsed out of an HTML page. Each type of # input field available in a form can be accessed through this object. # # == Examples # # Find a form and print out its fields # # form = page.forms.first # => Mechanize::Form # form.fields.each { |f| puts f.name } # # Set the input field 'name' to "Aaron" # # form['name'] = 'Aaron' # puts form['name']
UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_symbeg fields # Content-Type for form data (i.e. application/x-www-form-urlencoded)
UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_symbeg fields on_nl on_ignored_nl UNK on_symbeg node # Character encoding of form data (i.e. UTF-8)
UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_symbeg fields on_nl on_ignored_nl UNK on_symbeg node on_nl UNK UNK node UNK # When true, character encoding errors will never be never raised on form # submission. Default is false
UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen node on_comma UNK on_op nil on_comma UNK on_op nil on_rparen on_ignored_nl on_ivar # for backward compatibility
def UNK on_lparen field_name on_rparen on_ignored_nl fields on_period UNK on_lbrace on_op f on_op f on_period name on_op field_name on_rbrace on_nl # Returns whether or not the form contains a field with +field_name+
def UNK on_lparen value on_rparen on_ignored_nl fields on_period UNK on_lbrace on_op f on_op f on_period value on_op value on_rbrace on_nl # Returns whether or not the form contains a field with +value+
def UNK on_nl fields on_period UNK on_lparen on_op on_symbeg name on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl fields on_period # Returns all field names (keys) for this form
def UNK on_nl fields on_period UNK on_lparen on_op on_symbeg value on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_op # Returns all field values for this form
def UNK on_nl on_ivar on_op buttons on_period select on_lbrace on_op f on_op f on_period class on_op on_const on_rbrace on_nl end # Returns all buttons of type Submit
def UNK on_nl on_ivar on_op buttons on_period select on_lbrace on_op f on_op f on_period class on_op on_const on_rbrace on_nl end # Returns all buttons of type Reset
def UNK on_nl on_ivar on_op fields on_period select on_lbrace on_op f on_op f on_period class on_op on_const on_rbrace on_nl end # Returns all fields of type Text
def UNK on_nl on_ivar on_op fields on_period select on_lbrace on_op f on_op f on_period class on_op on_const on_rbrace on_nl end # Returns all fields of type Hidden
def UNK on_nl on_ivar on_op fields on_period select on_lbrace on_op f on_op f on_period class on_op on_const on_rbrace on_nl end # Returns all fields of type Textarea
def UNK on_nl on_ivar on_op fields on_period select on_lbrace on_op f on_op f on_period class on_op on_const on_rbrace on_nl end # Returns all fields of type Keygen
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK on_lbrace on_op f on_op f on_period name on_op UNK on_rbrace on_nl # Returns whether or not the form contains a Submit button named +button_name+
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK on_lbrace on_op f on_op f on_period name on_op UNK on_rbrace on_nl # Returns whether or not the form contains a Reset button named +button_name+
def UNK on_lparen field_name on_rparen on_ignored_nl UNK on_period UNK on_lbrace on_op f on_op f on_period name on_op field_name on_rbrace on_nl # Returns whether or not the form contains a Text field named +field_name+
def UNK on_lparen field_name on_rparen on_ignored_nl UNK on_period UNK on_lbrace on_op f on_op f on_period name on_op field_name on_rbrace on_nl # Returns whether or not the form contains a Hidden field named +field_name+
def UNK on_lparen field_name on_rparen on_ignored_nl UNK on_period UNK on_lbrace on_op f on_op f on_period name on_op field_name on_rbrace on_nl # Returns whether or not the form contains a Textarea named +field_name+
def UNK on_nl on_ivar on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_lbracket on_tstring_beg on_tstring_content # This method is a shortcut to get form's DOM id. # Common usage: # page.form_with(:dom_id => "foorm") # Note that you can also use +:id+ to get to this method: # page.form_with(:id => "foorm")
def UNK on_nl on_ivar on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl end on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK # This method is a shortcut to get form's DOM class. # Common usage: # page.form_with(:dom_class => "foorm") # Note that you can also use +:class+ to get to this method: # page.form_with(:class => "foorm") # However, attribute values are compared literally as string, so # form_with(class: "a") does not match a form with class="a b". # Use form_with(css: "form.a") instead.
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg node on_comma on_symbeg search on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg ## # :method: search # # Shorthand for +node.search+. # # See Nokogiri::XML::Node#search for details.
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg node on_comma on_symbeg search on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK ## # :method: css # # Shorthand for +node.css+. # # See also Nokogiri::XML::Node#css for details.
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg node on_comma on_symbeg search on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma ## # :method: xpath # # Shorthand for +node.xpath+. # # See also Nokogiri::XML::Node#xpath for details.
on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg node on_comma on_symbeg search on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg ## # :method: at # # Shorthand for +node.at+. # # See also Nokogiri::XML::Node#at for details.
on_ignored_nl on_ignored_nl UNK on_symbeg node on_comma on_symbeg search on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK ## # :method: at_css # # Shorthand for +node.at_css+. # # See also Nokogiri::XML::Node#at_css for details.
on_ignored_nl UNK on_symbeg node on_comma on_symbeg search on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma ## # :method: at_xpath # # Shorthand for +node.at_xpath+. # # See also Nokogiri::XML::Node#at_xpath for details.
def UNK on_lparen field_name on_comma value on_op nil on_rparen on_ignored_nl fields on_op on_const on_period new on_lparen on_lbrace on_tstring_beg on_tstring_content on_tstring_end # Add a field with +field_name+ and +value+
def UNK fields on_op on_lbrace on_rbrace on_nl fields on_period each do on_op name on_comma v on_op on_ignored_nl UNK v on_nl ## # This method sets multiple fields on the form. It takes a list of +fields+ # which are name, value pairs. # # If there is more than one field found with the same name, this method will # set the first one found. If you want to set the value of a duplicate # field, use a value which is a Hash with the key as the index in to the # form. The index is zero based. # # For example, to set the second field named 'foo', you could do the # following: # # form.set_fields :foo => { 1 => 'bar' }
def on_op on_lparen field_name on_rparen on_ignored_nl f on_op field on_lparen field_name on_rparen on_nl f on_op f on_period value on_nl end # Fetch the value of the first input field with the name passed in. Example: # puts form['name']
def on_op on_lparen field_name on_comma value on_rparen on_ignored_nl f on_op field on_lparen field_name on_rparen on_nl if f on_nl f on_period # Set the value of the first input field with the name passed in. Example: # form['name'] = 'Aaron'
def UNK on_lparen UNK on_comma on_op UNK on_rparen on_ignored_nl on_lparen method on_op UNK on_period UNK on_rparen on_period UNK on_lparen on_tstring_beg # Treat form fields like accessors.
def UNK button on_op nil on_comma UNK on_op on_lbrace on_rbrace on_nl on_ivar on_period UNK on_lparen self on_comma button on_comma UNK # Submit the form. Does not include the +button+ as a form parameter. # Use +click_button+ or provide button as a parameter.
def UNK on_lparen button on_op buttons on_period UNK on_rparen on_ignored_nl UNK on_lparen button on_rparen on_nl end on_nl on_ignored_nl def UNK # Submit form using +button+. Defaults # to the first button.
def UNK on_lparen field on_rparen on_ignored_nl UNK unless field on_period UNK on_nl field on_period UNK on_period UNK on_lbrace on_op on_lparen # This method is sub-method of build_query. # It converts charset of query value of fields into expected one.
def UNK on_lparen buttons on_op on_lbracket on_rbracket on_rparen on_ignored_nl UNK on_op on_lbracket on_rbracket on_nl on_ivar on_period UNK on_period UNK on_lparen # This method builds an array of arrays that represent the query # parameters to be used with this form. The return value can then # be used to create a query string for this form.
UNK on_period UNK do on_op UNK on_op on_ignored_nl checked on_op UNK on_period select on_lparen on_op on_symbeg checked on_rparen on_nl on_ignored_nl # take one radio button from each group
UNK on_op UNK on_lparen UNK on_rparen on_nl UNK on_period UNK on_lparen on_op UNK on_rparen on_nl end on_nl on_ignored_nl UNK on_nl # DOM order
def UNK on_nl index on_op on_int on_nl on_ignored_nl fields on_period each do on_op field on_op on_ignored_nl if on_const on_op field # This method adds an index to all fields that have Hash nodes. This # enables field sorting to maintain order.
def UNK on_lparen button on_rparen on_ignored_nl unless button on_period node on_period UNK on_op on_ivar on_period UNK UNK on_ignored_nl UNK on_op # This method adds a button to the query. If the form needs to be # submitted with multiple buttons, pass each button to this method.
def UNK on_nl on_ivar on_op on_lbracket on_rbracket on_nl end on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_nl on_ignored_nl # This method allows the same form to be submitted second time # with the different submit button being clicked.
on_ivar on_op on_lbracket on_rbracket on_nl end on_nl on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_nl on_ignored_nl def UNK on_nl # In the future, should add more functionality here to reset the form values to their defaults.
def UNK on_nl UNK on_op UNK on_lparen on_rparen on_nl on_ignored_nl UNK on_ivar on_period UNK on_nl when UNK on_tstring_content UNK on_nl # This method calculates the request data to be sent back to the server # for this form, depending on if this is a regular post, get, or a # multi-part post,
def UNK on_lparen field_name on_rparen on_ignored_nl on_ivar on_period UNK on_lbrace on_op f on_op f on_period name on_op field_name on_rbrace on_nl # Removes all fields with name +field_name+.
on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg field on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg button on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK ## # :method: field_with(criteria) # # Find one field that matches +criteria+ # Example: # form.field_with(:id => "exact_field_id").value = 'hello'
on_ignored_nl on_ignored_nl UNK on_symbeg field on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg button on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg ## # :method: field_with!(criteria) # # Same as +field_with+ but raises an ElementNotFoundError if no field matches # +criteria+
on_ignored_nl UNK on_symbeg field on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg button on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK ## # :method: fields_with(criteria) # # Find all fields that match +criteria+ # Example: # form.fields_with(:value => /foo/).each do |field| # field.value = 'hello!' # end
on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg button on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK ## # :method: button_with(criteria) # # Find one button that matches +criteria+ # Example: # form.button_with(:value => /submit/).value = 'hello'
on_ignored_nl on_ignored_nl UNK on_symbeg button on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg ## # :method: button_with!(criteria) # # Same as +button_with+ but raises an ElementNotFoundError if no button # matches +criteria+
on_ignored_nl UNK on_symbeg button on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK ## # :method: buttons_with(criteria) # # Find all buttons that match +criteria+ # Example: # form.buttons_with(:value => /submit/).each do |button| # button.value = 'hello!' # end
on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK ## # :method: file_upload_with(criteria) # # Find one file upload field that matches +criteria+ # Example: # form.file_upload_with(:file_name => /picture/).value = 'foo'
on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg ## # :mehtod: file_upload_with!(criteria) # # Same as +file_upload_with+ but raises an ElementNotFoundError if no button # matches +criteria+
on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK ## # :method: file_uploads_with(criteria) # # Find all file upload fields that match +criteria+ # Example: # form.file_uploads_with(:file_name => /picutre/).each do |field| # field.value = 'foo!' # end
on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl def ## # :method: radiobutton_with(criteria) # # Find one radio button that matches +criteria+ # Example: # form.radiobutton_with(:name => /woo/).check
on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl def UNK ## # :mehtod: radiobutton_with!(criteria) # # Same as +radiobutton_with+ but raises an ElementNotFoundError if no button # matches +criteria+
on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen ## # :method: radiobuttons_with(criteria) # # Find all radio buttons that match +criteria+ # Example: # form.radiobuttons_with(:name => /woo/).each do |field| # field.check # end
on_ignored_nl on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen q on_rparen q on_period UNK on_lparen ## # :method: checkbox_with(criteria) # # Find one checkbox that matches +criteria+ # Example: # form.checkbox_with(:name => /woo/).check
on_ignored_nl on_ignored_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen q on_rparen q on_period UNK on_lparen self ## # :mehtod: checkbox_with!(criteria) # # Same as +checkbox_with+ but raises an ElementNotFoundError if no button # matches +criteria+
on_ignored_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen q on_rparen q on_period UNK on_lparen self on_rparen ## # :method: checkboxes_with(criteria) # # Find all checkboxes that match +criteria+ # Example: # form.checkboxes_with(:name => /woo/).each do |field| # field.check # end
q on_period UNK on_lparen self on_rparen on_lbrace on_ignored_nl q on_period breakable on_semicolon q on_period group on_lparen on_int on_comma on_tstring_beg on_tstring_content # :nodoc:
on_ignored_nl UNK on_nl on_ignored_nl def UNK on_nl on_ivar on_op on_lbracket on_rbracket on_nl on_ivar on_op on_lbracket on_rbracket on_nl on_ivar on_op on_lbracket # :nodoc:
on_ivar on_period search on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period each do on_op node on_op on_ignored_nl UNK on_op on_lparen node on_lbracket # Find all input tags
on_ivar on_period search on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period each do on_op node on_op on_ignored_nl UNK unless node on_lbracket on_tstring_beg # Find all textarea tags
on_ivar on_period search on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period each do on_op node on_op on_ignored_nl UNK unless node on_lbracket on_tstring_beg # Find all select tags
on_ivar on_period search on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period each do on_op node on_op on_ignored_nl UNK on_op on_lparen node on_lbracket # Find all submit button tags # FIXME: what can I do with the reset buttons?
on_ivar on_period search on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period each do on_op node on_op on_ignored_nl on_ivar on_op on_const on_period new # Find all keygen tags
class on_op on_const on_nl def b on_nl UNK on_period UNK on_lparen on_const on_op on_const on_rparen on_nl end on_nl end on_nl # Define String#b for Ruby < 2.0
