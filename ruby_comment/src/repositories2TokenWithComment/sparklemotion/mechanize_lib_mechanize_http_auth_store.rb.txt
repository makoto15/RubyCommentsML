on_ignored_nl UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl UNK UNK UNK on_ignored_nl UNK UNK UNK on_ignored_nl on_ignored_nl def UNK ## # A credential store for HTTP authentication. # # uri = URI 'http://example' # # store = Mechanize::HTTP::AuthStore.new # store.add_auth uri, 'user1', 'pass' # store.add_auth uri, 'user2', 'pass', 'realm' # # user, pass = store.credentials_for uri, 'realm' #=> 'user2', 'pass' # user, pass = store.credentials_for uri, 'other' #=> 'user1', 'pass' # # store.remove_auth uri # removes all credentials
on_ignored_nl UNK UNK UNK on_ignored_nl on_ignored_nl def UNK on_nl UNK on_op on_const on_period UNK UNK on_op UNK on_comma uri on_op # :nodoc:
on_ignored_nl on_ignored_nl def UNK on_nl UNK on_op on_const on_period UNK UNK on_op UNK on_comma uri on_op on_ignored_nl UNK on_lbracket uri # :nodoc:
on_ignored_nl def UNK on_nl UNK on_op on_const on_period UNK UNK on_op UNK on_comma uri on_op on_ignored_nl UNK on_lbracket uri on_rbracket ## # Creates a new AuthStore
on_ignored_nl def UNK uri on_comma UNK on_comma UNK on_comma realm on_op nil on_comma UNK on_op nil on_nl uri on_op on_const ## # Adds credentials +user+, +pass+ for the server at +uri+. If +realm+ is # set the credentials are used only for that realm. If +realm+ is not set # the credentials become the default for any realm on that URI. # # +domain+ and +realm+ are exclusive as NTLM does not follow RFC # 2617. If +domain+ is given it is only used for NTLM authentication.
on_ignored_nl def UNK UNK on_comma UNK on_comma UNK on_op nil on_nl UNK UNK on_nl UNK UNK on_ignored_nl UNK on_op on_lbracket ## # USE OF add_default_auth IS NOT RECOMMENDED AS IT MAY EXPOSE PASSWORDS TO # THIRD PARTIES # # Adds credentials +user+, +pass+ as the default authentication credentials. # If no other credentials are available these will be returned from # credentials_for. # # If +domain+ is given it is only used for NTLM authentication.
on_ignored_nl def UNK uri on_comma UNK on_nl UNK on_period UNK UNK on_op UNK on_op on_ignored_nl UNK uri on_comma UNK on_period ## # Returns true if credentials exist for the +challenges+ from the server at # +uri+.
on_ignored_nl def UNK uri on_comma realm on_nl uri on_op on_const uri UNK on_const on_op uri on_nl on_ignored_nl uri on_op UNK ## # Retrieves credentials for +realm+ on the server at +uri+.
on_ignored_nl def UNK uri on_comma realm on_op nil on_nl uri on_op on_const uri UNK on_const on_op uri on_nl on_ignored_nl uri ## # Removes credentials for +realm+ on the server at +uri+. If +realm+ is not # set all credentials for the server at +uri+ are removed.
