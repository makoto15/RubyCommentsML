on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content on_tstring_end # frozen_string_literal: true
on_ivar on_op on_const on_op on_const on_period new on_lparen UNK on_comma UNK on_rparen on_nl on_ivar on_op on_const on_op on_const on_op on_const # TODO: needs a better name, or inlining its methods
def UNK on_lparen UNK on_comma UNK on_comma UNK on_rparen on_ignored_nl UNK on_op on_const on_op on_const on_op on_const on_period new on_lparen # Invokes a series of steps +steps_text+. Example: # # invoke(%Q{ # Given I have 8 cukes in my belly # Then I should not be thirsty # })
def UNK on_lparen UNK on_comma UNK on_comma UNK on_op UNK on_rparen on_ignored_nl UNK on_op UNK on_lparen UNK on_rparen on_nl UNK # @api private # This allows users to attempt to find, match and execute steps # from code as the features are running, as opposed to regular # steps which are compiled into test steps before execution. # # These are commonly called nested steps.
registry on_period UNK on_lparen UNK on_comma on_op UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl registry on_period UNK on_nl # TODO: kill with fire
