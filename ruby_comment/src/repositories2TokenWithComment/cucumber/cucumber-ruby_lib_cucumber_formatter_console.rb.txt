on_ignored_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const # frozen_string_literal: true
on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl # rubocop:disable Metrics/ModuleLength
on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl on_ignored_nl def UNK on_lparen keyword on_comma UNK on_comma status on_comma # This module contains helper methods that are used by formatters that # print output to the terminal. # # FORMAT is a hash of Proc objects, keyed by step-definition types, e.g. # "FORMAT[:passed]". The Proc is called for each line of the step's # output. # # format_step calls format_string, format_string calls format_for to obtain # the formatting Proc. # # Example: # # The ANSI color console formatter defines a map of step-type to output # color (e.g. "passed" to "green"), then builds methods named for the # step-types (e.g. "def passed"), which themselves wrap the corresponding # color-named methods provided by Term::ANSIColor (e.g. "def red"). # # During output, each line is processed by passing it to the formatter Proc # which returns the formatted (e.g. colored) string.
def UNK on_lparen UNK on_comma UNK on_rparen on_ignored_nl return UNK unless UNK on_op UNK on_op on_int on_nl UNK on_period UNK # http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/10655
keyword on_op UNK on_period UNK on_lparen UNK on_rparen on_nl on_ivar on_op on_const on_op on_const on_period UNK on_lparen keyword on_comma UNK # collect snippet data for undefined steps
