on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl class on_const UNK UNK UNK on_comma UNK step_arguments on_nl on_ignored_nl # frozen_string_literal: true
class on_const UNK UNK UNK on_comma UNK step_arguments on_nl on_ignored_nl def UNK on_lparen UNK on_comma UNK on_comma step_arguments on_rparen on_ignored_nl # Represents the match found between a Test Step and its activation
UNK UNK UNK on_comma UNK step_arguments on_nl on_ignored_nl def UNK on_lparen UNK on_comma UNK on_comma step_arguments on_rparen on_ignored_nl UNK on_tstring_beg #:nodoc:
def UNK on_lparen format on_op UNK on_lparen UNK on_rparen UNK UNK UNK on_comma on_op UNK on_rparen on_ignored_nl UNK on_lparen on_ivar # Formats the matched arguments of the associated Step. This method # is usually called from visitors, which render output. # # The +format+ can either be a String or a Proc. # # If it is a String it should be a format string according to # <tt>Kernel#sprinf</tt>, for example: # # '<span class="param">%s</span></tt>' # # If it is a Proc, it should take one argument and return the formatted # argument, for example: # # lambda { |param| "[#{param}]" } #
on_tstring_beg on_tstring_content UNK UNK on_period class UNK on_tstring_content UNK location UNK on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl UNK on_nl on_ignored_nl #:nodoc:
UNK UNK UNK on_comma UNK UNK on_nl on_ignored_nl def UNK on_lparen UNK on_comma UNK on_rparen on_ignored_nl on_ivar on_op UNK on_nl #:nodoc:
test_step on_nl end on_nl end on_nl on_ignored_nl class on_const on_nl def UNK on_lparen UNK on_rparen on_ignored_nl on_ivar on_op UNK on_nl # noop
