on_ignored_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl UNK on_const on_nl on_const on_op UNK on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end # frozen_string_literal: true
UNK on_const on_nl on_const on_op UNK on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op # Defines aliases for ANSI coloured output. Default colours can be overridden by defining # a <tt>GHERKIN_COLORS</tt> variable in your shell, very much like how you can # tweak the familiar POSIX command <tt>ls</tt> with # $LSCOLORS: http://linux-sxs.org/housekeeping/lscolors.html # # The colours that you can change are: # # <tt>undefined</tt>:: defaults to <tt>yellow</tt> # <tt>pending</tt>:: defaults to <tt>yellow</tt> # <tt>pending_arg</tt>:: defaults to <tt>yellow,bold</tt> # <tt>executing</tt>:: defaults to <tt>grey</tt> # <tt>executing_arg</tt>:: defaults to <tt>grey,bold</tt> # <tt>failed</tt>:: defaults to <tt>red</tt> # <tt>failed_arg</tt>:: defaults to <tt>red,bold</tt> # <tt>passed</tt>:: defaults to <tt>green</tt> # <tt>passed_arg</tt>:: defaults to <tt>green,bold</tt> # <tt>outline</tt>:: defaults to <tt>cyan</tt> # <tt>outline_arg</tt>:: defaults to <tt>cyan,bold</tt> # <tt>skipped</tt>:: defaults to <tt>cyan</tt> # <tt>skipped_arg</tt>:: defaults to <tt>cyan,bold</tt> # <tt>comment</tt>:: defaults to <tt>grey</tt> # <tt>tag</tt>:: defaults to <tt>cyan</tt> # # For instance, if your shell has a black background and a green font (like the # "Homebrew" settings for OS X' Terminal.app), you may want to override passed # steps to be white instead of green. Examples: # # export GHERKIN_COLORS="passed=white" # export GHERKIN_COLORS="passed=white,bold:passed_arg=white,bold,underline" # # (If you're on Windows, use SET instead of export). # To see what colours and effects are available, just run this in your shell: # # ruby -e "require 'rubygems'; require 'term/ansicolor'; puts Term::ANSIColor.attributes" # # Although not listed, you can also use <tt>grey</tt>
on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK UNK on_op UNK on_op on_ignored_nl # Example: export GHERKIN_COLORS="passed=red:failed=yellow"
