class on_const on_op on_const on_op on_const on_nl include on_const on_nl include on_const on_nl include on_const on_nl include on_const on_nl include # Agent is the core class in Huginn, representing a configurable, schedulable, reactive system with memory that can # be sub-classed for many different purposes. Agents can emit Events, as well as receive them and react in many different ways. # The basic Agent API is detailed on the Huginn wiki: https://github.com/huginn/huginn/wiki/Creating-a-new-agent
end on_nl on_ignored_nl def UNK on_nl on_lbrace on_rbrace on_nl end on_nl on_ignored_nl def UNK on_lparen events on_rparen on_ignored_nl end on_nl # Implement me in your subclass of Agent.
on_lbrace on_rbrace on_nl end on_nl on_ignored_nl def UNK on_lparen events on_rparen on_ignored_nl end on_nl on_ignored_nl def UNK on_nl false on_nl # Implement me in your subclass of Agent.
end on_nl on_ignored_nl def UNK on_nl false on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_comma UNK on_comma UNK on_rparen # Implement me in your subclass of Agent.
on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_int on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_lbrace on_rbrace on_rbracket end on_nl on_ignored_nl on_ignored_nl def UNK # Implement me in your subclass of Agent.
end on_nl on_ignored_nl on_ignored_nl def UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_lparen event on_rparen # last two elements in response array are optional
on_ignored_nl def UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_lparen event on_rparen on_ignored_nl event on_op # alternate method signature for receive_web_request # def receive_web_request(request=ActionDispatch::Request.new( ... )) # end
def UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_lparen event on_rparen on_ignored_nl event on_op events # Implement me in your subclass to decide if your Agent is working.
on_ignored_nl def UNK on_nl self on_period schedule on_op UNK unless schedule on_period UNK on_op cannot_be_scheduled? on_nl end on_nl on_ignored_nl def # Callbacks
on_ignored_nl UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_nl unless cannot_be_scheduled? on_nl UNK on_period UNK on_lparen on_symbeg #Validation Methods
end on_nl on_ignored_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl UNK UNK on_nl UNK true on_comma on_tstring_beg on_tstring_content on_tstring_end on_nl # Implement me in your subclass to test for valid options.
on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl UNK UNK on_nl UNK true on_comma on_tstring_beg on_tstring_content on_tstring_end on_nl true on_nl UNK # Utility Methods
on_ignored_nl class on_op self on_nl def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_lparen UNK on_period UNK on_lparen on_symbeg type on_comma # Class Methods
on_int on_period UNK do on_op UNK on_op on_ignored_nl name on_op on_tstring_beg on_tstring_content on_tstring_end on_op on_lbracket UNK on_period name on_comma UNK # Give it a unique name
def UNK on_lparen options on_op on_lbrace on_rbrace on_rparen on_ignored_nl on_const on_period UNK do on_ignored_nl scope on_op on_const on_period on_ignored_nl UNK # Find all Agents that have received Events since the last execution of this method. Update those Agents with # their new `last_checked_event_id` and queue each of the Agents to be called with #receive using `async_receive`. # This is called by bin/schedule.rb periodically.
def UNK on_lparen agent_id on_comma event_ids on_rparen on_ignored_nl on_const on_period UNK on_lparen agent_id on_comma event_ids on_rparen on_nl end on_nl on_ignored_nl # This method will enqueue an AgentReceiveJob job. It accepts Agent and Event ids instead of a literal ActiveRecord # models because it is preferable to serialize jobs with ids.
def UNK on_lparen schedule on_rparen on_ignored_nl UNK if schedule on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_op where on_lparen on_symbeg schedule # Given a schedule name, run `check` via `bulk_check` on all Agents with that schedule. # This is called by bin/schedule.rb for each schedule in `SCHEDULES`.
def UNK on_lparen schedule on_rparen on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end if self on_op on_const on_nl where on_lparen on_tstring_beg on_tstring_content on_tstring_end # Schedule `async_check`s for every Agent on the given schedule. This is normally called by `run_schedule` once # per type of agent, so you can override this to define custom bulk check behavior for your custom Agent type.
def UNK on_lparen agent_id on_rparen on_ignored_nl on_const on_period UNK on_lparen agent_id on_rparen on_nl end on_nl end on_nl end on_nl on_ignored_nl # This method will enqueue an AgentCheckJob job. It accepts an Agent id instead of a literal Agent because it is # preferable to serialize job with ids, instead of with the full Agents.
