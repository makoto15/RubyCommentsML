on_ignored_nl UNK on_period UNK on_const on_period UNK on_lparen UNK on_rparen on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end #!/usr/bin/env ruby # # This is a 'fake' MQTT server to help with testing client implementations # # See https://github.com/njh/ruby-mqtt/blob/master/spec/fake_server.rb # # It behaves in the following ways: # * Responses to CONNECT with a successful CONACK # * Responses to PUBLISH by echoing the packet back # * Responses to SUBSCRIBE with SUBACK and a PUBLISH to the topic # * Responses to PINGREQ with PINGRESP # * Responses to DISCONNECT by closing the socket # # It has the following restrictions # * Doesn't deal with timeouts # * Only handles a single connection at a time #
def UNK on_lparen UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen on_ignored_nl on_ivar on_op UNK on_nl end on_nl on_ignored_nl def logger on_nl # Create a new fake MQTT server # # If no port is given, bind to a random port number # If no bind address is given, bind to localhost
def logger on_nl on_ivar on_op on_const on_period new on_lparen on_const on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_op # Get the logger used by the server
def UNK on_nl on_ivar on_op on_const on_period new on_lparen on_ivar on_comma on_int on_rparen on_nl on_ivar on_op on_ivar on_period UNK UNK # Start the thread and open the socket that will process client connections
client on_op on_ivar on_period UNK on_nl on_ivar on_op on_int on_nl UNK on_lparen client on_rparen on_nl UNK UNK UNK on_nl end # Wait for a client to connect
def UNK on_nl logger on_period UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ivar on_period UNK UNK on_ivar UNK on_ivar on_period UNK on_nl # Stop the thread and close the socket
def UNK on_nl UNK on_nl UNK on_ignored_nl on_ivar on_period UNK on_nl UNK on_const on_nl UNK on_nl end on_nl end on_nl # Start the server thread and wait for it to finish (possibly never)
def UNK on_lparen client on_rparen on_ignored_nl UNK UNK on_ignored_nl packet on_op on_const on_op on_const on_period UNK on_lparen client on_rparen on_nl # Given a client socket, process MQTT packets from the client
client on_period write on_const on_op on_const on_op on_const on_period new on_lparen on_ignored_nl on_symbeg topic on_op topic on_comma on_ignored_nl on_symbeg UNK # Deliver retained messages
client on_period write on_const on_op on_const on_op on_const on_period new on_lparen on_ignored_nl on_symbeg topic on_op topic on_comma on_ignored_nl on_symbeg UNK # Deliver a still retained message
client on_period write on_const on_op on_const on_op on_const on_period new on_lparen on_ignored_nl on_symbeg topic on_op topic on_comma on_ignored_nl on_symbeg UNK # Deliver a fresh message
