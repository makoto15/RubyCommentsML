on_ignored_nl on_ignored_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_op on_const on_nl UNK UNK on_lparen # Same vulnerability as CVE-2013-0156 # https://groups.google.com/forum/#!topic/rubyonrails-security/61bkgvnSGTQ/discussion
on_ignored_nl on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_op on_const on_nl UNK UNK on_lparen UNK # Code has been submitted back to the project: # https://github.com/sferik/multi_xml/pull/34
on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_op on_const on_nl UNK UNK on_lparen UNK on_rparen # Until the fix is released, use this monkey-patch.
on_ignored_nl on_ignored_nl UNK on_comma entries on_op value on_period UNK on_lbrace on_op UNK on_comma UNK on_op UNK on_op on_tstring_beg on_tstring_content on_tstring_end # this commented-out suggestion helps to avoid the multiple attribute # problem, but it breaks when there is only one item in the array. # # from: https://github.com/jnunemaker/httparty/issues/102 # # _, entries = value.detect { |k, v| k != 'type' && v.is_a?(Array) }
on_ignored_nl UNK on_comma entries on_op value on_period UNK on_lbrace on_op UNK on_comma UNK on_op UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_op # This attempt fails to consider the order that the detect method # retrieves the entries. #_, entries = value.detect {|key, _| key != 'type'}
UNK on_comma entries on_op value on_period UNK on_lbrace on_op UNK on_comma UNK on_op UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_op on_lparen # This approach ignores attribute entries that are not convertable # to an Array which allows attributes to be ignored.
UNK value on_period UNK on_op value on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_nl UNK value # blank or nil parsed values are represented by nil
UNK value on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op value on_period UNK on_op UNK on_op on_op value on_lbracket on_tstring_beg on_tstring_content on_tstring_end # If the type is the only element which makes it then # this still makes the value nil, except if type is # a XML node(where type['value'] is a Hash)
UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period is_a? on_lparen on_const on_rparen on_op UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op UNK # Turn {:files => {:file => #<StringIO>} into {:files => #<StringIO>} so it is compatible with # how multipart uploaded files from HTML appear
