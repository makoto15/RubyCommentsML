UNK on_period UNK do on_op event on_op on_ignored_nl UNK do on_ignored_nl UNK on_lparen on_lbracket event on_rbracket on_rparen on_nl end on_nl # incoming events should be processed sequentially
UNK on_period UNK do on_op UNK on_comma UNK on_comma UNK on_op on_ignored_nl UNK UNK on_nl UNK on_const on_nl UNK on_ignored_nl # Each tuple may be either [expression, type, desc] or just # expression.
UNK on_ignored_nl UNK on_period UNK on_lparen on_symbeg UNK on_comma on_tstring_beg on_tstring_content on_embexpr_beg events_order_key on_embexpr_end on_tstring_content on_tstring_end on_rparen on_nl UNK on_nl # ok
UNK on_ignored_nl UNK on_period UNK on_lparen on_symbeg UNK on_comma on_tstring_beg on_tstring_content on_embexpr_beg events_order_key on_embexpr_end on_tstring_content on_embexpr_beg on_const on_period UNK on_lparen # ok
def UNK on_lparen events on_comma events_order_key on_op on_const on_rparen on_ignored_nl UNK on_op UNK on_lparen events_order_key on_rparen on_period UNK UNK on_ignored_nl # Sort given events in order specified by the "events_order" option
on_rbrace on_comma on_ignored_nl UNK on_nl on_rparen on_period UNK on_lparen on_op on_symbeg UNK on_rparen on_nl end on_nl end on_nl EMP EMP # index is to make sorting stable
