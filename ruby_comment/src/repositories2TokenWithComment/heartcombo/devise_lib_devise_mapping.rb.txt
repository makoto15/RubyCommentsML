on_ignored_nl UNK on_const on_nl UNK on_const UNK on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg # frozen_string_literal: true
UNK on_const UNK on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_ignored_nl on_symbeg # Responsible for handling devise mappings and routes configuration. Each # resource configured by devise_for in routes is actually creating a mapping # object. You can refer to devise_for in routes for usage options. # # The required value in devise_for is actually not used internally, but it's # inflected to find all other values. # # map.devise_for :users # mapping = Devise.mappings[:user] # # mapping.name #=> :user # # is the scope used in controllers and warden, given in the route as :singular. # # mapping.as #=> "users" # # how the mapping should be search in the path, given in the route as :as. # # mapping.to #=> User # # is the class to be loaded from routes, given in the route as :class_name. # # mapping.modules #=> [:authenticatable] # # is the modules included in the class #
UNK on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_ignored_nl on_symbeg UNK on_comma #:nodoc:
def self on_period UNK on_lparen obj on_rparen on_ignored_nl obj on_op obj on_period UNK if obj on_period UNK on_lparen on_symbeg UNK # Receives an object and find a scope for it. If a scope cannot be found, # raises an error. If a symbol is given, it's considered to be the scope.
on_ivar on_op options on_lbracket on_symbeg UNK on_rbracket on_op on_tstring_beg on_embexpr_beg options on_lbracket on_symbeg UNK on_rbracket on_embexpr_end on_tstring_content on_embexpr_beg name on_embexpr_end #:nodoc:
def UNK on_nl on_ivar on_op UNK on_period UNK on_lparen on_symbeg UNK on_rparen on_op UNK on_period UNK on_op on_lbracket on_rbracket on_nl # Return modules for the mapping.
def UNK on_nl on_ivar on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_op on_const on_period UNK on_lparen on_op # Gives the class the mapping points to.
def self on_period UNK on_lparen m on_rparen on_ignored_nl UNK UNK on_comma UNK on_comma UNK on_op UNK on_nl on_tstring_content on_embexpr_beg m # Create magic predicates for verifying what module is activated by this map. # Example: # # def confirmable? # self.modules.include?(:confirmable) # end #
