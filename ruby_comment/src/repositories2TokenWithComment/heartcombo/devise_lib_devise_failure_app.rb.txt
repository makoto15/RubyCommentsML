on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_const on_nl UNK on_const on_op on_const on_op on_const on_nl UNK on_const on_op # frozen_string_literal: true
UNK on_const on_op on_const on_op on_const on_nl UNK on_const on_op on_const on_nl UNK on_const on_op on_const on_nl on_ignored_nl UNK on_const # Failure application that will be called every time :warden is thrown from # any strategy or hook. It is responsible for redirecting the user to the sign # in page based on current scope and mapping. If no scope is given, it # redirects to the default_url.
def self on_period UNK on_lparen on_op UNK on_rparen on_ignored_nl if UNK on_lparen on_const on_period UNK on_period UNK on_rparen on_nl on_const # Try retrieving the URL options from the parent controller (usually # ApplicationController). Instance methods are not supported at the moment, # so only the class-level attribute is used.
self on_period UNK on_op UNK on_lparen warden_options on_lbracket on_symbeg UNK on_rbracket on_rparen on_period UNK on_lparen request on_period env on_rparen on_nl # self.response = recall_app(warden_options[:recall]).call(env)
opts on_lbracket on_symbeg UNK on_rbracket on_op UNK on_nl on_ignored_nl UNK on_op UNK on_lparen scope on_rparen on_nl on_ignored_nl opts on_lbracket on_symbeg # Initialize script_name with nil to prevent infinite loops in # authenticated mounted engines in rails 4.2 and 5.0
UNK UNK on_lparen context on_rparen on_op on_op UNK on_nl UNK on_op context on_period UNK on_period UNK on_period UNK on_nl opts # We need to add the rootpath to `script_name` manually for applications that use a Rails # version lower than 5.1. Otherwise, it is going to generate a wrong path for Engines # that use Devise. Remove it when the support of Rails 5.0 is dropped.
def UNK on_nl if request on_period UNK on_nl on_const on_period UNK on_nl else on_ignored_nl on_op on_lparen request_format on_op UNK on_rparen # Choose whether we should respond in an HTTP authentication fashion, # including 401 and optional headers. # # This method allows the user to explicitly disable HTTP authentication # on AJAX requests in case they want to redirect on failures instead of # handling the errors on their own. This is useful in case your AJAX API # is the same as your public API and uses a format like JSON (so you # cannot mark JSON as a navigational format).
def UNK on_nl UNK on_period UNK on_op on_op request on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK i18n_message # It doesn't make sense to send authenticate headers in AJAX requests # or if the user disabled them.
def UNK on_nl UNK on_lparen scope on_comma attempted_path on_rparen if request on_period UNK on_op on_op UNK on_nl end on_nl on_ignored_nl # Stores requested URI to redirect the user after signing in. We can't use # the scoped session provided by warden here, since the user is not # authenticated yet, but we still need to store the URI based on scope, so # different scopes would never use the same URI to redirect.
def UNK on_nl request on_period respond_to? on_lparen on_symbeg flash on_rparen on_op UNK on_nl end on_nl on_ignored_nl def request_format on_nl on_ivar # Check if flash messages should be emitted. Default is to do it on # navigational formats
