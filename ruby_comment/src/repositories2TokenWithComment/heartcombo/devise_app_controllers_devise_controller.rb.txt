on_ignored_nl UNK on_const on_op on_const on_period UNK on_period UNK on_nl UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl if UNK # frozen_string_literal: true
UNK on_const on_op on_const on_period UNK on_period UNK on_nl UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl if UNK on_lparen # All Devise controllers are inherited from here.
def UNK UNK on_op if UNK on_period UNK on_period UNK on_op UNK on_op devise_mapping on_nl on_lbracket on_tstring_beg on_embexpr_beg devise_mapping on_period # Override prefixes to consider the scoped view. # Notice we need to check for the request due to a bug in # Action Controller tests that forces _prefixes to be # loaded before even having a request object. # # This method should be public as it is in ActionPack # itself. Changing its visibility may break other gems.
UNK on_op if UNK on_period UNK on_period UNK on_op UNK on_op devise_mapping on_nl on_lbracket on_tstring_beg on_embexpr_beg devise_mapping on_period UNK on_embexpr_end #:nodoc:
def resource on_nl UNK on_lparen on_symbeg on_tstring_content on_embexpr_beg resource_name on_embexpr_end on_tstring_end on_rparen on_nl end on_nl on_ignored_nl def resource_name on_nl devise_mapping # Gets the actual resource stored in the instance variable
def resource_name on_nl devise_mapping on_period UNK on_nl end on_nl UNK on_symbeg UNK on_symbeg resource_name on_nl on_ignored_nl def UNK on_nl devise_mapping # Proxy to devise map name
def UNK on_nl devise_mapping on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_period UNK on_lparen UNK resource_name on_rparen # Proxy to devise map class
def UNK on_nl UNK on_period UNK on_lparen UNK resource_name on_rparen on_nl end on_nl on_ignored_nl def devise_mapping on_nl UNK on_op UNK # Returns a signed in resource from session (if one exists)
def devise_mapping on_nl UNK on_op UNK on_period UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl end on_nl on_ignored_nl def UNK UNK # Attempt to find the mapped route for devise based on request path
def UNK UNK UNK UNK devise_mapping on_nl on_tstring_content on_embexpr_beg UNK on_period UNK on_period UNK on_embexpr_end on_tstring_content UNK end on_nl on_ignored_nl # Checks whether it's a devise mapped resource or not.
UNK UNK UNK devise_mapping on_nl on_tstring_content on_embexpr_beg UNK on_period UNK on_period UNK on_embexpr_end on_tstring_content UNK end on_nl on_ignored_nl def UNK #:nodoc:
def UNK on_nl UNK on_op on_const on_period UNK on_period UNK UNK on_op UNK on_op on_const on_op on_const on_lbracket UNK on_period # Returns real navigational formats which are supported by Rails
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_lparen on_symbeg on_tstring_content on_embexpr_beg resource_name on_embexpr_end on_tstring_end on_comma UNK on_rparen on_nl end on_nl # Sets the resource creating an instance variable
def UNK on_nl UNK on_nl UNK UNK UNK on_nl UNK on_op devise_mapping on_period UNK on_nl on_ignored_nl UNK on_op if UNK # Helper for use in before_actions where no authentication is required. # # Example: # before_action :require_no_authentication, only: :new
def UNK on_lparen resource on_rparen on_ignored_nl UNK on_op if on_const on_period UNK on_nl resource on_period UNK on_period UNK on_nl on_symbeg # Helper for use after calling send_*_instructions methods on a resource. # If we are in paranoid mode, we always act as if the resource was valid # and instructions were sent.
def UNK on_lparen UNK on_comma kind on_comma options on_op UNK UNK on_rparen on_ignored_nl UNK on_op UNK on_lparen kind on_comma options # Sets the flash message with :key, using I18n. By default you are able # to set up your messages using specific resource scope, and if no message is # found we look to the default scope. Set the "now" options key to a true # value to populate the flash.now hash in lieu of the default flash hash (so # the flash message will be available to the current action instead of the # next action). # Example (i18n locale file): # # en: # devise: # passwords: # #default_scope_messages - only if resource_scope is not found # user: # #resource_scope_messages # # Please refer to README or en.yml locale file to check what messages are # available.
def UNK on_lparen UNK on_comma kind on_comma options on_op UNK UNK on_rparen on_ignored_nl if UNK on_nl UNK on_lparen UNK on_comma # Sets flash message if is_flashing_format? equals true
def UNK on_nl if devise_mapping on_period UNK on_nl UNK on_op UNK on_period UNK on_period UNK on_nl end on_nl end on_nl # Sets minimum password length to show to user
def UNK on_lparen kind on_comma options on_op UNK UNK on_rparen on_ignored_nl options on_lbracket on_symbeg UNK on_rbracket on_op UNK on_nl options # Get message for given
def UNK on_nl on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl UNK # Controllers inheriting DeviseController are advised to override this # method so that other controllers inheriting from them would use # existing translations.
