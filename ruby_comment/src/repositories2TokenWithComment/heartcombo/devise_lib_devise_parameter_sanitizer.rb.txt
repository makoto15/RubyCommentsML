on_ignored_nl UNK on_const on_nl UNK on_const on_nl on_const on_op UNK on_ignored_nl on_label on_lbracket on_symbeg UNK on_comma on_symbeg UNK on_rbracket on_comma # frozen_string_literal: true
UNK on_const on_nl on_const on_op UNK on_ignored_nl on_label on_lbracket on_symbeg UNK on_comma on_symbeg UNK on_rbracket on_comma on_ignored_nl on_label on_lbracket on_symbeg # The +ParameterSanitizer+ deals with permitting specific parameters values # for each +Devise+ scope in the application. # # The sanitizer knows about Devise default parameters (like +password+ and # +password_confirmation+ for the `RegistrationsController`), and you can # extend or change the permitted parameters list on your controllers. # # === Permitting new parameters # # You can add new parameters to the permitted list using the +permit+ method # in a +before_action+ method, for instance. # # class ApplicationController < ActionController::Base # before_action :configure_permitted_parameters, if: :devise_controller? # # protected # # def configure_permitted_parameters # # Permit the `subscribe_newsletter` parameter along with the other # # sign up parameters. # devise_parameter_sanitizer.permit(:sign_up, keys: [:subscribe_newsletter]) # end # end # # Using a block yields an +ActionController::Parameters+ object so you can # permit nested parameters and have more control over how the parameters are # permitted in your controller. # # def configure_permitted_parameters # devise_parameter_sanitizer.permit(:sign_up) do |user| # user.permit(newsletter_preferences: []) # end # end
def UNK on_lparen action on_rparen on_ignored_nl UNK on_op on_ivar on_lbracket action on_rbracket on_nl on_ignored_nl UNK UNK on_period UNK on_lparen on_symbeg # Sanitize the parameters for a specific +action+. # # === Arguments # # * +action+ - A +Symbol+ with the action that the controller is # performing, like +sign_up+, +sign_in+, etc. # # === Examples # # # Inside the `RegistrationsController#create` action. # resource = build_resource(devise_parameter_sanitizer.sanitize(:sign_up)) # resource.save # # Returns an +ActiveSupport::HashWithIndifferentAccess+ with the permitted # attributes.
def UNK on_lparen action on_comma on_label UNK on_comma on_label UNK on_comma on_op UNK on_rparen on_ignored_nl UNK UNK on_nl on_ivar on_lbracket # Add or remove new parameters to the permitted list of an +action+. # # === Arguments # # * +action+ - A +Symbol+ with the action that the controller is # performing, like +sign_up+, +sign_in+, etc. # * +keys:+ - An +Array+ of keys that also should be permitted. # * +except:+ - An +Array+ of keys that shouldn't be permitted. # * +block+ - A block that should be used to permit the action # parameters instead of the +Array+ based approach. The block will be # called with an +ActionController::Parameters+ instance. # # === Examples # # # Adding new parameters to be permitted in the `sign_up` action. # devise_parameter_sanitizer.permit(:sign_up, keys: [:subscribe_newsletter]) # # # Removing the `password` parameter from the `account_update` action. # devise_parameter_sanitizer.permit(:account_update, except: [:password]) # # # Using the block form to completely override how we permit the # # parameters for the `sign_up` action. # devise_parameter_sanitizer.permit(:sign_up) do |user| # user.permit(:email, :password, :password_confirmation) # end # # # Returns nothing.
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op UNK on_period UNK on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl # Cast a sanitized +ActionController::Parameters+ to a +HashWithIndifferentAccess+ # that can be used elsewhere. # # Returns an +ActiveSupport::HashWithIndifferentAccess+.
UNK on_op UNK on_period UNK on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK UNK on_nl on_ivar on_period UNK # TODO: Remove the `with_indifferent_access` method call when we only support Rails 5+.
