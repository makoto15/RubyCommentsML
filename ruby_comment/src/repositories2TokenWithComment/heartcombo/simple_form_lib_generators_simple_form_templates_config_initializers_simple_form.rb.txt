UNK on_period UNK UNK on_op config on_op on_ignored_nl config on_period UNK on_symbeg UNK on_comma on_label on_symbeg UNK on_comma on_ignored_nl on_label # frozen_string_literal: true # # Uncomment this and change the path if necessary to include your own # components. # See https://github.com/heartcombo/simple_form#custom-components to know # more about custom components. # Dir[Rails.root.join('lib/components/**/*.rb')].each { |f| require f } # # Use this setup block to configure all options available in SimpleForm.
config on_period UNK on_symbeg UNK on_comma on_label on_symbeg UNK on_comma on_ignored_nl on_label on_symbeg UNK on_comma on_label on_symbeg UNK on_comma on_label # Wrappers are used by the form builder to generate a # complete input. You can remove any component from the # wrapper, change the order or even add your own to the # stack. The options given below are used to wrap the # whole input.
on_ignored_nl b on_period UNK on_symbeg UNK on_nl on_ignored_nl b on_period UNK on_symbeg UNK on_nl on_ignored_nl on_ignored_nl b on_period UNK on_symbeg ## Extensions enabled by default # Any of these extensions can be disabled for a # given input by passing: `f.input EXTENSION_NAME => false`. # You can make any of these extensions optional by # renaming `b.use` to `b.optional`.
b on_period UNK on_symbeg UNK on_nl on_ignored_nl b on_period UNK on_symbeg UNK on_nl on_ignored_nl on_ignored_nl b on_period UNK on_symbeg UNK # Determines whether to use HTML5 (:email, :url, ...) # and required attributes
b on_period UNK on_symbeg UNK on_nl on_ignored_nl on_ignored_nl b on_period UNK on_symbeg UNK on_nl on_ignored_nl b on_period UNK on_symbeg UNK # Calculates placeholders automatically from I18n # You can also pass a string as f.input placeholder: "Placeholder"
on_ignored_nl b on_period UNK on_symbeg UNK on_nl on_ignored_nl b on_period UNK on_symbeg UNK on_nl on_ignored_nl b on_period UNK on_symbeg UNK ## Optional extensions # They are disabled unless you pass `f.input EXTENSION_NAME => true` # to the input. If so, they will retrieve the values from the model # if any exists. If you want to enable any of those # extensions by default, you can change `b.optional` to `b.use`.
b on_period UNK on_symbeg UNK on_nl on_ignored_nl b on_period UNK on_symbeg UNK on_nl on_ignored_nl b on_period UNK on_symbeg UNK on_nl # Calculates maxlength from length validations for string inputs # and/or database column lengths
b on_period UNK on_symbeg UNK on_nl on_ignored_nl b on_period UNK on_symbeg UNK on_nl on_ignored_nl b on_period UNK on_symbeg UNK on_nl # Calculate minlength from length validations for string inputs
b on_period UNK on_symbeg UNK on_nl on_ignored_nl b on_period UNK on_symbeg UNK on_nl on_ignored_nl b on_period UNK on_symbeg UNK on_nl # Calculates pattern from format validations for string inputs
b on_period UNK on_symbeg UNK on_nl on_ignored_nl b on_period UNK on_symbeg UNK on_nl on_ignored_nl b on_period UNK on_symbeg UNK on_nl # Calculates min and max from length validations for numeric inputs
b on_period UNK on_symbeg UNK on_nl on_ignored_nl b on_period UNK on_symbeg UNK on_nl b on_period UNK on_symbeg UNK on_comma on_label # Calculates readonly automatically from readonly attributes
b on_period UNK on_symbeg UNK on_nl b on_period UNK on_symbeg UNK on_comma on_label UNK on_label on_symbeg UNK on_comma on_label on_symbeg ## Inputs # b.use :input, class: 'input', error_class: 'is-invalid', valid_class: 'is-valid'
UNK on_nl on_ignored_nl config on_period UNK on_op on_symbeg UNK on_nl on_ignored_nl config on_period UNK on_op on_symbeg UNK on_nl on_ignored_nl config ## full_messages_for # If you want to display the full error message for the attribute, you can # use the component :full_error, like: # # b.use :full_error, wrap_with: { tag: :span, class: :error }
config on_period UNK on_op on_symbeg UNK on_nl on_ignored_nl config on_period UNK on_op on_symbeg UNK on_nl on_ignored_nl config on_period UNK on_op # The default wrapper to be used by the FormBuilder.
config on_period UNK on_op on_symbeg UNK on_nl on_ignored_nl config on_period UNK on_op UNK UNK UNK on_nl on_ignored_nl on_ignored_nl config on_period # Define the way to render check boxes / radio buttons with labels. # Defaults to :nested for bootstrap config. # inline: input + label # nested: label > input
config on_period UNK on_op UNK UNK UNK on_nl on_ignored_nl on_ignored_nl config on_period UNK on_op on_symbeg UNK on_nl on_ignored_nl config on_period # Default class for buttons
on_ignored_nl config on_period UNK on_op on_symbeg UNK on_nl on_ignored_nl config on_period UNK on_op UNK UNK UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl # Method used to tidy up errors. Specify any Rails Array method. # :first lists the first message for each field. # Use :to_sentence to list all errors for each field. # config.error_method = :first
config on_period UNK on_op on_symbeg UNK on_nl on_ignored_nl config on_period UNK on_op UNK UNK UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl # Default tag used for error notification helper.
config on_period UNK on_op UNK UNK UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl # CSS class to add for error notification helper.
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl config on_period UNK on_op UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl # Series of attempts to detect a default label method for collection. # config.collection_label_methods = [ :to_label, :name, :title, :to_s ]
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl config on_period UNK on_op UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl # Series of attempts to detect a default value method for collection. # config.collection_value_methods = [ :id, :to_s ]
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl config on_period UNK on_op UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl # You can wrap a collection of radio/check boxes in a pre-defined tag, defaulting to none. # config.collection_wrapper_tag = nil
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl config on_period UNK on_op UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl # You can define the class to use on all collection wrappers. Defaulting to none. # config.collection_wrapper_class = nil
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl config on_period UNK on_op UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl # You can wrap each item in a collection of radio/check boxes with a tag, # defaulting to :span. # config.item_wrapper_tag = :span
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl config on_period UNK on_op UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl # You can define a class to use in all item wrappers. Defaulting to none. # config.item_wrapper_class = nil
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl config on_period UNK on_op UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl # How the label text should be generated altogether with the required text. # config.label_text = lambda { |label, required, explicit_label| "#{required} #{label}" }
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl config on_period UNK on_op UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl # You can define the class to use on all labels. Default is nil. # config.label_class = nil
on_ignored_nl on_ignored_nl on_ignored_nl config on_period UNK on_op UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl config # You can define the default class to be used on forms. Can be overriden # with `html: { :class }`. Defaulting to none. # config.default_form_class = nil
on_ignored_nl on_ignored_nl config on_period UNK on_op UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl config on_period # You can define which elements should obtain additional classes # config.generate_additional_classes_for = [:wrapper, :label, :input]
on_ignored_nl config on_period UNK on_op UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl config on_period UNK # Whether attributes are required by default (or not). Default is true. # config.required_by_default = true
config on_period UNK on_op UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl config on_period UNK on_op # Tell browsers whether to use the native HTML5 validations (novalidate form option). # These validations are enabled in SimpleForm's internal config but disabled by default # in this configuration, which is recommended due to some quirks from different browsers. # To stop SimpleForm from generating the novalidate option, enabling the HTML5 validations, # change this configuration to true.
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl config on_period UNK on_op UNK UNK UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl # Custom mappings for input types. This should be a hash containing a regexp # to match as key, and the input type that will be used when the field name # matches the regexp as value. # config.input_mappings = { /count/ => :integer }
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl config on_period UNK on_op UNK UNK UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK # Custom wrappers for input types. This should be a hash containing an input # type as key and the wrapper that will be used for all inputs with specified type. # config.wrapper_mappings = { string: :prepend }
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl config on_period UNK on_op UNK UNK UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_nl # Namespaces where SimpleForm should look for custom input classes that # override default inputs. # config.custom_inputs_namespaces << "CustomInputs"
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl config on_period UNK on_op UNK UNK UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_nl EMP # Default priority for time_zone inputs. # config.time_zone_priority = nil
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl config on_period UNK on_op UNK UNK UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_nl EMP EMP # Default priority for country inputs. # config.country_priority = nil
on_ignored_nl on_ignored_nl on_ignored_nl on_ignored_nl config on_period UNK on_op UNK UNK UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_nl EMP EMP EMP # When false, do not use translations for labels. # config.translate_labels = true
on_ignored_nl on_ignored_nl on_ignored_nl config on_period UNK on_op UNK UNK UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_nl EMP EMP EMP EMP # Automatically discover new inputs in Rails' autoload path. # config.inputs_discovery = true
on_ignored_nl on_ignored_nl config on_period UNK on_op UNK UNK UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_nl EMP EMP EMP EMP EMP # Cache SimpleForm inputs discovery # config.cache_discovery = !Rails.env.development?
on_ignored_nl config on_period UNK on_op UNK UNK UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_nl EMP EMP EMP EMP EMP EMP # Default class for inputs # config.input_class = nil
config on_period UNK on_op UNK UNK UNK on_nl on_ignored_nl on_ignored_nl on_ignored_nl UNK on_nl EMP EMP EMP EMP EMP EMP EMP # Define the default class of the input wrapper of the boolean input.
on_ignored_nl on_ignored_nl UNK on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # Defines if the default input wrapper class should be included in radio # collection wrappers. # config.include_default_input_wrapper_class = true
on_ignored_nl UNK on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # Defines which i18n scope will be used in Simple Form. # config.i18n_scope = 'simple_form'
UNK on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # Defines validation classes to the input_field. By default it's nil. # config.input_field_valid_class = 'is-valid' # config.input_field_error_class = 'is-invalid'
