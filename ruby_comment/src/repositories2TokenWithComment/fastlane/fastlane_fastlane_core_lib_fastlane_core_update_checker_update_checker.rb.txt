UNK on_const on_nl def self on_period UNK on_lparen gem_name on_rparen on_ignored_nl UNK if on_const on_period UNK on_nl UNK if on_const # Verifies, the user runs the latest version of this gem
end on_nl end on_nl end on_nl on_ignored_nl def self on_period UNK on_nl UNK on_op UNK UNK on_nl end on_nl on_ignored_nl # we don't want to show a stack trace if something goes wrong
def self on_period UNK on_lparen gem_name on_comma current_version on_rparen on_ignored_nl UNK on_op UNK UNK gem_name UNK on_nl puts on_lparen on_tstring_beg # Show a message to the user to update to a new version of fastlane (or a sub-gem) # Use this method, as this will detect the current Ruby environment and show an # appropriate message to the user
puts on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl puts on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl puts on_lparen on_tstring_beg on_tstring_content # We want to show this message from time to time, if the user doesn't use bundler, nor bundled fastlane
def self on_period UNK on_lparen UNK on_tstring_beg on_tstring_content on_tstring_end on_rparen on_ignored_nl if on_const on_period UNK on_nl on_tstring_beg on_tstring_content on_embexpr_beg gem_name # The command that the user should use to update their mac
def self on_period UNK on_nl UNK if on_const on_period UNK on_nl UNK if UNK on_tstring_content on_tstring_end on_period UNK on_lparen on_tstring_beg # Check if RubyGems is set as a gem source # on some machines that might not be the case # and then users can't find the update when # running the specified command
