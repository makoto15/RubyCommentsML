UNK on_const on_op on_const on_op on_const on_nl on_const on_op on_const on_op on_const on_nl on_const on_op on_const on_op on_const on_nl on_const # rubocop:disable Metrics/ClassLength
on_const on_op on_const on_op on_const on_nl on_const on_op on_const on_op on_const on_nl on_const on_op on_const on_op on_const on_nl on_ignored_nl UNK # Legacy support
def UNK on_lparen device on_comma UNK on_rparen on_ignored_nl UNK on_op on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_lbracket on_int on_comma on_int # trailer preview screenshots are required to have a specific size
on_ignored_nl def self on_period UNK on_nl on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_lparen on_label nil on_comma on_label ##################################################### # @!group Init and Login #####################################################
def UNK on_lparen on_label nil on_comma on_label nil on_rparen on_ignored_nl t_id on_op on_lparen UNK on_op on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end # Shows a team selection for the user in the terminal. This should not be # called on CI systems # # @param team_id (String) (optional): The ID of an App Store Connect team # @param team_name (String) (optional): The name of an App Store Connect team
puts on_lparen on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_end on_rparen if on_const on_op on_const on_period UNK on_nl on_ignored_nl teams on_period each # we prefer IDs over names, they are unique
self on_period UNK on_op t_id on_nl return self on_period UNK on_nl end on_nl on_ignored_nl UNK do on_ignored_nl puts on_lparen on_tstring_beg # actually set the team id here
UNK do on_ignored_nl puts on_lparen on_tstring_beg on_tstring_content on_embexpr_beg on_tstring_beg on_tstring_content on_tstring_end on_period UNK on_embexpr_end on_tstring_content on_tstring_end on_rparen on_nl if on_const # user didn't specify a team... #thisiswhywecanthavenicethings
teams on_period UNK do on_op UNK on_comma UNK on_op on_ignored_nl puts on_lparen on_tstring_beg on_embexpr_beg UNK on_op on_int on_embexpr_end on_tstring_content on_embexpr_beg # We're not using highline here, as spaceship doesn't have a dependency to fastlane_core or highline
return self on_period UNK on_nl end on_nl end on_nl end on_nl on_ignored_nl def UNK on_lparen user on_comma UNK on_rparen on_ignored_nl # actually set the team id here
def fetch_errors_in_data on_lparen on_label nil on_comma on_label nil on_comma on_label nil on_rparen on_ignored_nl if UNK on_op UNK on_nl UNK on_op # Sometimes we get errors or info nested in our data # This method allows you to pass in a set of keys to check for # along with the name of the sub_section of your original data # where we should check # Returns a mapping of keys to data array if we find anything, otherwise, empty map
def handle_itc_response on_lparen raw on_comma on_label false on_rparen on_ignored_nl return unless raw on_nl return unless raw on_period UNK on_lparen on_const # rubocop:disable Metrics/PerceivedComplexity # If the response is coming from a flaky api, set flaky_api_call to true so we retry a little. # Patience is a virtue.
on_ignored_nl UNK on_op on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl UNK on_op on_lbracket # sometimes it's with data, sometimes it isn't
if UNK on_period count on_op on_int on_op UNK on_period count on_op on_int on_nl UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end # If we have any errors or "info" we need to treat them as warnings or errors
UNK on_op UNK do on_op hash on_comma UNK on_op nil on_op on_ignored_nl errors on_op on_lbracket on_rbracket on_nl if hash on_period # We pass on the `current_language` so that the error message tells the user # what language the error was caused in
errors on_op value on_period UNK do on_op UNK on_op on_ignored_nl UNK on_op on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg UNK # Prepend the error with the language so it's easier to understand for the user
end on_nl return errors on_nl end on_nl on_ignored_nl errors on_op UNK on_period UNK on_lparen data on_rparen on_nl on_ignored_nl UNK on_op # else: We don't care about simple values
UNK on_op fetch_errors_in_data on_lparen on_label data on_comma on_label UNK on_rparen on_nl UNK on_op fetch_errors_in_data on_lparen on_label data on_comma on_label on_tstring_beg # Search at data level, as well as "versionInfo" level for errors
UNK on_op raw on_period fetch on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_lbrace on_rbrace on_rparen on_period fetch on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma # Sometimes there is a different kind of error in the JSON response # e.g. {"warn"=>nil, "error"=>["operation_failed"], "info"=>nil}
if errors on_period count on_op on_int on_op errors on_period first on_op on_tstring_beg on_tstring_content on_tstring_end on_nl elsif errors on_period count on_op # they are separated by `.` by default # Sample `error` content: [["Forbidden"]]
elsif errors on_period count on_op on_int on_op errors on_period first on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl raise on_const # This is a special error which we really don't care about
UNK on_op fetch_errors_in_data on_lparen on_label data on_comma on_label UNK on_rparen on_nl UNK on_op fetch_errors_in_data on_lparen on_label data on_comma on_label on_tstring_beg # Search at data level, as well as "versionInfo" level for info and warnings
on_ignored_nl on_ignored_nl def UNK on_nl r on_op request on_lparen on_symbeg get on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl parse_response on_lparen r # rubocop:enable Metrics/PerceivedComplexity
on_ignored_nl def UNK on_nl r on_op request on_lparen on_symbeg get on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl parse_response on_lparen r on_comma ##################################################### # @!group Applications #####################################################
def UNK on_lparen on_label nil on_comma on_label nil on_comma on_label nil on_comma on_label nil on_comma on_label nil on_comma on_label nil # Creates a new application on App Store Connect # @param name (String): The name of your app as it will appear on the App Store. # This can't be longer than 255 characters. # @param primary_language (String): If localized app information isn't available in an # App Store territory, the information from your primary language will be used instead. # @param version *DEPRECATED: Use `Spaceship::Tunes::Application.ensure_version!` method instead* # (String): The version number is shown on the App Store and should match the one you used in Xcode. # @param sku (String): A unique ID for your app that is not visible on the App Store. # @param bundle_id (String): The bundle ID must match the one you used in Xcode. It # can't be changed after you submit your first build.
UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl platform on_op on_tstring_beg on_tstring_content on_tstring_end on_nl r on_op request on_lparen on_symbeg get on_comma on_tstring_beg # First, we need to fetch the data from Apple, which we then modify with the user's values
data on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_lbrace on_label UNK on_rbrace on_nl data on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_lbrace # Now fill in the values we have # some values are nil, that's why there is a hash
r on_op request on_lparen on_symbeg post on_rparen do on_op req on_op on_ignored_nl req on_period url on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # Now send back the modified hash
rating_url on_op on_tstring_beg on_tstring_content on_embexpr_beg app_id on_embexpr_end on_tstring_content on_embexpr_beg platform on_embexpr_end on_tstring_content on_tstring_end on_nl UNK on_op on_lbrace on_rbrace on_nl UNK # if storefront or version_id is empty api fails
all_reviews on_op on_lbracket on_rbracket on_nl on_ignored_nl upto_date on_op on_const on_period UNK on_lparen upto_date on_rparen unless upto_date on_period nil? on_nl on_ignored_nl # apple default
UNK if all_reviews on_period count on_op on_int on_nl on_ignored_nl UNK on_op on_const on_period UNK on_lparen all_reviews on_lbracket on_op on_int on_rbracket # The following lines throw errors when there are no reviews so exit out of the loop before them if the app has no reviews
on_ignored_nl def app_version on_lparen app_id on_comma UNK on_comma on_label nil on_rparen on_ignored_nl raise on_tstring_beg on_tstring_content on_tstring_end unless app_id on_nl on_ignored_nl ##################################################### # @!group AppVersions #####################################################
r on_op request on_lparen on_symbeg get on_comma on_tstring_beg on_tstring_content on_embexpr_beg app_id on_embexpr_end on_tstring_content on_tstring_end on_rparen on_nl UNK on_op parse_response on_lparen # First we need to fetch the IDs for the edit / live version
on_ignored_nl def UNK on_nl r on_op request on_lparen on_symbeg get on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl parse_response on_lparen r on_comma ##################################################### # @!group Members #####################################################
data on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period each do on_op template_role on_op on_ignored_nl if template_role on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket # find role from template
r on_op request on_lparen on_symbeg post on_rparen do on_op req on_op on_ignored_nl req on_period url on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # send the changes back to Apple
data on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period each do on_op template_role on_op on_ignored_nl if template_role on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket # find role from template
r on_op request on_lparen on_symbeg post on_rparen do on_op req on_op on_ignored_nl req on_period url on_lparen on_tstring_beg on_tstring_content on_embexpr_beg UNK # send the changes back to Apple
on_ignored_nl def UNK on_lparen UNK on_comma measures on_comma UNK on_comma UNK on_comma UNK on_comma UNK on_rparen on_ignored_nl data on_op on_lbrace ##################################################### # @!group AppAnalytics #####################################################
on_ignored_nl def UNK on_lparen app_id on_comma UNK on_rparen on_ignored_nl r on_op request on_lparen on_symbeg get on_comma on_tstring_beg on_tstring_content on_embexpr_beg app_id ##################################################### # @!group Pricing #####################################################
data on_period delete on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl UNK on_op on_lparen data on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_lbracket # preOrder isn't needed for for the request and has some # values that can cause a failure (invalid dates) so we are removing it
data on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_lbracket on_rbracket on_nl data on_lbracket on_tstring_beg on_tstring_content on_tstring_end # first price
data on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op UNK on_period UNK do on_op UNK on_op on_ignored_nl UNK on_period delete on_lparen on_tstring_beg # first price, need to set all countries
UNK on_nl end on_nl end on_nl on_ignored_nl r on_op request on_lparen on_symbeg post on_rparen do on_op req on_op on_ignored_nl req # we don't care about le region
r on_op request on_lparen on_symbeg post on_rparen do on_op req on_op on_ignored_nl req on_period url on_lparen on_tstring_beg on_tstring_content on_embexpr_beg app_id # send the changes back to Apple
def UNK on_nl on_ivar on_op UNK on_ignored_nl r on_op request on_lparen on_symbeg get on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl data # Returns an array of all available pricing tiers # # @note Although this information is publicly available, the current spaceship implementation requires you to have a logged in client to access it # # @return [Array] the PricingTier objects (Spaceship::Tunes::PricingTier) # [{ # "tierStem": "0", # "tierName": "Free", # "pricingInfo": [{ # "country": "United States", # "countryCode": "US", # "currencySymbol": "$", # "currencyCode": "USD", # "wholesalePrice": 0.0, # "retailPrice": 0.0, # "fRetailPrice": "$0.00", # "fWholesalePrice": "$0.00" # }, { # ... # }, { # ...
def UNK on_lparen app_id on_comma availability on_rparen on_ignored_nl r on_op request on_lparen on_symbeg get on_comma on_tstring_beg on_tstring_content on_embexpr_beg app_id on_embexpr_end ##################################################### # @!group Availability ##################################################### # Updates the availability # # @note Although this information is publicly available, the current spaceship implementation requires you to have a logged in client to access it # @param app_id (String): The id of your app # @param availability (Availability): The availability update # # @return [Spaceship::Tunes::Availability] the new Availability
data on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_lbrace on_rbrace on_nl on_ignored_nl UNK on_op availability on_period UNK on_nl UNK on_op UNK # InitializespreOrder (if needed)
UNK on_op availability on_period UNK on_nl UNK on_op UNK on_op availability on_period UNK on_op nil on_nl data on_lbracket on_tstring_beg on_tstring_content # Sets app_available_date to nil if cleared_for_preorder if false # This is need for apps that have never set either of these before # API will error out if cleared_for_preorder is false and app_available_date has a date
r on_op request on_lparen on_symbeg post on_rparen do on_op req on_op on_ignored_nl req on_period url on_lparen on_tstring_beg on_tstring_content on_embexpr_beg app_id # send the changes back to Apple
def UNK on_nl data on_op UNK on_nl data on_period map on_lbrace on_op country on_op on_const on_op on_const on_op on_const on_period # Returns an array of all supported territories # # @note Although this information is publicly available, the current spaceship implementation requires you to have a logged in client to access it # # @return [Array] the Territory objects (Spaceship::Tunes::Territory)
def UNK on_nl r on_op request on_lparen on_symbeg get on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl parse_response on_lparen r on_comma on_tstring_beg # An array of supported countries # [{ # "code": "AL", # "name": "Albania", # "region": "Europe" # }, { # ...
def UNK on_lparen app_version on_comma upload_image on_rparen on_ignored_nl raise on_tstring_beg on_tstring_content on_tstring_end unless app_version on_nl raise on_tstring_beg on_tstring_content on_tstring_end unless ##################################################### # @!group App Icons ##################################################### # Uploads a large icon # @param app_version (AppVersion): The version of your app # @param upload_image (UploadFile): The icon to upload # @return [JSON] the response
def UNK on_lparen app_version on_comma upload_image on_rparen on_ignored_nl raise on_tstring_beg on_tstring_content on_tstring_end unless app_version on_nl raise on_tstring_beg on_tstring_content on_tstring_end unless # Uploads a watch icon # @param app_version (AppVersion): The version of your app # @param upload_image (UploadFile): The icon to upload # @return [JSON] the response
def UNK on_lparen app_id on_comma upload_image on_rparen on_ignored_nl data on_op du_client on_period UNK on_lparen app_id on_comma upload_image on_comma content_provider_id on_comma # Uploads an In-App-Purchase Promotional image # @param upload_image (UploadFile): The icon to upload # @return [JSON] the image data, ready to be added to an In-App-Purchase
def UNK on_lparen app_id on_comma upload_image on_rparen on_ignored_nl data on_op du_client on_period UNK on_lparen app_id on_comma upload_image on_comma content_provider_id on_comma # Uploads an In-App-Purchase Review screenshot # @param app_id (AppId): The id of the app # @param upload_image (UploadFile): The icon to upload # @return [JSON] the screenshot data, ready to be added to an In-App-Purchase
def UNK on_lparen app_version on_comma upload_image on_comma device on_comma UNK on_rparen on_ignored_nl raise on_tstring_beg on_tstring_content on_tstring_end unless app_version on_nl raise # Uploads a screenshot # @param app_version (AppVersion): The version of your app # @param upload_image (UploadFile): The image to upload # @param device (string): The target device # @param is_messages (Bool): True if the screenshot is for iMessage # @return [JSON] the response
def UNK on_lparen app_version on_comma upload_image on_comma device on_rparen on_ignored_nl raise on_tstring_beg on_tstring_content on_tstring_end unless app_version on_nl raise on_tstring_beg on_tstring_content # Uploads an iMessage screenshot # @param app_version (AppVersion): The version of your app # @param upload_image (UploadFile): The image to upload # @param device (string): The target device # @return [JSON] the response
def UNK on_lparen app_version on_comma upload_file on_rparen on_ignored_nl raise on_tstring_beg on_tstring_content on_tstring_end unless app_version on_nl raise on_tstring_beg on_tstring_content on_tstring_end unless # Uploads the transit app file # @param app_version (AppVersion): The version of your app # @param upload_file (UploadFile): The image to upload # @return [JSON] the response
def UNK on_lparen app_version on_comma UNK on_rparen on_ignored_nl raise on_tstring_beg on_tstring_content on_tstring_end unless app_version on_nl raise on_tstring_beg on_tstring_content on_tstring_end unless # Uploads the transit app file # @param app_version (AppVersion): The version of your app # @param upload_trailer (UploadFile): The trailer to upload # @return [JSON] the response
def UNK on_lparen app_version on_comma UNK on_comma device on_rparen on_ignored_nl raise on_tstring_beg on_tstring_content on_tstring_end unless app_version on_nl raise on_tstring_beg on_tstring_content # Uploads the trailer preview # @param app_version (AppVersion): The version of your app # @param upload_trailer_preview (UploadFile): The trailer preview to upload # @param device (string): The target device # @return [JSON] the response
def UNK on_lparen app_version on_comma UNK on_rparen on_ignored_nl raise on_tstring_beg on_tstring_content on_tstring_end unless app_version on_nl raise on_tstring_beg on_tstring_content on_tstring_end if ##################################################### # @!review attachment file ##################################################### # Uploads a attachment file # @param app_version (AppVersion): The version of your app(must be edit version) # @param upload_attachment_file (file): File to upload # @return [JSON] the response
def UNK on_nl r on_op request on_lparen on_symbeg get on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl data on_op parse_response on_lparen r # Fetches the App Version Reference information from ITC # @return [AppVersionRef] the response
def UNK on_nl on_ivar on_op on_const on_op on_const on_op on_const on_period factory on_lparen UNK on_comma self on_rparen on_nl end on_nl # Fetches the User Detail information from ITC. This gets called often and almost never changes # so we cache it # @return [UserDetail] the response
on_ignored_nl def UNK on_lparen app_id on_comma version_id on_rparen on_ignored_nl r on_op request on_lparen on_symbeg get on_comma on_tstring_beg on_tstring_content on_embexpr_beg app_id ##################################################### # @!group CandiateBuilds #####################################################
on_ignored_nl def UNK on_lparen app_id on_comma UNK on_comma tries on_op on_int on_comma on_label nil on_rparen on_ignored_nl raise on_tstring_beg on_tstring_content on_tstring_end ##################################################### # @!group Build Trains #####################################################
def UNK on_lparen app_id on_comma UNK on_comma tries on_op on_int on_comma on_label nil on_rparen on_ignored_nl raise on_tstring_beg on_tstring_content on_tstring_end unless # rubocop:disable Metrics/BlockNesting # @param (testing_type) internal or external
UNK on_op on_lbracket on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_nl on_rbracket on_period # Build trains fail randomly very often # we need to catch those errors and retry # https://github.com/fastlane/fastlane/issues/6419
on_ignored_nl def UNK on_lparen app_id on_comma UNK on_comma data on_rparen on_ignored_nl raise on_tstring_beg on_tstring_content on_tstring_end unless app_id on_nl on_ignored_nl data # rubocop:enable Metrics/BlockNesting
data on_period delete on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl r on_op request on_lparen on_symbeg post on_rparen do on_op req # The request fails if this key is present in the data
def UNK on_lparen on_label nil on_comma on_label on_tstring_beg on_tstring_content on_tstring_end on_rparen on_ignored_nl platform on_op on_tstring_beg on_tstring_content on_tstring_end if platform on_period # All build trains, even if there is no TestFlight
on_label nil on_comma on_ignored_nl on_label nil on_comma on_ignored_nl on_label nil on_comma on_ignored_nl on_label on_tstring_beg on_tstring_content on_tstring_end on_rparen on_ignored_nl url on_op # optional:
r on_op request on_lparen on_symbeg post on_rparen do on_op req on_op req on_period url on_lparen url on_rparen on_nl req on_period # Now send everything back to iTC
req on_period url on_lparen url on_rparen on_nl req on_period body on_op build_info on_period to_json on_nl req on_period headers on_lbracket on_tstring_beg # same URL, but a POST request
def UNK on_lparen on_label nil on_comma on_label nil on_comma on_label nil on_comma on_label on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_label nil # rubocop:disable Metrics/ParameterLists
on_label nil on_comma on_ignored_nl on_label nil on_comma on_ignored_nl on_label nil on_comma on_ignored_nl on_label nil on_comma on_ignored_nl on_label nil on_comma on_ignored_nl # Required Metadata:
on_label nil on_comma on_ignored_nl on_label nil on_comma on_ignored_nl on_label nil on_comma on_ignored_nl on_label nil on_comma on_ignored_nl on_label false on_comma on_ignored_nl # Optional Metadata:
on_ignored_nl build_info on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period each do on_op current on_op on_ignored_nl current on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket # Now fill in the values provided by the user
build_info on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period each do on_op current on_op on_ignored_nl current on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_lbracket # First the localized values:
end on_nl on_ignored_nl UNK on_op on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op UNK on_nl on_rbrace # There is no valid reason why we need this, only iTC being iTC
req on_period url on_lparen on_tstring_beg on_tstring_content on_embexpr_beg app_id on_embexpr_end on_tstring_content on_embexpr_beg platform on_embexpr_end on_tstring_content on_embexpr_beg train on_embexpr_end on_tstring_content on_embexpr_beg build_number # same URL, but a POST request
on_ignored_nl def UNK on_lparen on_label nil on_comma on_label nil on_comma on_label nil on_comma on_label on_tstring_beg on_tstring_content on_tstring_end on_rparen on_ignored_nl url # rubocop:enable Metrics/ParameterLists
on_ignored_nl def UNK on_lparen app_id on_comma version on_rparen on_ignored_nl raise on_tstring_beg on_tstring_content on_tstring_end unless app_id on_nl raise on_tstring_beg on_tstring_content on_tstring_end ##################################################### # @!group Submit for Review #####################################################
r on_op request on_lparen on_symbeg post on_rparen do on_op req on_op on_ignored_nl req on_period url on_lparen on_tstring_beg on_tstring_content on_embexpr_beg app_id # ra/apps/1039164429/version/submit/complete
UNK on_op r on_period body on_period fetch on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period fetch on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period # App Store Connect still returns a success status code even the submission # was failed because of Ad ID Info / Export Compliance. This checks for any section error # keys in returned adIdInfo / exportCompliance and prints them out.
else on_ignored_nl raise on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl parse_response on_lparen r on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end # success
on_ignored_nl def UNK on_lparen app_id on_comma version on_rparen on_ignored_nl raise on_tstring_beg on_tstring_content on_tstring_end unless app_id on_nl raise on_tstring_beg on_tstring_content on_tstring_end ##################################################### # @!group release #####################################################
on_ignored_nl def UNK on_lparen app_id on_comma version on_rparen on_ignored_nl raise on_tstring_beg on_tstring_content on_tstring_end unless app_id on_nl raise on_tstring_beg on_tstring_content on_tstring_end ##################################################### # @!group release to all users #####################################################
on_ignored_nl def UNK on_lparen on_label nil on_rparen on_ignored_nl r on_op request on_lparen on_symbeg get on_comma on_tstring_beg on_tstring_content on_embexpr_beg app_id on_embexpr_end ##################################################### # @!group in-app-purchases #####################################################
def UNK on_lparen on_label nil on_rparen on_ignored_nl r on_op request on_lparen on_symbeg get on_comma on_tstring_beg on_tstring_content on_embexpr_beg app_id on_embexpr_end on_tstring_content # Returns list of all available In-App-Purchases
def UNK on_lparen on_label nil on_rparen on_ignored_nl r on_op request on_lparen on_symbeg get on_comma on_tstring_beg on_tstring_content on_embexpr_beg app_id on_embexpr_end on_tstring_content # Returns list of all available Families
def UNK on_lparen on_label nil on_comma on_label nil on_rparen on_ignored_nl r on_op request on_lparen on_symbeg delete on_comma on_tstring_beg on_tstring_content on_embexpr_beg # Deletes a In-App-Purchases
def UNK on_lparen on_label nil on_comma on_label nil on_rparen on_ignored_nl r on_op request on_lparen on_symbeg get on_comma on_tstring_beg on_tstring_content on_embexpr_beg # Loads the full In-App-Purchases
def UNK on_lparen on_label nil on_comma on_label nil on_rparen on_ignored_nl r on_op request on_lparen on_symbeg post on_comma on_tstring_beg on_tstring_content on_embexpr_beg # Submit the In-App-Purchase for review
def UNK on_lparen on_label nil on_comma on_label nil on_rparen on_ignored_nl r on_op request on_lparen on_symbeg get on_comma on_tstring_beg on_tstring_content on_embexpr_beg # Loads the full In-App-Purchases-Family
def UNK on_lparen app_id on_rparen on_ignored_nl on_ivar on_op UNK on_ignored_nl r on_op request on_lparen on_symbeg get on_comma on_tstring_beg on_tstring_content on_embexpr_beg # Loads the full In-App-Purchases-Pricing-Matrix # note: the matrix is the same for any app_id # # @param app_id (String) The Apple ID of any app # @return ([Spaceship::Tunes::IAPSubscriptionPricingTier]) An array of pricing tiers
def UNK on_lparen on_label nil on_comma on_label nil on_comma on_label nil on_rparen on_ignored_nl UNK do on_ignored_nl r on_op request on_lparen # updates an In-App-Purchases-Family
def UNK on_lparen on_label nil on_comma on_label nil on_comma on_label nil on_rparen on_ignored_nl UNK do on_ignored_nl r on_op request on_lparen # updates an In-App-Purchases
def UNK on_lparen on_label nil on_comma on_label nil on_comma on_label nil on_comma on_label nil on_rparen on_ignored_nl r on_op request on_lparen # returns pricing goal array
def UNK on_lparen on_label nil on_comma on_label nil on_comma on_label nil on_comma on_label nil on_comma on_label nil on_comma on_label true # Creates an In-App-Purchases
UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl r on_op request on_lparen on_symbeg get on_comma on_tstring_beg on_tstring_content on_embexpr_beg app_id on_embexpr_end on_tstring_content on_embexpr_beg # Load IAP Template based on Type
data on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op UNK on_period to_s if UNK on_nl data on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op # Now fill in the values we have # some values are nil, that's why there is a hash
if pricing_intervals on_nl data on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_lbracket on_rbracket on_nl pricing_intervals on_period each do on_op interval on_op # pricing tier
upload_file on_op on_const on_period UNK on_lparen UNK on_rparen on_nl UNK on_op UNK on_lparen app_id on_comma upload_file on_rparen on_nl data on_lbracket # Upload App Store Promotional image (Optional)
upload_file on_op on_const on_period UNK on_lparen UNK on_rparen on_nl UNK on_op UNK on_lparen app_id on_comma upload_file on_rparen on_nl data on_lbracket # Upload Screenshot:
r on_op request on_lparen on_symbeg post on_rparen do on_op req on_op on_ignored_nl req on_period url on_lparen on_tstring_beg on_tstring_content on_embexpr_beg app_id # Now send back the modified hash
def UNK on_lparen on_label nil on_rparen on_ignored_nl r on_op request on_lparen on_symbeg get on_comma on_tstring_beg on_tstring_content on_embexpr_beg app_id on_embexpr_end on_tstring_content # Retrieves app-specific shared secret key
def UNK on_lparen on_label nil on_rparen on_ignored_nl r on_op request on_lparen on_symbeg post on_comma on_tstring_beg on_tstring_content on_embexpr_beg app_id on_embexpr_end on_tstring_content # Generates app-specific shared secret key
def UNK on_lparen UNK on_rparen on_ignored_nl url on_op UNK on_period url on_lbracket on_symbeg UNK on_rbracket on_nl r on_op request on_lparen ##################################################### # @!group Sandbox Testers #####################################################
def UNK on_lparen app_id on_comma platform on_rparen on_ignored_nl r on_op request on_lparen on_symbeg get on_comma on_tstring_beg on_tstring_content on_embexpr_beg app_id on_embexpr_end ##################################################### # @!group State History #####################################################
def UNK on_lparen on_label nil on_rparen on_ignored_nl r on_op request on_lparen on_symbeg get on_comma on_tstring_beg on_tstring_content on_embexpr_beg app_id on_embexpr_end on_tstring_content ##################################################### # @!group Promo codes #####################################################
on_ignored_nl def UNK on_lparen app_id on_comma version on_rparen on_ignored_nl raise on_tstring_beg on_tstring_content on_tstring_end unless app_id on_nl raise on_tstring_beg on_tstring_content on_tstring_end ##################################################### # @!group reject #####################################################
UNK on_const on_op on_const on_op on_const on_op ex on_nl UNK on_op on_int on_nl unless on_lparen UNK on_op on_int on_rparen on_period # re-raise the exception
def content_provider_id on_nl on_ivar on_op UNK on_period content_provider_id on_nl end on_nl on_ignored_nl def sso_token_for_image on_nl on_ivar on_op UNK on_period sso_token_for_image # the contentProviderIr found in the UserDetail instance
def sso_token_for_image on_nl on_ivar on_op UNK on_period sso_token_for_image on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_op UNK on_period UNK # the ssoTokenForImage found in the AppVersionRef instance
def UNK on_nl on_ivar on_op UNK on_period UNK on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_comma measures on_rparen on_ignored_nl # the ssoTokenForVideo found in the AppVersionRef instance
def UNK on_lparen UNK on_comma measures on_rparen on_ignored_nl if UNK on_period nil? on_op measures on_period nil? on_nl return nil on_nl # generates group hash used in the analytics time_series API. # Using rank=DESCENDING and limit=3 as this is what the App Store Connect analytics dashboard uses.
end on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # rubocop:enable Metrics/ClassLength
