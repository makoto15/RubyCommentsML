UNK on_nl on_ignored_nl on_const on_op UNK on_ignored_nl on_symbeg string on_comma on_ignored_nl on_symbeg UNK on_comma on_ignored_nl on_symbeg UNK on_comma on_ignored_nl on_symbeg # This should be the last item
UNK on_lparen on_const on_comma on_symbeg UNK on_comma on_symbeg UNK on_rparen on_nl end on_nl on_ignored_nl def self on_period UNK on_lparen UNK # to allow a simple `sh` in the custom actions
def self on_period UNK on_nl on_tstring_beg on_tstring_content on_tstring_end on_period UNK on_nl end on_nl on_ignored_nl def self on_period UNK on_nl nil # Implement in subclasses
end on_nl on_ignored_nl def self on_period UNK on_nl nil on_nl end on_nl on_ignored_nl def self on_period UNK on_nl nil on_nl # this is your chance to provide a more detailed description of this action
nil on_nl end on_nl on_ignored_nl def self on_period UNK on_nl nil on_nl end on_nl on_ignored_nl def self on_period UNK on_nl # [ # FastlaneCore::ConfigItem.new(key: :ipa_path, # env_name: "CRASHLYTICS_IPA_PATH", # description: "Value Description") # ]
nil on_nl end on_nl on_ignored_nl def self on_period UNK on_nl nil on_nl end on_nl on_ignored_nl def self on_period UNK on_nl # Return the keys you provide on the shared area # [ # ['IPA_OUTPUT_PATH', 'The path to the newly generated ipa file'] # ]
nil on_nl end on_nl on_ignored_nl def self on_period UNK on_nl nil on_nl end on_nl on_ignored_nl def self on_period UNK on_nl # Describes what type of data is expected to be returned, see RETURN_TYPES
nil on_nl end on_nl on_ignored_nl def self on_period UNK on_nl nil on_nl end on_nl on_ignored_nl def self on_period UNK on_nl # Describes what this method returns
nil on_nl end on_nl on_ignored_nl def self on_period UNK on_nl nil on_nl end on_nl on_ignored_nl def self on_period UNK on_nl # Very optional # You can return a sample return value, that might be returned by the actual action # This is currently only used when generating the documentation and running its tests
on_const on_period UNK on_lparen on_tstring_beg on_tstring_content UNK self UNK on_tstring_end on_rparen on_nl end on_nl on_ignored_nl def self on_period UNK on_nl # you can do things like # true # # platform == :ios # # [:ios, :mac].include?(platform) #
def self on_period UNK on_nl nil on_nl end on_nl on_ignored_nl def self on_period UNK on_lparen UNK on_rparen on_ignored_nl self on_period # Returns an array of string of sample usage of this action
def self on_period UNK on_lparen UNK on_rparen on_ignored_nl self on_period UNK on_nl end on_nl on_ignored_nl def self on_period UNK on_nl # Is printed out in the Steps: output in the terminal # Return nil if you don't want any logging in the terminal/JUnit Report
def self on_period UNK on_nl on_symbeg UNK on_nl end on_nl on_ignored_nl def self on_period UNK on_nl self on_period UNK on_period # Documentation category, available values defined in AVAILABLE_CATEGORIES
def self on_period UNK on_nl self on_period UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_period gsub on_lparen # instead of "AddGitAction", this will return "add_git" to print it to the user
def self on_period UNK on_lparen UNK on_comma on_op UNK on_comma on_op UNK on_rparen on_ignored_nl on_const on_period UNK on_lparen on_tstring_beg on_tstring_content # Allows the user to call an action from an action
def self on_period UNK on_nl UNK on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_op on_const on_period UNK on_nl # When shelling out from the action, should we use `bundle exec`?
def self on_period UNK on_nl UNK on_const on_period UNK on_lparen self on_period UNK on_rparen on_nl end on_nl on_ignored_nl def self # Return a new instance of the OtherAction action # We need to do this, since it has to have access to # the runner object
def self on_period UNK on_nl nil on_nl end on_nl end on_nl end on_nl on_ignored_nl UNK on_const on_nl def UNK on_nl # Describes how the user should handle deprecated an action if its deprecated # Returns a string (or nil)
end on_nl on_ignored_nl def UNK on_lparen is_first on_op UNK on_rparen on_ignored_nl self on_period UNK on_nl self on_period UNK on_lparen is_first # prepend new lines with "|" so the erb template knows *not* to replace them with "<br>"s
self on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen UNK is_first self on_period UNK on_lparen is_first on_rparen on_nl end on_nl on_ignored_nl # add list dashes
self on_period UNK on_lparen is_first on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen is_first on_rparen on_ignored_nl self on_period UNK on_lparen # the empty line that will be added breaks the quote
self on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl self on_period UNK self on_period UNK end on_nl on_ignored_nl def # continue the quote
self on_period UNK end on_nl on_ignored_nl def UNK on_nl UNK on_op self on_period UNK on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen UNK # remove the last new line added by the heredoc
end on_nl on_ignored_nl def UNK on_nl UNK on_op self on_period UNK on_lparen on_regexp_beg on_tstring_content on_regexp_end on_rparen UNK UNK UNK on_nl # remove the leading whitespace (similar to the squigly heredoc `<<~`)
string on_op string on_period gsub on_lparen on_regexp_beg on_tstring_content on_regexp_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen string on_op string on_period gsub on_lparen # remove Markdown quotes
string on_op string on_period gsub on_lparen on_regexp_beg on_tstring_content on_regexp_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen string on_op string on_period gsub on_lparen # remove Markdown links
string on_op string on_period gsub on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_end on_rparen UNK string on_nl end on_nl end on_nl # remove Markdown links with custom text
UNK string on_nl end on_nl end on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # remove new line preserve markers
