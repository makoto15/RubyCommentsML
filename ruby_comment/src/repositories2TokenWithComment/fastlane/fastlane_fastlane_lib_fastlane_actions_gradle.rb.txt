def self on_period UNK on_lparen params on_rparen on_ignored_nl task on_op params on_lbracket on_symbeg task on_rbracket on_nl flavor on_op params on_lbracket # rubocop:disable Metrics/PerceivedComplexity
gradle_path on_op if on_const on_period new on_lparen UNK on_rparen on_period UNK on_nl on_const on_period expand_path on_lparen UNK on_rparen on_nl UNK # Get the path to gradle, if it's an absolute path we take it as is, if it's relative we assume it's relative to the project_dir
on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg on_const on_period expand_path on_lparen gradle_path on_rparen on_embexpr_end on_tstring_content on_tstring_end on_rparen UNK on_const on_period # Ensure we ended up with a valid path to gradle
flags on_op on_lbracket on_rbracket on_nl flags on_op on_tstring_beg on_tstring_content on_embexpr_beg project_dir on_period UNK on_embexpr_end on_tstring_end on_nl flags on_op params on_lbracket # Construct our flags
UNK on_op on_const on_op on_const on_period new on_lparen on_label gradle_path on_rparen on_nl on_ignored_nl on_const on_period lane_context on_lbracket on_const on_op on_const # Run the actual gradle task
on_const on_period lane_context on_lbracket on_const on_op on_const on_rbracket on_op build_type if build_type on_nl on_const on_period lane_context on_lbracket on_const on_op on_const # If these were set as properties, then we expose them back out as they might be useful to others
UNK on_op UNK on_period UNK on_lparen on_label gradle_task on_comma on_ignored_nl on_label params on_lbracket on_symbeg UNK on_rbracket on_comma on_ignored_nl on_label flags # We run the actual gradle task
UNK UNK UNK task on_op UNK on_tstring_content UNK on_op task on_op UNK on_tstring_content UNK on_nl on_ignored_nl UNK on_op on_const on_period # If we didn't build, then we return now, as it makes no sense to search for apk's in a non-`assemble` or non-`build` scenario
new_apks on_op on_const on_lbracket UNK on_rbracket on_period UNK on_lbrace on_op path on_op path on_op UNK on_tstring_content UNK on_rbrace on_nl new_apks # Our apk/aab is now built, but there might actually be multiple ones that were built if a flavor was not specified in a multi-flavor project (e.g. `assembleRelease`) # However, we're not interested in unaligned apk's...
on_const on_period lane_context on_lbracket on_const on_op on_const on_rbracket on_op new_apks on_nl on_const on_period lane_context on_lbracket on_const on_op on_const on_rbracket on_op # We expose all of these new apks and aabs
UNK on_op new_apks on_period UNK on_lparen on_op on_const on_period UNK on_lparen on_symbeg UNK on_rparen on_rparen on_period UNK on_nl UNK on_op # We also take the most recent apk and aab to return as SharedValues::GRADLE_APK_OUTPUT_PATH and SharedValues::GRADLE_AAB_OUTPUT_PATH # This is the one that will be relevant for most projects that just build a single build variant (flavor + build type combo). # In multi build variants this value is undefined
on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen if new_apks on_period UNK on_op new_aabs on_period UNK on_nl on_ignored_nl UNK UNK # Give a helpful message in case there were no new apks or aabs. Remember we're only running this code when assembling, in which case we certainly expect there to be an apk or aab
on_ignored_nl def self on_period gradle_task on_lparen task on_comma flavor on_comma build_type on_comma tasks on_rparen on_ignored_nl gradle_task on_op on_lbracket task on_comma # rubocop:enable Metrics/PerceivedComplexity
on_ignored_nl def self on_period UNK on_nl on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def self on_period UNK on_nl on_tstring_beg on_tstring_content ##################################################### # @!group Documentation #####################################################
end on_nl on_ignored_nl def self on_period UNK on_nl on_lbracket on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_nl on_rbracket on_nl end on_nl on_ignored_nl def # we support iOS as cross platforms apps might want to call `gradle` also
