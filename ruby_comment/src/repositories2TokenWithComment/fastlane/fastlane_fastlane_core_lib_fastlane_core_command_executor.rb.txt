UNK on_const on_nl UNK on_op UNK on_nl UNK UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end # Executes commands and takes care of error handling and more
UNK UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end # Cross-platform way of finding an executable in the $PATH. Respects the $PATHEXT, which lists # valid file extensions for executables on Windows. # # which('ruby') #=> /usr/bin/ruby # # Derived from https://stackoverflow.com/a/5471032/3005
UNK on_op on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period UNK on_lparen on_tstring_beg on_tstring_content # PATHEXT contains the list of file extensions that Windows considers executable, semicolon separated. # e.g. ".COM;.EXE;.BAT;.CMD"
on_ignored_nl on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period UNK on_lparen on_const on_op on_const on_rparen on_period UNK UNK on_op UNK on_op # Always have an empty string (= no file extension)
UNK UNK on_lparen on_label nil on_comma on_label UNK on_comma on_label UNK on_comma on_label nil on_comma on_label nil on_comma on_label nil # @param command [String] The command to be executed # @param print_all [Boolean] Do we want to print out the command output while running? # @param print_command [Boolean] Should we print the command that's being executed # @param error [Block] A block that's called if an error occurs # @param prefix [Array] An array containing a prefix + block which might get applied to the output # @param loading [String] A loading string that is shown before the first output # @param suppress_output [Boolean] Should we print the command's output? # @return [String] All the output as string
on_const on_period UNK on_lparen UNK on_rparen on_nl end on_nl on_ignored_nl UNK on_ignored_nl status on_op on_const on_op on_const on_period UNK on_lparen # this is only used to show the "Loading text"...
UNK on_period UNK UNK on_op UNK on_op on_ignored_nl line on_op UNK on_lbracket UNK UNK on_rbracket on_op line if UNK on_lbracket # Prefix the current line with a string
status on_op UNK on_period UNK on_nl on_ignored_nl output on_op UNK on_period UNK on_nl o on_op output on_period UNK on_lparen on_tstring_beg # FastlanePty adds exit_status on to StandardError so every error will have a status code
output on_op UNK on_period UNK on_nl o on_op output on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_lparen o # This could happen when the environment is wrong: # > invalid byte sequence in US-ASCII (ArgumentError)
if status on_op UNK on_nl o on_op output on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_lparen o on_rparen # Exit status for build command, should be 0 if build succeeded
on_const on_period UNK on_lparen on_tstring_beg on_tstring_content UNK status UNK on_tstring_end on_rparen on_nl if UNK on_nl UNK on_period UNK on_lparen o # the user has the right to see the raw output
