UNK on_op response on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl UNK on_op response on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl on_ignored_nl r # extract `x-apple-id-session-id` and `scnt` from response, to be used by `update_request_headers`
r on_op request on_lparen on_symbeg UNK on_rparen do on_op req on_op on_ignored_nl req on_period url on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # get authentication options
def UNK on_lparen device_id on_rparen on_ignored_nl r on_op request on_lparen on_symbeg UNK on_rparen do on_op req on_op on_ignored_nl req on_period # this is extracted into its own method so it can be called multiple times (see end)
r on_op request on_lparen on_symbeg UNK on_rparen do on_op req on_op on_ignored_nl req on_period url on_lparen on_tstring_beg on_tstring_content on_embexpr_beg device_id # Request token to device
on_const on_op on_const on_period new on_period UNK on_lparen r on_period body on_rparen on_nl on_ignored_nl puts on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # we use `Spaceship::TunesClient.new.handle_itc_response` # since this might be from the Dev Portal, but for 2 step
r on_op request on_lparen on_symbeg UNK on_rparen do on_op req on_op on_ignored_nl req on_period url on_lparen on_tstring_beg on_tstring_content on_embexpr_beg device_id # Send token to server to get a valid session
UNK on_op ex on_nl if ex on_period to_s on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen puts on_lparen on_tstring_beg on_tstring_content on_tstring_end # this will fail if the code is invalid
if ex on_period to_s on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen puts on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl return UNK # If the code was entered wrong # { # "securityCode": { # "code": "1234" # }, # "securityCodeLocked": false, # "recoveryKeyLocked": false, # "recoveryKeySupported": true, # "manageTrustedDevicesLinkName": "appleid.apple.com", # "suppressResend": false, # "authType": "hsa", # "accountLocked": false, # "validationErrors": [{ # "code": "-21669", # "title": "Incorrect Verification Code", # "message": "Incorrect verification code." # }] # }
puts on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl return UNK on_lparen device_id on_rparen on_nl end on_nl on_ignored_nl raise ex on_nl end # to have a nicer output
on_ignored_nl UNK on_op response on_period body on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl code_length on_op UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket # "verification code" has already be pushed to devices
code_length on_op UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl on_ignored_nl puts on_lparen on_tstring_beg on_tstring_end on_rparen on_nl UNK on_op on_const on_lbracket # "securityCode": { # "length": 6, # "tooManyCodesSent": false, # "tooManyCodesValidated": false, # "securityCodeLocked": false # },
UNK on_op on_op UNK on_lparen response on_rparen on_nl code_type on_op on_tstring_beg on_tstring_content on_tstring_end on_nl body on_op UNK on_lparen phone_id on_comma # don't request sms if no trusted devices and env default is the only trusted number, # code was automatically sent
UNK on_op response on_period body on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period UNK on_nl phone_number on_op UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end # sms fallback, code was automatically sent
code_type on_op on_tstring_beg on_tstring_content on_tstring_end on_nl body on_op UNK on_lparen response on_period body on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_comma code_length # sms fallback but code wasn't sent bec > 1 phone number
if code on_op on_tstring_beg on_tstring_content on_tstring_end on_nl code_type on_op on_tstring_beg on_tstring_content on_tstring_end on_nl body on_op UNK on_lparen response on_period body # User exited by entering `sms` and wants to choose phone number for SMS
r on_op request on_lparen on_symbeg UNK on_rparen do on_op req on_op on_ignored_nl req on_period url on_lparen on_tstring_beg on_tstring_content on_embexpr_beg code_type # Send "verification code" back to server to get a valid session
on_const on_op on_const on_period new on_period UNK on_lparen r on_period body on_rparen UNK on_op ex on_nl on_ignored_nl if ex on_period # we use `Spaceship::TunesClient.new.handle_itc_response` # since this might be from the Dev Portal, but for 2 factor
UNK on_op ex on_nl on_ignored_nl if ex on_period to_s on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen puts on_lparen on_tstring_beg on_tstring_content # this will fail if the code is invalid
on_ignored_nl if ex on_period to_s on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen puts on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK # If the code was entered wrong # { # "service_errors": [{ # "code": "-21669", # "title": "Incorrect Verification Code", # "message": "Incorrect verification code." # }], # "hasError": true # }
puts on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_op on_int on_nl return UNK on_lparen response on_comma UNK on_rparen on_nl end # to have a nicer output
on_ignored_nl def UNK on_lparen response on_rparen on_ignored_nl response on_period body on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl end on_nl on_ignored_nl def # For reference in case auth behavior changes: # The "noTrustedDevices" field is only present # in the response for `GET /appleauth/auth`
def UNK on_lparen response on_rparen on_ignored_nl response on_period body on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl end on_nl on_ignored_nl def UNK # Account is not signed into any devices that can display a verification code
def UNK on_lparen response on_rparen on_ignored_nl on_lparen response on_period body on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_lbracket on_rbracket on_rparen on_period # see `sms_fallback` + account has only one trusted number for receiving an sms
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_lparen UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl # extracted into its own method for testing
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_lparen on_op UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen phone_numbers on_comma # extracted into its own method for testing
phone_number on_op phone_number on_period UNK on_lparen UNK on_comma on_tstring_beg on_tstring_end on_rparen on_nl on_ignored_nl phone_numbers on_period UNK do on_op phone on_op # start with e.g. +49 162 1234585 or +1-123-456-7866
on_ignored_nl phone_numbers on_period UNK do on_op phone on_op on_ignored_nl UNK on_op phone on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period UNK on_lparen # cleaned: +491621234585 or +11234567866
UNK on_op phone on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period UNK on_lparen UNK on_comma on_tstring_beg on_tstring_end on_rparen on_nl on_ignored_nl UNK on_op # rubocop:disable Style/AsciiComments # start with: +49 •••• •••••85 or +1 (•••) •••-••66
on_ignored_nl UNK on_op UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen UNK on_op UNK on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content UNK # cleaned: +49•••••••••85 or +1••••••••66 # rubocop:enable Style/AsciiComments
UNK on_op UNK on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content UNK on_nl UNK on_op on_tstring_beg on_tstring_content on_embexpr_beg UNK on_op on_int on_embexpr_end on_tstring_content # => 9 or 8
UNK on_op on_tstring_beg on_tstring_content on_embexpr_beg UNK on_op on_int on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_tstring_end on_nl UNK on_op UNK on_period # following regex: range from maskings_count-2 because sometimes the masked number has 1 or 2 dots more than the actual number # e.g. https://github.com/fastlane/fastlane/issues/14969
on_ignored_nl UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_op UNK on_op UNK on_nl UNK on_op UNK on_tstring_content on_embexpr_beg UNK on_embexpr_end # => +49([0-9]{8,9})85 or +1([0-9]{7,8})66
on_ignored_nl return phone on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket if phone_number on_op UNK on_nl end on_nl on_ignored_nl raise on_const on_op on_const # => /^\+49([0-9]{8})85$/ or /^\+1([0-9]{7,8})66$/
end on_nl on_ignored_nl raise on_const on_op on_const on_period new on_comma on_tstring_beg on_tstring_content on_embexpr_beg phone_number on_embexpr_end on_tstring_content on_embexpr_beg phone_numbers on_embexpr_end on_tstring_content # +491621234585 matches /^\+49([0-9]{8})85$/
raise on_const on_op on_const on_period new on_comma on_tstring_beg on_tstring_content on_embexpr_beg phone_number on_embexpr_end on_tstring_content on_embexpr_beg phone_numbers on_embexpr_end on_tstring_content on_tstring_end on_nl end # Handle case of phone_number not existing in phone_numbers because ENV var is wrong or matcher is broken
def UNK on_lparen phone_id on_comma phone_number on_comma code_length on_comma UNK on_op UNK on_rparen on_ignored_nl if UNK on_nl r on_op request # this is used in two places: after choosing a phone number and when a phone number is set via ENV var
r on_op request on_lparen on_symbeg UNK on_rparen do on_op req on_op on_ignored_nl req on_period url on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # Request code
on_const on_op on_const on_period new on_period UNK on_lparen r on_period body on_rparen on_nl on_ignored_nl puts on_lparen on_tstring_beg on_tstring_content on_embexpr_beg phone_number # we use `Spaceship::TunesClient.new.handle_itc_response` # since this might be from the Dev Portal, but for 2 step
on_ignored_nl on_ignored_nl request on_lparen on_symbeg UNK on_rparen do on_op req on_op on_ignored_nl req on_period url on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # If the request was successful, r.body is actually nil # The previous request will fail if the user isn't on a team # on App Store Connect, but it still works, so we're good
on_ignored_nl request on_lparen on_symbeg UNK on_rparen do on_op req on_op on_ignored_nl req on_period url on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl # Tell iTC that we are trustworthy (obviously) # This will update our local cookies to something new # They probably have a longer time to live than the other poor cookies # Changed Keys # - myacinfo # - DES5c148586dfd451e55afb0175f62418f91 # We actually only care about the DES value
on_ignored_nl UNK on_period UNK on_nl end on_nl on_ignored_nl def update_request_headers on_lparen req on_rparen on_ignored_nl req on_period headers on_lbracket on_tstring_beg on_tstring_content # This request will fail if the user isn't added to a team on iTC # However we don't really care, this request will still return the # correct DES... cookie
def update_request_headers on_lparen req on_rparen on_ignored_nl req on_period headers on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op UNK on_nl req on_period headers # Responsible for setting all required header attributes for the requests # to succeed
