UNK on_const on_op on_const on_nl attr_accessor on_symbeg project on_nl on_ignored_nl attr_accessor on_symbeg app_identifier on_nl on_ignored_nl attr_accessor on_symbeg scheme on_nl on_ignored_nl # rubocop:disable Metrics/ClassLength
attr_accessor on_symbeg project on_nl on_ignored_nl attr_accessor on_symbeg app_identifier on_nl on_ignored_nl attr_accessor on_symbeg scheme on_nl on_ignored_nl attr_accessor on_symbeg itc_team_id on_nl attr_accessor # Reference to the iOS project `project.rb`
attr_accessor on_symbeg app_identifier on_nl on_ignored_nl attr_accessor on_symbeg scheme on_nl on_ignored_nl attr_accessor on_symbeg itc_team_id on_nl attr_accessor on_symbeg adp_team_id on_nl on_ignored_nl attr_accessor # App Identifier of the current app
attr_accessor on_symbeg scheme on_nl on_ignored_nl attr_accessor on_symbeg itc_team_id on_nl attr_accessor on_symbeg adp_team_id on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor # Scheme of the Xcode project
attr_accessor on_symbeg itc_team_id on_nl attr_accessor on_symbeg adp_team_id on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg automatic_versioning_enabled on_nl on_ignored_nl def # If the current setup requires a login, this is where we'll store the team ID
UNK ex if UNK on_op on_symbeg UNK on_nl on_ignored_nl on_const on_period error on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_const on_period # If it's already manual, and it has failed # we need to re-raise the exception, as something definitely is wrong
on_const on_period error on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_const on_period error on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_const on_period # If we're here, that means something else failed. We now show the # error message and fallback to `:ios_manual`
end on_nl end on_nl on_ignored_nl def UNK on_nl on_const on_period header on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_nl UNK # the second time, we're just failing, and don't use a `begin` `rescue` block any more
def UNK on_nl on_const on_period header on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_nl UNK on_nl UNK on_lparen on_label true # Different iOS flows
on_label self on_period user on_comma on_ignored_nl on_label self on_period app_identifier on_comma on_ignored_nl on_label self on_period itc_team_id on_nl on_rbrace on_nl on_rparen # precheck doesn't need to run during init
on_const on_op on_const on_period UNK on_period UNK on_lparen UNK on_comma on_label self on_period is_swift_fastfile on_rparen on_nl end on_nl end on_nl # needed to fetch the app details
UNK on_op ex on_nl on_const on_period UNK on_lparen ex on_period to_s on_rparen on_nl end on_nl on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end # to get the bundle identifier
on_const on_period UNK on_lparen ex on_period to_s on_rparen on_nl end on_nl on_ignored_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl require on_tstring_beg on_tstring_content # If this fails, it's no big deal, since we really just want the bundle identifier # so instead, we'll just ask the user
else on_ignored_nl UNK on_lparen on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl # lane is part of the notation
on_ignored_nl def UNK on_lparen on_label true on_rparen on_ignored_nl on_const on_period message on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl config on_op on_lbrace # Helpers
def UNK on_lparen on_label true on_rparen on_ignored_nl on_const on_period message on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl config on_op on_lbrace on_rbrace # Every installation setup that needs an Xcode project should # call this method
if self on_period project_path on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl config on_lbracket on_symbeg UNK on_rbracket on_op self on_period # this is needed as the first method call will store information in there
if self on_period app_identifier on_period to_s on_period length on_op on_int on_nl UNK on_nl end on_nl end on_nl on_ignored_nl def UNK # These two vars need to be accessed in order to be set
on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_int on_period to_s on_nl on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_int on_period # Disable the warning texts and information that's not relevant during onboarding
on_label true on_nl on_rbrace on_rparen on_nl on_ignored_nl if UNK on_period UNK on_lparen on_const on_rparen on_op UNK on_period UNK on_op on_int # most of the times, there will only be one project in there
if self on_period app_identifier on_nl self on_period UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl # iOS specific things first
def project_prefix on_nl return on_tstring_beg on_tstring_end UNK self on_period UNK on_nl on_ignored_nl if self on_period project_path on_period UNK on_lparen on_tstring_beg # Returns the `workspace` or `project` key/value pair for # gym and snapshot, but only if necessary # (when there are multiple projects in the current directory) # it's a prefix, and not a suffix, as Swift cares about the order of parameters
UNK on_op on_const on_period UNK on_lparen project_path on_rparen on_nl UNK on_op on_const on_period UNK on_lparen on_const on_period UNK on_lparen on_tstring_beg # Convert the absolute path to a relative path
require on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_op on_lbrace on_ignored_nl on_label self on_period user on_comma on_ignored_nl on_label self on_period adp_team_id on_comma # mode is either :adp or :itc
UNK UNK on_ignored_nl on_const on_period config on_op on_const on_op on_const on_period UNK on_lparen on_ignored_nl on_const on_op on_const on_period UNK on_comma # The retrying system allows people to correct invalid inputs # e.g. the app's name is already taken
on_const on_period config on_op on_const on_op on_const on_period UNK on_lparen on_ignored_nl on_const on_op on_const on_period UNK on_comma on_ignored_nl UNK on_nl # Creating config in the loop so user will be reprompted # for app name if app name is taken or too long
UNK on_op ex on_nl if ex on_period UNK on_lparen on_const on_op on_const on_op on_const on_rparen on_op ex on_period UNK on_lparen # success
if ex on_period UNK on_lparen on_const on_op on_const on_op on_const on_rparen on_op ex on_period UNK on_lparen on_const on_op on_const on_op # show the user facing error, and inform them of what went wrong
end on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # rubocop:enable Metrics/ClassLength
