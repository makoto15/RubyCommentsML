def self on_period UNK on_lparen params on_rparen on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl on_const # rubocop:disable Metrics/PerceivedComplexity
app on_op on_const on_op on_const on_period UNK on_lparen params on_lbracket on_symbeg UNK on_rbracket on_rparen on_nl UNK app on_nl on_const on_period # Get App
version on_op params on_lbracket on_symbeg version on_rbracket on_nl build_number on_op params on_lbracket on_symbeg build_number on_rbracket on_nl platform on_op params on_lbracket # Process options
if version on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_const on_period message on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_op app on_period # Set version if it is latest
on_const on_period message on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_op app on_period UNK on_lparen on_label platform on_rparen on_op app # Try to grab the edit version first, else fallback to live version
version on_op UNK on_period UNK on_nl build_number on_op UNK on_period build_version on_nl end on_nl UNK version on_op on_tstring_beg on_tstring_content on_tstring_end # The build_version of a candidate build does not always match the one in latest_version so get the version and build number from the same place.
version on_op live_version on_period version on_nl build_number on_op live_version on_period build_version on_nl end on_nl on_ignored_nl if version on_nl version on_op # No need to search for candidates, because released App Store version should only have one build
if version on_nl version on_op version on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_lparen on_op on_symbeg UNK on_rparen # Remove leading zeros from version string (eg. 1.02 -> 1.2)
if output_directory on_op on_op output_directory on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl output_directory on_op on_tstring_beg on_tstring_content on_tstring_end on_nl end # Make sure output_directory has a slash on the end
message on_op on_lbracket on_rbracket on_nl message on_op on_tstring_beg on_tstring_content on_embexpr_beg params on_lbracket on_symbeg UNK on_rbracket on_embexpr_end on_tstring_content on_embexpr_beg platform on_embexpr_end # Write a nice message
on_const on_period message on_lparen on_tstring_beg on_tstring_content on_embexpr_beg build on_period build_version on_embexpr_end on_tstring_content on_embexpr_beg train on_period version_string on_embexpr_end on_tstring_content on_tstring_end on_rparen # In some cases, AppStoreConnect does not process the dSYMs, thus no error should be thrown.
on_ignored_nl def self on_period UNK on_lparen download_url on_comma UNK on_comma UNK on_comma build_version on_comma output_directory on_rparen on_ignored_nl UNK on_op self # rubocop:enable Metrics/PerceivedComplexity
on_ignored_nl def self on_period UNK on_nl on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def self on_period UNK on_nl UNK on_op ##################################################### # @!group Documentation #####################################################
on_label true on_comma on_ignored_nl on_label on_const on_op on_const on_period UNK on_lparen on_symbeg UNK on_rparen on_comma on_ignored_nl on_label true on_comma on_ignored_nl # as we also allow integers, which we convert to strings anyway
