on_ignored_nl UNK on_const on_op on_const on_nl on_const on_op UNK on_ignored_nl on_label on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_label on_tstring_beg on_tstring_content on_tstring_end # --object-directory=OBJDIR Specify the directory that contains the gcov data files. # -o OUTPUT, --output=OUTPUT Print output to this filename Keep the temporary *.gcov files generated by gcov. # -k, --keep Keep the temporary *.gcov files generated by gcov. # -d, --delete Delete the coverage files after they are processed. # -f FILTER, --filter=FILTER Keep only the data files that match this regular expression # -e EXCLUDE, --exclude=EXCLUDE Exclude data files that match this regular expression # --gcov-filter=GCOV_FILTER Keep only gcov data files that match this regular expression # --gcov-exclude=GCOV_EXCLUDE Exclude gcov data files that match this regular expression # -r ROOT, --root=ROOT Defines the root directory for source files. # -x, --xml Generate XML instead of the normal tabular output. # --xml-pretty Generate pretty XML instead of the normal dense format. # --html Generate HTML instead of the normal tabular output. # --html-details Generate HTML output for source file coverage. # --html-absolute-paths Set the paths in the HTML report to be absolute instead of relative # -b, --branches Tabulate the branch coverage instead of the line coverage. # -u, --sort-uncovered Sort entries by increasing number of uncovered lines. # -p, --sort-percentage Sort entries by decreasing percentage of covered lines. # --gcov-executable=GCOV_CMD Defines the name/path to the gcov executable [defaults to the GCOV environment variable, if present; else 'gcov']. # --exclude-unreachable-branches Exclude from coverage branches which are marked to be excluded by LCOV/GCOV markers or are determined to be from lines containing only compiler-generated "dead" code. # -g, --use-gcov-files Use preprocessed gcov files for analysis. # -s, --print-summary Prints a small report to stdout with line & branch percentage coverage
gcovr_args on_op UNK on_nl on_ignored_nl UNK params on_period UNK on_lparen on_const on_rparen on_nl UNK on_op params on_nl on_ignored_nl UNK UNK # The args we will build with
UNK params on_period UNK on_lparen on_const on_rparen on_nl UNK on_op params on_nl on_ignored_nl UNK UNK on_period UNK on_lparen UNK UNK # Allows for a whole variety of configurations
UNK UNK on_period UNK on_lparen UNK UNK on_rparen on_nl UNK on_lparen UNK on_lbracket UNK UNK on_rbracket on_rparen on_nl end on_nl # Check if an output path was given
gcovr_args on_op UNK on_lparen UNK on_rparen on_nl UNK on_ignored_nl gcovr_args on_op params on_nl end on_nl on_ignored_nl gcovr_args on_op gcovr_args on_period # Maps parameter hash to CLI args
gcovr_args on_op gcovr_args on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl UNK on_op on_tstring_beg on_tstring_content UNK gcovr_args UNK on_tstring_end # Joins args into space delimited string
UNK on_const on_period UNK on_lparen UNK on_rparen on_nl on_const on_period UNK on_lparen UNK on_rparen on_nl end on_nl end on_nl on_ignored_nl # If the output directory doesn't exist, create it
params on_op params on_period UNK UNK on_op UNK on_comma v on_op v on_period UNK UNK on_nl on_ignored_nl params on_period UNK # Remove nil value params
params on_period UNK UNK on_op UNK on_comma v on_op on_ignored_nl v on_op on_tstring_beg on_tstring_end on_nl UNK on_op on_const on_lbracket UNK # Maps nice developer param names to CLI arguments
