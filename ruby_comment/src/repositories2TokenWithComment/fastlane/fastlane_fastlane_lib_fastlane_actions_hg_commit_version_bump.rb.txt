UNK on_const on_op on_const on_nl def self on_period UNK on_lparen params on_rparen on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg # Commits version bump.
UNK on_op on_const on_period UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK # get the repo root path
UNK on_const on_period UNK on_nl on_const on_period user_error! on_lparen on_tstring_beg on_tstring_content on_embexpr_beg xcodeproj_path on_embexpr_end on_tstring_end on_rparen UNK on_const on_period UNK # ensure that the xcodeproj passed in was OK
UNK on_op on_const on_op on_const on_op on_const on_period UNK on_lparen UNK on_rparen on_nl on_ignored_nl on_const on_period user_error! on_lparen on_tstring_beg on_tstring_content # find an xcodeproj (ignoring dependencies)
on_const on_period user_error! on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen if UNK on_period UNK on_op UNK on_nl on_ignored_nl if UNK on_period UNK # no projects found: error
if UNK on_period UNK on_op UNK on_nl UNK on_op UNK on_period map UNK on_op UNK on_op on_const on_period new on_lparen # too many projects found: error
xcodeproj_path on_op UNK on_period UNK on_nl end on_nl on_ignored_nl if on_const on_period UNK on_nl UNK on_op params on_lbracket on_symbeg UNK # one project found: great
if on_const on_period UNK on_nl UNK on_op params on_lbracket on_symbeg UNK on_rbracket on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl # find the pbxproj path, relative to hg directory
UNK on_op on_const on_op on_const on_period UNK on_lparen xcodeproj_path on_rparen on_nl UNK on_op UNK on_period UNK on_period UNK do on_op # find the info_plist files
expected_changed_files on_op on_lbracket on_rbracket on_nl expected_changed_files on_op UNK on_nl expected_changed_files on_op UNK on_nl expected_changed_files on_period UNK on_period UNK on_nl on_ignored_nl # create our list of files that we expect to have changed, they should all be relative to the project root, which should be equal to the hg workdir root
UNK on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl # get the list of files that have actually changed in our hg workdir
on_const on_period user_error! on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen if UNK on_period UNK on_nl on_ignored_nl UNK on_op on_const on_period new on_lparen # little user hint
UNK on_op on_const on_period new on_lparen UNK on_period map on_lparen on_op on_symbeg UNK on_rparen on_rparen on_nl UNK on_op on_const on_period # check if the files changed are the ones we expected to change (these should be only the files that have version info in them)
UNK on_op on_tstring_beg on_tstring_content on_embexpr_beg params on_lbracket on_symbeg UNK on_rbracket on_embexpr_end on_tstring_content on_tstring_end on_nl UNK UNK if on_const on_period UNK # create a commit with a message
on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def self on_period UNK on_lparen UNK on_rparen on_ignored_nl UNK on_nl end on_nl on_ignored_nl # credits to lmirosevic for original git version
