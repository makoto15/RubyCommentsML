UNK on_const on_op on_const on_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg name on_nl on_ignored_nl attr_accessor on_symbeg udid on_nl on_ignored_nl # Represents a device from the Apple Developer Portal
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg name on_nl on_ignored_nl attr_accessor on_symbeg udid on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # @return (String) The ID given from the developer portal. You'll probably not need it. # @example # "XJXGVS46MW"
attr_accessor on_symbeg name on_nl on_ignored_nl attr_accessor on_symbeg udid on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # @return (String) The name of the device, must be 50 characters or less. # @example # "Felix Krause's iPhone 6"
attr_accessor on_symbeg udid on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # @return (String) The UDID of the device # @example # "4c24a7ee5caaa4847f49aaab2d87483053f53b65"
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # @return (String) The platform of the device. This is probably always "ios" # @example # "ios"
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl UNK on_lparen on_lbrace on_ignored_nl on_tstring_beg # @return (String) Status of the device. "c" for enabled devices, "r" for disabled devices. # @example # "c"
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl UNK on_lparen on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_symbeg UNK # @return (String) Model (can be nil) # @example # 'iPhone 6', 'iPhone 4 GSM'
attr_accessor on_symbeg UNK on_nl on_ignored_nl UNK on_lparen on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_symbeg UNK on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end # @return (String) Device type # @example # 'watch' - Apple Watch # 'ipad' - iPad # 'iphone' - iPhone # 'ipod' - iPod # 'tvOS' - Apple TV
def all on_lparen on_label false on_comma on_label false on_rparen on_ignored_nl client on_period UNK on_lparen on_label mac on_comma on_label UNK on_rparen # @param mac [Bool] Fetches Mac devices if true # @param include_disabled [Bool] Whether to include disable devices. false by default. # @return (Array) Returns all devices registered for this account
def UNK on_nl client on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period map on_lbrace on_op device on_op self on_period factory # @return (Array) Returns all Apple TVs registered for this account
def UNK on_nl client on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period map on_lbrace on_op device on_op self on_period factory # @return (Array) Returns all Watches registered for this account
def UNK on_nl client on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period map on_lbrace on_op device on_op self on_period factory # @return (Array) Returns all iPads registered for this account
def UNK on_nl client on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period map on_lbrace on_op device on_op self on_period factory # @return (Array) Returns all iPhones registered for this account
def UNK on_nl client on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period map on_lbrace on_op device on_op self on_period factory # @return (Array) Returns all iPods registered for this account
def UNK on_nl all on_lparen on_label UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl all on_period UNK on_lbrace on_op # @return (Array) Returns all Macs registered for this account
def UNK on_nl all on_period UNK on_lbrace on_op device on_op device on_period UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_rbrace on_nl end # @return (Array) Returns all devices that can be used for iOS profiles (all devices except TVs)
def UNK on_lparen UNK on_rparen on_ignored_nl UNK UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_const on_op on_const on_op # @return (Array) Returns all devices matching the provided profile_type
def UNK on_lparen UNK on_comma on_label false on_comma on_label false on_rparen on_ignored_nl all on_lparen on_label mac on_comma on_label UNK on_rparen # @param mac [Bool] Searches for Macs if true # @param include_disabled [Bool] Whether to include disable devices. false by default. # @return (Device) Find a device based on the ID of the device. *Attention*: # This is *not* the UDID. nil if no device was found.
def UNK on_lparen UNK on_comma on_label false on_comma on_label false on_rparen on_ignored_nl all on_lparen on_label mac on_comma on_label UNK on_rparen # @param mac [Bool] Searches for Macs if true # @param include_disabled [Bool] Whether to include disable devices. false by default. # @return (Device) Find a device based on the UDID of the device. nil if no device was found.
def UNK on_lparen UNK on_comma on_label false on_comma on_label false on_rparen on_ignored_nl all on_lparen on_label mac on_comma on_label UNK on_rparen # @param mac [Bool] Searches for Macs if true # @param include_disabled [Bool] Whether to include disable devices. false by default. # @return (Device) Find a device based on its name. nil if no device was found.
def UNK on_lparen on_label UNK on_comma on_label UNK on_comma on_label false on_rparen on_ignored_nl UNK udid on_op name on_nl UNK on_tstring_beg # Register a new device to this account # @param name (String) (required): The name of the new device # @param udid (String) (required): The UDID of the new device # @param mac (Bool) (optional): Pass Mac if device is a Mac # @example # Spaceship.device.create!(name: "Felix Krause's iPhone 6", udid: "4c24a7ee5caaa4847f49aaab2d87483053f53b65") # @return (Device): The newly created device
UNK udid on_op name on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl UNK on_tstring_beg on_tstring_content UNK name UNK on_tstring_content # Check whether the user has passed in a UDID and a name
UNK on_op self on_period UNK on_lparen udid on_comma on_label mac on_rparen on_nl UNK UNK UNK UNK on_nl on_ignored_nl device on_op # Find the device by UDID, raise an exception if it already exists
device on_op client on_period UNK on_lparen name on_comma udid on_comma on_label mac on_rparen on_nl on_ignored_nl self on_period UNK on_lparen device # It is valid to have the same name for multiple devices
self on_period UNK on_lparen device on_rparen on_nl end on_nl end on_nl on_ignored_nl def UNK on_nl UNK self on_period UNK on_op # Update self with the new device
def UNK on_nl UNK UNK on_nl UNK on_op client on_period UNK on_lparen self on_period UNK on_comma self on_period udid on_comma # Enable current device.
def UNK on_nl UNK UNK on_nl client on_period UNK on_lparen self on_period UNK on_comma self on_period udid on_comma on_label self # Disable current device. This will invalidate all provisioning profiles that use this device.
self on_period UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl end on_nl end on_nl end on_nl end on_nl EMP EMP # disable request doesn't return device json, so we assume that the new status is "r" if response succeeded
