UNK on_const on_nl UNK on_op UNK on_nl UNK UNK on_lparen UNK UNK UNK on_rparen on_ignored_nl on_ignored_nl UNK on_op on_tstring_beg on_tstring_content # This classes methods are called when something goes wrong in the building process
UNK UNK on_lparen UNK UNK UNK on_rparen on_ignored_nl on_ignored_nl UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_op on_const UNK UNK # @param [String] The output of the errored build # This method should raise an exception in any case, as the return code indicated a failed build
on_ignored_nl UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_op on_const UNK UNK UNK UNK UNK UNK on_op on_tstring_beg on_tstring_content UNK # The order of the handling below is important
UNK on_nl end on_nl on_const UNK UNK on_lparen on_tstring_beg on_tstring_content UNK UNK UNK on_tstring_end on_rparen on_nl end on_nl on_ignored_nl UNK # this is *really* important: # we don't want to raise an exception here # as we handle this in runner.rb at a later point # after parsing the actual test results # ------------------------------------------------ # For the "Failing tests:" case, this covers Xcode # 10 parallel testing failure, which doesn't # print out the "Executed" line that would show # test summary (number of tests passed, etc.). # Instead, it just prints "Failing tests:" # followed by a list of tests that failed.
UNK print on_lparen UNK on_rparen on_ignored_nl on_const UNK UNK on_lparen UNK on_rparen on_nl end on_nl end on_nl end on_nl end # Just to make things easier
