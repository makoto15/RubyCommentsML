if on_ivar on_lbracket on_symbeg UNK on_rbracket on_nl run_adb_command on_lparen on_tstring_beg on_tstring_content on_embexpr_beg device_serial on_embexpr_end on_tstring_content on_tstring_end on_comma on_label false on_comma # Root is needed to access device paths at /data
on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma device_type_dir_name on_rbracket on_period UNK do on_op UNK on_op on_ignored_nl UNK on_op UNK on_lparen on_ivar on_lbracket # We'll clear the temporary directory where screenshots wind up after being pulled from # the device as well, in case those got stranded on a previous run/failure
UNK on_op on_const on_period UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_op run_adb_command on_lparen on_tstring_beg on_tstring_content # macOS evaluates $foo in `echo $foo` before executing the command, # Windows doesn't - hence the double backslash vs. single backslash
on_tstring_beg on_tstring_content on_embexpr_beg app_package_name on_embexpr_end on_tstring_content on_embexpr_beg app_package_name on_embexpr_end on_tstring_content on_embexpr_beg locale on_embexpr_end on_tstring_content on_tstring_end on_nl on_rbracket on_nl end on_period # https://github.com/fastlane/fastlane/issues/15653#issuecomment-578541663
on_ignored_nl on_const on_period UNK do on_op UNK on_op on_ignored_nl device_screenshots_paths on_period UNK do on_op device_path on_op on_ignored_nl UNK on_lparen device_serial # Make a temp directory into which to pull the screenshots before they are moved to their final location. # This makes directory cleanup easier, as the temp directory will be removed when the block completes.
UNK on_lparen locale on_comma UNK on_comma device_type_dir_name on_rparen on_nl end on_nl on_ignored_nl UNK on_op UNK on_lparen on_ivar on_lbracket on_symbeg output_directory # The SDK can't 100% determine what kind of device it is running on relative to the categories that # supply and Google Play care about (phone, 7" tablet, TV, etc.). # # Therefore, we'll move the pulled screenshots from their genericly named folder to one named by the # user provided device_type option value to match the directory structure that supply expects
if UNK on_op UNK on_op on_ivar on_lbracket on_symbeg UNK on_rbracket on_nl on_const on_period error on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl # Because we can't guarantee the screenshot output directory will be empty when we pull, we determine # success based on whether there are more screenshots there than when we started. # This is only applicable though when `clear_previous_screenshots` is set to `true`.
UNK on_op on_const on_period join on_lparen UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl on_const on_period # Glob pattern that finds the pulled screenshots directory for each locale # Possible matches: # [pull_dir]/en-US/images/screenshots # [pull_dir]/screengrab/en-US/images/screenshots
dest_dir on_op UNK on_period UNK on_lparen UNK on_comma on_ivar on_lbracket on_symbeg output_directory on_rbracket on_rparen on_nl on_ignored_nl dest_dir on_op dest_dir on_period # The :output_directory is the final location for the screenshots, so we begin by replacing # the temp directory portion of the path, with the output directory
dest_dir on_op dest_dir on_period UNK on_lparen UNK on_tstring_content UNK on_comma on_tstring_beg on_tstring_end on_rparen on_nl on_ignored_nl dest_dir on_op on_const on_period join # Different versions of adb are inconsistent about whether they will pull down the containing # directory for the screenshots, so we'll try to remove that path from the directory name when # creating the destination path. # See: https://github.com/fastlane/fastlane/pull/4915#issuecomment-236368649
dest_dir on_op on_const on_period join on_lparen on_const on_period UNK on_lparen dest_dir on_rparen on_comma locale on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma device_type_dir_name # We then replace the last segment of the screenshots directory path with the device_type # specific name, as expected by supply # # (Moved to: fastlane/metadata/android/en-US/images/phoneScreenshots)
def UNK on_lparen device_serial on_comma device_path on_rparen on_ignored_nl return if run_adb_command on_lparen on_tstring_beg on_tstring_content on_embexpr_beg device_serial on_embexpr_end on_tstring_content on_embexpr_beg device_path # Some device commands fail if executed against a device path that does not exist, so this helper method # provides a way to conditionally execute a block only if the provided path exists on the device.
end on_nl on_ignored_nl def UNK on_lparen device_serial on_rparen on_ignored_nl UNK on_op run_adb_command on_lparen on_tstring_beg on_tstring_content on_embexpr_beg device_serial on_embexpr_end on_tstring_content on_tstring_end # Some versions of ADB will have a non-zero exit status for this, which will cause the executor to raise. # We can safely ignore that and treat it as if it returned 'No such file'
def UNK on_lparen device_serial on_rparen on_ignored_nl UNK on_op run_adb_command on_lparen on_tstring_beg on_tstring_content on_embexpr_beg device_serial on_embexpr_end on_tstring_content on_tstring_end on_comma on_ignored_nl on_label # Return an array of packages that are installed on the device
UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_period join on_lparen on_tstring_beg on_tstring_end on_rparen end on_nl on_ignored_nl def # Debug/Warning output from ADB}
end on_nl on_ignored_nl def UNK on_lparen device_serial on_rparen on_ignored_nl run_adb_command on_lparen on_tstring_beg on_tstring_content on_embexpr_beg device_serial on_embexpr_end on_tstring_content on_tstring_end on_comma on_ignored_nl # Lines retain their newline chars
UNK on_op on_ivar on_period UNK on_lparen on_label on_tstring_beg on_embexpr_beg on_ivar on_period UNK on_embexpr_end on_tstring_content on_embexpr_beg app_apk_path on_embexpr_end on_tstring_end on_comma on_ignored_nl # Check if the app wants to use the clean status bar feature
unless UNK on_period include? on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_const on_period user_error! on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end # Make sure the app requests the DUMP permission
run_adb_command on_lparen on_tstring_beg on_tstring_content on_embexpr_beg device_serial on_embexpr_end on_tstring_content on_embexpr_beg on_ivar on_lbracket on_symbeg app_package_name on_rbracket on_embexpr_end on_tstring_content on_tstring_end on_comma on_ignored_nl on_label # Grant the DUMP permission
run_adb_command on_lparen on_tstring_beg on_tstring_content on_embexpr_beg device_serial on_embexpr_end on_tstring_content on_tstring_end on_comma on_ignored_nl on_label true on_comma on_label true on_rparen on_nl end on_nl # Enable the SystemUI demo mode
