UNK UNK on_lparen UNK UNK options on_op UNK UNK on_rparen on_ignored_nl UNK UNK UNK length on_op UNK on_nl on_ignored_nl omission # Truncates a given +text+ after a given <tt>length</tt> if +text+ is longer than <tt>length</tt>: # # 'Once upon a time in a world far far away'.truncate(27) # # => "Once upon a time in a wo..." # # Pass a string or regexp <tt>:separator</tt> to truncate +text+ at a natural break: # # 'Once upon a time in a world far far away'.truncate(27, separator: ' ') # # => "Once upon a time in a..." # # 'Once upon a time in a world far far away'.truncate(27, separator: /\s/) # # => "Once upon a time in a..." # # The last characters will be replaced with the <tt>:omission</tt> string (defaults to "...") # for a total length not exceeding <tt>length</tt>: # # 'And they found that many people were sleeping better.'.truncate(25, omission: '... (continued)') # # => "And they f... (continued)"
UNK UNK on_lparen length on_op on_int on_rparen on_ignored_nl UNK on_lbracket on_rbracket UNK length on_op on_int on_nl self on_period UNK on_lparen # Base taken from: https://www.ruby-forum.com/topic/57805
UNK UNK on_lparen length on_op on_int UNK options on_op UNK UNK on_rparen on_ignored_nl omission on_op options on_lbracket UNK omission on_rbracket # Base taken from: http://stackoverflow.com/a/12202205/1945875
