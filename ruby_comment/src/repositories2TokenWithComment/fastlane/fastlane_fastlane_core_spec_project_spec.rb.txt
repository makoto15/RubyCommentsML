expect on_lparen on_const on_op on_const on_period run_command on_lparen cmd on_rparen on_rparen on_period to eq on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl # note: this command is deliberately not using `"` around `HO` as `echo` would echo those back on Windows
UNK on_op UNK on_lparen text on_rparen on_nl cmd on_op on_tstring_beg on_tstring_content UNK text UNK on_tstring_content on_tstring_end on_nl expect do on_ignored_nl # random text
UNK on_const on_op on_const on_period UNK on_nl expect on_lparen UNK on_lparen text on_rparen on_rparen on_period to eq on_lparen UNK on_op # on mac this before only partially works as expected
expect on_lparen UNK on_lparen text on_rparen on_rparen on_period to eq on_lparen UNK on_op on_int on_rparen on_nl UNK on_lparen on_int on_rparen # this shows the current implementation issue # Timeout doesn't kill the running process # i.e. see fastlane/fastlane_core#102
end on_nl end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl text on_op on_tstring_beg on_tstring_content on_tstring_end on_nl cmd on_op on_tstring_beg # you would be expected to be able to see the number of processes go back to count right away.
