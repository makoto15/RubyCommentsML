on_ignored_nl UNK on_const on_nl on_const on_op UNK on_tstring_content UNK on_ignored_nl attr_accessor on_symbeg UNK attr_accessor on_symbeg UNK attr_accessor on_symbeg UNK attr_accessor # current logic: # - find all groups in existing project # -- if a group is missing, add it # --- add all files for group into new group, build target, and compile phase # - iterate through existing groups # -- update all files needing updating # - iterate through existing groups # -- if a file from the manifest is new, add it to group, build target, and compile phase # - Save and return true if any action was taken to modify any file (project included)
UNK on_const on_nl on_const on_op UNK on_tstring_content UNK on_ignored_nl attr_accessor on_symbeg UNK attr_accessor on_symbeg UNK attr_accessor on_symbeg UNK attr_accessor on_symbeg # build project
on_ignored_nl attr_accessor on_symbeg UNK attr_accessor on_symbeg UNK attr_accessor on_symbeg UNK attr_accessor on_symbeg UNK attr_accessor on_symbeg UNK attr_accessor on_symbeg UNK on_ignored_nl # also used by SwiftFastlaneAPIGenerator
attr_accessor on_symbeg UNK attr_accessor on_symbeg UNK attr_accessor on_symbeg UNK attr_accessor on_symbeg UNK attr_accessor on_symbeg UNK on_ignored_nl on_const on_op on_tstring_beg on_tstring_content # project we'll be updating
attr_accessor on_symbeg UNK attr_accessor on_symbeg UNK attr_accessor on_symbeg UNK attr_accessor on_symbeg UNK on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl # FastlaneRunner xcodeproj target
attr_accessor on_symbeg UNK attr_accessor on_symbeg UNK attr_accessor on_symbeg UNK on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl def UNK on_nl # hash of file names to group names they belong to
attr_accessor on_symbeg UNK attr_accessor on_symbeg UNK on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl def UNK on_nl on_ivar on_op on_const # unique list of group names that came from the manifest
attr_accessor on_symbeg UNK on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl def UNK on_nl on_ivar on_op on_const on_period UNK on_lparen # location in filesystem where all swift files should exist when we're done
on_ignored_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl def UNK on_nl on_ivar on_op on_const on_period UNK on_lparen on_const on_period join # source location of where we're copying file from during the upgrade process
def UNK on_lparen on_label UNK on_rparen on_ignored_nl UNK on_op on_const on_nl on_ignored_nl UNK on_op on_const on_period join on_lparen self on_period # compares source file against the target file's FastlaneRunnerAPIVersion and returned `true` if there is a difference
UNK on_op on_const on_nl on_ignored_nl UNK on_op on_const on_period join on_lparen self on_period UNK on_comma on_tstring_beg on_tstring_content on_embexpr_beg filename on_embexpr_end # looking for something like: FastlaneRunnerAPIVersion [0.9.1]
return UNK unless on_const on_period UNK on_lparen target on_rparen on_nl on_ignored_nl UNK on_op on_const on_period UNK on_lparen UNK on_rparen on_nl # target doesn't have the file yet, so ya, I'd say it needs to be updated
return false unless UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl return false unless UNK on_period UNK on_lparen on_tstring_beg # ignore if files don't contain FastlaneRunnerAPIVersion
def UNK on_lparen on_label UNK on_comma on_label false on_rparen on_ignored_nl needs_update on_op UNK on_lparen on_label filename on_rparen on_nl on_const on_period # currently just copies file, even if not needed.
return needs_update if dry_run on_nl on_ignored_nl unless needs_update on_nl return false on_nl end on_nl on_ignored_nl UNK on_op on_const on_period join # Ok, we know if this file needs an update, can return now if it's a dry run
return false on_nl end on_nl on_ignored_nl UNK on_op on_const on_period join on_lparen self on_period UNK on_comma on_tstring_beg on_tstring_content on_embexpr_beg filename # no work needed, just return
self on_period UNK on_period each do on_op filename on_comma group_name on_op on_ignored_nl group_name on_op group_name on_period UNK on_nl on_ignored_nl UNK # need {group => [file1, file2, etc..]} instead of: {file1 => group, file2 => group, etc...}
UNK on_op false on_nl on_ivar on_period UNK on_period each do on_op group on_op on_ignored_nl UNK on_op group on_period UNK on_ignored_nl # this helps us signal to the user that we made changes
on_ivar on_period UNK on_period each do on_op group on_op on_ignored_nl UNK on_op group on_period UNK on_ignored_nl on_period UNK UNK on_op # iterate through the groups and collect all the swift files in each
UNK on_op group on_period UNK on_ignored_nl on_period UNK UNK on_op UNK on_op on_op UNK on_period name on_period UNK on_op UNK # current group's filenames
UNK on_period each do on_op filename on_op on_ignored_nl UNK if UNK on_period UNK on_lparen filename on_rparen on_nl on_ignored_nl on_const on_period # compare the current group files to what the manifest says should minially be there
UNK if UNK on_period UNK on_lparen filename on_rparen on_nl on_ignored_nl on_const on_period verbose on_lparen on_tstring_beg on_tstring_content on_embexpr_beg filename on_embexpr_end on_tstring_content # current group is missing a file from the manifest, need to add it
self on_period UNK on_period UNK on_period UNK on_lparen UNK on_rparen on_nl on_ignored_nl UNK on_op UNK on_nl end on_nl end on_nl # add references to the target, and make sure they are added to the build phase to
def UNK on_lparen on_label false on_rparen on_ignored_nl missing_groups on_op self on_period UNK on_period UNK on_nl unless missing_groups on_period UNK on_op # adds new groups, and the files inside those groups # Note: this does not add new files to existing groups, that is in add_new_files_to_groups!
return UNK if dry_run on_nl on_ignored_nl missing_groups on_period each do on_op UNK on_op on_ignored_nl UNK on_op on_ivar on_period UNK on_lparen # well, we know we have some changes to make, so if this is a dry run, # don't bother doing anything and just return true
self on_period UNK on_period each do on_op filename on_comma group on_op on_ignored_nl UNK unless group on_period UNK on_lparen UNK on_period # find every file in the manifest that belongs to the new group, and add it to the new group
UNK on_op UNK on_period UNK on_lparen on_tstring_beg on_embexpr_beg on_const on_embexpr_end on_embexpr_beg filename on_embexpr_end on_tstring_end on_rparen on_nl on_ignored_nl self on_period UNK # assumes this is a new file, we don't handle moving files between groups
self on_period UNK on_period UNK on_period UNK on_lparen UNK on_rparen on_nl end on_nl end on_nl on_ignored_nl return UNK end on_nl # add references to the target, and make sure they are added to the build phase to
end on_nl end on_nl end on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # yup, we definitely updated groups
