UNK on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_period UNK on_lparen UNK on_rparen UNK UNK on_period # Ensure that the require statements inside the plugin.rb contents will resolve correctly
UNK on_lparen UNK on_rparen on_nl on_ignored_nl action_class on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg plugin_name on_period UNK on_embexpr_end on_tstring_end # rubocop:disable Security/Eval
on_ignored_nl action_class on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg plugin_name on_period UNK on_embexpr_end on_tstring_end on_rparen on_nl on_ignored_nl UNK on_op # rubocop:enable Security/Eval
action_class on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg plugin_name on_period UNK on_embexpr_end on_tstring_end on_rparen on_nl on_ignored_nl UNK on_op action_class # If we evaluate the contents of the generated plugin.rb file, # we'll get the all_classes helper method defined. This ensures # that the syntax is valid, and lets us interrogate the class for # the behavior!
UNK on_op UNK on_period UNK on_lbrace on_op UNK on_op UNK on_period UNK on_lparen UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg # Get the relative paths to require, check that they have already been required.
expect on_lparen on_const on_period exist? on_lparen on_const on_period join on_lparen tmp_dir on_comma gem_name on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma UNK on_comma # We'll be asserting that this file is valid Ruby when we check # the value of the version as evaluated by the gemspec!
UNK on_lparen UNK on_comma nil on_comma UNK on_rparen on_nl on_ignored_nl action_class on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg plugin_name # rubocop:disable Security/Eval
on_ignored_nl action_class on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg plugin_name on_period UNK on_embexpr_end on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl expect # rubocop:enable Security/Eval
action_class on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg plugin_name on_period UNK on_embexpr_end on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl expect on_lparen # If we evaluate the contents of the generated action file, # we'll get the Action class defined. This ensures that the # syntax is valid, and lets us interrogate the class for its # behavior!
expect on_lparen on_const on_rparen on_period to receive on_lparen on_symbeg UNK on_rparen on_period UNK on_lparen UNK on_embexpr_beg plugin_name on_embexpr_end UNK on_rparen # Check that the default `run` method behavior calls UI.message
expect on_lparen action_class on_period UNK on_rparen on_period to eq on_lparen summary on_rparen on_nl expect on_lparen action_class on_period UNK on_rparen on_period # Check the default behavior of the rest of the methods
on_const on_period UNK on_lparen gem_name on_rparen do on_ignored_nl gemspec on_op UNK on_lparen on_const on_period read on_lparen UNK on_rparen on_rparen on_nl # Because the gemspec expects to be evaluated from the same directory # it lives in, we need to jump in there while we examine it.
gemspec on_op UNK on_lparen on_const on_period read on_lparen UNK on_rparen on_rparen on_nl on_ignored_nl expect on_lparen gemspec on_period UNK on_rparen on_period # If we evaluate the contents of the generated gemspec file, # we'll get the Gem Specification object back out, which # ensures that the syntax is valid, and lets us interrogate # the values! # # rubocop:disable Security/Eval
on_ignored_nl expect on_lparen gemspec on_period UNK on_rparen on_period to eq on_lparen gem_name on_rparen on_nl expect on_lparen gemspec on_period author on_rparen # rubocop:enable Security/Eval
UNK on_lparen UNK on_rparen on_nl on_ignored_nl UNK on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg plugin_name on_period UNK on_embexpr_end on_tstring_content # rubocop:disable Security/Eval
on_ignored_nl UNK on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg plugin_name on_period UNK on_embexpr_end on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl expect # rubocop:enable Security/Eval
UNK on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg plugin_name on_period UNK on_embexpr_end on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl expect on_lparen # If we evaluate the contents of the generated helper file, # we'll get the helper class defined. This ensures that the # syntax is valid, and lets us interrogate the class for its # behavior!
expect on_lparen on_const on_rparen on_period to receive on_lparen on_symbeg UNK on_rparen on_period UNK on_lparen UNK on_embexpr_beg plugin_name on_embexpr_end UNK on_rparen # Check that the class was successfully defined
UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl # let(:gem_name) is not available in before(:all), so pass the directory # in explicitly once instead of making this a before(:each)
UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl expect on_lparen UNK on_period UNK on_rparen on_period to eq on_lparen UNK on_rparen on_nl # Actually run our generated spec as part of this spec #yodawg
UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl expect on_lparen UNK on_period UNK on_rparen on_period to eq on_lparen UNK on_rparen on_nl # Actually run our generated spec as part of this spec #yodawg
UNK on_op UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl expect on_lparen UNK on_period UNK on_rparen on_period to eq on_lparen UNK # Actually run our generated spec as part of this spec #yodawg
expect on_lparen UNK on_rparen on_period to include on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen end on_nl end on_nl end on_nl on_ignored_nl UNK # rubocop
end on_nl end on_nl end on_nl on_ignored_nl UNK on_nl on_ignored_nl UNK UNK on_lparen UNK on_comma UNK on_op gem_name on_rparen on_ignored_nl # rspec
