def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op UNK on_lbracket on_const on_op on_const on_rbracket on_op on_const on_period new on_nl UNK # Add an array of paths relative to the repo root or absolute paths that have been modified by # an action. # # :files: An array of paths relative to the repo root or absolute paths
UNK on_const on_op on_const on_nl def self on_period UNK on_lparen params on_rparen on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_tstring_beg # Commits the current changes in the repo as a version bump, checking to make sure only files which contain version information have been changed.
UNK on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_nl repo_pathname on_op on_const on_period new on_lparen UNK # find the repo root path
on_const on_period user_error! on_lparen on_tstring_beg on_tstring_content on_embexpr_beg xcodeproj_path on_embexpr_end on_tstring_end on_rparen UNK on_const on_period UNK on_lparen xcodeproj_path on_rparen on_nl UNK # ensure that the xcodeproj passed in was OK
UNK on_op on_const on_op on_const on_op on_const on_period UNK on_lparen UNK on_rparen on_nl on_ignored_nl on_const on_period user_error! on_lparen on_tstring_beg on_tstring_content # find an xcodeproj (ignoring dependencies)
on_const on_period user_error! on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen if UNK on_period UNK on_op UNK on_nl on_ignored_nl if UNK on_period UNK # no projects found: error
if UNK on_period UNK on_op UNK on_nl UNK on_op UNK on_period map UNK on_op UNK on_op on_const on_period new on_lparen # too many projects found: error
xcodeproj_path on_op UNK on_period UNK on_nl end on_nl on_ignored_nl UNK on_op on_const on_period new on_lparen on_const on_period join on_lparen xcodeproj_path # one project found: great
UNK on_op on_const on_period new on_lparen on_const on_period join on_lparen xcodeproj_path on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_rparen on_nl UNK on_op # find the pbxproj path, relative to git directory
UNK on_op on_const on_op on_const on_period UNK on_lparen xcodeproj_path on_rparen on_nl UNK on_op UNK on_period UNK on_period UNK do on_op # find the info_plist files
UNK on_op params on_lbracket on_symbeg UNK on_rbracket on_nl if UNK on_nl UNK on_period UNK do on_op UNK on_op on_ignored_nl UNK # Removes .plist files that matched the given expression in the 'ignore' parameter
expected_changed_files on_op UNK on_nl expected_changed_files on_op UNK on_nl expected_changed_files on_op UNK on_nl on_ignored_nl if params on_lbracket on_symbeg UNK on_rbracket on_nl # create our list of files that we expect to have changed, they should all be relative to the project root, which should be equal to the git workdir root
UNK on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_const on_period # get the list of files that have actually changed in our git workdir
on_const on_period user_error! on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen if UNK on_period UNK on_nl on_ignored_nl UNK on_op on_const on_period new on_lparen # little user hint
UNK on_op on_const on_period new on_lparen UNK on_period map on_lparen on_op on_symbeg UNK on_rparen on_rparen on_period UNK on_lparen on_const on_period # check if the files changed are the ones we expected to change (these should be only the files that have version info in them)
UNK on_op expected_changed_files on_period map do on_op path on_op on_ignored_nl UNK on_op path on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma # get the absolute paths to the files
on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg UNK on_period map on_lparen on_op on_symbeg UNK on_rparen on_period join on_lparen on_tstring_beg on_tstring_content # then create a commit with a message
return on_lbracket UNK on_rbracket on_nl UNK UNK on_period UNK on_lparen on_const on_rparen on_nl return UNK on_nl UNK on_ignored_nl return on_lbracket # commit_version_bump settings: "About.plist"
return UNK on_nl UNK on_ignored_nl return on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl end on_nl end on_nl on_ignored_nl def UNK on_lparen # commit_version_bump settings: ["Root.plist", "About.plist"]
return on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl end on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_comma UNK on_rparen on_ignored_nl # commit_version_bump settings: true # Root.plist
