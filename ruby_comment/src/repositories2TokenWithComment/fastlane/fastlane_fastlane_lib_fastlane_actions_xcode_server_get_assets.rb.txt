on_const on_period UNK on_lbracket on_symbeg UNK on_rbracket on_op on_op UNK on_ignored_nl UNK on_op on_const on_period new on_lparen host on_comma username # setup (not)trusting self signed certificates. # it's normal to have a self signed certificate on your Xcode Server
on_ignored_nl UNK on_op on_const on_period new on_lparen host on_comma username on_comma password on_rparen on_nl UNK on_op UNK on_period UNK on_nl # for self-signed certificates
UNK on_op on_const on_period new on_lparen host on_comma username on_comma password on_rparen on_nl UNK on_op UNK on_period UNK on_nl on_ignored_nl # create Xcode Server config
UNK on_op UNK on_period UNK on_lbrace on_op bot on_op bot on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_rbrace on_nl on_ignored_nl UNK on_op # pull out names
UNK on_op UNK on_period UNK on_lbrace on_op bot on_op bot on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op bot_name on_rbrace on_nl on_const # match the bot name with a found bot, otherwise fail
UNK on_op UNK on_period UNK on_lparen bot on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_rparen on_period UNK on_lbrace on_op i on_op i # we have our bot, get finished integrations, sorted from newest to oldest
if UNK on_nl integration on_op UNK on_period UNK on_lbrace on_op i on_op i on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op UNK # if no integration number is specified, pick the newest one (this is sorted from newest to oldest)
on_ignored_nl on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg integration on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_embexpr_end on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl # consider: only taking the last successful one? or allow failing tests? warnings?
assets_path on_op UNK on_period UNK on_lparen integration on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_comma target_folder on_comma self on_rparen on_nl on_const on_period # fetch assets for this integration
zipped_archive_path on_op UNK on_period UNK on_lbrace on_op i on_op i on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_rbrace on_nl on_ignored_nl # now find the archive and unzip it
on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_tstring_end on_rparen on_nl UNK on_ignored_nl UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg # we already have the archive, skip
UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg zipped_archive_path on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_ignored_nl UNK on_op # unzip the archive
UNK on_op on_const on_period UNK on_lparen assets_path on_rparen on_period UNK on_lbrace on_op i on_op on_const on_period join on_lparen assets_path on_comma # reload asset entries to also contain the xcarchive file
UNK UNK on_nl UNK on_op UNK on_period UNK UNK on_op i on_op on_ignored_nl on_const on_period UNK on_lparen i on_rparen on_op # optionally delete everything except for the archive
on_const on_period UNK UNK on_op UNK on_op on_ignored_nl UNK on_op on_const on_period join on_lparen UNK on_comma on_tstring_beg on_tstring_content on_embexpr_beg UNK # create a temp folder and a file, stream the download into it
out_folder on_op on_const on_period join on_lparen UNK on_comma on_tstring_beg on_tstring_content on_embexpr_beg UNK on_lparen on_int on_rparen on_embexpr_end on_tstring_end on_rparen on_nl on_const # unzip it, it's a .tar.gz file
UNK on_op response on_period headers on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_lbracket on_int on_rbracket # then pull the real name from headers
UNK on_op on_const on_period UNK on_lparen out_folder on_rparen on_period UNK on_lbrace on_op UNK on_op UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_op # rename the folder in out_folder to asset_foldername
on_const on_period UNK on_lparen UNK on_comma UNK on_rparen on_nl on_ignored_nl target_folder on_op on_const on_period UNK on_lparen target_folder on_rparen on_nl on_ignored_nl # rename to destination name
on_const on_period UNK on_lparen target_folder on_rparen on_nl on_ignored_nl on_const on_period UNK on_lparen UNK on_comma target_folder on_rparen on_nl UNK on_op on_const # create target folder if it doesn't exist
on_const on_period UNK on_lparen UNK on_comma target_folder on_rparen on_nl UNK on_op on_const on_period join on_lparen target_folder on_comma UNK on_rparen on_nl # and move+rename it to the destination place
on_tstring_beg on_tstring_content on_tstring_end on_op on_int on_rbrace on_nl on_ignored_nl if on_ivar on_op on_ivar on_nl UNK on_op on_tstring_beg on_embexpr_beg on_ivar on_embexpr_end on_tstring_content # XCS wants user agent. for some API calls. not for others. sigh.
on_rbrace on_nl on_ignored_nl if on_ivar on_op on_ivar on_nl UNK on_op on_tstring_beg on_embexpr_beg on_ivar on_embexpr_end on_tstring_content on_embexpr_beg on_ivar on_embexpr_end on_tstring_end on_nl # XCS API version with this API, Xcode needs this otherwise it explodes in a 500 error fire. Currently Xcode 7 Beta 5 is on Version 5.
on_ignored_nl def self on_period UNK on_nl on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def self on_period UNK on_nl on_lbracket on_ignored_nl ##################################################### # @!group Documentation #####################################################
