end on_nl on_ignored_nl UNK on_const on_op on_const on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl def self on_period UNK on_lparen UNK # originally defined in IncrementVersionNumberAction
project on_op UNK on_lparen folder on_rparen on_nl target on_op UNK on_lparen project on_comma target_name on_rparen on_nl plist_file on_op UNK on_lparen # Get version_number
if version_number on_op UNK on_tstring_content UNK on_nl version_number on_op UNK on_lparen target on_comma UNK on_comma configuration on_rparen on_op UNK on_lparen # Get from build settings (or project settings) if needed (ex: $(MARKETING_VERSION) is default in Xcode 11)
UNK version_number on_op UNK on_tstring_content UNK on_nl version_number on_op UNK on_lparen target on_comma UNK on_comma configuration on_rparen on_op UNK on_lparen # ${MARKETING_VERSION} also works
if version_number on_period UNK on_nl on_const on_period user_error! on_lparen on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_end on_rparen on_nl end on_nl on_ignored_nl # Error out if version_number is not set
on_const on_period UNK on_lbracket on_const on_op on_const on_rbracket on_op version_number on_nl on_ignored_nl UNK version_number on_nl end on_nl on_ignored_nl def self # Store the number in the shared hash
UNK version_number on_nl end on_nl on_ignored_nl def self on_period UNK on_lparen folder on_rparen on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK # Return the version number because Swift might need this return value
UNK target_name on_nl on_ignored_nl UNK on_op targets on_period UNK UNK on_op UNK on_op on_ignored_nl UNK on_period UNK on_lparen on_symbeg UNK # Prompt targets if no name
UNK on_op targets on_period UNK UNK on_op UNK on_op on_ignored_nl UNK on_period UNK on_lparen on_symbeg UNK on_rparen on_op UNK on_period # Gets non-test targets
UNK on_period UNK on_lparen on_symbeg UNK on_rparen on_op UNK on_period UNK on_nl end on_nl on_ignored_nl if UNK on_period UNK on_op # Not all targets respond to `test_target_type?`
if UNK on_period UNK on_op UNK on_nl UNK targets on_period UNK on_nl end on_nl on_ignored_nl UNK on_op targets on_period UNK # Returns if only one non-test target
target on_op targets on_period UNK UNK on_op UNK on_op on_ignored_nl UNK on_period UNK on_op target_name on_nl end on_nl on_const on_period # Find target
if configuration on_nl plist_file on_op plist_files on_lbracket configuration on_rbracket on_nl UNK UNK on_op UNK on_nl UNK on_op plist_files on_period UNK # Get plist file for specified configuration # Or: Prompt for configuration if plist has different files in each configurations # Else: Get first(only) plist value
if plist_file on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl plist_file on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_end # $(SRCROOT) is the path of where the XcodeProject is # We can just set this as empty string since we join with `folder` below
UNK on_const on_period UNK on_lparen plist_file on_rparen on_nl plist_file on_op on_const on_period UNK on_lparen on_const on_period UNK on_lparen folder on_comma # plist_file can be `Relative` or `Absolute` path. # Make to `Absolute` path when plist_file is `Relative` path
on_ignored_nl def self on_period UNK on_nl on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def self on_period UNK on_nl on_tstring_beg on_tstring_content ##################################################### # @!group Documentation #####################################################
