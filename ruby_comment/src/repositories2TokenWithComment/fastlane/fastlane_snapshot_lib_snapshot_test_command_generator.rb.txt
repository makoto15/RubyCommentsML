UNK on_const on_op on_const on_nl UNK on_op UNK on_nl UNK UNK on_lparen on_label nil on_comma on_label nil on_comma on_label nil # Responsible for building the fully working xcodebuild command # Xcode 9 introduced the ability to run tests in parallel on multiple simulators # This TestCommandGenerator constructs the appropriate `xcodebuild` command # to be used for executing simultaneous tests
return on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket if devices on_period UNK on_period UNK on_op UNK on_tstring_content UNK on_nl on_ignored_nl UNK on_op # on Mac we will always run on host machine, so should specify only platform
devices on_op UNK on_lparen UNK on_rparen on_nl on_ignored_nl UNK on_op devices on_period UNK UNK on_op device on_op on_ignored_nl device on_op # Get device types based off of device name
UNK on_op devices on_period UNK UNK on_op device on_op on_ignored_nl device on_op device on_period UNK on_nl device on_period UNK on_lparen # Check each device to see if it is an iOS device
return UNK UNK UNK on_period UNK on_lparen UNK on_rparen on_nl on_ignored_nl UNK on_op devices on_period UNK UNK on_op device on_op # Return true if all devices are iOS devices
return UNK UNK UNK on_period UNK on_lparen UNK on_rparen on_nl on_ignored_nl return devices on_period UNK on_op UNK on_nl end on_nl # Return true if all devices are iOS devices
return devices on_period UNK on_op UNK on_nl end on_nl on_ignored_nl UNK on_nl on_ignored_nl UNK UNK on_lparen UNK on_rparen on_ignored_nl return # There should only be more than 1 device type if # it is iOS or tvOS, therefore, if there is more than 1 # device in the array, and they are not all iOS or tvOS # as checked above, that would imply that this is a mixed bag
return UNK on_period UNK UNK on_op UNK on_op on_ignored_nl device on_op on_const on_period device on_lparen on_label UNK on_rparen on_nl if # Gets actual simctl device type from device name
