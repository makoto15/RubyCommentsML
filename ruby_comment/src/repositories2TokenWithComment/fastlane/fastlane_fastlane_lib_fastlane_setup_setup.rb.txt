attr_accessor on_symbeg is_swift_fastfile on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # Is the current `setup` using a swift based configuration file
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg had_multiple_projects_to_choose_from on_nl on_ignored_nl # :ios or :android
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg had_multiple_projects_to_choose_from on_nl on_ignored_nl attr_accessor on_symbeg fastfile_content on_nl on_ignored_nl # Path to the xcodeproj or xcworkspace
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg had_multiple_projects_to_choose_from on_nl on_ignored_nl attr_accessor on_symbeg fastfile_content on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # Used for :manual sometimes
attr_accessor on_symbeg had_multiple_projects_to_choose_from on_nl on_ignored_nl attr_accessor on_symbeg fastfile_content on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # remember if there were multiple projects # if so, we set it as part of the Fastfile
attr_accessor on_symbeg fastfile_content on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # The current content of the generated Fastfile
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl def self on_period UNK on_lparen # Appfile
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl def self on_period UNK on_lparen on_label nil on_comma on_label UNK # For iOS projects that's the Apple ID email
attr_accessor on_symbeg UNK on_nl on_ignored_nl def self on_period UNK on_lparen on_label nil on_comma on_label UNK on_rparen on_ignored_nl if on_const on_op # This is the lane that we tell the user to run to try the new fastlane setup # This needs to be setup by each setup
def self on_period UNK on_lparen on_label nil on_comma on_label UNK on_rparen on_ignored_nl if on_const on_op on_const on_period UNK on_op on_op # Start the setup process # rubocop:disable Metrics/BlockNesting
on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_int on_period UNK on_nl on_ignored_nl UNK on_op on_const on_op on_const on_period UNK on_lparen # this is used by e.g. configuration.rb to not show warnings when running produce
if UNK on_period count on_op on_int on_nl current_directory on_op UNK on_period UNK UNK on_op UNK on_op on_ignored_nl UNK on_period UNK # Currently we prefer iOS app projects, as the `init` process is # more intelligent and does more things. The user can easily add # the `:android` platform to the resulting Fastfile
UNK on_op on_lbracket on_const on_period UNK on_lparen current_directory on_lbracket on_int on_rbracket on_rparen on_comma on_const on_period UNK on_lparen current_directory on_lbracket on_int # This is a common case (e.g. with CocoaPods), where the project has an xcodeproj and an xcworkspace file
chosen_project on_op current_directory on_period UNK UNK on_op UNK on_op UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen UNK on_nl end # Yep, that's this kind of setup
on_ignored_nl def UNK on_lparen on_label nil on_comma on_label nil on_comma on_label nil on_comma on_label nil on_comma on_label nil on_rparen on_ignored_nl # rubocop:enable Metrics/BlockNesting
def UNK on_nl on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_const on_period message on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # Helpers
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK on_ignored_nl UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl if self on_period is_swift_fastfile # Append a lane to the current Fastfile template we're generating
on_ignored_nl UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl if self on_period is_swift_fastfile on_nl UNK on_op on_tstring_beg on_tstring_end UNK self on_period fastfile_content # remove nil values
self on_period fastfile_content on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg UNK on_period UNK on_lparen # the first lane we don't want new lines
self on_period fastfile_content on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg UNK on_period UNK on_lparen # the first lane we don't want new lines
def UNK on_lparen UNK on_rparen on_ignored_nl self on_period UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_embexpr_beg UNK on_embexpr_end # Append a team to the Appfile
UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_op on_tstring_beg on_tstring_content on_tstring_end if self on_period is_swift_fastfile on_nl on_ignored_nl UNK on_op on_const # Write the Fastfile
on_const on_period UNK on_lparen UNK on_comma self on_period fastfile_content on_rparen on_ignored_nl UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_op on_tstring_beg # since we always keep it until writing out
on_ignored_nl UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_op on_tstring_beg on_tstring_content on_tstring_end if self on_period is_swift_fastfile on_nl UNK on_op on_const # remove trailing spaces before platform ends
def UNK on_nl return on_const on_period UNK on_lparen gemfile_path on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl gemfile_content on_op on_lbracket # Gemfile related code:
gemfile_content on_op on_lbracket on_rbracket on_nl gemfile_content on_op on_tstring_beg on_tstring_content on_tstring_end on_nl gemfile_content on_op on_tstring_beg on_tstring_end on_nl gemfile_content on_op on_tstring_beg on_tstring_content # No Gemfile yet
def UNK on_lparen on_label UNK on_rparen on_ignored_nl if UNK on_nl UNK on_lparen on_label UNK on_rparen on_nl else on_ignored_nl if UNK # This method is responsible for ensuring there is a working # Gemfile, and that `fastlane` is defined as a dependency # while also having `rubygems` as a gem source
return if self on_period UNK on_period UNK on_period UNK on_op on_int on_nl on_const on_period message on_lparen on_tstring_beg on_tstring_end on_rparen on_nl # we crash here, so that this never happens when a new setup method is added
