UNK on_const def UNK on_lparen path on_rparen on_ignored_nl UNK on_op UNK on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_content on_tstring_end on_comma # Set of utility methods useful to work with media files
def UNK on_lparen path on_rparen on_ignored_nl UNK on_op UNK on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg #:nodoc: # Identifies the content_type of a file based on its file name extension. # Supports all formats required by DU-UTC right now (video, images and json) # @param path (String) the path to the file
def resolution on_lparen path on_rparen on_ignored_nl UNK on_const on_period UNK on_lparen path on_rparen UNK UNK on_lparen path on_rparen on_period UNK # Identifies the resolution of a video or an image. # Supports all video and images required by DU-UTC right now # @param path (String) the path to the file
def UNK on_lparen path on_rparen on_ignored_nl resolution on_op resolution on_lparen path on_rparen on_nl resolution on_lbracket on_int on_rbracket on_op resolution on_lbracket # Is the video or image in portrait mode ? # Supports all video and images required by DU-UTC right now # @param path (String) the path to the file
def UNK on_lparen UNK on_comma UNK on_comma UNK on_rparen on_ignored_nl UNK on_comma UNK on_op UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end # Grabs a screenshot from the specified video at the specified timestamp using `ffmpeg` # @param video_path (String) the path to the video file # @param timestamp (String) the `ffmpeg` timestamp format (e.g. 00.00) # @param dimensions (Array) the dimension of the screenshot to generate # @return the TempFile containing the generated screenshot
UNK on_embexpr_beg command on_embexpr_end on_tstring_end on_nl UNK on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg command on_embexpr_end # puts "COMMAND: #{command}"
def UNK on_lparen UNK on_rparen on_ignored_nl command on_op on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_tstring_end on_nl UNK on_op UNK on_embexpr_beg # identifies the resolution of a video using `ffmpeg` # @param video_path (String) the path to the video file # @return [Array] the resolution of the video
UNK on_op UNK on_embexpr_beg command on_embexpr_end on_tstring_end on_nl UNK on_op UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK # puts "COMMAND: #{command}"
UNK on_op UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_op UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end # Note: ffmpeg exits with 1 if no output specified # raise "Failed to find video information from #{video_path} (using #{command})" unless $CHILD_STATUS.to_i == 0
def UNK on_lparen UNK on_rparen on_ignored_nl on_const on_op on_const on_period UNK on_lparen on_const on_period UNK on_lparen UNK on_rparen on_rparen on_nl # @return (String) md5 checksum of given file
