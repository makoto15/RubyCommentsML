target_path on_op on_const on_period UNK on_lparen params on_lbracket on_symbeg target_path on_rbracket on_rparen on_nl on_ignored_nl on_const on_period UNK on_lparen target_path on_rparen # expand the path to make sure we can deal with relative paths
on_const on_period UNK on_lparen target_path on_rparen on_nl on_ignored_nl UNK on_op on_lbracket params on_lbracket on_symbeg artifacts on_rbracket on_rbracket on_period UNK on_nl # we want to make sure that our target folder exist already
UNK on_op on_lbracket params on_lbracket on_symbeg artifacts on_rbracket on_rbracket on_period UNK on_nl on_ignored_nl artifacts on_op UNK on_period UNK UNK on_op # Ensure that artifacts is an array
artifacts on_op UNK on_period UNK UNK on_op UNK on_op UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_const on_period # If any of the paths include "*", we assume that we are referring to the Unix entries # e.g /tmp/fastlane/* refers to all the files in /tmp/fastlane # We use Dir.glob to expand all those paths, this would create an array of arrays though, so flatten
artifacts on_period UNK UNK on_op UNK on_op on_const on_period UNK on_lparen UNK on_rparen UNK on_nl end on_nl on_ignored_nl UNK params # If we don't fail on non-existent files, don't try to copy non-existent files
on_ignored_nl def self on_period UNK on_nl on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def self on_period UNK on_nl on_lbracket on_ignored_nl ##################################################### # @!group Documentation #####################################################
