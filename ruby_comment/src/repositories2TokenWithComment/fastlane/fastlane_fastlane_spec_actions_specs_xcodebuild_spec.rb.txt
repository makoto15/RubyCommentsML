end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl result on_op on_const on_op on_const on_period new on_period parse on_lparen on_tstring_beg # expect(result).to include('CODE_SIGN_IDENTITY="iPhone Developer: Josh"') # expect(result).to include('JOBS="16"') # expect(result).to include('PROVISIONING_PROFILE="JoshIsCoolProfile"')
on_ignored_nl on_ignored_nl describe on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl result on_op on_const on_op on_const on_period # describe "xcbuild without xpretty and with test" do # it "is equivalent to 'xcodebuild build'" do # result = Fastlane::FastFile.new.parse("lane :test do # xcbuild( # scheme: 'MyApp', # workspace: 'MyApp.xcworkspace', # raw_buildlog: true, # test: true # ) # end").runner.execute(:test)
on_ignored_nl describe on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl result on_op on_const on_op on_const on_period new # expect(result).to eq( # "set -o pipefail && " \ # + "xcodebuild " \ # + "-scheme \"MyApp\" " \ # + "-workspace \"MyApp.xcworkspace\" " \ # + "build test " \ # + "| tee '#{build_log_path}' " # ) # end # end
on_ignored_nl on_ignored_nl describe on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl result on_op on_const on_op on_const on_period # describe "xcexport" do # it "is equivalent to 'xcodebuild -exportArchive'" do # result = Fastlane::FastFile.new.parse("lane :test do # xcexport( # archive_path: './build-dir/MyApp.xcarchive', # export_path: './build-dir/MyApp', # ) # end").runner.execute(:test)
on_ignored_nl describe on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl result on_op on_const on_op on_const on_period new # expect(result).to eq( # "set -o pipefail && " \ # + "xcodebuild " \ # + "-archivePath \"./build-dir/MyApp.xcarchive\" " \ # + "-exportArchive " \ # + "-exportPath \"./build-dir/MyApp\" " \ # + "| tee '#{build_log_path}' | xcpretty --color --simple" # ) # end # end
