UNK on_const on_op on_const on_nl def UNK on_period UNK on_nl UNK on_symbeg UNK on_nl end on_nl on_ignored_nl def UNK on_period # all the stuff we need that doesn't matter for testing
UNK on_const on_op on_const on_nl def UNK on_nl on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period UNK on_lparen # always pass as long as these words are found
UNK on_const on_op on_const on_nl def UNK on_nl on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period UNK on_lparen # always pass as long as these words are not found
UNK on_const on_op on_const on_nl def UNK on_nl on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end # always fail as long as any of these words are found
on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl item on_op on_const on_period new on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_symbeg description on_comma # let(:inclusion_rule) { InclusionTestingTextMatchRule.new() }
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl item on_op on_const on_period new on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_symbeg description on_comma on_tstring_beg # pass on exclusion or empty tests
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl item on_op on_const on_period new on_lparen UNK on_comma on_symbeg description on_comma on_tstring_beg on_tstring_content on_tstring_end # pass on exclusion, but fail on empty or nil
it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl item on_op on_const on_period new on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_symbeg description on_comma on_tstring_beg # fail on exclusion tests
