on_const on_op UNK on_ignored_nl on_label on_symbeg UNK on_comma on_ignored_nl on_label on_symbeg UNK on_comma on_ignored_nl on_label on_symbeg UNK on_nl UNK on_nl # rules can cause warnings, errors, or be skipped all together # by default they are set to indicate a RULE_LEVELS[:error]
UNK on_symbeg UNK on_nl on_ignored_nl class on_const on_op on_const on_op on_const on_nl class on_const on_nl UNK on_symbeg UNK on_nl UNK # Abstract super class
class on_const on_nl UNK on_symbeg UNK on_nl UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen on_label nil on_comma on_label nil # when a rule evaluates a single item, it has a validation state # if it fails, it has some data like what text failed to pass, or maybe a bad url # this class encapsulates that return value and state # it is the return value from each evaluated @rule_block
def UNK on_nl return UNK on_nl end on_nl on_ignored_nl def UNK on_lparen on_label nil on_rparen on_ignored_nl not_implemented on_lparen __method__ on_rparen # some rules can be customized with extra data at runtime, see CustomTextRule as an example
def UNK on_lparen on_label nil on_rparen on_ignored_nl not_implemented on_lparen __method__ on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl return nil # some rules can be customized with extra data at runtime, see CustomTextRule as an example
def UNK on_nl return nil on_nl end on_nl on_ignored_nl def UNK on_nl not_implemented on_lparen __method__ on_rparen on_nl end on_nl on_ignored_nl # some rules only support specific fields, by default, all fields are supported unless restricted by # providing a list of symbols matching the item_name as defined as the ItemToCheck is generated
return UNK on_lparen item on_rparen UNK UNK on_lparen item on_rparen on_nl return UNK on_lparen item on_rparen UNK UNK on_lparen on_label # validate the item we have was properly matched to this rule: TextItem -> TextRule, URLItem -> URLRule
return UNK on_lparen on_label item on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen item on_rparen on_ignored_nl return nil on_nl end # do the actual checking now
return nil on_nl end on_nl on_ignored_nl def UNK on_lparen item on_rparen on_ignored_nl not_implemented on_lparen __method__ on_rparen on_nl end on_nl on_ignored_nl # item isn't mean for this rule, which is fine, we can just keep passing it along
def UNK on_lparen item on_rparen on_ignored_nl not_implemented on_lparen __method__ on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen on_label nil on_rparen # each rule can define what type of ItemToCheck subclass they support # override this method and return true or false
UNK on_op on_const on_period UNK on_lparen on_label on_const UNK on_symbeg UNK UNK on_rparen on_nl return on_const on_period UNK on_lparen item # item is optional, and empty, so that's totally fine
class on_const on_op on_const on_nl def UNK on_lparen item on_rparen on_ignored_nl item on_period UNK on_lparen on_const on_rparen on_op UNK on_op # Rule types are more or less just marker classes that are intended to communicate what types of things each rule # expects to deal with. TextRules deal with checking text values, URLRules will check url specific things like connectivity # TextRules expect that text values will be passed to the rule_block, likewise, URLs are expected to be passed to the # URLRule rule_block
