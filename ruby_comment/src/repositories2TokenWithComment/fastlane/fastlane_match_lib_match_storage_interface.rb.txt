UNK UNK UNK on_nl on_ignored_nl def UNK on_nl not_implemented on_lparen __method__ on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl UNK # The working directory in which we download all the profiles # and decrypt/encrypt them
def UNK on_nl not_implemented on_lparen __method__ on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl UNK UNK on_period UNK on_nl UNK # To make debugging easier, we have a custom exception here
def UNK on_nl UNK UNK on_period UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl UNK UNK on_nl end on_nl # To make debugging easier, we have a custom exception here
def UNK on_nl not_implemented on_lparen __method__ on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl not_implemented on_lparen __method__ on_rparen on_nl end # Call this method after creating a new object to configure # the given Storage object. This method will take # different parameters depending on specific class being used
def UNK on_nl not_implemented on_lparen __method__ on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl not_implemented on_lparen __method__ on_rparen on_nl end # Call this method for the initial clone/download of the # user's certificates & profiles # As part of this method, the `self.working_directory` attribute # will be set
def UNK on_nl not_implemented on_lparen __method__ on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen on_label nil on_comma on_label nil on_comma # Returns a short string describing + identifing the current # storage backend. This will be printed when nuking a storage
def UNK on_lparen on_label nil on_comma on_label nil on_comma on_label nil on_rparen on_ignored_nl UNK on_op UNK UNK on_nl UNK on_op # Call this method after locally modifying the files # This will commit the changes and push it back to the # given remote server # This method is blocking, meaning it might take multiple # seconds or longer to run # @parameter files_to_commit [Array] Array to paths to files # that should be committed to the storage provider # @parameter custom_message: [String] Custom change message # that's optional, is used for commit title
UNK on_op UNK UNK on_nl UNK on_op UNK UNK on_nl on_ignored_nl on_const on_period UNK on_lparen on_const on_period UNK on_lparen self # Custom init to `[]` in case `nil` is passed
on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen UNK UNK on_period UNK on_op UNK on_nl on_ignored_nl UNK on_op on_const on_period # everything that isn't `match nuke`
end on_nl on_ignored_nl UNK on_op on_const on_period UNK on_lparen on_tstring_beg UNK on_const on_op on_const UNK on_tstring_content on_tstring_end on_rparen on_nl UNK # stored unencrypted
def UNK on_lparen on_label nil on_rparen on_ignored_nl not_implemented on_lparen __method__ on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl UNK UNK # Implement this for the `fastlane match init` command # This method must return the content of the Matchfile # that should be generated
def UNK on_nl UNK UNK UNK on_nl on_ignored_nl on_const on_period UNK on_lparen self on_period UNK on_rparen on_nl self on_period UNK # Call this method to reset any changes made locally to the files
