attr_accessor on_symbeg apple_id on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # @return (String) The App identifier of this app, provided by App Store Connect # @example # "1013943394"
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # @return (String) The name you provided for this app (in the default language) # @example # "Spaceship App"
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # @return (String) The SKU (Stock keeping unit) you provided for this app for internal tracking # @example # "1435592086"
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # @return (String) The bundle_id (app identifier) of your app # @example # "com.krausefx.app"
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg version_sets on_nl on_ignored_nl # @return (String) Last modified
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg version_sets on_nl on_ignored_nl UNK on_lparen on_ignored_nl on_tstring_beg on_tstring_content # @return (Integer) The number of issues provided by App Store Connect
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg version_sets on_nl on_ignored_nl UNK on_lparen on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_symbeg apple_id on_comma # @return (String) The URL to a low resolution app icon of this app (340x340px). Might be nil # @example # "https://is1-ssl.mzstatic.com/image/thumb/Purple7/v4/cd/a3/e2/cda3e2ac-4034-c6af-ee0c-3e4d9a0bafaa/pr_source.png/340x340bb-80.png" # @example # nil
attr_accessor on_symbeg version_sets on_nl on_ignored_nl UNK on_lparen on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_symbeg apple_id on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op # @return (Array) An array of all versions sets
def all on_nl client on_period UNK on_period map UNK on_op application on_op self on_period factory on_lparen application on_rparen UNK on_nl # @return (Array) Returns all apps available for this account
def UNK on_lparen UNK on_comma on_label UNK on_rparen on_ignored_nl all on_period UNK do on_op app on_op on_ignored_nl on_lparen on_lparen app # @return (Spaceship::Tunes::Application) Returns the application matching the parameter # as either the App ID or the bundle identifier
on_ignored_nl def UNK on_lparen on_label nil on_comma on_label nil on_comma on_label nil on_comma on_label nil on_comma on_label nil on_comma on_label # Creates a new application on App Store Connect # @param name (String): The name of your app as it will appear on the App Store. # This can't be longer than 255 characters. # @param primary_language (String): If localized app information isn't available in an # App Store territory, the information from your primary language will be used instead. # @param version *DEPRECATED: Use `ensure_version!` method instead* # (String): The version number is shown on the App Store and should match the one you used in Xcode. # @param sku (String): A unique ID for your app that is not visible on the App Store. # @param bundle_id (String): The bundle ID must match the one you used in Xcode. It # can't be changed after you submit your first build. # @param company_name (String): The company name or developer name to display on the App Store for your apps. # It cannot be changed after you create your first app. # @param platform (String): Platform one of (ios,osx) # should it be an ios or an osx app
on_ignored_nl def UNK on_lparen platform on_rparen on_ignored_nl version_sets on_period UNK do on_op UNK on_op on_ignored_nl return UNK if UNK on_period ##################################################### # @!group Getting information #####################################################
def UNK on_lparen on_label nil on_rparen on_ignored_nl on_const on_op on_const on_op on_const on_period UNK on_lparen self on_comma self on_period apple_id # @return (Spaceship::Tunes::AppVersion) Receive the version that is currently live on the # App Store. You can't modify all values there, so be careful.
def edit_version on_lparen on_label nil on_rparen on_ignored_nl on_const on_op on_const on_op on_const on_period UNK on_lparen self on_comma self on_period apple_id # @return (Spaceship::Tunes::AppVersion) Receive the version that can fully be edited
def UNK on_lparen on_label nil on_rparen on_ignored_nl edit_version on_lparen on_label platform on_rparen on_op UNK on_lparen on_label platform on_rparen on_nl end # @return (Spaceship::Tunes::AppVersion) This will return the `edit_version` if available # and fallback to the `live_version`. Use this to just access the latest data
def UNK on_nl on_tstring_beg on_tstring_content UNK self on_period apple_id UNK on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_nl if self # @return (String) An URL to this specific resource. You can enter this URL into your browser
def UNK on_nl client on_period UNK on_lparen apple_id on_comma platform on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_comma # @return (Hash) Contains the reason for rejection. # if everything is alright, the result will be # `{"sectionErrorKeys"=>[], "sectionInfoKeys"=>[], "sectionWarningKeys"=>[], "replyConstraints"=>{"minLength"=>1, "maxLength"=>4000}, "appNotes"=>{"threads"=>[]}, "betaNotes"=>{"threads"=>[]}, "appMessages"=>{"threads"=>[]}}`
def platform on_nl if self on_period version_sets on_period nil? on_nl raise on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl if self # kept for backward compatibility # tries to guess the platform of the currently submitted apps # note that as ITC now supports multiple app types, this might break # if your app supports more than one
on_ignored_nl def UNK on_lparen version_number on_comma on_label nil on_rparen on_ignored_nl if edit_version on_lparen on_label platform on_rparen on_nl raise on_tstring_beg on_tstring_content ##################################################### # @!group Modifying #####################################################
def UNK on_lparen version_number on_comma on_label nil on_rparen on_ignored_nl if edit_version on_lparen on_label platform on_rparen on_nl raise on_tstring_beg on_tstring_content on_tstring_end # Create a new version of your app # Since we have stored the outdated raw_data, we need to refresh this object # otherwise `edit_version` will return nil
end on_nl on_ignored_nl def UNK on_lparen version_number on_comma on_label nil on_rparen on_ignored_nl if on_lparen UNK on_op edit_version on_lparen on_label platform # Future: implemented -reload method
def UNK on_lparen version_number on_comma on_label nil on_rparen on_ignored_nl if on_lparen UNK on_op edit_version on_lparen on_label platform on_rparen on_rparen on_nl # Will make sure the current edit_version matches the given version number # This will either create a new version or change the version number # from an existing version # @return (Bool) Was something changed?
UNK on_period version on_op version_number on_nl UNK on_period UNK on_nl return UNK on_nl end on_nl return UNK on_nl UNK on_ignored_nl # Update an existing version
def UNK on_lparen UNK on_rparen on_ignored_nl client on_period UNK on_lparen self on_period apple_id on_comma UNK on_rparen on_nl end on_nl on_ignored_nl # set the price tier. This method doesn't require `save` to be called
def UNK on_nl client on_period UNK on_lparen self on_period apple_id on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen # The current price tier
def UNK on_lparen UNK on_rparen on_ignored_nl client on_period UNK on_lparen self on_period apple_id on_comma UNK on_rparen on_nl end on_nl on_ignored_nl # set the availability. This method doesn't require `save` to be called
def UNK on_nl client on_period UNK on_lparen self on_period apple_id on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl attrs on_op # The current availability.
def UNK on_nl attrs on_op UNK UNK on_nl attrs on_lbracket on_symbeg application on_rbracket on_op self on_nl on_const on_op on_const on_period ##################################################### # @!group in_app_purchases ##################################################### # Get base In-App-Purchases object
on_ignored_nl def UNK on_lparen on_label nil on_rparen on_ignored_nl on_const on_op on_const on_period all on_lparen on_label self on_period apple_id on_comma on_label ##################################################### # @!group Builds #####################################################
def UNK on_lparen on_label nil on_rparen on_ignored_nl on_const on_op on_const on_period all on_lparen on_label self on_period apple_id on_comma on_label platform # TestFlight: A reference to all the build trains # @return [Hash] a hash, the version number and platform being the key
def UNK on_lparen on_label nil on_rparen on_ignored_nl return self on_period UNK on_lparen on_label platform on_op self on_period platform on_rparen on_period # The numbers of all build trains that were uploaded # @return [Array] An array of train version numbers
def UNK on_lparen on_label nil on_comma on_label nil on_rparen on_ignored_nl return on_const on_op on_const on_period UNK on_lparen on_label self on_period # Receive the build details for a specific build # useful if the app is not listed in the TestFlight build list # which might happen if you don't use TestFlight # This is used to receive dSYM files from Apple
def UNK on_lparen on_label nil on_rparen on_ignored_nl return on_const on_op on_const on_period UNK on_lparen on_label self on_period apple_id on_comma on_label # @return [Array] This will return an array of *all* processing builds # this include pre-processing or standard processing
def UNK on_lparen on_label nil on_rparen on_ignored_nl all on_op on_const on_op on_const on_period all on_lparen on_label self on_period apple_id on_comma # Get all builds that are already processed for all build trains # You can either use the return value (array) or pass a block
on_ignored_nl def UNK on_lparen on_label nil on_rparen on_ignored_nl version on_op self on_period UNK on_lparen on_label platform on_rparen on_nl if version ##################################################### # @!group Submit for Review #####################################################
def UNK on_nl self on_period UNK do on_op UNK on_op on_ignored_nl UNK on_ignored_nl UNK on_period UNK on_nl UNK on_nl end # Cancels all ongoing TestFlight beta submission for this application
end on_nl end on_nl UNK on_nl end on_nl on_ignored_nl on_ignored_nl def UNK on_nl version on_op self on_period edit_version on_nl if # We really don't care about any errors here
on_ignored_nl def UNK on_nl version on_op self on_period edit_version on_nl if version on_period nil? on_nl raise on_tstring_beg on_tstring_content on_tstring_end on_nl ##################################################### # @!group release #####################################################
on_ignored_nl def UNK on_nl version on_op self on_period UNK on_nl if version on_period nil? on_nl raise on_tstring_beg on_tstring_content on_tstring_end on_nl ##################################################### # @!group release to all users #####################################################
def UNK on_nl UNK on_nl UNK on_op on_lparen self on_period UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_lbracket on_rbracket on_rparen ##################################################### # @!group General #####################################################
on_ignored_nl def UNK on_nl on_const on_op on_const on_period UNK on_lparen on_label self on_period apple_id on_rparen on_nl end on_nl on_ignored_nl def ##################################################### # @!group Testers #####################################################
def UNK on_nl UNK on_op client on_period UNK on_lparen on_label self on_period apple_id on_rparen on_nl UNK on_period map do on_op ##################################################### # @!group Promo codes #####################################################
def UNK on_nl raise on_tstring_beg on_tstring_content on_tstring_end if self on_period UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl end on_nl # private to module
raise on_tstring_beg on_tstring_content on_tstring_end if self on_period UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl end on_nl end on_nl end # we only support applications
