on_const on_period UNK on_tstring_beg on_tstring_content UNK UNK on_lbracket UNK UNK on_rbracket UNK on_tstring_end on_nl on_ignored_nl on_ignored_nl end on_nl on_ignored_nl on_ignored_nl # fastlane will take care of reading in the parameter and fetching the environment variable:
on_ignored_nl end on_nl on_ignored_nl on_ignored_nl def self on_period UNK on_nl on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def self on_period # sh "shellcommand ./path"
end on_nl on_ignored_nl on_ignored_nl def self on_period UNK on_nl on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def self on_period UNK # Actions.lane_context[SharedValues::[[NAME_UP]]_CUSTOM_VALUE] = "my_val"
on_ignored_nl def self on_period UNK on_nl on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def self on_period UNK on_nl on_tstring_beg on_tstring_content ##################################################### # @!group Documentation #####################################################
on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def self on_period UNK on_nl on_ignored_nl on_lbracket on_ignored_nl on_const on_op on_const on_period UNK # Optional: # this is your chance to provide a more detailed description of this action
on_ignored_nl on_lbracket on_ignored_nl on_const on_op on_const on_period UNK on_lparen on_label UNK UNK on_comma on_ignored_nl on_label on_tstring_beg on_tstring_content on_tstring_end on_comma on_label # Define all options your action supports.
on_lbracket on_ignored_nl on_const on_op on_const on_period UNK on_lparen on_label UNK UNK on_comma on_ignored_nl on_label on_tstring_beg on_tstring_content on_tstring_end on_comma on_label on_tstring_beg # Below a few examples
on_label on_tstring_beg on_tstring_content on_tstring_end on_comma on_label UNK UNK on_op UNK on_op on_ignored_nl on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # The name of the environment variable
on_label UNK UNK on_op UNK on_op on_ignored_nl on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen UNK on_lparen UNK UNK UNK # a short description of this parameter
end on_rparen on_comma on_ignored_nl on_const on_op on_const on_period UNK on_lparen on_label UNK UNK on_comma on_ignored_nl on_label on_tstring_beg on_tstring_content on_tstring_end on_comma # UI.user_error!("Couldn't find file at path '#{value}'") unless File.exist?(value)
on_label UNK on_rparen on_rbracket on_nl end on_nl on_ignored_nl def self on_period UNK on_nl on_lbracket on_ignored_nl on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma # true: verifies the input is a string, false: every kind of value
on_rbracket on_nl end on_nl on_ignored_nl def self on_period UNK on_nl on_lbracket on_ignored_nl on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end # the default value if the user didn't provide one
on_lbracket on_ignored_nl on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl on_rbracket on_nl end on_nl on_ignored_nl def self on_period # Define the shared values you are going to provide # Example
end on_nl on_ignored_nl def self on_period UNK on_nl on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl end on_nl on_ignored_nl def self on_period # If your method provides a return value, you can describe here what it does
on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl end on_nl on_ignored_nl def self on_period UNK on_lparen UNK on_rparen on_ignored_nl on_ignored_nl UNK on_op # So no one will ever forget your contribution to fastlane :) You are awesome btw!
on_ignored_nl UNK on_op UNK UNK on_nl end on_nl end on_nl end on_nl end EMP EMP EMP EMP EMP EMP EMP # you can do things like # # true # # platform == :ios # # [:ios, :mac].include?(platform) #
