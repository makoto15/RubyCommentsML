on_ignored_nl def UNK on_period UNK on_nl on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl on_ignored_nl def UNK on_lparen on_label nil on_comma ## # Spaceship HTTP client for the testflight API. # # This client is solely responsible for the making HTTP requests and # parsing their responses. Parameters should be either named parameters, or # for large request data bodies, pass in anything that can resond to # `to_json`. # # Each request method should validate the required parameters. A required parameter is one that would result in 400-range response if it is not supplied. # Each request method should make only one request. For more high-level logic, put code in the data models.
on_ignored_nl def UNK on_lparen on_label nil on_comma on_label on_tstring_beg on_tstring_content on_tstring_end on_rparen on_ignored_nl assert_required_params on_lparen __method__ on_comma binding on_rparen on_nl ## # @!group Build trains API ##
def UNK on_lparen on_label nil on_comma on_label on_tstring_beg on_tstring_content on_tstring_end on_rparen on_ignored_nl assert_required_params on_lparen __method__ on_comma binding on_rparen on_nl on_ignored_nl # Returns an array of all available build trains (not the builds they include)
on_ignored_nl def UNK on_lparen on_label nil on_comma on_label nil on_rparen on_ignored_nl assert_required_params on_lparen __method__ on_comma binding on_rparen on_nl on_ignored_nl response ## # @!group Builds API ##
on_ignored_nl def UNK on_lparen on_label nil on_rparen on_ignored_nl on_ivar on_op on_lbrace on_rbrace UNK on_ivar on_nl on_ignored_nl return on_ivar on_lbracket app_id ## # @!group Groups API ##
def UNK on_lparen on_label nil on_rparen on_ignored_nl on_ivar on_op on_lbrace on_rbrace UNK on_ivar on_nl on_ignored_nl return on_ivar on_lbracket app_id on_rbracket # Returns a list of available testing groups # e.g. # {"b6f65dbd-c845-4d91-bc39-0b661d608970" => "Boarding", # "70402368-9deb-409f-9a26-bb3f215dfee3" => "Automatic"}
on_ivar on_period UNK on_lparen app_id on_rparen if on_ivar on_nl on_ignored_nl handle_response on_lparen response on_rparen on_nl end on_nl on_ignored_nl def UNK # This is invalid now.
def UNK on_lparen UNK on_rparen on_ignored_nl url on_op UNK on_period url on_lbracket on_symbeg UNK on_rbracket on_nl r on_op request on_lparen ##################################################### # @!group Testers #####################################################
def UNK on_lparen on_label nil on_rparen on_ignored_nl assert_required_params on_lparen __method__ on_comma binding on_rparen on_nl url on_op on_tstring_beg on_tstring_content on_embexpr_beg team_id ##################################################### # @!Internal Testers #####################################################
on_ignored_nl def UNK on_lparen on_label nil on_rparen on_ignored_nl assert_required_params on_lparen __method__ on_comma binding on_rparen on_nl UNK on_op on_int UNK on_op ## # @!group Testers API ##
UNK on_op on_lbracket on_rbracket on_nl UNK on_op on_tstring_beg on_tstring_content on_embexpr_beg team_id on_embexpr_end on_tstring_content on_embexpr_beg app_id on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end # that's enforced by the iTC servers
UNK on_op on_tstring_beg on_tstring_content on_embexpr_beg team_id on_embexpr_end on_tstring_content on_embexpr_beg app_id on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_tstring_end on_nl response on_op # Sort order is set to `default` instead of `email`, because any other sort order breaks pagination # when dealing with lots of anonymous (public link) testers: https://github.com/fastlane/fastlane/pull/13778
on_lparen UNK on_op r on_period headers on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_rparen on_op on_lparen UNK on_op UNK on_period UNK on_lparen # I weep for Swift nil chaining
url on_op on_tstring_beg on_tstring_content on_embexpr_beg team_id on_embexpr_end on_tstring_content on_embexpr_beg app_id on_embexpr_end on_tstring_content on_embexpr_beg group_id on_embexpr_end on_tstring_content on_tstring_end on_nl response on_op # Then we can add the tester to the group that allows the app to test # This is easy enough, we already have all this data. We don't need any response from the previous request
on_ignored_nl def UNK on_lparen on_label nil on_rparen on_ignored_nl assert_required_params on_lparen __method__ on_comma binding on_rparen on_nl on_ignored_nl response on_op request on_lparen ## # @!group AppTestInfo ##
def assert_required_params on_lparen UNK on_comma binding on_rparen on_ignored_nl UNK on_op UNK on_lparen UNK on_rparen on_period UNK on_period UNK on_lbrace on_op # used to assert all of the named parameters are supplied values # # @raises NameError if the values are nil
