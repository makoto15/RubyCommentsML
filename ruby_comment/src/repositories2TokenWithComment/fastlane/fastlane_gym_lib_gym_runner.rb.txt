def UNK on_nl unless on_const on_period config on_lbracket on_symbeg UNK on_rbracket on_nl UNK on_nl end on_nl UNK unless on_const on_period # @return (String) The path to the resulting ipa
UNK on_op on_const on_period project on_period UNK on_op on_const on_period UNK on_nl UNK on_op on_op UNK on_op on_lparen on_const on_period # Determine platform to archive
if UNK on_nl UNK unless on_const on_period project on_period UNK return on_const on_period archive_path if on_const on_period config on_lbracket on_symbeg # Archive
return on_const on_period archive_path if on_const on_period config on_lbracket on_symbeg UNK on_rbracket on_nl on_ignored_nl UNK on_nl UNK on_nl path on_op # See https://github.com/fastlane/fastlane/pull/4325
on_ignored_nl def UNK on_lparen command on_comma UNK on_rparen on_ignored_nl UNK on_op command on_period UNK do on_op UNK on_op on_ignored_nl UNK ##################################################### # @!group Printing out things #####################################################
def UNK on_lparen command on_comma UNK on_rparen on_ignored_nl UNK on_op command on_period UNK do on_op UNK on_op on_ignored_nl UNK on_op # @param [Array] An array containing all the parts of the command
UNK on_lbracket on_int on_comma on_int on_rbracket on_nl UNK on_ignored_nl UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end # That's a default parameter, like `-project 'Name'`
on_lbracket UNK on_comma on_tstring_beg on_tstring_end on_rbracket on_nl end on_nl end on_nl on_ignored_nl UNK on_lparen on_const on_op on_const on_period UNK on_lparen # as the | will somehow break the terminal table
on_ignored_nl def UNK on_nl return unless on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_const on_op on_const ##################################################### # @!group The individual steps #####################################################
def UNK on_nl command on_op on_const on_period UNK on_nl UNK on_lparen command on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen if on_const on_op # Builds the app and prepares the archive
def UNK on_nl command on_op on_const on_period UNK on_nl on_ignored_nl return if command on_period UNK on_nl on_ignored_nl UNK on_lparen command # Post-processing of build_app
def UNK on_nl if on_lparen on_const on_lbracket on_const on_period archive_path on_op on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_rparen on_period UNK on_op on_int # Makes sure the archive is there and valid
if on_lparen on_const on_lbracket on_const on_period archive_path on_op on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_rparen on_period UNK on_op on_int on_nl on_const on_period # from https://github.com/fastlane/fastlane/issues/3179
UNK on_op on_const on_period expand_path on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_const on_period UNK on_rparen on_nl UNK on_op on_const on_period expand_path # Compress and move the dsym file
UNK on_op on_const on_period UNK on_lparen UNK on_period join on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_comma on_label UNK on_rparen on_nl UNK # Extract uuids
symbol_map_path on_op UNK on_nl UNK on_op on_const on_period UNK on_lparen UNK on_rparen on_nl UNK on_op on_const on_period join on_lparen UNK # Find bcsymbolmap file to be used: # - if a <uuid>.plist file exists, we will extract uuid of bcsymbolmap and use it # - if a <uuid>.bcsymbolmap file exists, we will use it # - otherwise let dsymutil figure it out
on_ignored_nl on_const on_period success on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl on_const on_period mv on_lparen # new line
def UNK on_nl on_const on_period mv on_lparen on_const on_period UNK on_comma on_const on_period expand_path on_lparen on_const on_period config on_lbracket on_symbeg # Moves over the binary and dsym file to the output directory # @return (String) The path to the resulting ipa file
def UNK on_nl on_const on_period mv on_lparen on_const on_period UNK on_comma on_const on_period expand_path on_lparen on_const on_period config on_lbracket on_symbeg # Moves over the binary and dsym file to the output directory # @return (String) The path to the resulting pkg file
on_ignored_nl def UNK on_lparen path on_rparen on_ignored_nl on_const on_period success on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_const on_lbracket path on_rbracket # copys framework from temp folder:
if on_const on_period exist? on_lparen UNK on_rparen on_nl on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg on_const on_period basename on_lparen UNK # If the target file already exists in output directory # we have to remove it first, otherwise cp_r fails even with remove_destination # e.g.: there are symlinks in the .framework
def UNK on_nl UNK on_op on_const on_period project on_period UNK on_lparen on_label on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl app_path on_op on_const # Copies the .app from the archive into the output directory
def UNK on_nl if on_const on_period exist? on_lparen on_const on_period manifest_path on_rparen on_nl on_const on_period mv on_lparen on_const on_period manifest_path # Move the manifest.plist if exists into the output directory
def UNK on_nl if on_const on_period exist? on_lparen on_const on_period app_thinning_path on_rparen on_nl on_const on_period mv on_lparen on_const on_period app_thinning_path # Move the app-thinning.plist file into the output directory
def UNK on_nl if on_const on_period exist? on_lparen on_const on_period app_thinning_size_report_path on_rparen on_nl on_const on_period mv on_lparen on_const on_period app_thinning_size_report_path # Move the App Thinning Size Report.txt file into the output directory
def UNK on_nl if on_const on_period exist? on_lparen on_const on_period apps_path on_rparen on_nl on_const on_period mv on_lparen on_const on_period apps_path # Move the Apps folder to the output directory
def UNK on_nl if on_const on_period exist? on_lparen on_const on_period asset_packs_path on_rparen on_nl on_const on_period mv on_lparen on_const on_period asset_packs_path # Move Asset Packs folder to the output directory # @return (String) The path to the resulting Asset Packs (aka OnDemandResources) folder
