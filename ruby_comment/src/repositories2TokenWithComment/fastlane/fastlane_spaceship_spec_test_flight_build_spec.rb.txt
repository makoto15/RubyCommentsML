UNK on_lparen on_const on_op on_const on_op on_const on_rparen on_period to receive on_lparen on_symbeg client on_rparen on_period UNK on_lparen UNK on_rparen # Use a simple client for all data models
end on_nl end on_nl on_ignored_nl context on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl end on_nl end # builds = Spaceship::TestFlight::Build.all(app_id: 10, platform: 'ios') # expect(builds.size).to eq(4) # expect(builds.sample).to be_instance_of(Spaceship::TestFlight::Build) # expect(builds.map(&:train_version).uniq).to eq(['1.0', '1.1'])
end on_nl end on_nl on_ignored_nl context on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl end on_nl end # builds = Spaceship::TestFlight::Build.builds_for_train(app_id: 10, platform: 'ios', train_version: '1.0') # expect(builds.size).to eq(1) # expect(builds.map(&:train_version)).to eq(['1.0'])
end on_nl end on_nl on_ignored_nl context on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl end on_nl end # builds = Spaceship::TestFlight::Build.all_processing_builds(app_id: 10, platform: 'ios') # expect(builds.size).to eq(1) # expect(builds.sample.id).to eq(3)
end on_nl end on_nl on_ignored_nl context on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl end on_nl end # builds = Spaceship::TestFlight::Build.all_waiting_for_review(app_id: 10, platform: 'ios') # expect(builds.size).to eq(1) # expect(builds.sample.id).to eq(4)
end on_nl end on_nl end on_nl on_ignored_nl context on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl UNK on_lparen on_symbeg build on_rparen on_lbrace on_const # latest_build = Spaceship::TestFlight::Build.latest(app_id: 10, platform: 'ios') # expect(latest_build.upload_date).to eq(Time.utc(2017, 1, 4, 12))
