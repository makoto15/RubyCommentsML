UNK on_const on_nl UNK on_const on_op on_const UNK UNK on_lparen on_const on_op on_const on_rparen on_nl on_ignored_nl UNK UNK on_period rake_classes # Adds a compatibility layer to your Foreman::Thor classes which allows you to use # rake package tasks. For example, to use rspec rake tasks, one can do: # # require 'foreman/vendor/thor/lib/thor/rake_compat' # require 'rspec/core/rake_task' # # class Default < Foreman::Thor # include Foreman::Thor::RakeCompat # # RSpec::Core::RakeTask.new(:spec) do |t| # t.spec_opts = ['--options', './.rspec'] # t.spec_files = FileList['spec/**/*_spec.rb'] # end # end #
UNK on_op on_const on_period UNK on_lparen UNK UNK UNK UNK on_period UNK on_lparen UNK UNK UNK on_rparen UNK UNK UNK # Hack. Make rakefile point to invoker, so rdoc task is generated properly.
UNK UNK on_ignored_nl UNK UNK UNK on_nl on_ignored_nl UNK task on_lparen on_op on_rparen on_ignored_nl task on_op UNK on_nl on_ignored_nl UNK # override task on (main), for compatibility with Rake 0.9
UNK on_op task on_period UNK on_period UNK on_lparen UNK UNK UNK on_rparen on_period UNK on_nl on_ignored_nl UNK on_op UNK on_nl # rubocop:disable AssignmentInCondition
UNK on_op on_const on_op on_const on_op on_const on_period UNK on_lparen UNK on_period UNK on_rparen on_period UNK on_nl klass on_period UNK # rubocop:disable AssignmentInCondition
