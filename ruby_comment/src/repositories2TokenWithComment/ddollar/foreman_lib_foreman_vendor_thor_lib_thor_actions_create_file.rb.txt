def UNK on_lparen destination on_comma on_op UNK on_comma on_op block on_rparen on_ignored_nl UNK on_op UNK on_period UNK on_period UNK on_lparen # Create a new file relative to the destination root with the given data, # which is the return value of a block or a data string. # # ==== Parameters # destination<String>:: the relative path to the destination root. # data<String|NilClass>:: the data to append to the file. # config<Hash>:: give :verbose => false to not log the status. # # ==== Examples # # create_file "lib/fun_party.rb" do # hostname = ask("What is the virtual hostname I should use?") # "vhost.name = #{hostname}" # end # # create_file "config/apache.conf", "your apache config" #
UNK on_const on_op on_const UNK on_symbeg data on_nl on_ignored_nl def UNK on_lparen UNK on_comma destination on_comma data on_comma UNK on_op # CreateFile is a subset of Template, which instead of rendering a file with # ERB, it gets the content from the user. #
UNK on_symbeg data on_nl on_ignored_nl def UNK on_lparen UNK on_comma destination on_comma data on_comma UNK on_op UNK UNK on_rparen on_ignored_nl #:nodoc:
def UNK on_nl UNK on_op on_const on_period UNK on_lparen destination on_rparen on_op UNK on_nl end on_nl on_ignored_nl def UNK on_nl # Checks if the content of the file at the destination is identical to the rendered result. # # ==== Returns # Boolean:: true if it is identical, false otherwise. #
def UNK on_nl UNK on_op UNK data on_period UNK on_lparen on_const on_rparen on_nl data on_period UNK on_nl UNK on_ignored_nl data # Holds the content to be added to the file. #
def UNK on_lparen on_op block on_rparen on_ignored_nl UNK UNK on_nl UNK on_symbeg UNK on_comma on_symbeg UNK on_nl UNK on_ignored_nl UNK # Now on conflict we check if the file is identical or not. #
def UNK on_lparen UNK on_comma UNK on_comma on_op block on_rparen on_ignored_nl UNK UNK on_nl UNK on_symbeg UNK on_comma on_symbeg UNK # If force is true, run the action, otherwise check if it's not being # skipped. If both are false, show the file_collision menu, if the menu # returns true, force it, otherwise skip. #
def UNK on_nl UNK on_period UNK on_period UNK on_lparen destination on_rparen UNK UNK UNK on_nl end on_nl end on_nl end # Shows the file collision menu to the user and gets the result. #
