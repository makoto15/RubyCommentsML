UNK on_tstring_beg on_tstring_content on_tstring_end on_op on_symbeg list on_comma on_tstring_beg on_tstring_content on_tstring_end on_op on_symbeg UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_op on_symbeg #:nodoc: # rubocop:disable ClassLength
def UNK on_lparen meth on_op nil on_rparen on_ignored_nl if meth on_op on_op UNK on_lparen meth on_rparen on_nl initialize_thorfiles on_lparen meth # Override Foreman::Thor#help so it can give information about any class and any method. #
def UNK on_lparen meth on_comma on_op UNK on_rparen on_ignored_nl meth on_op meth on_period UNK on_nl initialize_thorfiles on_lparen meth on_rparen on_nl # If a command is not found on Foreman::Thor::Runner, method missing is invoked and # Foreman::Thor::Runner is then responsible for finding the command in all classes. #
initialize_thorfiles on_nl on_ignored_nl UNK on_ignored_nl if on_const on_period UNK on_lparen on_const on_period UNK on_lparen name on_rparen on_rparen on_nl UNK on_op # rubocop:disable MethodLength
UNK on_ignored_nl if on_const on_period UNK on_lparen on_const on_period UNK on_lparen name on_rparen on_rparen on_nl UNK on_op on_const on_period join # If a directory name is provided as the argument, look for a 'main.thor' # command in said directory.
end on_nl on_ignored_nl desc on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_nl def UNK on_nl require on_tstring_beg on_tstring_content on_tstring_end on_nl # Indicate success
def UNK on_lparen UNK on_rparen on_ignored_nl yaml_file on_op on_const on_period join on_lparen thor_root on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl # Save the yaml file. If none exists in thor root, creates one. #
def initialize_thorfiles on_lparen UNK on_op nil on_comma UNK on_op false on_rparen on_ignored_nl thorfiles on_lparen UNK on_comma UNK on_rparen on_period UNK # Load the Foreman::Thorfiles. If relevant_to is supplied, looks for specific files # in the thor_root instead of loading them all. # # By default, it also traverses the current path until find Foreman::Thor files, as # described in thorfiles. This look up can be skipped by supplying # skip_lookup true. #
def thorfiles on_lparen UNK on_op nil on_comma UNK on_op false on_rparen on_ignored_nl thorfiles on_op on_lbracket on_rbracket on_nl on_ignored_nl unless UNK # Finds Foreman::Thorfiles by traversing from your current directory down to the root # directory of your system. If at any time we find a Foreman::Thor file, we stop. # # We also ensure that system-wide Foreman::Thorfiles are loaded first, so local # Foreman::Thorfiles can override them. # # ==== Example # # If we start at /Users/wycats/dev/thor ... # # 1. /Users/wycats/dev/thor # 2. /Users/wycats/dev # 3. /Users/wycats <-- we find a Foreman::Thorfile here, so we stop # # Suppose we start at c:\Documents and Settings\james\dev\thor ... # # 1. c:\Documents and Settings\james\dev\thor # 2. c:\Documents and Settings\james\dev # 3. c:\Documents and Settings\james # 4. c:\Documents and Settings # 5. c:\ <-- no Foreman::Thorfiles found! #
def UNK on_lparen meth on_rparen on_ignored_nl UNK on_op on_lbracket meth on_comma meth on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_lbracket # Load Foreman::Thorfiles relevant to the given method. If you provide "foo:bar" it # will load all thor files in the thor.yaml that has "foo" e "foo:bar" # namespaces registered. #
def UNK on_lparen UNK on_op false on_comma UNK on_op false on_comma klasses on_op on_const on_op on_const on_op on_const on_period UNK # Display information about the given klasses. If with_module is given, # it shows a table with information extracted from the yaml file. #
on_lparen klasses on_op UNK on_rparen on_period UNK on_lbrace on_op k on_op list on_lbracket k on_period UNK on_period UNK on_lparen on_tstring_beg # Get classes which inherit from Foreman::Thor
UNK on_period UNK on_lbrace on_op k on_op k on_period UNK on_lparen false on_rparen on_period UNK on_rbrace on_nl list on_lbracket on_tstring_beg # Get classes which inherit from Foreman::Thor::Base
list on_op list on_period UNK on_lbrace on_op UNK on_comma UNK on_op UNK on_lbracket on_int on_rbracket on_period UNK on_lparen UNK on_tstring_content # Order namespaces with default coming first
list on_period UNK on_lbrace on_op UNK on_comma UNK on_op UNK on_lbracket on_int on_rbracket on_op UNK on_lbracket on_int on_rbracket on_rbrace on_nl #:nodoc:
UNK on_op on_lbracket on_rbracket on_nl UNK on_op UNK on_tstring_content UNK on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_op UNK on_nl UNK on_op #:nodoc:
