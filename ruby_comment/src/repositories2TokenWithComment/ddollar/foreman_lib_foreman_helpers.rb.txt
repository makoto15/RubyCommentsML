on_ignored_nl UNK UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK on_lparen UNK UNK UNK on_rparen on_period UNK UNK on_op UNK # Copied whole sale from, https://github.com/defunkt/resque/
UNK UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK on_lparen UNK UNK UNK on_rparen on_period UNK UNK on_op UNK on_op # Given a word with dashes, returns a camel cased version of it. # # classify('job-name') # => 'JobName'
on_ignored_nl UNK UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op UNK on_period UNK on_nl on_ignored_nl UNK on_op UNK on_period UNK on_lparen # Tries to find a constant with the name specified in the argument string:
UNK UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op UNK on_period UNK on_nl on_ignored_nl UNK on_op UNK on_period UNK on_lparen UNK # # constantize("Module") # => Module # constantize("Test::Unit") # => Test::Unit # # The name is assumed to be the one of a top-level constant, no matter # whether it starts with "::" or not. No lexical context is taken into # account: # # C = 'outside' # module M # C = 'inside' # C # => 'inside' # constantize("C") # => 'outside', same as ::C # end # # NameError is raised when the constant is unknown.
