UNK on_const on_op on_const on_op on_const on_nl UNK on_op UNK on_nl def desc on_lparen UNK on_op nil on_rparen on_ignored_nl if # Foreman::Thor has a special class called Foreman::Thor::Group. The main difference to Foreman::Thor class # is that it invokes all commands at once. It also include some methods that allows # invocations to be done at the class method, which are not available to Foreman::Thor # commands.
def desc on_lparen UNK on_op nil on_rparen on_ignored_nl if UNK on_nl UNK on_op UNK on_nl UNK on_ignored_nl UNK on_op UNK # The description for this Foreman::Thor::Group. If none is provided, but a source root # exists, tries to find the USAGE one folder above it, otherwise searches # in the superclass. # # ==== Parameters # description<String>:: The description for this Foreman::Thor::Group. #
def UNK on_lparen shell on_rparen on_ignored_nl shell on_period UNK on_tstring_beg on_tstring_content on_tstring_end on_nl shell on_period UNK on_tstring_beg on_tstring_content on_embexpr_beg UNK # Prints help information. # # ==== Options # short:: When true, shows only usage. #
def invocations UNK on_op UNK on_lparen on_symbeg invocations on_comma on_lbrace on_rbrace on_rparen on_nl end on_nl on_ignored_nl def UNK UNK on_op # Stores invocations for this class merging with superclass values. #
UNK on_op UNK on_lparen on_symbeg invocations on_comma on_lbrace on_rbrace on_rparen on_nl end on_nl on_ignored_nl def UNK UNK on_op UNK on_lparen #:nodoc:
def UNK UNK on_op UNK on_lparen on_symbeg UNK on_comma on_lbrace on_rbrace on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen on_op # Stores invocation blocks used on invoke_from_option. #
UNK on_op UNK on_lparen on_symbeg UNK on_comma on_lbrace on_rbrace on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen on_op names on_comma #:nodoc:
def UNK on_lparen on_op names on_comma on_op block on_rparen on_ignored_nl UNK on_op names on_period UNK on_period UNK on_lparen on_const on_rparen # Invoke the given namespace or class given. It adds an instance # method that will invoke the klass and command. You can give a block to # configure how it will be invoked. # # The namespace/class given will have its options showed on the help # usage. Check invoke_from_option for more information. #
def UNK on_lparen on_op names on_comma on_op block on_rparen on_ignored_nl UNK on_op names on_period UNK on_period UNK on_lparen on_const on_rparen # Invoke a thor class based on the value supplied by the user to the # given option named "name". A class option must be created before this # method is invoked for each name given. # # ==== Examples # # class GemGenerator < Foreman::Thor::Group # class_option :test_framework, :type => :string # invoke_from_option :test_framework # end # # ==== Boolean options # # In some cases, you want to invoke a thor class if some option is true or # false. This is automatically handled by invoke_from_option. Then the # option name is used to invoke the generator. # # ==== Preparing for invocation # # In some cases you want to customize how a specified hook is going to be # invoked. You can do that by overwriting the class method # prepare_for_invocation. The class method must necessarily return a klass # and an optional command. # # ==== Custom invocations # # You can also supply a block to customize how the option is going to be # invoked. The block receives two parameters, an instance of the current # class and the klass to be invoked. #
def UNK on_lparen on_op names on_rparen on_ignored_nl names on_period UNK do on_op name on_op on_ignored_nl UNK on_lparen name on_rparen on_nl # Remove a previously added invocation. # # ==== Examples # # remove_invocation :test_framework #
def UNK on_lparen shell on_comma UNK on_op on_lbrace on_rbrace on_rparen UNK on_lparen UNK on_comma class_options on_rparen do on_op klass on_op # Overwrite class options help to allow invoked generators options to be # shown recursively when invoking a generator. #
UNK on_lparen UNK on_comma class_options on_rparen do on_op klass on_op on_ignored_nl klass on_period UNK on_lparen on_symbeg UNK on_comma UNK on_comma #:nodoc:
def UNK on_lparen UNK on_comma UNK on_rparen invocations on_period UNK do on_op name on_comma UNK on_op on_ignored_nl value on_op if # Get invocations array and merge options from invocations. Those # options are added to group_options hash. Options that already exists # in base_options are not added twice. #
invocations on_period UNK do on_op name on_comma UNK on_op on_ignored_nl value on_op if UNK on_nl UNK on_op class_options on_lbracket name #:nodoc: # rubocop:disable MethodLength
def UNK on_lparen on_op on_rparen on_ignored_nl UNK on_op on_lbracket on_rbracket on_nl UNK on_op UNK on_nl UNK on_op on_lparen desc on_op # Returns commands ready to be printed.
UNK on_op on_tstring_beg on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg command on_period name on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_tstring_end on_nl UNK #:nodoc:
def UNK on_lparen command on_comma UNK on_comma UNK on_comma UNK on_rparen if on_const on_op on_const on_op on_const on_period UNK on_lparen # The method responsible for dispatching given the args.
if on_const on_op on_const on_op on_const on_period UNK on_lparen UNK on_period UNK on_rparen on_nl UNK on_lparen UNK on_lbracket on_symbeg shell #:nodoc:
def UNK on_nl on_tstring_beg on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg UNK on_period UNK on_lparen UNK on_comma UNK on_rparen on_embexpr_end on_tstring_end on_nl # The banner for this class. You can customize it if you are invoking the # thor class by another ways which is not the Foreman::Thor::Runner.
def UNK on_const on_op on_const on_op on_const on_period UNK on_lparen UNK on_comma class_options on_rparen on_nl end on_nl UNK on_symbeg UNK # Represents the whole class as a command.
on_const on_op on_const on_op on_const on_period UNK on_lparen UNK on_comma class_options on_rparen on_nl end on_nl UNK on_symbeg UNK on_comma on_symbeg #:nodoc:
on_const on_op on_const on_op on_const on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen UNK on_lbracket UNK on_period UNK on_rbracket #:nodoc:
UNK on_lbracket UNK on_period UNK on_rbracket on_op on_const on_op on_const on_op on_const on_period UNK on_lparen UNK on_comma nil on_comma nil #:nodoc:
def UNK on_lparen klass on_comma command on_op nil on_comma on_op UNK on_comma on_op block on_rparen UNK do on_ignored_nl if block # Shortcut to invoke with padding and block handling. Use internally by # invoke and invoke_from_option class methods.
UNK do on_ignored_nl if block on_nl UNK block on_period UNK on_nl UNK UNK on_nl UNK on_lparen UNK on_comma klass on_comma #:nodoc:
