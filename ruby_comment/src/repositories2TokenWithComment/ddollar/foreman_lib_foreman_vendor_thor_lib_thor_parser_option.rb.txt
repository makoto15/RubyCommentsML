UNK on_symbeg aliases on_comma on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_nl on_ignored_nl on_const on_op on_lbracket on_symbeg UNK on_comma #:nodoc:
def UNK on_period UNK on_lparen UNK on_comma value on_rparen on_ignored_nl if UNK on_period UNK on_lparen on_const on_rparen on_nl name on_comma # This parse quick options given as method_options. It makes several # assumptions, but you can be more specific using the option method. # # parse :foo => "bar" # #=> Option foo with default value bar # # parse [:foo, :baz] => "bar" # #=> Option foo with default value bar and alias :baz # # parse :foo => :required # #=> Required option foo without default value # # parse :foo => 2 # #=> Option foo with default value 2 and type numeric # # parse :foo => :numeric # #=> Option foo without default value and type numeric # # parse :foo => true # #=> Option foo with default value true and type boolean # # The valid types are :boolean, :numeric, :hash, :array and :string. If none # is given a default type is assumed. This default type accepts arguments as # string (--foo=value) or booleans (just --foo). # # By default all options are optional, unless :required is given. #
on_symbeg UNK on_nl end on_nl when on_const on_comma on_const on_nl on_symbeg UNK on_nl when on_const on_nl on_symbeg UNK on_nl when # rubocop:disable AssignmentInCondition
UNK on_tstring_beg on_tstring_content on_embexpr_beg on_ivar on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg on_ivar on_period UNK on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end # TODO: This should raise an ArgumentError in a future version of Foreman::Thor
