on_ignored_nl UNK on_const on_nl UNK on_const on_nl on_ignored_nl UNK on_const on_nl on_ignored_nl def UNK on_lparen scope on_comma options on_op UNK # frozen_string_literal: true
UNK on_const on_nl on_ignored_nl def UNK on_lparen scope on_comma options on_op UNK UNK on_rparen on_ignored_nl on_tstring_beg on_embexpr_beg UNK on_period UNK # The Kaminari::Helpers::UrlHelper module provides useful methods for # generating a path or url to a particlar page. A class must implement the # following methods: # # * <tt>url_for</tt>: A method that generates an actual path # * <tt>params</tt>: A method that returns query string parameters # * <tt>request</tt>: A method that returns a Rack::Request object # # A normal Rails controller implements all the methods, which makes it # trivial to use this module: # # ==== Examples # # class UsersController < ApplicationController # include Kaminari::Helpers::UrlHelper # # def index # @users = User.page(1) # # path_to_next_page(@items) # # => /items?page=2 # end # end #
def UNK on_lparen scope on_comma options on_op UNK UNK on_rparen on_ignored_nl on_tstring_beg on_embexpr_beg UNK on_period UNK on_embexpr_end on_embexpr_beg UNK on_lparen # A helper that calculates the url to the next page. # # ==== Examples # Basic usage: # # <%= next_page_url @items %> # #-> http://www.example.org/items?page=2 # # It will return `nil` if there is no next page.
def UNK on_lparen scope on_comma options on_op UNK UNK on_rparen on_ignored_nl on_tstring_beg on_embexpr_beg UNK on_period UNK on_embexpr_end on_embexpr_beg UNK on_lparen # A helper that calculates the url to the previous page. # # ==== Examples # Basic usage: # # <%= prev_page_url @items %> # #-> http://www.example.org/items # # It will return `nil` if there is no previous page.
def UNK on_lparen scope on_comma options on_op UNK UNK on_rparen on_ignored_nl on_const on_op on_const on_op on_const on_period UNK on_lparen UNK # A helper that calculates the path to the next page. # # ==== Examples # Basic usage: # # <%= path_to_next_page @items %> # #-> /items?page=2 # # It will return `nil` if there is no next page.
def UNK on_lparen scope on_comma options on_op UNK UNK on_rparen on_ignored_nl on_const on_op on_const on_op on_const on_period UNK on_lparen UNK # A helper that calculates the path to the previous page. # # ==== Examples # Basic usage: # # <%= path_to_prev_page @items %> # #-> /items # # It will return `nil` if there is no previous page.
def UNK on_lparen scope on_comma on_label on_const on_op on_const on_op on_const on_comma on_label UNK on_comma on_op options on_rparen on_ignored_nl options # A helper that renders the pagination links. # # <%= paginate @articles %> # # ==== Options # * <tt>:window</tt> - The "inner window" size (4 by default). # * <tt>:outer_window</tt> - The "outer window" size (0 by default). # * <tt>:left</tt> - The "left outer window" size (0 by default). # * <tt>:right</tt> - The "right outer window" size (0 by default). # * <tt>:params</tt> - url_for parameters for the links (:controller, :action, etc.) # * <tt>:param_name</tt> - parameter name for page number in the links (:page by default) # * <tt>:remote</tt> - Ajax? (false by default) # * <tt>:paginator_class</tt> - Specify a custom Paginator (Kaminari::Helpers::Paginator by default) # * <tt>:template</tt> - Specify a custom template renderer for rendering the Paginator (receiver by default) # * <tt>:ANY_OTHER_VALUES</tt> - Any other hash key & values would be directly passed into each tag as :locals value.
def UNK on_lparen scope on_comma UNK on_comma on_op options on_rparen on_ignored_nl prev_page on_op UNK on_lparen scope on_comma options on_rparen on_nl # A simple "Twitter like" pagination link that creates a link to the previous page. # # ==== Examples # Basic usage: # # <%= link_to_previous_page @items, 'Previous Page' %> # # Ajax: # # <%= link_to_previous_page @items, 'Previous Page', remote: true %> # # By default, it renders nothing if there are no more results on the previous page. # You can customize this output by passing a block. # # <%= link_to_previous_page @users, 'Previous Page' do %> # <span>At the Beginning</span> # <% end %>
def UNK on_lparen scope on_comma UNK on_comma on_op options on_rparen on_ignored_nl next_page on_op UNK on_lparen scope on_comma options on_rparen on_nl # A simple "Twitter like" pagination link that creates a link to the next page. # # ==== Examples # Basic usage: # # <%= link_to_next_page @items, 'Next Page' %> # # Ajax: # # <%= link_to_next_page @items, 'Next Page', remote: true %> # # By default, it renders nothing if there are no more results on the next page. # You can customize this output by passing a block. # # <%= link_to_next_page @users, 'Next Page' do %> # <span>No More Pages</span> # <% end %>
def UNK on_lparen collection on_comma on_label UNK on_rparen on_ignored_nl entry_name on_op if entry_name on_nl entry_name on_period UNK on_lparen collection on_period # Renders a helpful message with numbers of displayed vs. total entries. # Ported from mislav/will_paginate # # ==== Examples # Basic usage: # # <%= page_entries_info @posts %> # #-> Displaying posts 6 - 10 of 26 in total # # By default, the message will use the humanized class name of objects # in collection: for instance, "project types" for ProjectType models. # The namespace will be cutted out and only the last name will be used. # Override this with the <tt>:entry_name</tt> parameter: # # <%= page_entries_info @posts, entry_name: 'item' %> # #-> Displaying items 6 - 10 of 26 in total
def UNK on_lparen scope on_comma options on_op UNK UNK on_rparen on_ignored_nl next_page on_op UNK on_lparen scope on_comma options on_rparen on_nl # Renders rel="next" and rel="prev" links to be used in the head. # # ==== Examples # Basic usage: # # In head: # <head> # <title>My Website</title> # <%= yield :head %> # </head> # # Somewhere in body: # <% content_for :head do %> # <%= rel_next_prev_link_tags @items %> # <% end %> # # #-> <link rel="next" href="/items/page/3" /><link rel="prev" href="/items/page/1" /> #
