dir on_op on_const on_period UNK on_lparen config on_period dir on_comma UNK on_period UNK on_rparen on_nl on_ignored_nl UNK on_lparen config on_period # Expand any paths relative to the root
UNK on_lparen config on_period UNK on_rparen on_nl on_ignored_nl UNK on_lparen dir on_rparen on_nl on_ignored_nl UNK on_op UNK on_lparen dir on_rparen # Verify git is installed
UNK on_lparen dir on_rparen on_nl on_ignored_nl UNK on_op UNK on_lparen dir on_rparen on_nl on_ignored_nl app on_op config on_period app on_op # Verify we are operating in a git repo
UNK on_op UNK on_lparen dir on_rparen on_nl on_ignored_nl app on_op config on_period app on_op UNK on_lparen dir on_rparen on_nl on_ignored_nl # Get the current branch
app on_op config on_period app on_op UNK on_lparen dir on_rparen on_nl on_ignored_nl UNK on_op UNK on_lparen config on_period remote on_comma # Get the name of the app
UNK on_op UNK on_lparen config on_period remote on_comma dir on_rparen on_nl UNK on_lparen config on_period remote on_comma app on_comma dir # Check if we need to add the git remote
UNK on_lparen config on_period remote on_comma UNK on_comma dir on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen path on_rparen on_ignored_nl # Push to Heroku
def UNK on_lparen path on_rparen on_ignored_nl UNK on_const on_op on_const on_op on_const on_period UNK on_lparen path on_rparen on_period UNK on_nl # Verify that git is installed. # @raise [Errors::GitNotFound]
def UNK on_lparen path on_rparen on_ignored_nl UNK on_op on_const on_period UNK on_lparen git_dir on_lparen path on_rparen on_rparen on_nl UNK on_const # Verify that the given path is a git directory. # @raise [Errors::NotAGitRepo] # @param [String]
def UNK on_lparen path on_rparen on_ignored_nl on_const on_period UNK on_lparen path on_rparen on_nl end on_nl on_ignored_nl def git_dir on_lparen path # Interpret the name of the Heroku application from the given path. # @param [String] path # @return [String]
def git_dir on_lparen path on_rparen on_ignored_nl on_tstring_beg UNK path UNK on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_lparen path # The git directory for the given path. # @param [String] path # @return [String]
def UNK on_lparen path on_rparen on_ignored_nl result on_op UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma git_dir # The name of the current git branch. # @param [String] path # @return [String]
result on_period UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_end on_rparen on_period UNK on_nl end on_nl on_ignored_nl def # Returns something like "* master"
def UNK on_lparen remote on_comma UNK on_comma path on_rparen on_ignored_nl UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end # Push to the Heroku remote. # @param [String] remote # @param [String] branch
def UNK on_lparen remote on_comma path on_rparen on_ignored_nl result on_op UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end # Check if the git remote has the given remote. # @param [String] remote # @return [true, false]
def UNK on_lparen remote on_comma app on_comma path on_rparen on_ignored_nl UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end # Add the Heroku to the current repository. # @param [String] remote # @param [String] app
def UNK on_lparen app on_rparen on_ignored_nl on_tstring_beg on_tstring_content UNK app UNK on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_lparen # The URL for this project on Heroku. # @return [String]
def UNK on_lparen on_op UNK on_rparen on_ignored_nl result on_op on_const on_op on_const on_op on_const on_period UNK on_lparen on_op UNK on_rparen # Execute the command, raising an exception if it fails. # @return [Vagrant::Util::Subprocess::Result]
