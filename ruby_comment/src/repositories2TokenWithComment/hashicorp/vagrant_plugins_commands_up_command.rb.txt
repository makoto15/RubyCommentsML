UNK on_op UNK on_lparen UNK on_rparen on_nl UNK if on_op UNK on_nl on_ignored_nl UNK on_lparen options on_comma UNK on_rparen on_nl # Parse the options
UNK on_lparen options on_comma UNK on_rparen on_nl on_ignored_nl on_ivar on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl names on_op # Validate the provisioners
on_ivar on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl names on_op UNK on_nl if names on_period UNK on_nl autostart # Go over each VM and bring it up
names on_op UNK on_nl if names on_period UNK on_nl autostart on_op UNK on_nl on_ivar on_period UNK on_period UNK on_period UNK # Get the names of the machines we want to bring up
names on_op UNK if autostart on_op names on_period UNK on_nl end on_nl on_ignored_nl UNK on_op on_lbracket on_rbracket on_nl if names # If we have an autostart key but no names, it means that # all machines are autostart: false and we don't start anything.
UNK on_op on_lbracket on_rbracket on_nl if names on_nl UNK on_op on_lbracket on_rbracket on_nl UNK on_lparen names on_comma on_label options on_lbracket # Build up the batch job of what we'll do
UNK on_op on_lbracket on_rbracket on_nl UNK on_lparen names on_comma on_label options on_lbracket on_symbeg provider on_rbracket on_rparen UNK on_op m on_op # To prevent vagrant from attempting to validate a global vms config # (which doesn't exist within the local dir) when attempting to # install a machines provider, this check below will disable the # install_providers function if a user gives us a machine id instead # of the machines name.
if options on_lbracket on_symbeg UNK on_rbracket on_nl UNK on_lparen names on_comma on_label options on_lbracket on_symbeg provider on_rbracket on_rparen on_nl end # If we're installing providers, then do that. We don't # parallelize this step because it is likely the same provider # anyways.
UNK on_period UNK do on_op m on_op on_ignored_nl UNK if on_op m on_period UNK on_period UNK on_period UNK on_nl UNK # Output the post-up messages that we have, if any
on_ivar on_period ui on_period UNK on_lparen on_tstring_beg on_tstring_end on_comma on_label UNK on_rparen on_nl on_ignored_nl m on_period ui on_period UNK on_lparen # Add a newline to separate things.
UNK on_nl end on_nl on_ignored_nl UNK on_nl on_ignored_nl UNK UNK on_lparen names on_comma on_label UNK on_rparen on_ignored_nl UNK on_op on_const # Success, exit status 0
UNK on_op on_const on_period UNK on_nl UNK on_lparen names on_comma on_label provider on_rparen do on_op machine on_op on_ignored_nl UNK on_op # First create a set of all the providers we need to check for. # Most likely this will be a set of one.
UNK on_op on_ivar on_period UNK on_period UNK on_lparen machine on_period name on_period UNK on_rparen on_nl on_ignored_nl p on_op provider on_nl # Check if we have this machine in the index
p on_op provider on_nl p on_op UNK on_period provider on_period UNK if on_op p on_op UNK on_nl p on_op on_ivar # Get the provider for this machine. This logic isn't completely # straightforward. If we have a forced provider, we always use # that no matter what. If we have an entry in the index (meaning # the machine may be created), we use that provider no matter # what since that will be used by the core. If we have none, then # we ask the Vagrant env what the default provider would be and use # that. # # Note that this logic is a bit redundant if we have "provider" # set but I think its probably cleaner to put this logic in one # place.
UNK on_period UNK on_lparen p on_rparen on_nl end on_nl on_ignored_nl UNK on_period UNK do on_op name on_op on_ignored_nl on_op on_ivar # Add it to the set
UNK on_period UNK do on_op name on_op on_ignored_nl on_op on_ivar on_period UNK on_lparen name on_rparen on_nl end on_nl on_ignored_nl UNK # Go through and determine if we can install the providers
UNK on_period UNK do on_op name on_op on_ignored_nl UNK on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK # Install the providers if we have to
UNK on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_period UNK on_lbracket name on_rbracket on_nl UNK if # Find the provider. Ignore if we can't find it, this error # will pop up later in the process.
UNK on_op UNK on_lbracket UNK on_rbracket on_nl UNK if UNK on_period UNK on_nl on_ignored_nl ui on_op on_const on_op on_const on_op # If the provider is already installed, then our work here is done
ui on_op on_const on_op on_const on_op on_const on_period UNK on_lparen on_ivar on_period ui on_comma on_tstring_beg on_tstring_end on_rparen on_nl ui on_period # Some human-friendly output
on_ivar on_period UNK on_lparen name on_rparen on_nl end on_nl end on_nl end on_nl end on_nl end on_nl EMP EMP EMP # Install the provider
