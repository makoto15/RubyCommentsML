UNK on_const on_op on_const on_nl def UNK on_lparen UNK on_comma UNK on_rparen on_ignored_nl UNK on_nl on_ivar on_op on_const on_op on_const # This class implements provisioning via chef-zero.
UNK on_op UNK UNK on_nl on_ivar on_period UNK UNK on_op UNK on_comma UNK on_comma UNK on_op on_ignored_nl UNK on_op UNK # Verify that the proper shared folders exist.
UNK on_op UNK if UNK on_nl end on_nl on_ignored_nl UNK on_nl UNK on_lparen UNK on_rparen on_nl UNK on_lparen UNK on_lparen # We only care about checking folders that have a local path, meaning # they were shared from the local machine, rather than assumed to # exist on the VM.
on_ignored_nl on_ivar on_period UNK on_period UNK UNK on_op UNK on_op on_ignored_nl UNK on_op on_int on_nl UNK UNK on_op on_int on_op #provisioner has asked chef to reboot
UNK on_op UNK on_op on_symbeg UNK on_op on_symbeg UNK on_op on_symbeg UNK on_nl on_ignored_nl UNK on_op UNK on_period UNK on_nl # Output the data with the proper color based on the stream.
UNK if UNK on_op on_int on_nl end on_nl end on_nl on_ignored_nl UNK on_const on_comma on_symbeg UNK on_nl end on_nl on_ignored_nl # There is no need to run Chef again if it converges
UNK on_const on_comma on_symbeg UNK on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK UNK on_op # If we reached this point then Chef never converged! Error.
def guest_paths on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK UNK on_op UNK on_op UNK UNK on_int UNK UNK on_nl end # Extracts only the remote paths from a list of folders
