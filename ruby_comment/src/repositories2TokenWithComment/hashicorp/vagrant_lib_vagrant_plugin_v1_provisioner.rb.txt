UNK UNK on_nl UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK UNK UNK UNK UNK # This is the base class for a provisioner for the V1 API. A provisioner # is primarily responsible for installing software on a Vagrant guest.
UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK UNK UNK UNK UNK on_ignored_nl UNK UNK # The environment which provisioner is running in. This is the # action environment, not a Vagrant::Environment.
UNK UNK UNK on_nl on_ignored_nl UNK UNK UNK UNK UNK UNK UNK on_ignored_nl UNK UNK UNK on_nl UNK UNK UNK # The configuration for this provisioner. This will be an instance of # the `Config` class which is part of the provisioner.
UNK UNK UNK UNK on_nl end on_nl on_ignored_nl UNK UNK on_nl end on_nl on_ignored_nl UNK UNK on_nl end on_nl on_ignored_nl # This method is expected to return a class that is used for # configuring the provisioner. This return value is expected to be # a subclass of {Config}. # # @return [Config]
UNK UNK on_nl end on_nl on_ignored_nl UNK UNK on_nl end on_nl on_ignored_nl UNK UNK on_nl end on_nl end on_nl end # This is the method called to "prepare" the provisioner. This is called # before any actions are run by the action runner (see {Vagrant::Actions::Runner}). # This can be used to setup shared folders, forward ports, etc. Whatever is # necessary on a "meta" level. # # No return value is expected.
UNK UNK on_nl end on_nl on_ignored_nl UNK UNK on_nl end on_nl end on_nl end on_nl end on_nl end on_nl EMP # This is the method called to provision the system. This method # is expected to do whatever necessary to provision the system (create files, # SSH, etc.)
UNK UNK on_nl end on_nl end on_nl end on_nl end on_nl end on_nl EMP EMP EMP EMP EMP EMP EMP # This is the method called to when the system is being destroyed # and allows the provisioners to engage in any cleanup tasks necessary.
