UNK on_const on_nl UNK UNK on_lparen UNK on_comma env on_rparen on_ignored_nl on_ivar on_op UNK on_nl on_ivar on_op on_const on_op on_const # This action takes the `:plugin_name` variable in the environment # and installs it using the RubyGems API.
UNK on_op UNK on_nl UNK on_op on_tstring_beg on_tstring_content UNK UNK UNK on_tstring_content on_tstring_end UNK UNK on_nl env on_lbracket on_symbeg UNK # Install the gem
on_ivar on_op plugin_spec on_period UNK on_nl on_ignored_nl env on_lbracket on_symbeg UNK on_rbracket on_period UNK on_lparen on_const on_period UNK on_lparen on_tstring_beg # Record it so we can uninstall if something goes wrong
env on_lbracket on_symbeg UNK on_rbracket on_period UNK on_lparen on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_label plugin_spec on_period # Tell the user
post_install_message on_op plugin_spec on_period post_install_message on_nl UNK post_install_message on_nl UNK post_install_message on_period UNK on_lparen on_const on_rparen on_nl post_install_message on_op post_install_message # If the plugin's spec includes a post-install message display it
on_ivar on_period UNK on_lparen env on_rparen on_nl end on_nl on_ignored_nl UNK UNK on_lparen env on_rparen on_ignored_nl UNK on_ivar on_nl UNK # Continue
UNK on_ivar on_nl UNK on_op env on_period UNK on_nl UNK on_period UNK on_lparen on_symbeg UNK on_rparen on_nl UNK on_lbracket on_symbeg # If any error happens, we uninstall it and remove it from # the state file. We can only do this if we successfully installed # the gem in the first place.
