def UNK on_lparen UNK on_comma UNK on_comma UNK on_rparen on_ignored_nl if on_op UNK on_lparen on_ivar on_rparen on_nl on_ivar on_op on_const # @param [String] username - Vagrant Cloud username # @param [String] access_token - Vagrant Cloud Token used to authenticate # @param [String] vagrant_cloud_server - Vagrant Cloud server to make API request # @return [VagrantCloud::Account]
def UNK on_lparen env on_comma options on_rparen on_ignored_nl if on_op UNK on_lparen on_ivar on_rparen on_nl on_ivar on_op on_const on_period UNK # @param [Vagrant::Environment] env # @param [Hash] options # @returns [VagrantPlugins::CloudCommand::Client]
env on_period ui on_period UNK on_lparen on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl # Let the user know what is going on.
if on_const on_period UNK on_op on_const on_op on_const on_nl env on_period ui on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg on_const on_period # If it is a private cloud installation, show that
if options on_lbracket on_symbeg UNK on_rbracket on_nl on_ivar on_period UNK on_op options on_lbracket on_symbeg UNK on_rbracket on_nl env on_period ui # Ask for the username
on_ignored_nl def UNK on_lparen env on_comma UNK on_comma results on_comma UNK on_rparen on_ignored_nl columns on_op UNK on_period UNK on_lparen on_lbrace # =================================================== # Modified from https://stackoverflow.com/a/28685559 # for printing arrays of hashes in formatted tables # ===================================================
def UNK on_lparen env on_comma UNK on_comma results on_comma UNK on_rparen on_ignored_nl columns on_op UNK on_period UNK on_lparen on_lbrace on_rbrace # @param [Vagrant::Environment] - env # @param [Hash] - column_labels - A hash of key values for table labels (i.e. {:col1=>"COL1", :col2=>"COL2"}) # @param [Array] - results - An array of hashes # @param [Array] - to_jrust_keys - An array of column keys that should be right justified (default is left justified for all columns)
on_ignored_nl def UNK on_lparen results on_comma env on_rparen on_ignored_nl results on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl if # =================================================== # ===================================================
def UNK on_lparen results on_comma env on_rparen on_ignored_nl results on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl if results # Takes a "mostly" flat key=>value hash from Vagrant Cloud # and prints its results in a list # # @param [Hash] - results - A response hash from vagrant cloud # @param [Vagrant::Environment] - env
results on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl if results on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl UNK on_op # TODO: remove other description fields? Maybe leave "short"?
def UNK on_lparen UNK on_rparen on_ignored_nl UNK UNK on_period UNK on_period UNK on_lparen UNK on_tstring_content UNK on_comma on_tstring_beg on_tstring_content on_tstring_end # Converts a string of numbers into a formatted number # # 1234 -> 1,234 # # @param [String] - download_string
def UNK on_lparen UNK on_comma UNK on_comma UNK on_comma env on_rparen on_ignored_nl result on_op on_lbracket on_rbracket on_nl UNK on_period UNK # @param [Array] search_results - Box search results from Vagrant Cloud # @param [String,nil] short - determines if short version will be printed # @param [String,nil] json - determines if json version will be printed # @param [Vagrant::Environment] - env
