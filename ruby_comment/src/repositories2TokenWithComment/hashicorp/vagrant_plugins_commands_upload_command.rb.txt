source on_op source on_period UNK on_lparen UNK on_tstring_content UNK on_comma on_tstring_beg on_tstring_end on_rparen on_nl destination on_op on_const on_period UNK on_lparen # NOTE: We do this to handle paths on Windows like: "..\space dir\" # because the final separater acts to escape the quote and ends up # in the source value.
if on_const on_period UNK on_lparen source on_rparen on_op on_op source on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_op # If the source is a directory, attach a `/.` to the end so we # upload the contents to the destination instead of within a # folder at the destination
on_int on_nl end on_nl on_ignored_nl UNK UNK on_lparen machine on_comma options on_rparen on_ignored_nl if on_op options on_lbracket on_symbeg compression_type on_rbracket # Success, exit status 0
UNK UNK on_lparen machine on_comma options on_rparen on_ignored_nl if on_op options on_lbracket on_symbeg compression_type on_rbracket on_nl if machine on_period guest # Setup compression options and validate host and guest have capability # to handle compression # # @param [Vagrant::Machine] machine Vagrant guest machine # @param [Hash] options Command options
UNK UNK on_lparen path on_rparen on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_op on_const on_period UNK on_lparen on_lbracket on_tstring_beg on_tstring_content # Compress path using zip into temporary file # # @param [String] path Path to compress # @return [String] path to compressed file
UNK UNK on_lparen path on_rparen on_ignored_nl tarfile on_op on_const on_period UNK on_lparen on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end # Compress path using tar and gzip into temporary file # # @param [String] path Path to compress # @return [String] path to compressed file
