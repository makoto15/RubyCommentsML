UNK on_const on_nl on_ignored_nl on_cvar on_op on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl UNK UNK # This module provides a `safe_exec` method which is a drop-in # replacement for `Kernel.exec` which addresses a specific issue # which manifests on OS X 10.5 (GH-51) and perhaps other operating systems. # This issue causes `exec` to fail if there is more than one system # thread. In that case, `safe_exec` automatically falls back to # forking.
UNK on_op UNK UNK on_nl UNK on_op on_const on_op on_const if UNK on_lparen on_const on_op on_const on_rparen on_nl UNK on_op # Create a list of things to rescue from. Since this is OS # specific, we need to do some defined? checks here to make # sure they exist.
on_cvar on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_cvar on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg command on_period UNK on_embexpr_end # Re-generate strings to ensure common encoding
UNK if UNK on_nl on_ignored_nl UNK on_op UNK on_nl UNK on_nl end on_nl end on_nl end on_nl end on_nl end # We retried already, raise the issue and be done
UNK on_op UNK on_nl UNK on_nl end on_nl end on_nl end on_nl end on_nl end on_nl EMP EMP EMP EMP # The error manifested itself, retry with a fork.
