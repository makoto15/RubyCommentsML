on_const on_op on_lbrace on_ignored_nl on_label on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_comma on_ignored_nl on_label on_tstring_beg on_tstring_content on_tstring_end on_period freeze on_comma on_ignored_nl # Name mapping for integration services for id # https://social.technet.microsoft.com/Forums/de-DE/154917de-f3ca-4b1e-b3f8-23dd4b4f0f06/getvmintegrationservice-sprachabhngig?forum=powershell_de
UNK on_symbeg vm_id on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op UNK on_nl end on_nl on_ignored_nl def UNK # @return [String] VM ID
def UNK on_nl on_op on_op execute on_lparen on_symbeg UNK on_rparen on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl end on_nl on_ignored_nl def # @return [Boolean] Supports VMCX
def execute on_lparen path on_comma options on_op on_lbrace on_rbrace on_rparen on_ignored_nl if path on_period UNK on_lparen on_const on_rparen on_nl path # Execute a PowerShell command and process the results # # @param [String] path Path to PowerShell script # @param [Hash] options Options to pass to command # # @return [Object, nil] If the command returned JSON content # it will be parsed and returned, otherwise # nil will be returned
r on_period UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl r on_period UNK on_period UNK # We only want unix-style line endings within Vagrant
UNK on_const on_op on_const on_comma on_ignored_nl on_label path on_comma on_ignored_nl on_label UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl end on_nl # We have some error data.
UNK UNK if on_op UNK on_nl UNK on_const on_period UNK on_lparen UNK on_lbracket UNK on_rbracket on_rparen on_nl end on_nl on_ignored_nl # Nothing
def UNK on_nl execute on_lparen on_symbeg UNK on_comma on_label vm_id on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl execute on_lparen # Fetch current state of the VM # # @return [Hash<state, status>]
def UNK on_nl execute on_lparen on_symbeg UNK on_comma on_label vm_id on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen path on_rparen # Delete the VM # # @return [nil]
def UNK on_lparen path on_rparen on_ignored_nl execute on_lparen on_symbeg UNK on_comma on_label vm_id on_comma on_label path on_rparen on_nl end on_nl # Export the VM to the given path # # @param [String] path Path for export # @return [nil]
def UNK on_nl execute on_lparen on_symbeg UNK on_comma on_label vm_id on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl execute on_lparen # Get the IP address of the VM # # @return [Hash<ip>]
def UNK on_nl execute on_lparen on_symbeg UNK on_comma on_label vm_id on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl execute on_lparen # Get the MAC address of the VM # # @return [Hash<mac>]
def UNK on_nl execute on_lparen on_symbeg UNK on_comma on_label vm_id on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl execute on_lparen # Resume the VM from suspension # # @return [nil]
def UNK on_nl execute on_lparen on_symbeg UNK on_comma on_label vm_id on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl execute on_lparen # Start the VM # # @return [nil]
def UNK on_nl execute on_lparen on_symbeg UNK on_comma on_label vm_id on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl execute on_lparen # Stop the VM # # @return [nil]
def UNK on_nl execute on_lparen on_symbeg UNK on_comma on_label vm_id on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen options on_rparen # Suspend the VM # # @return [nil]
def UNK on_lparen options on_rparen on_ignored_nl execute on_lparen on_symbeg UNK on_comma options on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen # Import a new VM # # @param [Hash] options Configuration options # @return [Hash<id>] New VM ID
def UNK on_lparen UNK on_rparen on_ignored_nl execute on_lparen on_symbeg UNK on_comma on_label vm_id on_comma on_label UNK on_rparen on_nl end on_nl # Set the VLAN ID # # @param [String] vlan_id VLAN ID # @return [nil]
def UNK on_lparen UNK on_rparen on_ignored_nl execute on_lparen on_symbeg UNK on_comma on_label vm_id on_comma on_label UNK on_rparen on_nl end on_nl # Set the VM adapter MAC address # # @param [String] mac_addr MAC address # @return [nil]
def UNK on_lparen snapshot_name on_rparen on_ignored_nl execute on_lparen on_symbeg UNK on_comma on_label vm_id on_comma on_label snapshot_name on_rparen on_nl end on_nl # Create a new snapshot with the given name # # @param [String] snapshot_name Name of the new snapshot # @return [nil]
def UNK on_lparen snapshot_name on_rparen on_ignored_nl execute on_lparen on_symbeg UNK on_comma on_label vm_id on_comma on_label snapshot_name on_rparen on_nl end on_nl # Restore the given snapshot # # @param [String] snapshot_name Name of snapshot to restore # @return [nil]
def UNK on_nl UNK on_op execute on_lparen on_symbeg UNK on_comma on_label vm_id on_rparen on_nl UNK on_period UNK on_lbrace on_op UNK # Get list of current snapshots # # @return [Array<String>] snapshot names
def UNK on_lparen snapshot_name on_rparen on_ignored_nl execute on_lparen on_symbeg UNK on_comma on_label vm_id on_comma on_label snapshot_name on_rparen on_nl end on_nl # Delete snapshot with the given name # # @param [String] snapshot_name Name of snapshot to delete # @return [nil]
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK UNK on_op UNK on_comma UNK on_op on_ignored_nl UNK on_op on_lbrace on_label # Enable or disable VM integration services # # @param [Hash] config Integration services to enable or disable # @return [nil] # @note Keys in the config hash will be remapped if found in the # INTEGRATION_SERVICES_MAP. If they are not, the name will # be passed directly. This allows new integration services # to configurable even if Vagrant is not aware of them.
def UNK on_lparen UNK on_rparen on_ignored_nl execute on_lparen on_symbeg UNK on_comma on_label vm_id on_comma on_label UNK on_rparen on_nl end on_nl # Set the name of the VM # # @param [String] vmname Name of the VM # @return [nil]
UNK if UNK on_op UNK on_nl UNK on_op on_tstring_beg on_tstring_content UNK UNK UNK on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl UNK # If the value is a TrueClass assume switch
UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_op on_lbrace on_ignored_nl on_label on_lbracket on_symbeg UNK on_comma # Always have a stop error action for failures
UNK on_op on_lbrace on_ignored_nl on_label on_lbracket on_symbeg UNK on_comma on_symbeg UNK on_comma on_symbeg UNK on_rbracket on_comma on_ignored_nl on_label UNK on_nl # Include our module path so we can nicely load helper modules
