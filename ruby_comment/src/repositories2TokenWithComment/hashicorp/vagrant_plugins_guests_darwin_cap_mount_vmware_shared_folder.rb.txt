UNK UNK on_period UNK on_lparen UNK on_rparen on_ignored_nl if UNK on_op UNK on_lbracket on_symbeg machine on_rbracket on_op UNK on_op UNK # Entry point for hook to called delayed actions # which finalizing the synced folders setup on # the guest
UNK UNK on_period UNK on_nl if on_op on_ivar on_nl on_ivar on_op UNK UNK on_nl end on_nl on_ivar on_nl end on_nl # @return [Hash] storage location for delayed actions
on_ignored_nl UNK UNK on_period UNK on_lparen machine on_comma UNK on_comma guestpath on_comma UNK on_rparen on_ignored_nl on_ivar on_op on_const on_period UNK # we seem to be unable to ask 'mount -t vmhgfs' to mount the roots # of specific shares, so instead we symlink from what is already # mounted by the guest tools # (ie. the behaviour of the VMware_fusion provider prior to 0.8.x)
on_ivar on_op on_const on_period UNK UNK on_op UNK on_comma UNK on_op UNK on_lbracket UNK on_rbracket on_op UNK UNK UNK on_comma # Use this variable to determine which machines # have been registered with after hook
if comm on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_op on_const on_period UNK on_lparen guestpath on_rparen on_period UNK # check if we are dealing with an APFS root container
if guestpath on_nl if comm on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg guestpath on_embexpr_end on_tstring_content on_tstring_end on_rparen on_nl comm on_period sudo # Remove existing symlink or directory if defined
UNK on_op on_const on_period UNK on_lparen guestpath on_rparen on_nl if UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl comm on_period sudo on_lparen # create intermediate directories if needed
if on_op comm on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_tstring_end on_rparen on_nl on_ivar on_lbracket machine on_period id # Check if the line is already defined. If so, bail since we are done
if on_ivar on_lbracket machine on_period id on_rbracket on_lbracket on_symbeg UNK on_rbracket on_period UNK on_nl UNK on_lbracket machine on_period id on_rbracket # If we haven't already added our hook to apply firmlinks, do it now
comm on_period sudo on_lparen on_tstring_beg on_tstring_content on_embexpr_beg UNK on_period UNK on_embexpr_end on_tstring_content on_tstring_end on_rparen on_nl if on_ivar on_lbracket on_symbeg UNK # Write out the synthetic file
comm on_period sudo on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl end on_nl end on_nl on_ivar on_lbracket machine on_period id # Re-bootstrap the root container to pick up firmlink updates
UNK UNK on_period UNK on_lparen firmlink on_rparen on_ignored_nl if on_op on_ivar on_nl if on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end # Check if firmlink is provided by the system # # @param [String] firmlink Firmlink path # @return [Boolean]
UNK UNK on_period UNK on_nl UNK on_period UNK on_lparen on_op UNK on_lparen on_symbeg UNK on_rparen on_rparen on_nl end on_nl end # @private # Reset the cached values for capability. This is not considered a public # API and should only be used for testing.
