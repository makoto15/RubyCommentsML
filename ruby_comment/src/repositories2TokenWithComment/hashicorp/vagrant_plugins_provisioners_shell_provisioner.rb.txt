UNK if on_op config on_period path on_op on_op config on_period UNK on_nl on_ignored_nl UNK on_ivar on_period config on_period UNK on_period # In cases where the connection is just being reset # bail out before attempting to do any actual provisioning
def UNK on_lparen type on_comma data on_rparen on_ignored_nl if UNK on_symbeg UNK on_comma on_symbeg UNK UNK on_period UNK on_lparen type # This handles outputting the communication data back to the UI
UNK on_op type on_op on_symbeg UNK on_op on_symbeg UNK on_op on_symbeg UNK on_nl on_ignored_nl data on_op data on_period UNK on_nl # Output the data with the proper color based on the stream.
data on_op data on_period UNK on_nl UNK if data on_period empty? on_nl on_ignored_nl UNK on_op on_lbrace on_rbrace on_nl UNK UNK # Clear out the newline since we add one
def UNK on_lparen args on_rparen on_ignored_nl env on_op config on_period env on_period UNK on_lbrace on_op k on_comma v on_op on_tstring_beg # This is the provision method called if SSH is what is running # on the remote end, which assumes a POSIX-style host.
on_ivar on_period UNK on_period UNK do on_op comm on_op on_ignored_nl info on_op UNK on_nl UNK on_lparen on_label on_const on_op on_const # Upload the script to the machine
info on_op UNK on_nl UNK on_lparen on_label on_const on_op on_const on_op on_const on_comma on_label UNK on_comma on_label UNK on_rparen do # Reset upload path permissions for the current ssh user
comm on_period UNK on_lparen on_ignored_nl command on_comma on_ignored_nl on_label config on_period UNK on_comma on_ignored_nl on_label on_symbeg UNK on_nl on_rparen do # Execute it with sudo
def UNK on_lparen args on_rparen on_ignored_nl UNK do on_op path on_op on_ignored_nl on_ivar on_period UNK on_period UNK do on_op comm # This is the provision method called if Windows OpenSSH is what is running # on the remote end, which assumes a non-POSIX-style host.
on_ivar on_period UNK on_period UNK do on_op comm on_op on_ignored_nl env on_op config on_period env on_period UNK on_lbrace on_op k # Upload the script to the machine
shell_args on_op config on_period powershell_args on_nl shell_args on_op on_tstring_beg on_tstring_content on_tstring_end if config on_period powershell_args on_op on_regexp_beg on_tstring_content on_regexp_end on_nl # Copy powershell_args from configuration
shell_args on_op on_tstring_beg on_tstring_content on_tstring_end if config on_period powershell_args on_op on_regexp_beg on_tstring_content on_regexp_end on_nl shell_args on_op on_tstring_beg on_tstring_content on_tstring_end if # For PowerShell scripts bypass the execution policy unless already specified
shell_args on_op on_tstring_beg on_tstring_content on_tstring_end if config on_period powershell_args on_op on_regexp_beg on_tstring_content on_regexp_end on_nl command on_op on_tstring_beg on_embexpr_beg env on_embexpr_end # CLIXML output is kinda useless, especially on non-windows hosts
info on_op UNK on_nl UNK on_lparen on_label on_const on_op on_const on_op on_const on_comma on_label UNK on_comma on_label UNK on_rparen do # Reset upload path permissions for the current ssh user
comm on_period UNK on_lparen on_ignored_nl command on_comma on_ignored_nl on_label on_symbeg UNK on_comma on_ignored_nl on_label on_symbeg UNK on_nl on_rparen do on_op # Execute it with sudo
def UNK on_lparen args on_rparen on_ignored_nl if on_ivar on_period guest on_period UNK on_lparen on_symbeg UNK on_rparen on_nl on_ivar on_period guest # This provisions using WinRM, which assumes a PowerShell # console on the other side.
UNK on_op UNK on_lparen upload_path on_comma on_const on_rparen on_nl on_ignored_nl comm on_period UNK on_lparen path on_period to_s on_comma UNK on_rparen # Make sure that the upload path has an extension, since # having an extension is critical for Windows execution
comm on_period UNK on_lparen path on_period to_s on_comma UNK on_rparen on_nl on_ignored_nl env on_op config on_period env on_period UNK on_lbrace # Upload it
env on_op config on_period env on_period UNK on_lbrace on_op k on_comma v on_op on_tstring_beg on_tstring_content on_embexpr_beg k on_embexpr_end on_tstring_content on_embexpr_beg # Build the environment
exec_path on_op UNK on_nl exec_path on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl exec_path on_op on_tstring_beg # Calculate the path that we'll be executing
shell_args on_op config on_period powershell_args on_nl on_ignored_nl shell_args on_op on_tstring_beg on_tstring_content on_tstring_end if config on_period powershell_args on_op on_regexp_beg on_tstring_content on_regexp_end # Copy powershell_args from configuration
shell_args on_op on_tstring_beg on_tstring_content on_tstring_end if config on_period powershell_args on_op on_regexp_beg on_tstring_content on_regexp_end on_nl on_ignored_nl shell_args on_op on_tstring_beg on_tstring_content on_tstring_end # For PowerShell scripts bypass the execution policy unless already specified
shell_args on_op on_tstring_beg on_tstring_content on_tstring_end if config on_period powershell_args on_op on_regexp_beg on_tstring_content on_regexp_end on_nl on_ignored_nl command on_op on_tstring_beg on_tstring_content on_embexpr_beg # CLIXML output is kinda useless, especially on non-windows hosts
if on_op env on_period empty? on_nl command on_op on_tstring_beg on_embexpr_beg env on_embexpr_end on_tstring_content on_embexpr_beg command on_embexpr_end on_tstring_end on_nl end on_nl # Append the environment
comm on_period UNK on_lparen command on_comma on_lbrace on_label config on_period UNK on_comma on_label config on_period UNK on_rbrace on_rparen do on_op # Execute it with sudo
def UNK on_lparen UNK on_comma UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen on_ignored_nl on_tstring_beg on_embexpr_beg UNK on_embexpr_end on_embexpr_beg UNK on_period UNK # Quote and escape strings for shell execution, thanks to Capistrano.
def UNK on_nl ext on_op UNK on_nl script on_op UNK on_nl on_ignored_nl if config on_period UNK on_nl download_path on_op on_ivar # This method yields the path to a script to upload and execute # on the remote server. This method will properly clean up the # script file if needed.
UNK on_op on_ivar on_period env on_period UNK on_nl ext on_op on_const on_period extname on_lparen config on_period path on_rparen on_nl script # Just yield the path to that file...
if on_op config on_period UNK on_op on_ivar on_period config on_period UNK on_period guest on_op on_symbeg UNK on_nl UNK on_ignored_nl script # Replace Windows line endings with Unix ones unless binary file # or we're running on Windows.
file on_op on_const on_period UNK on_lparen UNK on_tstring_beg on_tstring_content on_tstring_end on_comma ext UNK on_rparen on_nl on_ignored_nl file on_period UNK on_nl # Otherwise we have an inline script, we need to Tempfile it, # and handle it specially...
file on_period UNK on_nl on_ignored_nl UNK on_ignored_nl file on_period UNK on_lparen script on_rparen on_nl file on_period UNK on_nl file on_period # Unless you set binmode, on a Windows host the shell script will # have CRLF line endings instead of LF line endings, causing havoc # when the guest executes it. This fixes [GH-1181].
