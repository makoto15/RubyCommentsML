on_const on_op UNK on_period UNK on_nl on_ignored_nl def self on_period UNK on_lparen machine on_comma UNK on_rparen on_ignored_nl UNK on_lbrace on_rbrace # The max amount of disks that can be attached to a single device in a controller
def self on_period UNK on_lparen machine on_comma UNK on_rparen on_ignored_nl UNK on_lbrace on_rbrace if UNK on_period UNK on_nl on_ignored_nl UNK # @param [Vagrant::Machine] machine # @param [VagrantPlugins::Kernel_V2::VagrantConfigDisk] defined_disks # @return [Hash] configured_disks - A hash of all the current configured disks
UNK on_const on_op on_const on_op on_const on_nl end on_nl on_ignored_nl machine on_period ui on_period UNK on_lparen on_const on_period t on_lparen # you can only attach up to 30 disks per controller, INCLUDING the primary disk
machine on_period ui on_period UNK on_lparen on_const on_period t on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_label disk on_period name on_rparen on_rparen # TODO: Write me
machine on_period ui on_period UNK on_lparen on_const on_period t on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_label disk on_period name on_rparen on_rparen # TODO: Write me
def self on_period UNK on_lparen machine on_comma disk on_comma UNK on_rparen on_ignored_nl current_disk on_op UNK on_nl if disk on_period UNK # @param [Vagrant::Machine] machine - the current machine # @param [Config::Disk] disk - the current disk to configure # @param [Array] all_disks - A list of all currently defined disks in VirtualBox # @return [Hash] current_disk - Returns the current disk. Returns nil if it doesn't exist
UNK on_op machine on_period provider on_period driver on_period UNK on_nl UNK on_op UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl on_ignored_nl # Ensure we grab the proper primary disk # We can't rely on the order of `all_disks`, as they will not # always come in port order, but primary is always Port 0 Device 0.
def self on_period UNK on_lparen machine on_comma disk on_comma UNK on_rparen on_ignored_nl disk_metadata on_op on_lbrace on_rbrace on_nl on_ignored_nl current_disk on_op # Handles all disk configs of type `:disk` # # @param [Vagrant::Machine] machine - the current machine # @param [Config::Disk] disk - the current disk to configure # @param [Array] all_disks - A list of all currently defined disks in VirtualBox # @return [Hash] - disk_metadata
current_disk on_op UNK on_lparen machine on_comma disk on_comma UNK on_rparen on_nl on_ignored_nl if on_op current_disk on_nl disk_metadata on_op UNK on_lparen # Grab the existing configured disk, if it exists
if on_op current_disk on_nl disk_metadata on_op UNK on_lparen machine on_comma disk on_rparen on_nl UNK UNK on_lparen machine on_comma disk on_comma # Configure current disk
disk_metadata on_op UNK on_lparen machine on_comma disk on_rparen on_nl UNK UNK on_lparen machine on_comma disk on_comma current_disk on_rparen on_nl disk_metadata # create new disk and attach
on_ignored_nl disk_info on_op machine on_period provider on_period driver on_period UNK on_lparen current_disk on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_rparen on_nl if # TODO: What if it needs to be resized?
def self on_period UNK on_lparen machine on_comma disk_config on_comma defined_disk on_rparen on_ignored_nl UNK on_op on_const on_op on_const on_op on_const on_period # Check to see if current disk is configured based on defined_disks # # @param [Kernel_V2::VagrantConfigDisk] disk_config # @param [Hash] defined_disk # @return [Boolean]
def self on_period UNK on_lparen machine on_comma disk_config on_rparen on_ignored_nl machine on_period ui on_period UNK on_lparen on_const on_period t on_lparen # Creates and attaches a disk to a machine # # @param [Vagrant::Machine] machine # @param [Kernel_V2::VagrantConfigDisk] disk_config
UNK on_op disk_config on_period UNK on_lbracket on_symbeg UNK on_rbracket if disk_config on_period UNK on_nl on_ignored_nl UNK on_op machine on_period provider # NOTE: At the moment, there are no provider specific configs for VirtualBox # but we grab it anyway for future use.
def self on_period UNK on_lparen machine on_rparen on_ignored_nl UNK on_op machine on_period provider on_period driver on_period UNK on_nl dsk_info on_op # Finds the next available port # # SATA Controller-ImageUUID-0-0 (sub out ImageUUID) # - Controller: SATA Controller # - Port: 0 # - Device: 0 # # Note: Virtualbox returns the string above with the port and device info # disk_info = key.split("-") # port = disk_info[2] # device = disk_info[3] # # @param [Vagrant::Machine] machine # @return [Hash] dsk_info - The next available port and device on a given controller
on_const on_period warn on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_const on_op on_const on_op on_const on_nl end on_nl on_ignored_nl dsk_info # This likely only occurs if additional disks have been added outside of Vagrant configuration
def self on_period UNK on_lparen machine on_comma disk_config on_comma defined_disk on_rparen on_ignored_nl machine on_period ui on_period UNK on_lparen on_const on_period # @param [Vagrant::Machine] machine # @param [Config::Disk] disk_config - the current disk to configure # @param [Hash] defined_disk - current disk as represented by VirtualBox # @return [Hash] - disk_metadata
disk_info on_op machine on_period provider on_period driver on_period UNK on_lparen defined_disk on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_rparen on_nl original_disk on_op # grab disk to be resized port and device number
original_disk on_op defined_disk on_nl backup_disk_location on_op on_tstring_beg on_embexpr_beg original_disk on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_embexpr_end on_tstring_content on_tstring_end on_nl on_ignored_nl vdi_disk_file # original disk information in case anything goes wrong during clone/resize
vdi_disk_file on_op machine on_period provider on_period driver on_period UNK on_lparen defined_disk on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_rparen on_nl machine on_period # clone disk to vdi formatted disk
machine on_period provider on_period driver on_period UNK on_lparen vdi_disk_file on_comma disk_config on_period size on_period UNK on_rparen on_nl on_ignored_nl UNK on_ignored_nl # resize vdi
on_ignored_nl machine on_period provider on_period driver on_period UNK on_lparen disk_info on_lbracket on_symbeg port on_rbracket on_comma disk_info on_lbracket on_symbeg UNK on_rbracket # Danger Zone
machine on_period provider on_period driver on_period UNK on_lparen disk_info on_lbracket on_symbeg port on_rbracket on_comma disk_info on_lbracket on_symbeg UNK on_rbracket on_rparen # remove and close original volume
on_const on_period warn on_lparen on_tstring_beg on_tstring_content on_embexpr_beg defined_disk on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_embexpr_end on_tstring_end on_rparen on_nl on_const on_period UNK # Create a backup of the original disk if something goes wrong
machine on_period provider on_period driver on_period UNK on_lparen defined_disk on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_rparen on_nl on_ignored_nl UNK on_op machine # we have to close here, otherwise we can't re-clone after # resizing the vdi disk
UNK on_op machine on_period provider on_period driver on_period UNK on_lparen vdi_disk_file on_rparen on_nl machine on_period provider on_period driver on_period UNK # clone back to original vmdk format and attach resized disk
on_const on_period UNK on_lparen backup_disk_location on_comma on_label UNK on_rparen on_nl end on_nl on_ignored_nl machine on_period provider on_period driver on_period UNK # Remove backup disk file if all goes well
machine on_period provider on_period driver on_period UNK on_lparen vdi_disk_file on_rparen on_nl on_ignored_nl UNK on_op machine on_period provider on_period driver on_period # Remove cloned resized volume format
UNK on_op machine on_period provider on_period driver on_period UNK on_period UNK on_lbrace on_op UNK on_op UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end # Get new updated disk UUID for vagrant disk_meta file
def self on_period UNK on_lparen machine on_comma disk_info on_comma backup_disk_location on_comma original_disk on_comma vdi_disk_file on_rparen on_ignored_nl UNK on_ignored_nl on_const on_period # Recovery method for when an exception occurs during the process of resizing disks # # It attempts to move back the backup disk into place, and reattach it to the guest before # raising the original error # # @param [Vagrant::Machine] machine # @param [Hash] disk_info - The disk device and port number to attach back to # @param [String] backup_disk_location - The place on disk where vagrant made a backup of the original disk being resized # @param [Hash] original_disk - The disk information from VirtualBox # @param [String] vdi_disk_file - The place on disk where vagrant made a clone of the original disk being resized
on_const on_period UNK on_lparen backup_disk_location on_comma original_disk on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_comma on_label UNK on_rparen on_nl machine on_period provider # move backup to original name
machine on_period provider on_period driver on_period on_ignored_nl UNK on_lparen disk_info on_lbracket on_symbeg port on_rbracket on_comma disk_info on_lbracket on_symbeg UNK on_rbracket # Attach disk
if vdi_disk_file on_nl machine on_period provider on_period driver on_period UNK on_lparen vdi_disk_file on_rparen on_nl end on_nl on_ignored_nl machine on_period ui # Remove cloned disk if still hanging around
machine on_period ui on_period warn on_lparen on_const on_period t on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_rparen on_nl UNK on_op UNK on_nl # We recovered!
