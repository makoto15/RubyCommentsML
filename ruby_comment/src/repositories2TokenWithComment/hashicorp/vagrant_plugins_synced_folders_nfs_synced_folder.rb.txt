UNK on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_symbeg UNK on_rparen on_nl UNK on_op on_const on_period UNK # This synced folder requires that two keys be set on the environment # within the middleware sequence: # # - `:nfs_host_ip` - The IP of where to mount the NFS folder from. # - `:nfs_machine_ip` - The IP of the machine where the NFS folder # will be mounted. #
if on_op machine on_period UNK on_period UNK on_period UNK on_nl return UNK on_nl end on_nl return UNK if machine on_period # If the machine explicitly said NFS is not supported, then # it isn't supported.
end on_nl on_ignored_nl def UNK on_lparen machine on_comma UNK on_comma UNK on_rparen on_ignored_nl UNK on_const on_op on_const on_op on_const if # Nothing is necessary to do before VM boot.
UNK on_period UNK UNK on_op id on_comma opts on_op UNK on_lparen machine on_comma opts on_rparen UNK on_nl on_ignored_nl export_folders on_op # Prepare the folder, this means setting up various options # and such on the folder itself.
export_folders on_op UNK on_period UNK on_nl export_folders on_period UNK on_period UNK UNK on_op id on_op on_ignored_nl opts on_op export_folders on_lbracket # Determine what folders we'll export
if on_op export_folders on_period UNK on_nl UNK on_period UNK UNK on_ignored_nl UNK on_ignored_nl machine on_period UNK on_period UNK on_lparen on_tstring_beg # Update the exports when there are actually exports [GH-4148]
UNK on_period UNK UNK on_ignored_nl UNK on_ignored_nl machine on_period UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen UNK on_ignored_nl machine # Export the folders. We do this with a class-wide lock because # NFS exporting often requires sudo privilege and we don't want # overlapping input requests. [GH-2680]
machine on_period ui on_period UNK on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl UNK on_op UNK UNK on_nl # Mount
UNK on_op UNK UNK on_nl UNK on_period UNK UNK on_op id on_comma opts on_op on_ignored_nl UNK on_lbracket id on_rbracket on_op # Only mount folders that have a guest path specified.
if machine on_period guest on_period UNK on_lparen on_symbeg UNK on_rparen on_nl machine on_period guest on_period capability on_lparen on_symbeg UNK on_rparen # Mount them!
UNK on_period UNK on_lparen on_tstring_beg on_tstring_content UNK UNK on_period UNK UNK on_tstring_end on_rparen on_nl machine on_period UNK on_period UNK on_period # Prune any of the unused machines
opts on_lbracket on_symbeg UNK on_rbracket on_op on_const on_period UNK on_lparen opts on_lbracket on_symbeg UNK on_rbracket on_rparen on_period UNK on_nl end # We use a CRC32 to generate a 32-bit checksum so that the # fsid is compatible with both old and new kernels.
def UNK on_lparen machine on_comma UNK on_comma opts on_rparen on_ignored_nl key on_op on_tstring_beg on_tstring_content UNK UNK UNK on_tstring_end on_period UNK # Prepares the UID/GID settings for a single folder.
UNK on_op opts on_period UNK on_lparen key on_rparen on_op opts on_lbracket key on_rbracket on_op machine on_period UNK on_period UNK on_period # The options on the hash get priority, then the default # values
UNK on_op on_const on_period UNK on_lparen opts on_lbracket on_symbeg UNK on_rbracket on_rparen on_nl return UNK on_period UNK on_lparen UNK on_rparen # Get UID/GID from folder if we've made it this far # (value == :auto)
