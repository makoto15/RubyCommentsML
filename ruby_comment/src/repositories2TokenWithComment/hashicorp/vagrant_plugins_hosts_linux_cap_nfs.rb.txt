UNK on_op env on_period UNK on_period UNK on_lparen on_symbeg UNK on_rparen on_nl UNK on_op env on_period UNK on_period UNK on_lparen # Get some values we need before we do anything
UNK on_op on_const on_op on_const on_op on_const on_period UNK on_lparen UNK on_rparen on_nl on_ignored_nl UNK on_op UNK on_period UNK UNK # Create editor instance for removing invalid IDs
UNK on_op UNK on_period UNK UNK on_op UNK on_op on_ignored_nl on_tstring_beg on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_end on_nl # Build composite IDs with UID information and discover invalid entries
def self on_period UNK on_lparen folders on_rparen on_ignored_nl UNK on_op UNK UNK on_nl UNK on_op folders on_period UNK on_period UNK # Takes a hash of folders and removes any duplicate exports that # share the same hostpath to avoid duplicate entries in /etc/exports # ref: GH-4666
UNK on_op folders on_period UNK on_period UNK UNK on_op UNK on_op UNK on_lbracket on_symbeg UNK on_rbracket UNK on_nl on_ignored_nl UNK # Group by hostpath to see if there are multiple exports coming # from the same folder
UNK on_period UNK UNK on_op path on_comma group on_op on_ignored_nl if group on_period UNK on_op on_int on_nl UNK on_op group # We need to check that each group key only has 1 value, # and if not, check each nfs option. If all nfs options are the same # we're good, otherwise throw an exception
UNK on_op group on_period first on_lbracket on_symbeg linux__nfs_options on_rbracket on_nl on_ignored_nl if on_op group on_period UNK UNK on_op UNK on_op # if the linux nfs options aren't all the same throw an exception
UNK on_lbracket path on_rbracket on_op group on_period first on_nl end on_nl else on_ignored_nl UNK on_lbracket path on_rbracket on_op group on_period # if they're the same just pick the first one
UNK on_lbracket path on_rbracket on_op group on_period first on_nl end on_nl end on_nl UNK on_nl end on_nl on_ignored_nl def self # just return folder, there are no duplicates
remove_ids on_period UNK UNK on_op UNK on_op on_ignored_nl UNK on_period UNK on_lparen UNK on_rparen on_nl end on_nl UNK on_lparen UNK # Remove all invalid ID entries
UNK on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_period UNK on_lparen UNK on_rparen on_nl UNK on_period # Write contents out to temporary file
existing_stat on_op on_const on_period UNK on_lparen on_const on_rparen on_nl UNK on_op on_const on_period UNK on_lparen new_exports_path on_rparen on_nl if existing_stat # Ensure new file mode and uid/gid match existing file to replace
UNK on_op on_tstring_beg on_tstring_content on_tstring_end if on_op UNK on_period UNK on_op on_op UNK on_period UNK on_period UNK on_nl UNK on_op # Always force move the file to prevent overwrite prompting
UNK on_op UNK on_nl UNK on_op UNK on_nl opts on_lbracket on_symbeg linux__nfs_options on_rbracket on_period UNK UNK on_op UNK on_op on_ignored_nl # Only automatically set anonuid/anongid if they weren't # explicitly set by the user.
def self on_period UNK on_nl UNK on_period UNK on_lparen on_op UNK on_lparen on_symbeg UNK on_rparen on_rparen on_nl end on_nl end # @private # Reset the cached values for capability. This is not considered a public # API and should only be used for testing.
