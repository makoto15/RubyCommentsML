attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # The path to Chef's bin/ directory. # @return [String]
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # Arbitrary environment variables to set before running the Chef # provisioner command. # @return [String]
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # The name of the Chef project to install. This is "chef" for the Chef # Client or "chefdk" for the Chef Development Kit. Other product names # may be available as well. # @return [String]
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # Install Chef on the system if it does not exist. Default is true. # This is a trinary attribute (it can have three values): # # - true (bool) install Chef # - false (bool) do not install Chef # - "force" (string) install Chef, even if it is already installed at # the proper version # # @return [true, false, String]
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # The Chef log level. See the Chef docs for acceptable values. # @return [String, Symbol]
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # The channel from which to download Chef. Currently known values are # "current" and "stable", but more may be added in the future. The # default is "stable". # @return [String]
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl UNK UNK on_nl UNK on_nl # The version of Chef to install. If Chef is already installed on the # system, the installed version is compared with the requested version. # If they match, no action is taken. If they do not match, version of # the value specified in this attribute will be installed over top of # the existing version (a warning will be displayed). # # You can also specify "latest" (default), which will install the latest # version of Chef on the system. In this case, Chef will use whatever # version is on the system. To force the newest version of Chef to be # installed on every provision, set the {#install} option to "force". # # @return [String]
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl UNK UNK on_nl UNK on_nl on_ignored_nl on_ivar on_op on_const on_nl # Location of Omnibus installation scripts. # This URL specifies the location of install.sh/install.ps1 for # Linux/Unix and Windows respectively. # # It defaults to https://omnitruck.chef.io/. The full URL is then: # - Linux/Unix: https://omnitruck.chef.io/install.sh # - Windows: https://omnitruck.chef.io/install.ps1 # # If you want to have https://example.com/install.sh as Omnibus script # for your Linux/Unix installations, you should set this option to # https://example.com # # @return [String]
attr_accessor on_symbeg UNK on_nl on_ignored_nl UNK UNK on_nl UNK on_nl on_ignored_nl on_ivar on_op on_const on_nl on_ivar on_op on_const on_nl on_ivar # The path where the Chef installer will be downloaded to. Only valid if # install is true or "force". It defaults to nil, which means that the # omnibus installer will choose the destination and you have no control # over it. # # @return [String]
if on_ivar on_period UNK on_lparen on_symbeg UNK on_rparen on_nl on_ivar on_op on_ivar on_period UNK on_nl end on_nl on_ignored_nl if on_ivar # Make sure the install is a symbol if it's not a boolean
if on_ivar on_period UNK on_lparen on_symbeg UNK on_rparen on_nl on_ivar on_op on_ivar on_period UNK on_nl end on_nl on_ignored_nl on_ivar on_op # Make sure the version is a symbol if it's not a boolean
on_ivar on_op on_ivar on_period UNK on_nl end on_nl on_ignored_nl UNK UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op UNK on_nl on_ignored_nl # Make sure the log level is a symbol
UNK UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op UNK on_nl on_ignored_nl if on_op UNK on_lparen UNK on_rparen on_nl UNK on_op # Like validate, but returns a list of errors to append. # # @return [Array<String>]
