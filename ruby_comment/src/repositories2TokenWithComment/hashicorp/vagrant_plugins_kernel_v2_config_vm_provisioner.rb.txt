UNK on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_symbeg UNK on_rparen on_nl on_const on_op UNK on_symbeg UNK # Represents a single configured provisioner for a VM.
on_const on_op UNK on_symbeg UNK on_comma on_symbeg UNK UNK on_period UNK on_nl on_ignored_nl UNK on_symbeg name on_nl on_ignored_nl UNK on_symbeg # Defaults
UNK on_symbeg name on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl # Unique name for this provisioner # # Accepts a string, but is ultimately forced into a symbol in the top level method inside # #Config::VM.provision method while being parsed from a Vagrantfile # # @return [Symbol]
UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl # Internal unique name for this provisioner # Set to the given :name if exists, otherwise # it's set as a UUID. # # Note: This is for internal use only. # # @return [String]
UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl # The type of the provisioner that should be registered # as a plugin. # # @return [Symbol]
UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl # The configuration associated with the provisioner, if there is any. # # @return [Object]
UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl # When to run this provisioner. Either "once", "always", or "never" # # @return [String]
UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen name on_comma # Whether or not to preserve the order when merging this with a # parent scope. # # @return [Boolean]
UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen name on_comma UNK on_comma on_op options on_rparen # The name of a provisioner to run before it has started # # @return [String, Symbol]
UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen name on_comma UNK on_comma on_op options on_rparen on_ignored_nl on_ivar on_op on_const on_op # The name of a provisioner to run after it is finished # # @return [String, Symbol]
if on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_period UNK UNK UNK UNK on_nl on_ivar on_period # Attempt to find the provisioner...
on_ivar on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_period on_ignored_nl UNK UNK on_ivar UNK on_nl if # Attempt to find the configuration class for this provider # if it exists and load the configuration.
def UNK on_lparen UNK on_comma UNK on_rparen on_ignored_nl errors on_op UNK on_nl on_ignored_nl UNK on_op UNK on_period UNK UNK on_op # Validates the before/after options # # @param [Vagrant::Machine] machine - machine to validate against # @param [Array] provisioners - Array of defined provisioners for the guest machine # @return [Array] array of strings of error messages from config option validation
def UNK on_nl on_ivar on_nl end on_nl end on_nl end on_nl end on_nl EMP EMP EMP EMP EMP EMP EMP # Returns whether the provisioner used was invalid or not. A provisioner # is invalid if it can't be found. # # @return [Boolean]
