on_const on_op on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_period UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_period UNK on_rbracket on_period UNK on_nl on_ignored_nl UNK # Valid ethernet device prefix values. # eth - classic prefix # en - predictable interface names prefix
UNK UNK on_period UNK on_lparen UNK on_comma UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen on_ignored_nl UNK on_op on_tstring_beg on_tstring_end on_nl UNK # Get network interfaces as a list. The result will be something like: # # eth0\nenp0s8\nenp0s9 # # @return [Array<String>]
UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_nl UNK on_period UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma UNK UNK on_rparen do # In some cases net devices may be added to the guest and will not # properly show up when using `ip`. This pulls any device information # that can be found in /proc and adds it to the list of interfaces
UNK on_op on_tstring_beg on_tstring_end on_nl UNK on_period UNK on_period UNK on_lparen on_tstring_beg on_embexpr_beg UNK on_embexpr_end on_tstring_content on_tstring_end on_rparen do on_op # Collect all loopback interfaces
ifaces on_op ifaces on_period UNK do on_op UNK on_op on_ignored_nl UNK on_period UNK on_lparen UNK on_tstring_content UNK on_rparen on_period UNK # Break out integers from strings and sort the arrays to provide # a natural sort for the interface names # NOTE: Devices named with a hex value suffix will _not_ be sorted # as expected. This is generally seen with veth* devices, and proper ordering # is currently not required
UNK on_op on_lbracket on_rbracket on_nl UNK on_op ifaces on_period UNK do on_op UNK on_op on_ignored_nl on_const on_period UNK UNK on_op # Extract ethernet devices and place at start of list
