autoload on_symbeg on_const on_comma on_const on_period expand_path on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma __file__ on_rparen on_nl on_ignored_nl UNK on_const on_op on_const # @deprecated use {PackageSetupFiles} instead
UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl def self on_period UNK on_nl on_const on_op on_const on_op on_const on_period new # Include the built-in modules so that we can use them as top-level # things.
def self on_period UNK on_nl on_const on_op on_const on_op on_const on_period new on_period tap do on_op b on_op on_ignored_nl b # This action boots the VM, assuming the VM is in a state that requires # a bootup (i.e. not saved).
def self on_period UNK on_nl on_const on_op on_const on_op on_const on_period new on_period tap do on_op b on_op on_ignored_nl b # This is the action that is primarily responsible for completely # freeing the resources of the underlying virtual machine.
def self on_period UNK on_nl on_const on_op on_const on_op on_const on_period new on_period tap do on_op b on_op on_ignored_nl b # This is the action that is primarily responsible for halting # the virtual machine, gracefully or by force.
def self on_period UNK on_nl on_const on_op on_const on_op on_const on_period new on_period tap do on_op b on_op on_ignored_nl b # This action packages the virtual machine into a single box file.
def self on_period UNK on_nl on_const on_op on_const on_op on_const on_period new on_period tap do on_op b on_op on_ignored_nl b # This action just runs the provisioners on the machine.
def self on_period UNK on_nl on_const on_op on_const on_op on_const on_period new on_period tap do on_op b on_op on_ignored_nl b # This action is responsible for reloading the machine, which # brings it down, sucks in new configuration, and brings the # machine back up with the new configuration.
def self on_period UNK on_nl on_const on_op on_const on_op on_const on_period new on_period tap do on_op b on_op on_ignored_nl b # This is the action that is primarily responsible for resuming # suspended machines.
def self on_period UNK on_nl on_const on_op on_const on_op on_const on_period new on_period tap do on_op b on_op on_ignored_nl b # This is the action that is primarily responsible for restoring a snapshot
def self on_period UNK on_nl on_const on_op on_const on_op on_const on_period new on_period tap do on_op b on_op on_ignored_nl b # This is the action that is primarily responsible for saving a snapshot
def self on_period UNK on_nl on_const on_op on_const on_op on_const on_period new on_period tap do on_op b on_op on_ignored_nl b # This is the action that will exec into an SSH shell.
def self on_period UNK on_nl on_const on_op on_const on_op on_const on_period new on_period tap do on_op b on_op on_ignored_nl b # This is the action that will run a single SSH command.
def self on_period UNK on_nl on_const on_op on_const on_op on_const on_period new on_period tap do on_op b on_op on_ignored_nl b # This action starts a VM, assuming it is already imported and exists. # A precondition of this action is that the VM exists.
if env on_lbracket on_symbeg result on_rbracket on_nl b2 on_period use UNK on_nl next on_nl end on_nl on_ignored_nl b2 on_period use # If the VM is running, run the necessary provisioners
b3 on_period use UNK on_nl next on_nl end on_nl on_ignored_nl b3 on_period use on_const on_comma on_const do on_op UNK on_comma # The VM is saved, so just resume it
UNK on_period use UNK on_nl end on_nl end on_nl end on_nl end on_nl end on_nl on_ignored_nl def self on_period UNK # The VM is not saved, so we must have to boot it up # like normal. Boot!
def self on_period UNK on_nl on_const on_op on_const on_op on_const on_period new on_period tap do on_op b on_op on_ignored_nl b # This is the action that is primarily responsible for suspending # the virtual machine.
def self on_period UNK on_nl on_const on_op on_const on_op on_const on_period new on_period tap do on_op b on_op on_ignored_nl b # This is the action that is called to sync folders to a running # machine without a reboot.
def self on_period UNK on_nl on_const on_op on_const on_op on_const on_period new on_period tap do on_op b on_op on_ignored_nl b # This action brings the machine up from nothing, including importing # the box, configuring metadata, and booting.
b on_period use on_const on_comma on_const do on_op env on_comma b2 on_op on_ignored_nl if on_op env on_lbracket on_symbeg result on_rbracket # Handle box_url downloading early so that if the Vagrantfile # references any files in the box or something it all just # works fine.
if on_op env on_lbracket on_symbeg result on_rbracket on_nl b2 on_period use on_const on_nl b2 on_period use on_const on_comma on_tstring_beg on_tstring_content # If the VM is NOT created yet, then do the setup steps
b2 on_period use on_const on_nl end on_nl on_ignored_nl b2 on_period use on_const on_nl b2 on_period use on_const on_nl b2 on_period # We are cloning from the box
