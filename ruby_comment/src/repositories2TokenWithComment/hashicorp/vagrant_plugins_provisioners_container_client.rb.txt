def UNK on_lparen UNK on_rparen on_ignored_nl on_ivar on_period communicate on_period UNK do on_op comm on_op on_ignored_nl UNK on_period UNK do # Build an image given a path to a Dockerfile # # @param [String] - Path to the Dockerfile to pass to # container build command
def UNK on_lparen on_op UNK on_rparen on_ignored_nl on_ivar on_period communicate on_period UNK do on_op comm on_op on_ignored_nl UNK on_period UNK # Pull image given a list of images # # @param [String] - Image name
def UNK on_lparen config on_rparen on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end if on_op config on_lbracket on_symbeg UNK on_rbracket on_nl on_ignored_nl id # Run a OCI container. If the container does not exist it will be # created. If the image is stale it will be recreated and restarted
def UNK on_lparen id on_rparen on_ignored_nl if on_op UNK on_lparen id on_rparen on_nl on_ivar on_period communicate on_period sudo on_lparen on_tstring_beg # Start container # # @param String - Image id
def UNK on_lparen id on_rparen on_ignored_nl on_ivar on_period communicate on_period sudo on_tstring_beg on_tstring_content on_embexpr_beg on_ivar on_embexpr_end on_tstring_content on_embexpr_beg id on_embexpr_end # Stop and remove container # # @param String - Image id
on_ignored_nl UNK on_op on_lparen on_tstring_beg on_embexpr_beg on_ivar on_embexpr_end on_tstring_content on_embexpr_beg config on_lbracket on_symbeg name on_rbracket on_embexpr_end on_tstring_content on_tstring_end on_op on_ignored_nl # Returns true if there is a container running with the given :name, # and the container is not using the latest :image.
UNK on_op on_lparen on_tstring_beg on_embexpr_beg on_ivar on_embexpr_end on_tstring_content on_embexpr_beg config on_lbracket on_symbeg name on_rbracket on_embexpr_end on_tstring_content on_tstring_end on_op on_ignored_nl on_tstring_beg # Here, "<cmd> inspect <container>" returns the id of the image # that the container is using. We check that the latest image that # has been built with that name (:image) matches the one that the # container is running.
def UNK on_lparen id on_comma UNK on_op UNK on_rparen on_ignored_nl UNK on_op on_tstring_beg on_tstring_content on_embexpr_beg on_ivar on_embexpr_end on_tstring_content on_tstring_end on_nl # Looks up if a container with a given id exists using the # `ps` command. Returns Boolean # # @param String - Image id
name on_op name on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen if name on_op config on_lbracket on_symbeg # If the name is the automatically assigned name, then # replace the "/" with "-" because "/" is not a valid # character for a container name.
def UNK on_lparen config on_rparen on_ignored_nl name on_op UNK on_lparen config on_rparen on_nl on_ignored_nl args on_op on_tstring_beg on_tstring_content on_embexpr_beg config # Compiles run arguments to be appended to command string. # Returns String
def UNK on_lparen type on_comma data on_rparen on_ignored_nl if on_lbracket on_symbeg UNK on_comma on_symbeg UNK on_rbracket on_period UNK on_lparen type # This handles outputting the communication data back to the UI
data on_op data on_period UNK on_nl return if data on_period UNK on_nl on_ignored_nl UNK on_op UNK UNK on_nl on_ignored_nl on_ivar # Clear out the newline since we add one
on_ignored_nl on_ivar on_period ui on_period info on_lparen data on_period UNK on_comma UNK on_rparen on_nl end on_nl end on_nl end on_nl #options[:color] = color if !config.keep_color
