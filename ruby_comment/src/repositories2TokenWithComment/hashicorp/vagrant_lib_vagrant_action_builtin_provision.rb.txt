UNK on_const on_nl UNK on_const on_nl on_ignored_nl UNK UNK on_lparen UNK on_comma env on_rparen on_ignored_nl on_ivar on_op UNK on_nl on_ivar # This class will run the configured provisioners against the # machine. # # This action should be placed BEFORE the machine is booted so it # can do some setup, and then run again (on the return path) against # a running machine.
UNK on_op UNK on_nl UNK on_op env on_lbracket on_symbeg provision_enabled on_rbracket if env on_period UNK on_lparen on_symbeg provision_enabled on_rparen on_nl # Tracks whether we were configured to provision
provision_enabled on_op UNK on_nl on_ignored_nl UNK on_op UNK on_nl if env on_period UNK on_lparen on_symbeg UNK on_rparen on_nl UNK on_op # Check if we already provisioned, and if so, disable the rest
UNK on_op sentinel_path on_period UNK on_period UNK on_nl UNK on_op UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma UNK on_rparen # The sentinel file is in the format of "version:data" so that # we can remain backwards compatible with previous sentinels. # Versions so far: # # Vagrant < 1.5.0: A timestamp. The weakness here was that # if it wasn't cleaned up, it would incorrectly not provision # new machines. # # Vagrant >= 1.5.0: "1.5:ID", where ID is the machine ID. # We compare both so we know whether it is a new machine. #
env on_lbracket on_symbeg provision_enabled on_rbracket on_op provision_enabled if on_op env on_period UNK on_lparen on_symbeg provision_enabled on_rparen on_nl on_ignored_nl UNK on_lparen # Store the value so that other actions can use it
UNK on_lparen env on_rparen on_period UNK UNK on_op UNK on_comma UNK on_op on_ignored_nl UNK on_period UNK on_lparen env on_lbracket on_symbeg # Ask the provisioners to modify the configuration if needed
on_ivar on_period UNK on_lparen env on_rparen on_nl on_ignored_nl if on_op UNK on_nl env on_lbracket on_symbeg UNK on_rbracket on_period info on_lparen # Continue, we need the VM to be booted.
if on_op UNK on_nl env on_lbracket on_symbeg UNK on_rbracket on_period info on_lparen on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # If we're configured to not provision, notify the user and stop
if on_op provision_enabled on_nl env on_lbracket on_symbeg UNK on_rbracket on_period info on_lparen on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # If we're not provisioning because of the sentinel, tell the user # but continue trying for the "always" provisioners
if UNK on_op on_op sentinel_path on_period UNK on_nl on_ivar on_period info on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl sentinel_path on_period UNK # Write the sentinel if we have to
UNK if on_op provision_enabled on_op options on_lbracket on_symbeg UNK on_rbracket on_op on_symbeg UNK on_nl end on_nl on_ignored_nl name on_op UNK # Don't run if sentinel is around and we're not always running
UNK UNK on_lparen env on_rparen on_ignored_nl env on_lbracket on_symbeg UNK on_rbracket on_period UNK on_nl end on_nl end on_nl end on_nl # This is pulled out into a separate method so that users can # subclass and implement custom behavior if they'd like to work around # this step.
