attr_accessor on_symbeg UNK on_nl on_ignored_nl def UNK on_nl on_ivar on_op on_const on_op on_const on_period new on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # This is an experimental feature that isn't public yet.
on_ivar on_op on_lbrace on_rbrace on_nl on_ivar on_op on_lbracket on_rbracket on_nl on_ivar on_op on_lbrace on_rbrace on_nl on_ivar on_op false on_nl on_ivar # Internal state
def UNK on_lparen UNK on_rparen on_ignored_nl on_ivar on_op UNK on_nl end on_nl on_ignored_nl def merge on_lparen other on_rparen on_ignored_nl UNK # This was from V1, but we just kept it here as an alias for hostname # because too many people mess this up.
def merge on_lparen other on_rparen on_ignored_nl UNK on_period UNK do on_op result on_op on_ignored_nl UNK on_op other on_period instance_variable_get on_lparen # Custom merge method since some keys here are merged differently.
UNK on_op other on_period instance_variable_get on_lparen on_symbeg on_ivar on_rparen on_nl UNK on_op on_ivar on_nl UNK on_op on_ivar on_op UNK on_nl # Merge defined VMs by first merging the defined VM keys, # preserving the order in which they were defined.
UNK on_op other on_period instance_variable_get on_lparen on_symbeg on_ivar on_rparen on_nl new_defined_vms on_op on_lbrace on_rbrace on_nl on_ignored_nl on_ivar on_period each do # Merge the actual defined VMs.
UNK on_op other on_period instance_variable_get on_lparen on_symbeg on_ivar on_rparen on_nl UNK on_op on_lbracket on_rbracket on_nl on_ivar on_period each do on_op # Merge defined disks
other_p on_period config on_op p on_period config on_period merge on_lparen other_p on_period config on_rparen on_nl on_ignored_nl p on_op other_p on_nl # there is an override. take it.
p on_op other_p on_nl UNK on_period delete on_lparen other_p on_rparen on_nl end on_nl on_ignored_nl UNK on_op p on_period dup on_nl # Remove duplicate disk config from other
UNK on_op p on_period dup on_nl end on_nl UNK on_period each do on_op p on_op on_ignored_nl UNK on_op p on_period # there is an override, merge it into the
UNK on_op other on_period instance_variable_get on_lparen on_symbeg on_ivar on_rparen on_nl UNK on_op on_ivar on_period dup on_nl UNK on_period each do # Merge the providers by prepending any configuration blocks we # have for providers onto the new configuration.
UNK on_op other on_period instance_variable_get on_lparen on_symbeg on_ivar on_rparen on_nl UNK on_op on_ivar on_period dup on_nl UNK on_op on_lparen UNK # Merge the provider ordering. Anything defined in our CURRENT # scope is before anything else.
UNK on_op other on_period instance_variable_get on_lparen on_symbeg on_ivar on_rparen on_nl UNK on_op on_ivar on_period dup on_nl UNK on_period each do # Merge the provider overrides by appending them...
UNK on_op on_lbracket on_rbracket on_nl UNK on_op other on_period UNK on_period dup on_nl on_ivar on_period each do on_op p on_op # Merge provisioners. First we deal with overrides and making # sure the ordering is good there. Then we merge them.
other_p on_period config on_op p on_period config on_period merge on_lparen other_p on_period config on_rparen on_nl other_p on_period run on_op p # There is an override. Take it.
p on_op other_p on_nl UNK on_period delete on_lparen other_p on_rparen on_nl end on_nl on_ignored_nl UNK on_op p on_period dup on_nl # We're preserving order, delete from other
UNK on_op p on_period dup on_nl end on_nl UNK on_period each do on_op p on_op on_ignored_nl UNK on_op p on_period # There is an override, merge it into the
UNK on_op other on_period instance_variable_get on_lparen on_symbeg on_ivar on_rparen on_nl UNK on_op on_lbrace on_rbrace on_nl on_ivar on_period each do on_op # Merge synced folders.
def UNK on_lparen hostpath on_comma guestpath on_comma options on_op nil on_rparen on_ignored_nl if on_const on_op on_const on_op on_const on_period UNK # Defines a synced folder pair. This pair of folders will be synced # to/from the machine. Note that if the machine you're using doesn't # support multi-directional syncing (perhaps an rsync backed synced # folder) then the host is always synced to the guest but guest data # may not be synced back to the host. # # @param [String] hostpath Path to the host folder to share. If this # is a relative path, it is relative to the location of the # Vagrantfile. # @param [String] guestpath Path on the guest to mount the shared # folder. # @param [Hash] options Additional options.
hostpath on_op hostpath on_period to_s on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_ignored_nl # On Windows, Ruby just uses normal '/' for path seps, so # just replace normal Windows style seps with Unix ones.
options on_lbracket on_symbeg type on_rbracket on_op options on_lbracket on_symbeg type on_rbracket on_period to_sym if options on_lbracket on_symbeg type on_rbracket on_nl # Make sure the type is a symbol
def UNK on_lparen type on_comma on_op options on_rparen on_ignored_nl options on_op options on_period dup on_nl options on_lbracket on_symbeg UNK on_rbracket # Define a way to access the machine via a network. This exposes a # high-level abstraction for networking that may not directly map # 1-to-1 for every provider. For example, AWS has no equivalent to # "port forwarding." But most providers will attempt to implement this # in a way that behaves similarly. # # `type` can be one of: # # * `:forwarded_port` - A port that is accessible via localhost # that forwards into the machine. # * `:private_network` - The machine gets an IP that is not directly # publicly accessible, but ideally accessible from this machine. # * `:public_network` - The machine gets an IP on a shared network. # # @param [Symbol] type Type of network # @param [Hash] options Options for the network.
type on_op type on_period to_sym on_nl on_ignored_nl if on_op options on_lbracket on_symbeg id on_rbracket on_nl UNK on_op nil on_nl on_ignored_nl # Convert to symbol to allow strings
UNK on_op on_tstring_beg on_embexpr_beg options on_lbracket on_symbeg UNK on_rbracket on_embexpr_end on_embexpr_beg options on_lbracket on_symbeg UNK on_rbracket on_embexpr_end on_embexpr_beg options on_lbracket # For forwarded ports, set the default ID to be the # concat of host_ip, proto and host_port. This would ensure Vagrant # caters for port forwarding in an IP aliased environment where # different host IP addresses are to be listened on the same port.
id on_op options on_lbracket on_symbeg id on_rbracket on_nl id on_op on_tstring_beg on_embexpr_beg type on_embexpr_end on_tstring_content on_embexpr_beg id on_embexpr_end on_tstring_end on_nl # Scope the ID by type so that different types can share IDs
if on_ivar on_period key? on_lparen id on_rparen on_nl options on_op on_ivar on_lbracket id on_rbracket on_lbracket on_int on_rbracket on_period merge on_lparen # Merge in the previous settings if we have them.
on_ivar on_lbracket id on_rbracket on_op on_lbracket type on_period to_sym on_comma options on_rbracket on_nl end on_nl on_ignored_nl def UNK on_lparen name # Merge in the latest settings and set the internal state
def UNK on_lparen name on_comma on_op block on_rparen on_ignored_nl name on_op name on_period to_sym on_nl on_ivar on_lbracket name on_rbracket on_op # Configures a provider for this VM. # # @param [Symbol] name The name of the provider.
on_ivar on_op name on_nl on_ignored_nl if UNK on_nl on_ivar on_lbracket name on_rbracket on_op block if UNK on_nl on_ignored_nl if block # Add the provider to the ordering list
if block on_period UNK on_op on_int on_nl on_ivar on_lbracket name on_rbracket on_op block on_period UNK on_lbracket on_const on_op on_const on_op # If this block takes two arguments, then we curry it and store # the configuration override for use later.
def UNK on_nl on_ivar on_nl end on_nl on_ignored_nl def UNK on_lparen name on_comma options on_op nil on_comma on_op block on_rparen # This returns the keys of the sub-vms in the order they were # defined.
on_ivar on_op name if on_op on_ivar on_period include? on_lparen name on_rparen on_nl on_ignored_nl if on_op on_ivar on_lbracket name on_rbracket on_nl # Add the name to the array of VM keys. This array is used to # preserve the order in which VMs are defined.
if on_op on_ivar on_lbracket name on_rbracket on_nl on_ivar on_lbracket name on_rbracket on_op on_const on_period new on_nl end on_nl on_ignored_nl on_ivar # Add the SubVM to the hash of defined VMs
def UNK on_lparen type on_comma on_op options on_comma on_op block on_rparen on_ignored_nl UNK on_op on_const on_period new on_lparen type on_rparen # Stores disk config options from Vagrantfile # # @param [Symbol] type # @param [Hash] options # @param [Block] block
UNK on_op on_lbrace on_rbrace on_nl options on_period UNK do on_op p on_comma o on_op on_ignored_nl if o on_period UNK on_lparen # Remove provider__option options before set_options, otherwise will # show up as missing setting # Extract provider hash options as well
UNK on_period UNK on_lparen UNK on_comma on_op block on_rparen on_nl on_ignored_nl if on_op on_const on_op on_const on_op on_const on_period UNK # Add provider config
on_ignored_nl def UNK on_nl on_ivar on_op nil if on_ivar on_op on_const on_nl on_ivar on_op nil if on_ivar on_op on_const on_nl #------------------------------------------------------------------- # Internal methods, don't call these. #-------------------------------------------------------------------
on_ivar on_op nil if on_ivar on_op on_const on_nl on_ivar on_op nil if on_ivar on_op on_const on_nl on_ivar on_op nil if # Defaults
on_ivar on_op on_tstring_beg on_tstring_end if on_op on_ivar on_nl if on_ivar on_nl on_ivar on_op on_ivar on_period to_sym on_nl end on_nl on_ignored_nl # Make sure that the download checksum is a string and that # the type is a symbol
on_ivar on_op on_const on_lparen on_ivar on_rparen if on_ivar on_nl on_ignored_nl on_ivar on_op on_ivar on_period to_sym if on_ivar on_nl on_ignored_nl on_ivar # Make sure the box URL is an array if it is set
on_ivar on_op on_ivar on_period to_sym if on_ivar on_nl on_ignored_nl on_ivar on_op on_ivar on_period to_sym if on_ivar on_nl on_ignored_nl UNK on_lparen # Set the communicator properly
on_ivar on_op on_ivar on_period to_sym if on_ivar on_nl on_ignored_nl UNK on_lparen on_const on_rparen if UNK on_period UNK on_nl on_ignored_nl if # Set the guest properly
UNK on_lparen on_const on_rparen if UNK on_period UNK on_nl on_ignored_nl if on_ivar on_op on_symbeg UNK on_nl if on_op on_ivar on_lbracket # If we haven't defined a single VM, then we need to define a # default VM which just inherits the rest of the configuration.
if on_ivar on_op on_symbeg UNK on_nl if on_op on_ivar on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl UNK on_symbeg forwarded_port on_comma on_ignored_nl # Make sure the SSH forwarding is added if it doesn't exist
if on_op on_ivar on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl UNK on_symbeg forwarded_port on_comma on_ignored_nl on_label on_int on_comma on_ignored_nl on_label on_int # forward SSH ports regardless of communicator
on_ivar on_period UNK on_period each do on_op type on_comma opts on_op on_ignored_nl if type on_op on_symbeg forwarded_port on_nl opts on_lbracket # Clean up some network configurations
on_ivar on_period each do on_op name on_comma blocks on_op on_ignored_nl UNK if blocks on_period UNK on_nl on_ignored_nl config_class on_op on_const # Compile all the provider configurations
UNK if blocks on_period UNK on_nl on_ignored_nl config_class on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_period # If we don't have any configuration blocks, then ignore it
config_class on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_period UNK on_lbracket name on_rbracket on_nl config_class on_op # Find the configuration class for this provider
config on_op config_class on_period new on_nl on_ignored_nl UNK on_ignored_nl blocks on_period each do on_op UNK on_op on_ignored_nl UNK on_op config_class # Load it up
on_ivar on_lbracket name on_rbracket on_op config on_nl end on_nl on_ignored_nl on_ivar on_period each do on_op p on_op on_ignored_nl p on_period # Store it for retrieval later
on_ivar on_period each do on_op p on_op on_ignored_nl p on_period config on_period UNK if on_op p on_period UNK on_nl p # Finalize all the provisioners
if options on_lbracket on_symbeg type on_rbracket on_op on_symbeg UNK on_op on_const on_op on_const on_op on_const on_period UNK on_nl options on_period # Ignore NFS on Windows
on_ivar on_op true on_nl end on_nl on_ignored_nl def UNK on_lparen name on_rparen on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end if on_op on_ivar # Flag that we finalized
def UNK on_lparen name on_rparen on_ignored_nl UNK on_tstring_beg on_tstring_content on_tstring_end if on_op on_ivar on_nl on_ignored_nl result on_op on_ivar on_lbracket name # This returns the compiled provider-specific configuration for the # given provider. # # @param [Symbol] name Name of the provider.
if on_op result on_nl config_class on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_period UNK on_lbracket name # If no compiled configuration was found, then we try to just # use the default configuration from the plugin.
def UNK on_lparen name on_rparen on_ignored_nl on_lparen on_ivar on_lbracket name on_rbracket on_op on_lbracket on_rbracket on_rparen on_period UNK do on_op p # This returns a list of VM configurations that are overrides # for this provider. # # @param [Symbol] name Name of the provider # @return [Array<Proc>]
def UNK on_nl on_ivar on_period UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_nl end on_nl on_ignored_nl def UNK # This returns the list of networks configured.
def UNK on_nl on_ivar on_nl end on_nl on_ignored_nl def UNK on_lparen machine on_comma UNK on_op nil on_rparen on_ignored_nl errors on_op # This returns the list of synced folders
if UNK on_op on_op UNK on_period include? on_lparen on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_end on_rparen on_nl errors on_op on_const on_period # If the value is truthy and # if `box_extra_download_options` does not include the key # then the conversion to extra download options produced an error
UNK if options on_lbracket on_symbeg UNK on_rbracket on_nl on_ignored_nl guestpath on_op on_const on_period new on_lparen options on_lbracket on_symbeg guestpath on_rbracket # If the shared folder is disabled then don't worry about validating it
errors on_op on_const on_period t on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_label options on_lbracket on_symbeg hostpath on_rbracket on_rparen on_nl end # Owner/group don't work with NFS
UNK on_op false on_nl UNK on_op on_const on_period new on_nl UNK on_op on_lbracket on_symbeg forwarded_port on_comma on_symbeg UNK on_comma on_symbeg # Validate networks
UNK on_op on_ivar on_period UNK on_lbrace on_op d on_op d on_period UNK on_op d on_period type on_op on_symbeg UNK on_rbrace # Validate disks # Check if there is more than one primrary disk defined and throw an error
errors on_op on_lbrace on_tstring_beg on_tstring_content on_tstring_end on_op errors on_rbrace on_nl on_ignored_nl if machine on_period UNK on_nl if on_op UNK on_nl # We're done with VM level errors so prepare the section
if machine on_period UNK on_nl if on_op UNK on_nl UNK on_op machine on_period UNK on_period UNK on_lparen machine on_rparen on_nl # Validate only the _active_ provider
on_ivar on_period each do on_op vm_provisioner on_op on_ignored_nl if vm_provisioner on_period UNK on_nl name on_op vm_provisioner on_period name on_period to_s # Validate provisioners
if on_const on_op on_const on_op on_const on_period UNK on_nl UNK on_op on_const on_period new do on_ignored_nl UNK on_const on_op on_const # If running from the Windows Subsystem for Linux, validate that configured # hostpaths for synced folders are on DrvFs file systems, or the synced # folder implementation explicitly supports non-DrvFs file system types # within the WSL
UNK on_op on_const on_period new do on_ignored_nl UNK on_const on_op on_const on_op on_const on_op on_const on_nl end on_period new on_nl # Create a helper that will with the synced folders mixin # from the builtin action to get the correct implementation # to be used for each folder
on_ivar on_period each do on_op name on_comma UNK on_op on_ignored_nl if name on_op UNK on_tstring_content UNK on_nl errors on_lbracket on_tstring_beg # Validate sub-VMs if there are any
