UNK on_const on_op on_const on_op on_const on_op on_const on_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl def UNK on_lparen UNK # This class provides communication with a Windows VM running # the Windows native port of OpenSSH
on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_nl on_ivar on_op on_const on_op on_const # Command to run when checking if connection is ready and working
def UNK on_lparen opts on_rparen on_ignored_nl UNK opts UNK on_symbeg UNK UNK on_period UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end on_nl # Wrap the shell if required. By default we are using powershell # which requires no modification. If cmd is defined as shell, add # prefix to start within cmd.exe
def UNK on_lparen connection on_comma command on_comma on_op opts on_rparen on_ignored_nl opts UNK on_symbeg UNK UNK on_op UNK on_period UNK # Executes the command on an SSH connection within a login shell.
UNK on_op connection on_period UNK do on_op ch on_op on_ignored_nl UNK on_op UNK on_nl data_buffer on_op on_tstring_beg on_tstring_end on_nl UNK # Open the channel so we can execute or command
UNK on_period UNK do on_op UNK on_comma data on_op on_ignored_nl data on_op UNK on_lparen data on_rparen on_nl on_ignored_nl if on_op # Setup the channel callbacks so we can get data and exit status
data on_op UNK on_lparen data on_rparen on_nl on_ignored_nl if on_op UNK on_nl data_buffer on_op data on_nl marker_index on_op data_buffer on_period # Filter out the clear screen command
data on_op UNK on_lparen data on_rparen on_nl on_ivar on_period debug on_lparen on_tstring_beg on_tstring_content on_embexpr_beg data on_embexpr_end on_tstring_end on_rparen on_nl if # Filter out the clear screen command
ch on_period UNK on_nl end on_nl on_ignored_nl end on_nl end on_nl on_ignored_nl UNK on_ignored_nl UNK on_op nil on_nl on_ignored_nl if # Close the channel, since after the exit status we're # probably done. This fixes up issues with hanging.
UNK on_op on_const on_period UNK do on_ignored_nl UNK do on_ignored_nl UNK UNK on_nl on_ivar on_period debug on_lparen on_tstring_beg on_tstring_content on_tstring_end # Begin sending keep-alive packets while we wait for the script # to complete. This avoids connections closing on long-running # scripts.
UNK on_ignored_nl UNK on_period UNK on_nl UNK on_const on_op on_const on_comma on_const on_nl on_ivar on_period UNK on_lparen on_ignored_nl on_tstring_beg on_tstring_content # Wait for the channel to complete
UNK on_period UNK if UNK on_nl end on_nl on_ignored_nl UNK UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_period # Kill the keep-alive thread
UNK UNK on_nl end on_nl on_ignored_nl def UNK on_nl on_ivar on_period UNK on_period UNK on_nl end on_nl on_ignored_nl def UNK # Return the final exit status
def UNK on_lparen from on_comma to on_rparen on_ignored_nl to on_op on_const on_op on_const on_op on_const on_period UNK on_lparen to on_rparen # Note: I could not get Net::SFTP to throw a permissions denied error, # even when uploading to a directory where I did not have write # privileges. I believe this is because Windows SSH sessions are started # in an elevated process.
def UNK on_nl UNK do on_op connection on_op on_ignored_nl UNK UNK connection on_period sftp on_nl end on_nl end on_nl on_ignored_nl # Opens an SFTP connection and yields it so that you can download and # upload files. SFTP works more reliably than SCP on Windows due to # issues with shell quoting and escaping.
UNK do on_op connection on_op on_ignored_nl UNK UNK connection on_period sftp on_nl end on_nl end on_nl on_ignored_nl UNK on_nl on_ignored_nl # Connect to SFTP and yield the SFTP object
def UNK on_lparen on_op UNK on_rparen on_ignored_nl connection on_op nil on_nl UNK UNK on_op UNK on_op connection on_op UNK UNK # The WinSSH communicator connection provides isolated modification # to the generated connection instances. This modification forces # all provided commands to run within powershell
