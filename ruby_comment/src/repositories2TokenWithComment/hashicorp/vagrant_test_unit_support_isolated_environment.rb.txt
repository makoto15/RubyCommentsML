def UNK on_lparen name on_comma UNK on_rparen on_ignored_nl on_ivar on_period join on_lparen name on_rparen on_period open on_lparen on_tstring_beg on_tstring_content on_tstring_end # This creates a file in the isolated environment. By default this file # will be created in the working directory of the isolated environment.
box_dir on_op UNK on_period join on_lparen name on_rparen on_nl box_dir on_period UNK on_nl on_ignored_nl box_dir on_period join on_lparen on_tstring_beg on_tstring_content # Create the box directory
box_dir on_period join on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period open on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_lbrace on_op f on_op f # Create the "box.ovf" file because that is how Vagrant heuristically # determines a box is a V1 box.
UNK on_lparen UNK on_comma box_dir on_rparen on_nl on_ignored_nl box_dir on_nl end on_nl on_ignored_nl UNK on_symbeg UNK on_symbeg UNK on_nl on_ignored_nl # Populate the vagrantfile
box_dir on_nl end on_nl on_ignored_nl UNK on_symbeg UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen name on_comma provider on_comma options # Return the directory
UNK on_symbeg UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_lparen name on_comma provider on_comma options on_op UNK on_rparen on_ignored_nl options # Create an alias because "box" makes a V1 box, so "box1"
def UNK on_lparen name on_comma provider on_comma options on_op UNK on_rparen on_ignored_nl options on_op on_lbrace on_ignored_nl UNK on_tstring_beg on_tstring_end on_nl # Creates a fake box to exist in this environment. # # @param [String] name Name of the box # @param [Symbol] provider Provider the box was built for. # @return [Pathname] Path to the box directory.
options on_op on_lbrace on_ignored_nl UNK on_tstring_beg on_tstring_end on_nl on_rbrace on_period UNK on_lparen options on_op on_lbrace on_rbrace on_rparen on_nl on_ignored_nl box_dir # Default options
box_dir on_op UNK on_period join on_lparen name on_comma provider on_period to_s on_rparen on_nl box_dir on_period UNK on_nl on_ignored_nl UNK on_op # Make the box directory
UNK on_op box_dir on_period join on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_period open on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen do # Create a metadata.json file
UNK on_op box_dir on_period join on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_period open on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen do # Create a Vagrantfile
box_dir on_nl end on_nl on_ignored_nl def UNK on_lparen name on_comma UNK on_comma provider on_comma on_op UNK on_rparen on_ignored_nl box_dir on_op # Return the box directory
def UNK on_lparen name on_comma UNK on_comma provider on_comma on_op UNK on_rparen on_ignored_nl box_dir on_op UNK on_period join on_lparen name # Creates a fake box to exist in this environment according # to the "gen-3" box format. # # @param [String] name # @param [String] version # @param [String] provider # @return [Pathname]
box_dir on_op UNK on_period join on_lparen name on_comma UNK on_comma provider on_period to_s on_rparen on_nl box_dir on_period UNK on_nl on_ignored_nl # Create the directory for the box
UNK on_op box_dir on_period join on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_period open on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen do # Create the metadata.json for it
UNK UNK on_lbracket on_symbeg UNK on_rbracket on_nl UNK on_op box_dir on_period join on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_period # Create a Vagrantfile
UNK UNK on_lbracket on_symbeg UNK on_rbracket on_nl UNK on_period join on_lparen name on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period open on_lparen # Create the metadata URL
def UNK on_nl UNK on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl td_dest on_op on_const on_period UNK on_lparen # This creates a "box" file that is a valid V1 box. # # @return [Pathname] Path to the newly created box.
UNK on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl td_dest on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end # Create a temporary directory to store our data we will tar up
on_ivar on_op on_lbracket on_rbracket on_nl on_ivar on_op td_dest on_nl on_ignored_nl source on_op on_const on_period UNK on_lparen UNK on_rparen on_nl on_ignored_nl # Store the temporary directory so it is not deleted until # this instance is garbage collected.
source on_op on_const on_period UNK on_lparen UNK on_rparen on_nl on_ignored_nl result on_op on_const on_period UNK on_lparen td_dest on_rparen on_period join # The source as a Pathname, which is easier to work with
result on_op on_const on_period UNK on_lparen td_dest on_rparen on_period join on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl source on_period join # The destination file
source on_period join on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period open on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen do on_op f on_op on_ignored_nl # Put a "box.ovf" in there.
UNK on_op on_const on_period UNK on_lparen on_const on_period join on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content # Find all the files in our current directory and tar it up!
on_const on_op on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma result on_period to_s on_comma # Package!
result on_nl end on_nl on_ignored_nl def UNK on_lparen provider on_comma options on_op UNK on_rparen on_ignored_nl options on_op on_lbrace on_rbrace on_nl # Resulting box
def UNK on_lparen provider on_comma options on_op UNK on_rparen on_ignored_nl options on_op on_lbrace on_rbrace on_nl on_ignored_nl UNK on_op on_lbrace on_ignored_nl # This creates a "box" file with the given provider. # # @param [Symbol] provider Provider for the box. # @return [Pathname] Path to the newly created box.
UNK on_op on_lbrace on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op provider on_nl on_rbrace # This is the metadata we want to store in our file
UNK on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl td_dest on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end # Create a temporary directory to store our data we will tar up
on_ivar on_op on_lbracket on_rbracket on_nl on_ivar on_op td_dest on_nl on_ignored_nl source on_op on_const on_period UNK on_lparen UNK on_rparen on_nl on_ignored_nl # Store the temporary directory so it is not deleted until # this instance is garbage collected.
source on_op on_const on_period UNK on_lparen UNK on_rparen on_nl on_ignored_nl result on_op on_const on_period UNK on_lparen td_dest on_rparen on_period join # The source as a Pathname, which is easier to work with
result on_op on_const on_period UNK on_lparen td_dest on_rparen on_period join on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ignored_nl source on_period join # The destination file
source on_period join on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period open on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen do on_op f on_op on_ignored_nl # Put the metadata.json in here.
UNK on_op on_const on_period UNK on_lparen on_const on_period join on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content # Find all the files in our current directory and tar it up!
on_const on_op on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma result on_period to_s on_comma # Package!
result on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_op on_ivar on_period join on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK # Resulting box
