UNK on_const on_nl UNK UNK on_lparen UNK UNK env on_rparen on_ignored_nl UNK on_op UNK on_nl UNK on_op on_const on_op on_const # This action is responsible for creating the host machine if # we need to. The host machine is where Docker containers will # live.
UNK on_op host_machine on_period UNK on_period UNK on_nl UNK on_period UNK on_lbracket on_symbeg UNK on_rbracket on_op UNK on_nl UNK on_period # Create a UI for this machine that stays at the detail level
host_machine on_period UNK on_nl on_ignored_nl UNK host_machine on_period UNK on_period UNK on_nl env on_lbracket on_symbeg machine on_rbracket on_period UNK on_period # Reload the machine so that if it was created while we didn't # hold the lock, we'll see the updated state.
UNK host_machine on_period UNK on_period UNK on_nl env on_lbracket on_symbeg machine on_rbracket on_period UNK on_period UNK on_lparen on_const on_period UNK # See if the machine is ready already. If not, start it.
UNK on_op host_machine on_period UNK on_period UNK on_nl UNK on_const on_op on_const UNK on_ignored_nl UNK host_machine on_period UNK on_nl end # Verify communication is ready. If not, we have a problem.
