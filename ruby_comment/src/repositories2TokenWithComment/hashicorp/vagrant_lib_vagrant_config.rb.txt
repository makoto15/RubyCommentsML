on_const on_op on_const on_period UNK on_nl on_ignored_nl on_const on_op on_const on_period UNK on_nl on_const on_period UNK UNK on_tstring_beg on_tstring_content on_tstring_end # This is a mutex used to guarantee that only one thread can load # procs at any given time.
on_const on_op on_const on_period UNK on_nl on_const on_period UNK UNK on_tstring_beg on_tstring_content on_tstring_end UNK UNK on_const on_op on_const UNK on_nl # This is the registry which keeps track of what configuration # versions are available, mapped by the version string used in # `Vagrant.configure` calls.
on_const on_op UNK on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end UNK on_nl on_const on_op on_const on_period UNK on_nl on_ignored_nl UNK # This is the order of versions. This is used by the loader to figure out # how to "upgrade" versions up to the desired (current) version. The # current version is always considered to be the last version in this # list.
UNK UNK on_period UNK UNK UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_comma on_op UNK UNK on_ignored_nl UNK on_op UNK UNK on_nl # This is the method which is called by all Vagrantfiles to configure Vagrant. # This method expects a block which accepts a single argument representing # an instance of the {Config::Top} class. # # Note that the block is not run immediately. Instead, it's proc is stored # away for execution later.
UNK on_op UNK UNK on_nl UNK on_op UNK UNK on_period UNK on_comma UNK UNK on_nl UNK on_nl on_ignored_nl UNK UNK # Store it for later
UNK UNK on_period UNK on_nl on_const on_period UNK UNK on_ignored_nl UNK on_op UNK UNK on_nl on_ignored_nl UNK on_nl on_ignored_nl UNK # This is a method which will yield to a block and will capture all # ``Vagrant.configure`` calls, returning an array of `Proc`s. # # Wrapping this around anytime you call code which loads configurations # will force a mutex so that procs never get mixed up. This keeps # the configuration loading part of Vagrant thread-safe.
UNK on_op UNK UNK on_nl on_ignored_nl UNK on_nl on_ignored_nl UNK UNK on_nl UNK on_nl UNK on_nl UNK on_nl UNK on_nl # Reset the last procs so that we start fresh
UNK on_nl on_ignored_nl UNK UNK on_nl UNK on_nl UNK on_nl UNK on_nl UNK on_nl EMP EMP EMP EMP EMP EMP # Yield to allow the caller to do whatever loading needed
UNK UNK on_nl UNK on_nl UNK on_nl UNK on_nl UNK on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP # Return the last procs we've seen while still in the mutex, # knowing we're safe.
