UNK on_const on_nl on_const on_op on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_nl on_ignored_nl def # This is a helper that abstracts out the functionality of rsyncing # folders so that it can be called from anywhere.
on_const on_op on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_nl on_ignored_nl def self on_period UNK # rsync version requirement to support chown argument
def self on_period UNK on_lparen exclude on_rparen on_ignored_nl UNK on_op UNK on_nl on_ignored_nl if exclude on_period UNK on_lparen on_tstring_beg on_tstring_content # This converts an rsync exclude pattern to a regular expression # we can send to Listen. # # Note: Listen expects a path relative to the parameter passed into the # Listener, not a fully qualified path # # @param [String] - exclude path # @return [Regexp] - A regex of the path, modified, to exclude
exclude on_op exclude on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl exclude on_op exclude on_period UNK # This is not an ideal solution, but it's a start. We can improve and # keep unit tests passing in the future.
guestpath on_op opts on_lbracket on_symbeg guestpath on_rbracket on_nl hostpath on_op opts on_lbracket on_symbeg hostpath on_rbracket on_nl hostpath on_op on_const on_period # Folder info
if machine on_period guest on_period UNK on_lparen on_symbeg UNK on_rparen on_nl guestpath on_op machine on_period guest on_period UNK on_lparen on_symbeg # if the guest has a guest path scrubber capability, use it
guestpath on_op on_const on_period UNK on_lparen guestpath on_rparen on_nl on_ignored_nl if on_const on_op on_const on_op on_const on_period UNK on_nl hostpath # Shellescape
hostpath on_op on_const on_op on_const on_op on_const on_period UNK on_lparen hostpath on_rparen on_nl end on_nl on_ignored_nl if on_op hostpath on_period # rsync for Windows expects cygwin style paths, always.
if on_op hostpath on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl hostpath on_op on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl # Make sure the host path ends with a "/" to avoid creating # a nested directory...
opts on_lbracket on_symbeg UNK on_rbracket on_op ssh_info on_lbracket on_symbeg UNK on_rbracket on_nl opts on_lbracket on_symbeg UNK on_rbracket on_op ssh_info on_lbracket # Folder options
UNK on_op ssh_info on_lbracket on_symbeg UNK on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl UNK on_op ssh_info on_lbracket on_symbeg UNK on_rbracket # set log level
UNK on_op ssh_info on_lbracket on_symbeg UNK on_rbracket on_nl host on_op ssh_info on_lbracket on_symbeg host on_rbracket on_nl UNK on_op on_tstring_beg on_tstring_end # Connection information # make it better match lib/vagrant/util/ssh.rb command_options style and logic
UNK on_op on_tstring_beg on_tstring_end on_nl UNK on_const on_op on_const on_op on_const on_period UNK on_nl UNK on_op on_const on_period UNK on_lparen # Create the path for the control sockets. We used to do this # in the machine data dir but this can result in paths that are # too long for unix domain sockets.
UNK on_op on_lbracket on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_embexpr_beg ssh_info on_lbracket on_symbeg UNK on_rbracket on_embexpr_end # rsh cmd option
if on_op on_const on_op on_const on_op on_const on_period UNK on_op ssh_info on_lbracket on_symbeg UNK on_rbracket on_nl UNK on_op on_lbracket on_tstring_beg # Solaris/OpenSolaris/Illumos uses SunSSH which doesn't support the # IdentitiesOnly option. Also, we don't enable it if keys_only is false # so that SSH properly searches our identities and tries to do it itself.
if ssh_info on_lbracket on_symbeg UNK on_rbracket on_op on_symbeg UNK on_op on_op ssh_info on_lbracket on_symbeg UNK on_rbracket on_nl UNK on_op on_lbracket # no strict hostkey checking unless paranoid
if ssh_info on_lbracket on_symbeg UNK on_rbracket on_nl UNK on_op ssh_info on_lbracket on_symbeg UNK on_rbracket on_period UNK on_lbrace on_op UNK on_op # If specified, attach the private key paths.
excludes on_op on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_nl excludes on_op on_const on_lparen opts on_lbracket on_symbeg exclude on_rbracket on_rparen on_period UNK # Exclude some files by default, and any that might be configured # by the user.
args on_op UNK on_nl args on_op on_const on_lparen opts on_lbracket on_symbeg args on_rbracket on_rparen on_period UNK if opts on_lbracket on_symbeg # Get the command-line arguments
if on_const on_op on_const on_op on_const on_period UNK on_op on_op args on_period UNK on_lbrace on_op UNK on_op UNK on_period UNK # On Windows, we have to set a default chmod flag to avoid permission issues
args on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl args on_op on_tstring_beg on_tstring_content on_tstring_end if args on_period include? on_lparen on_tstring_beg on_tstring_content on_tstring_end # Ensures that all non-masked bits get enabled
args on_op on_tstring_beg on_tstring_content on_tstring_end if args on_period include? on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op args on_period include? on_lparen on_tstring_beg # Remove the -p option if --archive is enabled (--archive equals -rlptgoD) # otherwise new files will not have the destination-default permissions
args on_op on_tstring_beg on_tstring_content on_embexpr_beg opts on_lbracket on_symbeg UNK on_rbracket on_embexpr_end on_tstring_content on_embexpr_beg opts on_lbracket on_symbeg UNK on_rbracket on_embexpr_end on_tstring_end # Allow rsync to map ownership
opts on_lbracket on_symbeg UNK on_rbracket on_op UNK on_nl UNK on_ignored_nl args on_op on_tstring_beg on_tstring_content on_tstring_end UNK args on_period include? on_lparen # Notify rsync post capability not to chown
args on_op on_tstring_beg on_tstring_content on_tstring_end UNK args on_period include? on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_op args on_period include? on_lparen on_tstring_beg # Disable rsync's owner/group preservation (implied by --archive) unless # specifically requested, since we adjust owner/group to match shared # folder setting ourselves.
rsync_path on_op opts on_lbracket on_symbeg rsync_path on_rbracket on_nl if on_op rsync_path on_op machine on_period guest on_period UNK on_lparen on_symbeg UNK # Tell local rsync how to invoke remote rsync with sudo
UNK on_ignored_nl if on_const on_period UNK on_lparen host on_rparen on_period UNK on_nl host on_op on_tstring_beg on_tstring_content on_embexpr_beg host on_embexpr_end on_tstring_content # If the remote host is an IPv6 address reformat
end on_nl on_ignored_nl UNK on_op on_lbracket on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl args on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma UNK # Ignore
UNK on_op on_lbracket on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl args on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma UNK on_period UNK on_period # Build up the actual command to execute
UNK on_op on_lbrace on_rbrace on_nl UNK on_lbracket on_symbeg UNK on_rbracket on_op machine on_period UNK on_period UNK on_period UNK on_nl on_ignored_nl # The working directory should be the root path
if machine on_period guest on_period UNK on_lparen on_symbeg UNK on_rparen on_nl machine on_period guest on_period UNK on_lparen on_symbeg UNK on_comma # If we have tasks to do before rsyncing, do those.
if machine on_period guest on_period UNK on_lparen on_symbeg UNK on_rparen on_nl UNK on_ignored_nl machine on_period guest on_period UNK on_lparen on_symbeg # If we have tasks to do after rsyncing, do those.
def self on_period UNK on_lparen machine on_rparen on_ignored_nl if on_op on_const on_period UNK on_lparen on_const on_op on_const on_period UNK on_lparen # Check if rsync versions support using chown option # # @param [Vagrant::Machine] machine The remote machine # @return [Boolean]
def self on_period UNK on_lparen machine on_rparen on_ignored_nl if machine on_period guest on_period UNK on_lparen on_symbeg UNK on_rparen on_nl rsync_path # @return [String, nil] version of remote rsync
def self on_period UNK on_nl if on_op UNK on_nl r on_op on_const on_op on_const on_op on_const on_period UNK on_lparen on_tstring_beg # @return [String, nil] version of local rsync
def self on_period UNK on_nl UNK on_period UNK on_lparen on_op UNK on_lparen on_symbeg UNK on_rparen on_rparen on_nl end on_nl end # @private # Reset the cached values for helper. This is not considered a public # API and should only be used for testing.
