UNK on_const on_op on_const UNK end on_nl on_ignored_nl UNK on_const on_nl on_ignored_nl on_cvar on_op UNK on_nl on_cvar on_op on_const on_period # This is raised if the VM is not found when initializing a driver # with a UUID.
UNK on_const on_nl on_ignored_nl on_cvar on_op UNK on_nl on_cvar on_op on_const on_period UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl # We use forwardable to do all our driver forwarding
on_cvar on_op UNK on_nl on_cvar on_op on_const on_period UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl # We cache the read VirtualBox version here once we have one, # since during the execution of Vagrant, it likely doesn't change.
UNK on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl UNK UNK # The UUID of the virtual machine we represent
UNK on_symbeg UNK on_nl on_ignored_nl UNK on_const on_op on_const on_op on_const on_nl on_ignored_nl UNK UNK on_lparen UNK on_op UNK on_rparen # The version of virtualbox that is running.
UNK on_lparen on_rparen on_nl on_ignored_nl on_ivar on_op on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_ivar on_op # Setup the base
UNK on_ignored_nl on_cvar on_op UNK on_nl UNK on_const on_op on_const on_op on_const on_comma on_ignored_nl on_const on_op on_const on_op on_const on_nl # Read and assign the version of VirtualBox we know which # specific driver to instantiate.
raise on_const on_op on_const on_op on_const on_nl end on_nl end on_nl end on_nl on_ignored_nl on_ivar on_period UNK on_lparen on_tstring_beg on_tstring_content # This means that VirtualBox was not found, so we raise this # error here.
on_ivar on_period UNK on_lparen on_tstring_beg on_tstring_content UNK on_cvar UNK on_tstring_end on_rparen on_nl UNK on_op UNK on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op # Instantiate the proper version driver for VirtualBox
raise on_const on_op on_const on_op on_const on_nl end on_nl on_ignored_nl UNK on_op UNK on_nl UNK on_period UNK UNK on_op UNK # VirtualBox 4.2.14 just doesn't work with Vagrant, so show error
raise on_const if on_op on_ivar on_period UNK on_lparen on_ivar on_rparen on_nl end on_nl end on_nl on_ignored_nl UNK on_symbeg on_ivar on_comma # Verify the VM exists, and if it doesn't, then don't worry # about it (mark the UUID as nil)
UNK UNK on_nl on_ignored_nl output on_op on_tstring_beg on_tstring_end on_nl UNK on_lparen UNK on_const on_op on_const on_op on_const on_comma UNK UNK # This returns the version of VirtualBox that is running. # # @return [String]
on_ignored_nl output on_op on_tstring_beg on_tstring_end on_nl UNK on_lparen UNK on_const on_op on_const on_op on_const on_comma UNK UNK on_comma UNK UNK # The version string is usually in one of the following formats: # # * 4.1.8r1234 # * 4.1.8r1234_OSE # * 4.1.8_MacPortsr1234 # # Below accounts for all of these.
output on_op on_tstring_beg on_tstring_end on_nl UNK on_lparen UNK on_const on_op on_const on_op on_const on_comma UNK UNK on_comma UNK UNK on_rparen # Note: We split this into multiple lines because apparently "".split("_") # is [], so we have to check for an empty array in between.
raise on_const on_op on_const on_op on_const on_nl UNK output on_period UNK on_op on_tstring_beg on_tstring_end on_nl raise on_const on_op on_const on_op # Check for installation incomplete warnings, for example: # "WARNING: The character device /dev/vboxdrv does not # exist. Please install the virtualbox-ose-dkms package and # the appropriate headers, most likely linux-headers-generic."
raise on_const on_op on_const on_op on_const on_comma on_ignored_nl UNK on_ivar on_period UNK on_nl end on_nl end on_nl on_ignored_nl UNK on_op # This seems to happen on Windows for uncertain reasons. # Raise an error otherwise the error is that they have an # incompatible version of VirtualBox which isn't true.
