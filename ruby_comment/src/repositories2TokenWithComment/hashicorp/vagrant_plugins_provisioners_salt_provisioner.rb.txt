on_const on_op on_const on_lbracket on_op on_lbracket on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma # Default path values to set within configuration only # if configuration value is unset and local path exists
def UNK on_lparen UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_rparen on_ignored_nl UNK on_op on_ivar on_period communicate on_period sudo on_lparen on_tstring_beg on_tstring_content # Return a list of accepted keys
def expanded_path on_lparen UNK on_rparen on_ignored_nl on_const on_period UNK on_lparen UNK on_rparen on_period UNK on_lparen on_ivar on_period env on_period UNK ## Utilities
desired_binaries on_op on_lbracket on_rbracket on_nl if on_op on_ivar on_period UNK on_nl if on_ivar on_period config on_period vm on_period communicator on_op ## Determine States, ie: install vs configure
def UNK on_lparen install on_comma configure on_comma config_dir on_rparen on_ignored_nl if on_ivar on_period UNK on_nl options on_op on_ivar on_period UNK # Generates option string for bootstrap script
if on_ivar on_period UNK on_nl options on_op on_ivar on_period UNK on_nl else on_ignored_nl options on_op on_tstring_beg on_tstring_end on_nl end on_nl # Any extra options passed to bootstrap
def UNK on_nl if on_op on_ivar on_period UNK on_period UNK on_nl if on_ivar on_period config on_period vm on_period communicator on_op ## Actions # Get pillar string to pass with the salt command
on_tstring_beg on_tstring_content on_embexpr_beg on_ivar on_period UNK on_period UNK on_period UNK on_lparen UNK on_tstring_content UNK on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period # ' doesn't have any special behavior on the command prompt, # so '{"x":"y"}' becomes '{x:y}' with literal single quotes. # However, """ will become " , and \\""" will become \" . # Use \\"" instead of \\""" for literal inner-value quotes # to avoid issue with odd number of quotes. # --% disables special PowerShell parsing on the rest of the line.
def UNK on_nl on_ivar on_period UNK on_op on_tstring_beg on_tstring_content on_tstring_end on_op on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK # Get colorization option string to pass with the salt command
def UNK on_nl UNK on_op on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content # Get log output level option string to pass with the salt command
def UNK on_nl options on_op on_tstring_beg on_tstring_end on_nl on_ignored_nl if on_ivar on_period UNK on_nl options on_op on_tstring_beg on_tstring_content on_tstring_end on_nl # Get command-line options for masterless provisioning
def UNK on_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_const on_lparen on_ivar on_period UNK on_rparen on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # Append additional arguments to the salt command
def UNK on_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_const on_lparen on_ivar on_period UNK on_rparen on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # Append additional arguments to the salt-call command
def UNK on_nl if on_ivar on_period UNK on_nl on_ivar on_period env on_period ui on_period info on_tstring_beg on_tstring_content on_tstring_end on_nl on_ivar # Copy master and minion configs to VM
def UNK on_nl if on_ivar on_period UNK and on_ivar on_period UNK on_nl on_ivar on_period env on_period ui on_period info on_tstring_beg # Copy master and minion keys to VM
def UNK on_nl if on_ivar on_period UNK on_nl UNK on_op expanded_path on_lparen on_ivar on_period UNK on_rparen on_nl else on_ignored_nl if # Get bootstrap file location, bundled or custom
def UNK on_nl install on_op UNK on_lparen on_rparen on_nl configure on_op UNK on_lparen on_rparen on_nl config_dir on_op temp_config_dir on_lparen on_rparen # Determine if we are configure and/or installing, then do either
data on_op data on_lbracket on_int on_op on_op on_int on_rbracket on_nl end on_nl if on_ivar on_period verbose on_nl on_ivar on_period env # Remove any leading newline but not whitespace. If we wanted to # remove newlines and whitespace we would have used data.lstrip
data on_op data on_lbracket on_int on_op on_op on_int on_rbracket on_nl end on_nl if on_ivar on_period verbose on_nl on_ivar on_period env # Remove any leading newline but not whitespace. If we wanted to # remove newlines and whitespace we would have used data.lstrip
ssh_opts on_op on_lbrace on_rbrace on_nl if on_ivar on_period verbose on_nl ssh_opts on_op on_lbrace on_label on_symbeg UNK on_rbrace on_nl end on_nl # If verbose is on, do not duplicate a failed command's output in the error message.
ssh_opts on_op on_lbrace on_rbrace on_nl if on_ivar on_period verbose on_nl ssh_opts on_op on_lbrace on_label on_symbeg UNK on_rbrace on_nl end on_nl # If verbose is on, do not duplicate a failed command's output in the error message.
options on_op on_tstring_beg on_embexpr_beg UNK on_embexpr_end on_embexpr_beg UNK on_embexpr_end on_embexpr_beg UNK on_embexpr_end on_embexpr_beg UNK on_embexpr_end on_embexpr_beg UNK on_embexpr_end on_tstring_end on_nl # TODO: something equivalent to { error_key: :ssh_bad_exit_status_muted }?
ssh_opts on_op on_lbrace on_rbrace on_nl if on_ivar on_period verbose on_nl ssh_opts on_op on_lbrace on_label on_symbeg UNK on_rbrace on_nl end on_nl # If verbose is on, do not duplicate a failed command's output in the error message.
def UNK on_nl on_const on_period UNK do on_op UNK on_comma UNK on_op on_ignored_nl if config on_period UNK on_lparen UNK on_rparen # Sets optimistic default values into config
