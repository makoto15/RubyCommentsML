UNK on_period vagrantfile on_lparen on_tstring_beg on_tstring_end on_rparen on_nl on_ignored_nl UNK on_period UNK on_nl end on_nl on_ignored_nl let on_lparen on_symbeg UNK # We need to create a Vagrantfile so that this test environment # has a proper root path
UNK on_period UNK on_nl end on_nl on_ignored_nl let on_lparen on_symbeg UNK on_rparen on_lbrace UNK on_rbrace on_nl on_ignored_nl let on_lparen on_symbeg # Create the Vagrant::Environment instance
UNK new_instance on_nl UNK on_period new on_lparen name on_comma provider_name on_comma UNK on_comma UNK on_comma on_ignored_nl UNK on_comma config on_comma # Returns a new instance with the test data
UNK provider_init_test on_lparen instance on_op nil on_rparen on_ignored_nl UNK on_op nil on_nl on_ignored_nl UNK on_op instance on_nl instance on_op UNK # This is a helper that generates a test for provider initialization. # This is a separate helper method because it takes a block that can # be used to have additional tests on the received machine. # # @yield [machine] Yields the machine that the provider initialization # method received so you can run additional tests on it.
UNK on_op machine on_nl on_ignored_nl expect on_lparen machine on_rparen on_period to be on_nl on_ignored_nl UNK machine UNK UNK on_nl true # Store this for later so we can verify that it is the # one we expected to receive.
expect on_lparen machine on_rparen on_period to be on_nl on_ignored_nl UNK machine UNK UNK on_nl true on_nl on_rbrace on_period and_return on_lparen # Sanity check
UNK machine UNK UNK on_nl true on_nl on_rbrace on_period and_return on_lparen instance on_rparen on_nl on_ignored_nl instance on_op UNK on_period new # Yield our machine if we want to do additional tests
instance on_op UNK on_period new on_lparen name on_comma provider_name on_comma UNK on_comma UNK on_comma on_ignored_nl UNK on_comma config on_comma data_dir # Initialize a new machine and verify that we properly receive # the machine we expect.
provider_init_test on_nl end on_nl on_ignored_nl it on_tstring_beg on_tstring_content on_tstring_end do on_ignored_nl provider_init_test do on_op machine on_op on_ignored_nl expect on_lparen machine # Just run the blank test
allow on_lparen provider on_rparen on_period to receive on_lparen on_symbeg machine_id_changed on_rparen on_nl on_ignored_nl instance on_period id on_op on_tstring_beg on_tstring_content on_tstring_end # Stub this because #id= calls it.
instance on_period id on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl provider_init_test do on_op machine on_op on_ignored_nl expect on_lparen machine on_period id # Set the ID on the previous instance so that it is persisted
allow on_lparen env on_rparen on_period to receive on_lparen on_symbeg root_path on_rparen on_period and_return on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl instance # Whenever the machine is run on a different directory, the user is warned
allow on_lparen env on_rparen on_period to receive on_lparen on_symbeg root_path on_rparen on_period and_return on_lparen original_cwd on_period UNK on_rparen on_nl expect # In cygwin or other windows shell, it might have a path like # c:/path and C:/path # which are the same.
allow on_lparen env on_rparen on_period to receive on_lparen on_symbeg cwd on_rparen on_period and_return on_lparen on_tstring_beg on_embexpr_beg original_cwd on_embexpr_end on_tstring_content on_tstring_end # mock out cwd to be subdir and ensure no warn is printed
allow on_lparen provider on_rparen on_period to receive on_lparen on_symbeg state on_rparen on_period and_return on_lparen on_const on_op on_const on_period new on_lparen # Stub the message we want
box on_op double on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl allow on_lparen box on_rparen on_period to receive on_lparen on_symbeg name on_rparen # Setup the box information
entry on_op env on_period UNK on_period UNK on_lparen uuid on_rparen on_nl expect on_lparen entry on_period name on_rparen on_period to eq # Test the entry itself
allow on_lparen UNK on_rparen on_period to receive on_lparen on_symbeg UNK on_rparen on_nl end on_nl on_ignored_nl on_lbracket on_symbeg UNK on_comma on_symbeg # Stub the check_key_permissions method so that even if we test incorrectly, # no side effects actually happen.
instance on_period config on_period ssh on_period private_key_path on_op on_lbracket on_const on_period expand_path on_lparen UNK on_rparen on_comma on_const on_period expand_path on_lparen # Use __FILE__ to provide an existing file
