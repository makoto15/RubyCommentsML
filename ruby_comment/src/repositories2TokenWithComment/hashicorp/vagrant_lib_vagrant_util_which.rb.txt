UNK UNK on_period UNK on_lparen UNK on_comma on_op UNK on_rparen on_ignored_nl UNK on_op UNK on_nl on_ignored_nl UNK on_op on_const on_period # Cross-platform way of finding an executable in the PATH. # # which('ruby') #=> /usr/bin/ruby # # This code is adapted from the following post by mislav: # http://stackoverflow.com/questions/2108727/which-in-ruby-checking-if-program-exists-in-path-from-ruby # # @param [String] cmd The command to search for in the PATH. # @param [Hash] opts Optional flags # @option [Boolean] :original_path Search within original path if available # @return [String] The full path to the executable or `nil` if not found.
UNK on_op on_lbracket on_tstring_beg on_tstring_end on_rbracket on_nl UNK on_const on_period UNK on_lparen UNK on_rparen on_period UNK on_op UNK on_nl UNK # If the PATHEXT variable is empty, we're on *nix and need to find # the exact filename
UNK on_op on_lbracket on_tstring_beg on_tstring_end on_rbracket on_nl UNK on_ignored_nl UNK on_op on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period UNK on_lparen # On Windows: if filename contains an extension, we must match that # exact filename
UNK on_op on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_ignored_nl UNK # On Windows: otherwise try to match all possible executable file # extensions (.EXE .COM .BAT etc.)
