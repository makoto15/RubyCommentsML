UNK on_const on_nl UNK on_const on_nl on_ignored_nl on_const on_op on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl # This is a class that has helpers on it for dealing with SSH. These # helpers don't depend on any part of Vagrant except what is given # via the parameters.
UNK UNK on_period UNK on_lparen key_path on_rparen on_ignored_nl UNK if on_const on_period UNK on_op on_const on_period UNK on_lparen key_path on_rparen # Checks that the permissions for a private key are valid, and fixes # them if possible. SSH requires that permissions on the private key # are 0600 on POSIX based systems. This will make a best effort to # fix these permissions if they are not properly set. # # @param [Pathname] key_path The path to the private key.
UNK if on_const on_period UNK on_op on_const on_period UNK on_lparen key_path on_rparen on_nl on_ignored_nl on_const on_period UNK on_lparen on_tstring_beg on_tstring_content # Don't do anything if we're on Windows, since Windows doesn't worry # about key permissions.
raise on_const on_op on_const on_comma on_label key_path on_nl end on_nl on_ignored_nl if on_const on_period UNK on_lparen stat on_period UNK on_rparen # The SSH key must be owned by ourselves, unless we're root
stat on_op key_path on_period stat on_nl if on_const on_period UNK on_lparen stat on_period UNK on_rparen on_op on_tstring_beg on_tstring_content on_tstring_end on_nl # Re-stat the file to get the new mode, and verify it worked
raise on_const on_op on_const on_comma on_label key_path on_nl end on_nl on_ignored_nl UNK UNK on_period UNK on_lparen ssh_info on_comma UNK on_op # This shouldn't happen since we verify we own the file, but # it is possible in theory, so we raise an error.
UNK UNK on_period UNK on_lparen ssh_info on_comma UNK on_op UNK UNK on_rparen on_ignored_nl on_ignored_nl if on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end # Halts the running of this process and replaces it with a full-fledged # SSH shell into a remote machine. # # Note: This method NEVER returns. The process ends after this. # # @param [Hash] ssh_info This is the SSH information. For the keys # required please see the documentation of {Machine#ssh_info}. # @param [Hash] opts These are additional options that are supported # by exec.
on_ignored_nl if on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end on_nl ssh_path on_op on_const on_period UNK on_lparen on_tstring_beg # Ensure the platform supports ssh. On Windows there are several programs which # include ssh, notably git, mingw and cygwin, but make sure ssh is in the path!
if on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end on_nl ssh_path on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content # First try using the original path provided
if on_op ssh_path on_nl ssh_path on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl if ssh_path on_op on_const on_period # If we didn't find an ssh executable, see if we shipped one
UNK on_op on_const on_period UNK on_lparen ssh_path on_rparen on_nl if UNK on_period UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # On Windows, we need to detect whether SSH is actually "plink" # underneath the covers. In this case, we tell the user.
UNK on_op UNK on_lbracket on_symbeg UNK on_rbracket on_nl on_ignored_nl options on_op UNK UNK on_nl options on_lbracket on_symbeg UNK on_rbracket on_op # If plain mode is enabled then we don't do any authentication (we don't # set a user or an identity file)
command_options on_op on_lbracket on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma options on_lbracket on_symbeg UNK on_rbracket on_period UNK on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end # Command line options
if on_op on_const on_period UNK on_op on_op UNK on_op ssh_info on_lbracket on_symbeg UNK on_rbracket on_nl command_options on_op on_lbracket on_tstring_beg on_tstring_content # Solaris/OpenSolaris/Illumos uses SunSSH which doesn't support the # IdentitiesOnly option. Also, we don't enable it in plain mode or if # if keys_only is false so that SSH and Net::SSH properly search our identities # and tries to do it itself.
if ssh_info on_lbracket on_symbeg UNK on_rbracket on_op on_symbeg UNK on_op on_op ssh_info on_lbracket on_symbeg UNK on_rbracket on_nl command_options on_op on_lbracket # no strict hostkey checking unless paranoid
if on_op UNK on_op options on_lbracket on_symbeg private_key_path on_rbracket on_nl options on_lbracket on_symbeg private_key_path on_rbracket on_period UNK UNK on_op path # If we're not in plain mode and :private_key_path is set attach the private key path(s).
path on_op path on_period UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_op on_lbracket # Use '-o' instead of '-i' because '-i' does not call # percent_expand in misc.c, but '-o' does. when passing the path, # replace '%' in the path with '%%' to escape the '%'
UNK on_op on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma path on_rbracket on_nl end on_nl on_ignored_nl command_options on_op UNK on_nl end on_nl end # Pass private key file directly with '-i', which properly supports # paths with spaces on Windows guests
command_options on_op on_lbracket on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end # Both are required so that no warnings are shown regarding X11
command_options on_op on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_rbracket if ssh_info on_lbracket on_symbeg UNK on_rbracket on_nl on_ignored_nl command_options # Configurables -- extra_args should always be last due to the way the # ssh args parser works. e.g. if the user wants to use the -t option, # any shell command(s) she'd like to run on the remote server would # have to be the last part of the 'ssh' command: # # $ ssh localhost -t -p 2222 "cd mydirectory; bash" # # Without having extra_args be last, the user loses this ability
command_options on_op on_const on_lparen ssh_info on_lbracket on_symbeg UNK on_rbracket on_rparen if ssh_info on_lbracket on_symbeg UNK on_rbracket on_nl on_ignored_nl command_options on_period # Note about :extra_args # ssh_info[:extra_args] comes from a machines ssh config in a Vagrantfile, # where as opts[:extra_args] comes from running the ssh command
UNK on_op options on_lbracket on_symbeg UNK on_rbracket on_nl UNK on_op on_tstring_beg on_embexpr_beg options on_lbracket on_symbeg UNK on_rbracket on_embexpr_end on_tstring_content on_embexpr_beg # Build up the host string for connecting
on_const on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_tstring_beg on_tstring_content on_tstring_end if on_const on_period UNK on_nl on_ignored_nl UNK on_op ssh_info on_lbracket # On Cygwin we want to get rid of any DOS file warnings because # we really don't care since both work.
UNK on_op ssh_info on_lbracket on_symbeg UNK on_rbracket on_op ssh_path on_op on_tstring_beg on_tstring_content on_tstring_end on_nl on_ignored_nl if on_op UNK on_lbracket on_symbeg # If an ssh command is defined, use that. If an ssh binary was # discovered on the path, use that. Otherwise fail to just trying `ssh`
if on_op UNK on_lbracket on_symbeg UNK on_rbracket on_nl on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg command_options # Invoke SSH with all our options
on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg UNK on_embexpr_end on_tstring_content on_embexpr_beg command_options on_period UNK on_embexpr_end on_tstring_end on_rparen on_nl process on_op # If we're still here, it means we're supposed to subprocess # out to ssh rather than exec it.
if ssh_info on_lbracket on_symbeg UNK on_rbracket on_nl ssh_info on_lbracket on_symbeg UNK on_rbracket on_period UNK UNK on_op UNK on_op on_ignored_nl process # Forward configured environment variables.
