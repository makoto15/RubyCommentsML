UNK on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_symbeg UNK on_rparen on_nl UNK on_const on_op on_const on_nl # Provides communication channel for Vagrant commands via WinRM.
true on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl on_ivar on_op on_const on_period UNK on_lparen on_rparen on_nl on_ivar # This is useless, and will likely be removed in the future (this # whole method).
winrm_info on_op nil on_nl UNK true on_nl winrm_info on_op nil on_nl UNK on_ignored_nl winrm_info on_op on_const on_period winrm_info on_lparen on_ivar # Wait for winrm_info to be ready
on_ivar on_period UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_embexpr_beg shell on_period UNK on_embexpr_end on_tstring_content on_embexpr_beg shell on_period UNK on_embexpr_end on_tstring_end # Got it! Let the user know what we're connecting to.
message on_op e on_period message on_nl end on_nl on_ignored_nl if message on_nl UNK on_op on_const on_period UNK on_period UNK on_nl # Any other retryable errors
if message on_nl UNK on_op on_const on_period UNK on_period UNK on_nl UNK on_op true on_nl if UNK on_op message on_nl # If we have a message to show, then show it. We don't show # repeated messages unless they've been repeating longer than # 10 seconds.
on_ivar on_period info on_lparen on_tstring_beg on_tstring_content on_embexpr_beg e on_period UNK on_embexpr_end on_tstring_end on_rparen on_nl on_ignored_nl on_ivar on_op nil on_nl return # We catch a `TransientError` which would signal that something went # that might work if we wait and retry.
on_ivar on_op nil on_nl return false on_nl end on_nl on_ignored_nl def UNK on_nl shell on_lparen true on_rparen on_nl end on_nl # We reset the shell to trigger calling of winrm_finder again. # This resolves a problem when using vSphere where the winrm_info was not refreshing # thus never getting the correct hostname.
command on_op on_ivar on_period UNK on_lparen command on_rparen on_nl return UNK if command on_period UNK on_nl on_ignored_nl opts on_op UNK # If this is a *nix command with no Windows equivalent, don't run it
on_label UNK on_comma on_ignored_nl on_label on_symbeg UNK on_comma on_ignored_nl on_label false on_comma on_ignored_nl UNK on_period UNK on_lparen opts on_op UNK # use the error_class message key
command on_op on_ivar on_period UNK on_lparen command on_rparen on_nl return false if command on_period UNK on_nl on_ignored_nl opts on_op UNK # If this is a *nix command (which we know about) with no Windows # equivalent, assume failure
output on_op shell on_period UNK on_lparen on_symbeg UNK on_comma command on_rparen on_nl return output on_period UNK on_op UNK on_op output # If we're passed a *nix command which PS can't parse we get exit code # 0, but output in stderr. We need to check both exit code and stderr.
def UNK on_nl winrm_info on_op on_const on_period winrm_info on_lparen on_ivar on_rparen on_nl on_ignored_nl on_const on_period UNK on_lparen on_ignored_nl winrm_info on_lbracket # This creates a new WinRMShell based on the information we know # about this machine.
def UNK on_lparen output on_comma opts on_rparen on_ignored_nl if opts on_lbracket on_symbeg shell on_rbracket on_op on_symbeg UNK on_nl return output # Handles the raw WinRM shell result and converts it to a # standard Vagrant communicator result
UNK on_op opts on_period UNK on_lparen on_ignored_nl on_label output on_period UNK on_comma on_ignored_nl on_label output on_period UNK on_nl on_rparen on_nl # WinRM can return multiple stderr and stdout entries
UNK on_lbracket on_symbeg UNK on_rbracket on_op opts on_lbracket on_symbeg UNK on_rbracket if opts on_lbracket on_symbeg UNK on_rbracket on_nl on_ignored_nl UNK # Use a different error message key if the caller gave us one, # otherwise use the error's default message
UNK opts on_lbracket on_symbeg UNK on_rbracket on_comma UNK on_nl end on_nl end end on_nl end on_nl EMP EMP EMP EMP # Raise the error, use the type the caller gave us or the comm default
end on_nl end on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP #WinRM class
