on_ivar on_op UNK UNK on_nl on_ivar on_op UNK UNK on_nl on_ivar on_op UNK on_nl end on_nl on_ignored_nl def UNK on_nl # Internal state
on_ivar on_period UNK UNK on_op name on_comma tuples on_op on_ignored_nl strategy on_op name on_nl strategy on_op tuples on_lbracket UNK on_rbracket # Compile all the provider configurations
strategy on_op name on_nl strategy on_op tuples on_lbracket UNK on_rbracket on_lbracket UNK on_rbracket UNK tuples on_lbracket UNK on_rbracket on_nl on_ignored_nl # Capture the strategy so we can use it later. This will be used in # the block iteration for merging/overwriting
UNK on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_period UNK on_period UNK on_lbracket strategy on_rbracket on_nl UNK on_op # Find the configuration class for this push
config on_op UNK on_period UNK on_nl on_ignored_nl UNK on_ignored_nl tuples on_period UNK UNK on_op UNK on_comma UNK on_op on_ignored_nl UNK # Load it up
UNK UNK on_op strategy on_nl on_ivar on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl strategy on_op UNK on_nl config on_op # Update the strategy if it has changed, resetting the current # config object.
UNK UNK UNK on_period UNK on_nl on_ignored_nl UNK on_op UNK on_period UNK on_nl UNK on_period UNK on_lparen UNK on_comma on_const # If we don't have any blocks, then ignore it
on_ivar on_lbracket name on_rbracket on_op on_lbracket strategy on_comma config on_rbracket on_nl end on_nl on_ignored_nl on_ivar on_op UNK on_nl end on_nl # Store it for retrieval later
def UNK on_lparen name on_comma on_op UNK on_comma on_op UNK on_rparen on_ignored_nl name on_op name on_period UNK on_nl strategy on_op # Define a new push in the Vagrantfile with the given name. # # @example # vm.push.define "ftp" # # @example # vm.push.define "ftp" do |s| # s.host = "..." # end # # @example # vm.push.define "production", strategy: "docker" do |s| # # ... # end # # @param [#to_sym] name The name of the this strategy. By default, this # is also the name of the strategy, but the `:strategy` key can be given # to customize this behavior # @param [Hash] options The list of options #
def UNK on_nl on_tstring_beg on_tstring_content on_tstring_end on_nl end on_nl on_ignored_nl def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK UNK # The String representation of this Push. # # @return [String]
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_period UNK UNK on_op UNK on_op on_ignored_nl UNK on_op UNK on_period UNK on_lparen # Custom merge method
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_op UNK on_tstring_beg on_tstring_content on_tstring_end on_op UNK UNK on_nl on_ignored_nl UNK on_period UNK # Validate all pushes
def UNK on_nl UNK on_tstring_beg on_tstring_content on_tstring_end UNK on_op on_ivar on_nl on_ivar on_period UNK on_nl end on_nl end on_nl end # This returns the list of compiled pushes as a hash by name. # # @return [Hash<Symbol, Array<Class, Object>>]
