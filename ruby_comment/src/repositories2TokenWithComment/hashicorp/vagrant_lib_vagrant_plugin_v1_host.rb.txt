UNK UNK on_nl def UNK UNK UNK on_nl UNK on_nl end on_nl on_ignored_nl def UNK UNK UNK on_nl UNK on_nl # Base class for a host in Vagrant. A host class contains functionality # that is specific to a specific OS that is running Vagrant. This # abstraction is done because there is some host-specific logic that # Vagrant must do in some cases.
def UNK UNK UNK on_nl UNK on_nl end on_nl on_ignored_nl def UNK UNK UNK on_nl UNK on_nl end on_nl on_ignored_nl # This returns true/false depending on if the current running system # matches the host class. # # @return [Boolean]
def UNK UNK UNK on_nl UNK on_nl end on_nl on_ignored_nl def UNK UNK UNK UNK on_ignored_nl UNK UNK UNK on_nl # The precedence of the host when checking for matches. This is to # allow certain host such as generic OS's ("Linux", "BSD", etc.) # to be specified last. # # The hosts with the higher numbers will be checked first. # # If you're implementing a basic host, you can probably ignore this.
def UNK UNK UNK UNK on_ignored_nl UNK UNK UNK on_nl end on_nl on_ignored_nl def UNK on_nl UNK on_nl end on_nl # Initializes a new host class. # # The only required parameter is a UI object so that the host # objects have some way to communicate with the outside world. # # @param [UI] ui UI for the hosts to output to.
def UNK on_nl UNK on_nl end on_nl on_ignored_nl def UNK UNK UNK UNK UNK UNK UNK UNK on_ignored_nl end on_nl # Returns true of false denoting whether or not this host supports # NFS shared folder setup. This method ideally should verify that # NFS is installed. # # @return [Boolean]
def UNK UNK UNK UNK UNK UNK UNK UNK on_ignored_nl end on_nl on_ignored_nl def UNK UNK UNK UNK on_ignored_nl end # Exports the given hash of folders via NFS. # # @param [String] id A unique ID that is guaranteed to be unique to # match these sets of folders. # @param [String] ip IP of the guest machine. # @param [Hash] folders Shared folders to sync.
def UNK UNK UNK UNK on_ignored_nl end on_nl end on_nl end on_nl end on_nl end on_nl EMP EMP EMP EMP # Prunes any NFS exports made by Vagrant which aren't in the set # of valid ids given. # # @param [Array<String>] valid_ids Valid IDs that should not be # pruned.
