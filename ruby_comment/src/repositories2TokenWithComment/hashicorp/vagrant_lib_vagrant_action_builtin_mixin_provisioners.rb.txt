UNK UNK on_lparen UNK on_rparen on_ignored_nl UNK on_ivar if on_ivar on_nl on_ignored_nl on_ivar on_op on_lbrace on_rbrace on_nl on_ignored_nl on_ivar on_op # This returns all the instances of the configured provisioners. # This is safe to call multiple times since it will cache the results. # # @return [Array<Provisioner, Hash>]
on_ivar on_op on_lbrace on_rbrace on_nl on_ignored_nl on_ivar on_op UNK on_lbracket on_symbeg UNK on_rbracket on_period UNK on_period UNK on_period UNK on_period # Make the mapping that'll keep track of provisioner => type
on_ivar on_op UNK on_lbracket on_symbeg UNK on_rbracket on_period UNK on_period UNK on_period UNK on_period UNK UNK on_op provisioner on_op on_ignored_nl # Get all the configured provisioners
UNK on_op on_const on_period UNK on_lparen UNK UNK UNK on_rparen on_period UNK on_period UNK on_lbracket provisioner on_period UNK on_rbracket on_nl # Instantiate the provisioner
UNK UNK if on_op UNK on_nl on_ignored_nl UNK on_op UNK on_period UNK on_lparen UNK on_lbracket on_symbeg UNK on_rbracket on_comma provisioner # This can happen in the case the configuration isn't validated.
on_ivar on_lbracket UNK on_rbracket on_op provisioner on_period UNK on_nl on_ignored_nl provisioner_name on_op provisioner on_period name on_nl if on_op provisioner_name on_nl # Store in the type map so that --provision-with works properly
provisioner_name on_op provisioner on_period name on_nl if on_op provisioner_name on_nl if provisioner on_period UNK on_period UNK on_lparen on_symbeg name on_rparen # Set top level provisioner name to provisioner configs name if top level name not set. # This is mostly for handling the shell provisioner, if a user has set its name like: # # config.vm.provision "shell", name: "my_provisioner" # # Where `name` is a shell config option, not a top level provisioner class option # # Note: `name` is set to a symbol, since it is converted to one via #Config::VM.provision
options on_op on_lbrace on_ignored_nl UNK provisioner_name on_comma on_ignored_nl UNK provisioner on_period UNK on_comma on_ignored_nl UNK provisioner on_period before on_comma on_ignored_nl # Build up the options
on_lbracket UNK on_comma options on_rbracket on_nl end on_nl on_ignored_nl on_ivar on_op UNK on_lparen on_ivar on_rparen on_nl UNK on_ivar on_period UNK # Return the result
UNK UNK on_lparen pvs on_rparen on_ignored_nl final_provs on_op on_lbracket on_rbracket on_nl UNK on_op on_lbracket on_rbracket on_nl UNK on_op pvs on_period # Sorts provisioners based on order specified with before/after options # # @return [Array<Provisioner, Hash>]
UNK on_op pvs on_period UNK on_lbrace on_op _ on_comma o on_op o on_lbracket on_symbeg before on_rbracket on_period UNK on_op o # extract root provisioners
UNK pvs on_nl end on_nl on_ignored_nl UNK on_op on_lbracket on_rbracket on_nl UNK on_op on_lbracket on_rbracket on_nl UNK on_op on_lbracket on_rbracket # no dependencies found
UNK on_op on_lbracket on_rbracket on_nl UNK on_op on_lbracket on_rbracket on_nl UNK on_op on_lbracket on_rbracket on_nl on_ignored_nl UNK on_op pvs on_period # ensure placeholder variables are Arrays
UNK on_op pvs on_period UNK on_lbrace on_op _ on_comma o on_op o on_lbracket on_symbeg before on_rbracket on_period UNK on_lparen on_const # extract dependency provisioners
UNK on_op pvs on_period UNK on_lbrace on_op _ on_comma o on_op o on_lbracket on_symbeg before on_rbracket on_op on_symbeg UNK on_op # extract each provisioners
UNK on_op pvs on_period UNK on_lbrace on_op _ on_comma o on_op o on_lbracket on_symbeg before on_rbracket on_op on_symbeg UNK on_op # extract all provisioners
final_provs on_op UNK on_nl UNK on_period UNK UNK on_op p on_comma options on_op on_ignored_nl idx on_op UNK on_nl if options # insert provisioners in order
UNK on_op on_lbracket on_rbracket on_nl final_provs on_period UNK UNK on_op on_lparen UNK on_comma o on_rparen on_comma UNK on_op on_ignored_nl UNK # Add :each and :all provisioners in reverse to preserve order in Vagrantfile
UNK on_period UNK UNK on_op p on_comma options on_op on_ignored_nl if options on_lbracket on_symbeg before on_rbracket on_nl final_provs on_period UNK # Add all to final array
UNK UNK on_lparen UNK on_rparen on_ignored_nl UNK on_lparen UNK on_rparen on_nl on_ignored_nl on_ivar on_nl end on_nl on_ignored_nl UNK UNK on_period # This will return a mapping of a provisioner instance to its # type.
UNK on_lparen UNK on_rparen on_nl on_ignored_nl on_ivar on_nl end on_nl on_ignored_nl UNK UNK on_period UNK on_nl UNK on_period UNK on_lparen # Call this in order to initial the map if it hasn't been already
on_ivar on_nl end on_nl on_ignored_nl UNK UNK on_period UNK on_nl UNK on_period UNK on_lparen on_op UNK on_lparen on_symbeg UNK on_rparen # Return the type map
UNK UNK on_period UNK on_nl UNK on_period UNK on_lparen on_op UNK on_lparen on_symbeg UNK on_rparen on_rparen on_nl end on_nl end # @private # Reset the cached values for platform. This is not considered a public # API and should only be used for testing.
