attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # Vagrant by default will make "smart" decisions to enable/disable # the NAT DNS proxy. If this is set to `true`, then the DNS proxy # will not be enabled, and it is up to the end user to do it. # # @return [Boolean]
attr_accessor on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # If true, will check if guest additions are installed and up to # date. By default, this is true. # # @return [Boolean]
UNK on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # An array of customizations to make on the VM prior to booting it. # # @return [Array]
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # Set the default type of NIC hardware to be used for network # devices. By default this is `nil` and VirtualBox's default # will be used. # # @return [String]
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # If true, unused network interfaces will automatically be deleted. # This defaults to false because the detection does not work across # multiple users, and because on Windows this operation requires # administrative privileges. # # @return [Boolean]
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # If set to `true`, then VirtualBox will be launched with a GUI. # # @return [Boolean]
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl # If set to `true`, then a linked clone is created from a master # VM generated from the specified box. # # @return [Boolean]
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl # The snapshot to base the linked clone from. If this isn't set # a snapshot will be made with the name of "base" which will be used. # # If this is set, then the snapshot must already exist. # # @return [String]
attr_accessor on_symbeg UNK on_nl on_ignored_nl attr_accessor on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_nl on_ivar on_op # This should be set to the name of the machine in the VirtualBox # GUI. # # @return [String]
attr_accessor on_symbeg UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_nl on_ivar on_op on_const on_nl on_ivar on_op on_const # Whether or not this VM has a functional vboxsf filesystem module. # This defaults to true. If you set this to false, then the "virtualbox" # synced folder type won't be valid. # # @return [Boolean]
UNK on_symbeg UNK on_nl on_ignored_nl def UNK on_nl on_ivar on_op on_const on_nl on_ivar on_op on_const on_nl on_ivar on_op on_lbracket on_rbracket # The defined network adapters. # # @return [Hash]
UNK on_lparen UNK on_comma on_symbeg UNK on_rparen on_nl end on_nl on_ignored_nl def UNK on_lparen on_op command on_rparen on_ignored_nl event on_op # We require that network adapter 1 is a NAT device.
def UNK on_lparen on_op command on_rparen on_ignored_nl event on_op command on_period UNK on_period UNK on_lparen on_const on_rparen on_op command on_period # Customize the VM by calling `VBoxManage` with the given # arguments. # # When called multiple times, the customizations will be applied # in the order given. # # The special `:name` parameter in the command will be replaced with # the unique ID or name of the virtual machine. This is useful for # parameters to `modifyvm` and the like. # # @param [Array] command An array of arguments to pass to # VBoxManage.
def UNK on_lparen UNK on_comma UNK on_comma on_op UNK on_rparen on_ignored_nl on_ivar on_lbracket UNK on_rbracket on_op on_lbracket UNK on_comma UNK # This defines a network adapter that will be added to the VirtualBox # virtual machine in the given slot. # # @param [Integer] slot The slot for this network adapter. # @param [Symbol] type The type of adapter.
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_symbeg UNK on_comma # Shortcut for setting memory size for the virtual machine. # Calls #customize internally. # # @param size [Integer, String] the memory size in MB
def UNK on_lparen UNK on_rparen on_ignored_nl UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_comma on_symbeg UNK on_comma # Shortcut for setting CPU count for the virtual machine. # Calls #customize internally. # # @param count [Integer, String] the count of CPUs
def UNK on_nl on_ivar on_op UNK if on_ivar on_op on_const on_nl on_ignored_nl if on_ivar on_op on_const on_nl on_ivar on_op UNK # This is the hook that is called to finalize the object before it # is put into use.
on_ivar on_op UNK if on_ivar on_op on_const on_nl on_ignored_nl if on_ivar on_op on_const on_nl on_ivar on_op UNK on_nl end on_nl # Default is to auto the DNS proxy
on_ivar on_op UNK if on_ivar on_op on_const on_nl on_ignored_nl on_ivar on_op UNK if on_ivar on_op on_const on_nl on_ivar on_op UNK # Default is to not show a GUI
on_ivar on_op UNK if on_ivar on_op on_const on_nl on_ivar on_op UNK if on_ivar on_op on_const on_nl on_ignored_nl on_ivar on_op UNK # Do not create linked clone by default
on_ivar on_op UNK if on_ivar on_op on_const on_nl on_ignored_nl on_ivar on_op UNK if on_ivar on_op on_const on_nl end on_nl on_ignored_nl # The default name is just nothing, and we default it
UNK on_period UNK on_period UNK on_period UNK on_period UNK UNK on_op UNK on_comma UNK on_op on_ignored_nl if UNK on_lbracket on_symbeg # Verify that internal networks are only on private networks.
