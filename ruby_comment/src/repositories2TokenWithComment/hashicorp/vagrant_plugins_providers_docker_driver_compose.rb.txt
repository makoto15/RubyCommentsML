on_const on_op on_int on_nl on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl UNK on_symbeg machine # @return [Integer] Maximum number of seconds to wait for lock
on_const on_op on_tstring_beg on_tstring_content on_tstring_end on_period UNK on_nl on_ignored_nl UNK on_symbeg UNK on_nl UNK on_symbeg machine on_nl on_ignored_nl def UNK # @return [String] Compose file format version
UNK on_symbeg UNK on_nl UNK on_symbeg machine on_nl on_ignored_nl def UNK on_lparen machine on_rparen on_ignored_nl if on_op on_const on_op on_const # @return [Pathname] data directory to store composition
UNK on_symbeg machine on_nl on_ignored_nl def UNK on_lparen machine on_rparen on_ignored_nl if on_op on_const on_op on_const on_op on_const on_period UNK # @return [Vagrant::Machine]
def UNK on_lparen machine on_rparen on_ignored_nl if on_op on_const on_op on_const on_op on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # Create a new driver instance # # @param [Vagrant::Machine] machine Machine instance for this driver
def UNK on_lparen UNK on_comma on_op opts on_comma on_op block on_rparen on_ignored_nl name on_op machine on_period name on_period to_s on_nl # Updates the docker compose config file with the given arguments # # @param [String] dir - local directory or git repo URL # @param [Hash] opts - valid key: extra_args # @param [Block] block # @return [Nil]
if opts on_lbracket on_symbeg extra_args on_rbracket on_op opts on_lbracket on_symbeg extra_args on_rbracket on_period include? on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl # Extract custom dockerfile location if set
UNK opts on_lbracket on_symbeg extra_args on_rbracket on_nl UNK on_const on_nl if opts on_lbracket on_symbeg extra_args on_rbracket on_period include? on_lparen on_tstring_beg # Extract any build args that can be found
name on_op machine on_period name on_period to_s on_nl UNK on_op params on_period UNK on_lparen on_symbeg UNK on_rparen on_nl UNK on_op # NOTE: Use the direct machine name as we don't # need to worry about uniqueness with compose
host on_period UNK on_lparen UNK on_tstring_content UNK on_comma on_tstring_beg on_tstring_end on_rparen on_nl end on_nl UNK on_op UNK on_nl if UNK # NOTE: Docker does not support UNC style paths (which also # means that there's no long path support). Hopefully this # will be fixed someday and the gsub below can be removed.
UNK on_op UNK on_nl if UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op UNK on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_period UNK # if host path is a volume key, don't expand it. # if both exist (a path and a key) show warning and move on # otherwise assume it's a realative path and expand the host path
def UNK on_lparen name on_rparen on_ignored_nl compose_execute on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma on_tstring_beg on_tstring_content on_tstring_end on_comma name on_rparen on_period UNK # Lookup the ID for the container with the given name # # @param [String] name Name of container # @return [String] Container ID
def compose_execute on_lparen on_op UNK on_comma on_op opts on_comma on_op block on_rparen on_ignored_nl UNK do on_ignored_nl UNK on_lparen on_tstring_beg on_tstring_content # Execute a `docker-compose` command
def UNK on_lparen on_op args on_rparen on_ignored_nl block on_op args on_period UNK on_lbrace on_op UNK on_op UNK on_period UNK on_lparen # Apply any changes made to the composition
def update_composition on_lparen on_op args on_rparen on_ignored_nl UNK do on_ignored_nl machine on_period env on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_comma # Update the composition and apply changes if requested # # @param [Boolean] apply Apply composition changes
def UNK on_nl composition on_op on_lbrace on_tstring_beg on_tstring_content on_tstring_end on_op on_const on_period UNK on_rbrace on_nl if composition_path on_period UNK on_nl # @return [Hash] current composition contents
def UNK on_lparen composition on_rparen on_ignored_nl on_ivar on_period debug on_lparen on_tstring_beg on_tstring_content on_embexpr_beg composition_path on_embexpr_end on_tstring_content on_embexpr_beg composition on_embexpr_end on_tstring_end # Save the composition # # @param [Hash] composition New composition
def composition_path on_nl UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl end on_nl on_ignored_nl def UNK on_nl if on_op # @return [Pathname] path to the docker-compose.yml file
