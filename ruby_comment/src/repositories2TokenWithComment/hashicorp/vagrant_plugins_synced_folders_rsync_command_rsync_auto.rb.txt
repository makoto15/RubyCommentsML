UNK on_op UNK on_lparen opts on_rparen on_nl UNK if on_op UNK on_nl on_ignored_nl paths on_op on_lbrace on_rbrace on_nl ignores on_op # Parse the options and return if we don't have any target.
paths on_op on_lbrace on_rbrace on_nl ignores on_op on_lbracket on_rbracket on_nl UNK on_lparen UNK on_rparen do on_op machine on_op on_ignored_nl UNK # Build up the paths that we need to listen to.
UNK on_op on_lbrace on_rbrace on_nl UNK on_op machine on_period UNK on_period UNK on_period UNK on_period UNK on_period UNK on_lbrace on_op # NOTE: This check is required with boot2docker since all containers # share the same virtual machine. This prevents rsync-auto from # syncing all known containers with rsync to the boot2docker vm # and only syncs the current working dirs folders.
UNK on_op machine on_period UNK on_period UNK on_period UNK on_period UNK on_period UNK on_lbrace on_op UNK on_op UNK on_lbracket on_symbeg # Still sync existing synced folders from vagrantfile
ssh_info on_op machine on_period ssh_info on_nl if ssh_info on_nl machine on_period ui on_period info on_lparen on_const on_period t on_lparen on_tstring_beg # Get the SSH info for this machine so we can do an initial # sync to the VM.
UNK if folder_opts on_period UNK on_lparen on_symbeg UNK on_rparen on_op on_op folder_opts on_lbracket on_symbeg UNK on_rbracket on_nl on_ignored_nl hostpath on_op # If we marked this folder to not auto sync, then # don't do it.
ignores on_op UNK on_tstring_content UNK on_nl ignores on_period UNK on_nl end on_nl end on_nl on_ignored_nl if paths on_period UNK on_nl # Always ignore Vagrant
if paths on_period UNK on_nl on_ivar on_period ui on_period info on_lparen on_const on_period t on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_rparen # Exit immediately if there is nothing to watch
paths on_period UNK on_period UNK on_period each do on_op UNK on_op on_ignored_nl paths on_lbracket UNK on_rbracket on_period each do on_op # Output to the user what paths we'll be watching
UNK on_op on_const on_period UNK on_nl callback on_op UNK do on_ignored_nl on_const on_period UNK on_lbrace UNK on_op UNK on_rbrace on_nl # Create the callback that lets us know when we've been interrupted
on_const on_period UNK on_lbrace UNK on_op UNK on_rbrace on_nl end on_nl on_ignored_nl on_const on_op on_const on_op on_const on_period UNK on_lparen # This needs to execute in another thread because Thread # synchronization can't happen in a trap context.
on_const on_op on_const on_op on_const on_period UNK on_lparen callback on_rparen do on_ignored_nl UNK on_period UNK on_nl UNK on_period UNK on_nl # Run the listener in a busy block so that we can cleanly # exit once we receive an interrupt.
UNK callback on_lparen paths on_comma UNK on_comma UNK on_comma UNK on_rparen on_ignored_nl on_ivar on_period info on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen # This is the callback that is called when any changes happen
UNK on_op UNK on_lparen on_symbeg UNK on_rparen do on_ignored_nl on_lbracket UNK on_comma UNK on_comma UNK on_rbracket on_period each do on_op # Find out if this path should be synced
UNK on_nl end on_nl on_ignored_nl UNK on_op folders if UNK on_nl end on_nl on_ignored_nl UNK on_period each do on_op folders # Make sure to return false if all else fails so that we # don't sync to this machine.
UNK on_op folders if UNK on_nl end on_nl on_ignored_nl UNK on_period each do on_op folders on_op on_ignored_nl folders on_period each # If it should be synced, store it for later
UNK on_period each do on_op folders on_op on_ignored_nl folders on_period each do on_op opts on_op on_ignored_nl opts on_lbracket on_symbeg machine # Sync all the folders that need to be synced
opts on_lbracket on_symbeg machine on_rbracket on_period UNK on_nl if on_op opts on_lbracket on_symbeg machine on_rbracket on_period id on_op opts on_lbracket # Reload so we get the latest ID
UNK on_nl end on_nl on_ignored_nl ssh_info on_op opts on_lbracket on_symbeg machine on_rbracket on_period ssh_info on_nl UNK on_ignored_nl UNK on_op on_const # Skip since we can't get SSH info without an ID
opts on_lbracket on_symbeg machine on_rbracket on_period ui on_period UNK on_lparen on_const on_period t on_lparen on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_rparen on_rparen # Error communicating to the machine, probably a reload or # halt is happening. Just notify the user but don't fail out.
opts on_lbracket on_symbeg machine on_rbracket on_period ui on_period UNK on_lparen on_const on_period t on_lparen on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_label # Error executing rsync chown command
opts on_lbracket on_symbeg machine on_rbracket on_period ui on_period UNK on_lparen on_const on_period t on_lparen on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_comma on_label # Error executing rsync, so show an error
