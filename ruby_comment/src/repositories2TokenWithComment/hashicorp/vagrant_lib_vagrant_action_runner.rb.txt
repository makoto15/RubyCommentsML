environment on_op on_lbrace on_rbrace on_nl environment on_period UNK on_lparen on_ivar on_rparen on_nl environment on_period UNK on_lparen on_ivar on_period UNK on_rparen # Create the initial environment with the options given
env on_op environment on_lbracket on_symbeg env on_rbracket on_nl UNK on_op environment on_lbracket on_symbeg UNK on_rbracket on_nl on_ignored_nl environment on_lbracket on_symbeg # NOTE: Triggers are initialized later in the Action::Runer because of # how `@lazy_globals` are evaluated. Rather than trying to guess where # the `env` is coming from, we can wait until they're merged into a single # hash above.
ui on_op environment on_lbracket on_symbeg ui on_rbracket if environment on_period UNK on_lparen on_symbeg ui on_rparen on_nl UNK on_op UNK UNK # Run the action chain in a busy block, marking the environment as # interrupted if a SIGINT occurs, and exiting cleanly once the # chain has been run.
on_const on_period UNK on_lbrace on_ignored_nl ui on_period UNK on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_rbrace on_period UNK # We're being called in a trap-context. Wrap in a thread.
on_const on_period UNK on_lbrace on_ignored_nl ui on_period UNK on_const on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl on_rbrace on_period UNK # We're being called in a trap-context. Wrap in a thread.
on_ivar on_period UNK on_lparen on_tstring_beg on_tstring_content UNK environment on_lbracket on_symbeg UNK on_rbracket UNK on_tstring_content UNK callable_id UNK on_tstring_end on_rparen on_nl # We place a process lock around every action that is called
environment on_nl end on_nl end on_nl end on_nl end on_nl EMP EMP EMP EMP EMP EMP EMP EMP EMP EMP # Return the environment in case there are things in there that # the caller wants to use.
