files on_op UNK on_nl UNK on_ignored_nl files on_op on_const UNK on_op UNK on_period UNK do on_op file on_op on_ignored_nl UNK # Grab files early so if there's an exception or issue, we don't have to # wait and close the (S)FTP connection as well
def UNK on_lparen on_op UNK on_rparen on_ignored_nl UNK on_op config on_period UNK on_op on_const on_op on_const on_nl ftp on_op UNK # Helper method for creating the FTP or SFTP connection. # @yield [Adapter]
def UNK on_nl files on_op UNK on_lparen on_tstring_beg on_embexpr_beg config on_period UNK on_embexpr_end on_tstring_content on_tstring_end on_rparen on_op UNK on_nl UNK # The list of all files that should be pushed by this push. This method # only returns **files**, not folders or symlinks! # @return [Array<String>]
def UNK on_nl UNK on_op config on_period UNK on_period UNK do on_op UNK on_op on_ignored_nl path on_op UNK on_lparen UNK # The list of files to include in addition to those specified in `dir`. # @return [Array<String>]
def UNK on_lparen UNK on_comma excludes on_rparen on_ignored_nl excludes on_op on_const on_lparen excludes on_rparen on_nl excludes on_op excludes on_op on_const # Filter the excludes out of the given list. This method modifies the # given list in memory! # # @param [Array<String>] list # the filepaths # @param [Array<String>] excludes # the exclude patterns or files
UNK UNK on_period UNK on_lparen on_tstring_beg on_tstring_content on_tstring_end on_rparen on_nl UNK on_op file on_nl end on_nl on_ignored_nl excludes on_period UNK # Handle the special case where the file is outside of the working # directory...
def UNK on_lparen UNK on_rparen on_ignored_nl on_const on_period UNK on_lparen UNK on_comma on_const on_op on_const on_rparen on_period UNK on_period UNK # Get the list of files that match the given pattern. # @return [Array<String>]
def UNK on_lparen path on_comma UNK on_rparen on_ignored_nl path on_op on_const on_period UNK on_lparen path on_rparen on_nl UNK path UNK # The absolute path to the given `path` and `parent`, unless the given # path is absolute. # @return [String]
def UNK on_lparen path on_comma UNK on_rparen on_ignored_nl on_const on_period UNK on_lparen path on_rparen on_period UNK on_lparen on_const on_period UNK # The relative path from the given `parent`. If files exist on another # device, this will probably blow up. # @return [String]
