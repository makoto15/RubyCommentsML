UNK on_const on_nl def UNK on_lparen UNK on_comma UNK on_op UNK on_rparen on_ignored_nl on_ivar on_op UNK on_op UNK UNK on_nl # This is the root configuration class. An instance of this is what # is passed into version 2 Vagrant configuration blocks.
def UNK on_lparen UNK on_comma UNK on_op UNK on_rparen on_ignored_nl on_ivar on_op UNK on_op UNK UNK on_nl on_ivar on_op UNK # Initializes a root object that maps the given keys to specific # configuration classes. # # @param [Hash] config_map Map of key to config class.
def UNK on_lparen name on_comma on_op UNK on_rparen on_ignored_nl UNK on_ivar on_lbracket name on_rbracket if on_ivar on_period UNK on_lparen name # We use method_missing as a way to get the configuration that is # used for Vagrant and load the proper configuration classes for # each.
on_ivar on_lbracket name on_rbracket on_op UNK on_period UNK on_nl UNK on_ivar on_lbracket name on_rbracket on_nl UNK on_ignored_nl on_ivar on_period UNK # Instantiate the class and return the instance
on_ivar on_period UNK on_lparen name on_period UNK on_rparen on_nl UNK on_const on_period UNK on_nl end on_nl end on_nl on_ignored_nl def # Record access to a missing key as an error
def UNK on_nl on_ivar on_period UNK UNK on_op key on_comma UNK on_op on_ignored_nl if on_op on_ivar on_period UNK on_lparen key # Called to finalize this object just prior to it being used by # the Vagrant system. The "!" signifies that this is expected to # mutate itself.
def UNK on_lparen UNK on_comma UNK on_op UNK on_rparen on_ignored_nl errors on_op UNK UNK on_nl on_ivar on_period UNK UNK on_op # This validates the configuration and returns a hash of error # messages by section. If there are no errors, an empty hash # is returned. # # @param [Environment] env # @return [Hash]
errors on_op UNK UNK on_nl on_ivar on_period UNK UNK on_op UNK on_comma instance on_op on_ignored_nl if instance on_period UNK on_lparen # Go through each of the configuration keys and validate
if UNK on_op UNK UNK on_nl UNK on_op instance on_period UNK on_lparen UNK on_comma UNK on_rparen on_nl UNK on_ignored_nl UNK # Validate this single item, and if we have errors then # we merge them into our total errors list.
errors on_period UNK on_period UNK UNK on_op key on_op on_ignored_nl errors on_period UNK on_lparen key on_rparen if errors on_lbracket key # Go through and delete empty keys
if on_op on_ivar on_period UNK on_nl errors on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket on_op on_ivar on_period UNK on_period UNK on_period UNK # If we have missing keys, record those as errors
def UNK on_nl UNK on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_ivar on_comma on_ignored_nl on_tstring_beg on_tstring_content on_tstring_end on_op on_ivar on_comma on_ignored_nl on_tstring_beg # Returns the internal state of the root object. This is used # by outside classes when merging, and shouldn't be called directly. # Note the strange method name is to attempt to avoid any name # clashes with potential configuration keys.
def UNK on_lparen state on_rparen on_ignored_nl on_ivar on_op state on_lbracket on_tstring_beg on_tstring_content on_tstring_end on_rbracket if state on_period UNK on_lparen on_tstring_beg # This sets the internal state. This is used by the core to do some # merging logic and shouldn't be used by the general public.
